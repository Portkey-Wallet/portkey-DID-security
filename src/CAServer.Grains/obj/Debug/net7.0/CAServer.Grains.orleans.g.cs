// <auto-generated />
#if !EXCLUDE_GENERATED_CODE
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 414
#pragma warning disable 618
#pragma warning disable 649
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998
using global::Orleans;

[assembly: global::Orleans.Metadata.FeaturePopulatorAttribute(typeof(OrleansGeneratedCode.OrleansCodeGenCAServer_GrainsFeaturePopulator))]
[assembly: global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("CAServer.Grains, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("AElf.Client, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("AElf.Core, Version=1.2.3.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("AElf.Indexing.Elasticsearch, Version=0.0.16.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("AElf.Kernel.Types, Version=1.2.3.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Autofac, Version=6.4.0.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001008728425885ef385e049261b18878327dfaaf0d666dea3bd2b0e4f18b33929ad4e5fbc9087e7eda3c1291d2de579206d9b4292456abffbe8be6c7060b36da0c33b883e3878eaf7c89fddf29e6e27d24588e81e86f3a22dd7b1a296b5f06fbfb500bbd7410faa7213ef4e2ce7622aefc03169b0324bcd30ccfe9ac8204e4960be6"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Autofac.Extensions.DependencyInjection, Version=8.0.0.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001008728425885ef385e049261b18878327dfaaf0d666dea3bd2b0e4f18b33929ad4e5fbc9087e7eda3c1291d2de579206d9b4292456abffbe8be6c7060b36da0c33b883e3878eaf7c89fddf29e6e27d24588e81e86f3a22dd7b1a296b5f06fbfb500bbd7410faa7213ef4e2ce7622aefc03169b0324bcd30ccfe9ac8204e4960be6"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Autofac.Extras.DynamicProxy, Version=6.0.1.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001008728425885ef385e049261b18878327dfaaf0d666dea3bd2b0e4f18b33929ad4e5fbc9087e7eda3c1291d2de579206d9b4292456abffbe8be6c7060b36da0c33b883e3878eaf7c89fddf29e6e27d24588e81e86f3a22dd7b1a296b5f06fbfb500bbd7410faa7213ef4e2ce7622aefc03169b0324bcd30ccfe9ac8204e4960be6"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("CAServer.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("CAServer.Signature, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Castle.Core.AsyncInterceptor, Version=2.1.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100d1bf329c44765de773ff65690d6c5fbf8cfbba5eb0ee6343525bcd6db2b1f0072927d01dbfd8b0ac63368e7111cfe07705f333aefd8ce65e9e7e7418a2564a276fed7c783632f2d96b4e50bc596c062b270582620d752341585fb21567fd683152ed7ea0359d0cd6648a41357ac537b956e3f81aa3e3a13a66fec56ddb10469f"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Castle.Core, Version=5.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010077f5e87030dadccce6902c6adab7a987bd69cb5819991531f560785eacfc89b6fcddf6bb2a00743a7194e454c0273447fc6eec36474ba8e5a3823147d214298e4f9a631b1afee1a51ffeae4672d498f14b000e3d321453cdd8ac064de7e1cf4d222b7e81f54d4fd46725370d702a05b48738cc29d09228f1aa722ae1a9ca02fb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Google.Protobuf, Version=3.21.12.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010025800fbcfc63a17c66b303aae80b03a6beaa176bb6bef883be436f2a1579edd80ce23edf151a1f4ced97af83abcd981207041fd5b2da3b498346fcfcd94910d52f25537c4a43ce3fbe17dc7d43e6cbdb4d8f1242dcb6bd9b5906be74da8daa7d7280f97130f318a16c07baf118839b156299a48522f9fae2371c9665c5ae9cb6"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("GraphQL.Client.Abstractions, Version=5.1.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("GraphQL.Client.Abstractions.Websocket, Version=5.1.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("GraphQL.Client, Version=5.1.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("GraphQL.Client.Serializer.Newtonsoft, Version=5.1.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("GraphQL.Primitives, Version=5.1.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.AspNetCore.Cryptography.Internal, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.AspNetCore.Cryptography.KeyDerivation, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Hosting, Version=6.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Http, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Identity.Core, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Logging.Configuration, Version=6.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Logging.Console, Version=6.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Logging.Debug, Version=6.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Logging.EventLog, Version=6.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Logging.EventSource, Version=6.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Nest.JsonNetSerializer, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010025d3a22bf3781ba85067374ad832dfcba3c4fa8dd89227e36121ba17b2c33ad6b6ce03e45e562050a031e2ff7fe12cff9060a50acbc6a0eef9ef32dc258d90f874b2e76b581938071ccc4b4d98204d1d6ca7a1988d7a211f9fc98efd808cf85f61675b11007d0eb0461dc86a968d6af8ebba7e6b540303b54f1c1f5325c252be"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("OpenIddict.Core, Version=4.0.0.0, Culture=neutral, PublicKey=0024000004800000140200000602000000240000525341310010000001000100613f2880fc9f71b5e8f968801c1a4923e1df760bd3f9d2d752f83c01cabc4853e7f32bba18e9e88ca1285d96655008148d60c43d28d82a292c6bf0c8a761fd5d345e45ec1c044b6eeca140593779e6c9e8b59eb1b1cc905dc81e559a9fdf24c77d333c53cc8c7f2d46a6df3a74c426e4afc97bab4117a87a882552c8f41e9f4757bb40a1255cf720f85ce50bac763a6104b03d6927ef05f5dcc316450eda528eae7f003af8c6463daa9505fae121d0c8294eb927995a4dd96b9397c16a479c865322af27c0f1b493a5dc03305bd5d46ac376de620cb050b40f9fb1cbb0a2004242ad30aff30e203fb68a104eed90d80def2e04f1c73e01937d9f1359108904d13d5226ac717880f51070066252ceb0b0acdb6705fb76515f3cebb2fc497572ab3c66718fbdb1306f39125a6cb6f40006db495a21a61b5273ddcbc83e983a2e59b04ebbcde41aad46ff4292080b1ede89878ac95b26d68227cd6077994b397255e91b09d25de64f0f7cf58cd3f96460561056eaf48ff1fb1d9f6faa3741bc756b930d761dfe0bde2d8d4c79351888688dd2d0c2939b8e0619a3f668816fbbab070c3139e3f3a5b2961f7d99f2af95fde9c52958644e575a3d0f2a1de8d5fef0b8c9766b415e7566eaba2ad0c775089c1f5148008509700fcebdd001f1b36a1db83be5b2b66c18342d3230e5f995f1283335dbee7388aa3584206fba97112775af"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Polly, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100150819e3494f97263a3abdd18e5e0c47b04e6c0ede44a6c51d50b545d403ceeb7cbb32d18dbbbcdd1d88a87d7b73206b126be134b0609c36aa3cb31dd2e47e393293102809b8d77f192f3188618a42e651c14ebf05f8f5b76aa91b431642b23497ed82b65d63791cdaa31d4282a2d6cbabc3fe0745b6b6690c417cabf6a1349c"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Scriban, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Serilog, Version=2.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100fb8d13fd344a1c6fe0fe83ef33c1080bf30690765bc6eb0df26ebfdf8f21670c64265b30db09f73a0dea5b3db4c9d18dbf6d5a25af5ce9016f281014d79dc3b4201ac646c451830fc7e61a2dfd633d34c39f87b81894191652df5ac63cc40c77f3542f702bda692e6e8a9158353df189007a49da0f3cfd55eb250066b19485ec"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Serilog.Extensions.Hosting, Version=2.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100fb8d13fd344a1c6fe0fe83ef33c1080bf30690765bc6eb0df26ebfdf8f21670c64265b30db09f73a0dea5b3db4c9d18dbf6d5a25af5ce9016f281014d79dc3b4201ac646c451830fc7e61a2dfd633d34c39f87b81894191652df5ac63cc40c77f3542f702bda692e6e8a9158353df189007a49da0f3cfd55eb250066b19485ec"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Serilog.Extensions.Logging, Version=2.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100fb8d13fd344a1c6fe0fe83ef33c1080bf30690765bc6eb0df26ebfdf8f21670c64265b30db09f73a0dea5b3db4c9d18dbf6d5a25af5ce9016f281014d79dc3b4201ac646c451830fc7e61a2dfd633d34c39f87b81894191652df5ac63cc40c77f3542f702bda692e6e8a9158353df189007a49da0f3cfd55eb250066b19485ec"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Serilog.Sinks.Async, Version=1.5.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100fb8d13fd344a1c6fe0fe83ef33c1080bf30690765bc6eb0df26ebfdf8f21670c64265b30db09f73a0dea5b3db4c9d18dbf6d5a25af5ce9016f281014d79dc3b4201ac646c451830fc7e61a2dfd633d34c39f87b81894191652df5ac63cc40c77f3542f702bda692e6e8a9158353df189007a49da0f3cfd55eb250066b19485ec"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Serilog.Sinks.Console, Version=4.0.1.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100fb8d13fd344a1c6fe0fe83ef33c1080bf30690765bc6eb0df26ebfdf8f21670c64265b30db09f73a0dea5b3db4c9d18dbf6d5a25af5ce9016f281014d79dc3b4201ac646c451830fc7e61a2dfd633d34c39f87b81894191652df5ac63cc40c77f3542f702bda692e6e8a9158353df189007a49da0f3cfd55eb250066b19485ec"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Serilog.Sinks.File, Version=5.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100fb8d13fd344a1c6fe0fe83ef33c1080bf30690765bc6eb0df26ebfdf8f21670c64265b30db09f73a0dea5b3db4c9d18dbf6d5a25af5ce9016f281014d79dc3b4201ac646c451830fc7e61a2dfd633d34c39f87b81894191652df5ac63cc40c77f3542f702bda692e6e8a9158353df189007a49da0f3cfd55eb250066b19485ec"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Diagnostics.EventLog, Version=6.0.0.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001004b86c4cb78549b34bab61a3b1800e23bfeb5b3ec390074041536a7e3cbd97f5f04cf0f857155a8928eaa29ebfd11cfbbad3ba70efea7bda3226c6a8d370a4cd303f714486b6ebc225985a638471e6ef571cc92a4613c00b8fa65d61ccee0cbe5f36330c9a01f4183559f1bef24cc2917c6d913e3a541333a1d05d9bed22b38cb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Reactive, Version=5.0.0.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001008f5cff058631087031f8350f30a36fa078027e5df2316b564352dc9eb7af7ce856016d3c5e9d058036fe73bb5c83987bd3fc0793fbe25d633cc4f37c2bd5f1d717cd2a81661bec08f0971dc6078e17bde372b89005e7738a0ebd501b896ca3e8315270ff64df7809dd912c372df61785a5085b3553b7872e39b1b1cc0ff5a6bc"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.AuditLogging.Domain, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Autofac, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.AutoMapper, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.BackgroundJobs.Abstractions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.BackgroundJobs, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.BackgroundJobs.Domain, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Castle.Core, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Emailing, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.FeatureManagement.Domain, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Identity.Domain, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.OpenIddict.Domain, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.PermissionManagement.Domain, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.PermissionManagement.Domain.Identity, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.PermissionManagement.Domain.OpenIddict, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.SettingManagement.Domain, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.TenantManagement.Domain, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.TextTemplating.Core, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.TextTemplating, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.TextTemplating.Scriban, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Users.Domain, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null")]
namespace CAServer.Grains.Grain.Account
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::Orleans.CodeGeneration.MethodInvokerAttribute(typeof(global::CAServer.Grains.Grain.Account.IRecoveryGrain), (int)0x167E62AE), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]
    internal class OrleansCodeGenRecoveryGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        public async global::System.Threading.Tasks.Task<object> Invoke(global::Orleans.Runtime.IAddressable grain, global::Orleans.CodeGeneration.InvokeMethodRequest request)
        {
            int interfaceId = request.InterfaceId;
            int methodId = request.MethodId;
            var arguments = request.Arguments;
            switch (interfaceId)
            {
                case (int)0x167E62AE:
                {
                    var casted = ((global::CAServer.Grains.Grain.Account.IRecoveryGrain)grain);
                    switch (methodId)
                    {
                        case unchecked((int)0x962D9379):
                            return await casted.RequestAsync((global::CAServer.Grains.Grain.Account.RecoveryGrainDto)arguments[0]);
                        case (int)0x79016AA2:
                            return await casted.UpdateRecoveryResultAsync((global::CAServer.Grains.Grain.Account.SocialRecoveryResultGrainDto)arguments[0]);
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        public int InterfaceId => (int)0x167E62AE;
        public ushort InterfaceVersion => 0;
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.SerializableAttribute, global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.GrainReferenceAttribute(typeof(global::CAServer.Grains.Grain.Account.IRecoveryGrain))]
    internal class OrleansCodeGenRecoveryGrainReference : global::Orleans.Runtime.GrainReference, global::CAServer.Grains.Grain.Account.IRecoveryGrain
    {
        OrleansCodeGenRecoveryGrainReference(global::Orleans.Runtime.GrainReference other) : base(other)
        {
        }

        OrleansCodeGenRecoveryGrainReference(global::Orleans.Runtime.GrainReference other, global::Orleans.CodeGeneration.InvokeMethodOptions invokeMethodOptions) : base(other, invokeMethodOptions)
        {
        }

        OrleansCodeGenRecoveryGrainReference(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
        }

        public override int InterfaceId => (int)0x167E62AE;
        public override ushort InterfaceVersion => 0;
        public override string InterfaceName => "IRecoveryGrain";
        public override bool IsCompatible(int interfaceId) => interfaceId == (int)0x167E62AE;
        public override string GetMethodName(int interfaceId, int methodId)
        {
            switch (interfaceId)
            {
                case (int)0x167E62AE:
                {
                    switch (methodId)
                    {
                        case unchecked((int)0x962D9379):
                            return "RequestAsync";
                        case (int)0x79016AA2:
                            return "UpdateRecoveryResultAsync";
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        global::System.Threading.Tasks.Task<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Account.RecoveryGrainDto>> global::CAServer.Grains.Grain.Account.IRecoveryGrain.RequestAsync(global::CAServer.Grains.Grain.Account.RecoveryGrainDto recoveryGrainDto0)
        {
            return base.InvokeMethodAsync<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Account.RecoveryGrainDto>>(unchecked((int)0x962D9379), new object[]{recoveryGrainDto0});
        }

        global::System.Threading.Tasks.Task<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Account.RecoveryGrainDto>> global::CAServer.Grains.Grain.Account.IRecoveryGrain.UpdateRecoveryResultAsync(global::CAServer.Grains.Grain.Account.SocialRecoveryResultGrainDto resultGrainDto0)
        {
            return base.InvokeMethodAsync<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Account.RecoveryGrainDto>>((int)0x79016AA2, new object[]{resultGrainDto0});
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::Orleans.CodeGeneration.MethodInvokerAttribute(typeof(global::CAServer.Grains.Grain.Account.IRegisterGrain), unchecked((int)0xD9E28E28)), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]
    internal class OrleansCodeGenRegisterGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        public async global::System.Threading.Tasks.Task<object> Invoke(global::Orleans.Runtime.IAddressable grain, global::Orleans.CodeGeneration.InvokeMethodRequest request)
        {
            int interfaceId = request.InterfaceId;
            int methodId = request.MethodId;
            var arguments = request.Arguments;
            switch (interfaceId)
            {
                case unchecked((int)0xD9E28E28):
                {
                    var casted = ((global::CAServer.Grains.Grain.Account.IRegisterGrain)grain);
                    switch (methodId)
                    {
                        case (int)0x20340FDE:
                            return await casted.RequestAsync((global::CAServer.Grains.Grain.Account.RegisterGrainDto)arguments[0]);
                        case unchecked((int)0xC2F00B70):
                            return await casted.UpdateRegisterResultAsync((global::CAServer.Grains.Grain.Account.CreateHolderResultGrainDto)arguments[0]);
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        public int InterfaceId => unchecked((int)0xD9E28E28);
        public ushort InterfaceVersion => 0;
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.SerializableAttribute, global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.GrainReferenceAttribute(typeof(global::CAServer.Grains.Grain.Account.IRegisterGrain))]
    internal class OrleansCodeGenRegisterGrainReference : global::Orleans.Runtime.GrainReference, global::CAServer.Grains.Grain.Account.IRegisterGrain
    {
        OrleansCodeGenRegisterGrainReference(global::Orleans.Runtime.GrainReference other) : base(other)
        {
        }

        OrleansCodeGenRegisterGrainReference(global::Orleans.Runtime.GrainReference other, global::Orleans.CodeGeneration.InvokeMethodOptions invokeMethodOptions) : base(other, invokeMethodOptions)
        {
        }

        OrleansCodeGenRegisterGrainReference(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
        }

        public override int InterfaceId => unchecked((int)0xD9E28E28);
        public override ushort InterfaceVersion => 0;
        public override string InterfaceName => "IRegisterGrain";
        public override bool IsCompatible(int interfaceId) => interfaceId == unchecked((int)0xD9E28E28);
        public override string GetMethodName(int interfaceId, int methodId)
        {
            switch (interfaceId)
            {
                case unchecked((int)0xD9E28E28):
                {
                    switch (methodId)
                    {
                        case (int)0x20340FDE:
                            return "RequestAsync";
                        case unchecked((int)0xC2F00B70):
                            return "UpdateRegisterResultAsync";
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        global::System.Threading.Tasks.Task<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Account.RegisterGrainDto>> global::CAServer.Grains.Grain.Account.IRegisterGrain.RequestAsync(global::CAServer.Grains.Grain.Account.RegisterGrainDto registerGrainDto0)
        {
            return base.InvokeMethodAsync<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Account.RegisterGrainDto>>((int)0x20340FDE, new object[]{registerGrainDto0});
        }

        global::System.Threading.Tasks.Task<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Account.RegisterGrainDto>> global::CAServer.Grains.Grain.Account.IRegisterGrain.UpdateRegisterResultAsync(global::CAServer.Grains.Grain.Account.CreateHolderResultGrainDto result0)
        {
            return base.InvokeMethodAsync<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Account.RegisterGrainDto>>(unchecked((int)0xC2F00B70), new object[]{result0});
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.SerializerAttribute(typeof(global::CAServer.Grains.Grain.Account.CreateHolderResultGrainDto))]
    internal sealed class OrleansCodeGenCAServer_Grains_Grain_Account_CreateHolderResultGrainDtoSerializer
    {
        private readonly global::System.Func<global::CAServer.ContractEventHandler.CreateHolderEto, global::System.Guid> getField0;
        private readonly global::System.Action<global::CAServer.ContractEventHandler.CreateHolderEto, global::System.Guid> setField0;
        private readonly global::System.Func<global::CAServer.ContractEventHandler.ContractServiceEto, global::System.Guid> getField5;
        private readonly global::System.Action<global::CAServer.ContractEventHandler.ContractServiceEto, global::System.Guid> setField5;
        public OrleansCodeGenCAServer_Grains_Grain_Account_CreateHolderResultGrainDtoSerializer(global::Orleans.Serialization.IFieldUtils fieldUtils)
        {
            global::System.Reflection.FieldInfo field0 = typeof(global::CAServer.ContractEventHandler.CreateHolderEto).GetField("<Id>k__BackingField", (global::System.Reflection.BindingFlags.Instance | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Public));
            getField0 = (global::System.Func<global::CAServer.ContractEventHandler.CreateHolderEto, global::System.Guid>)fieldUtils.GetGetter(field0);
            setField0 = (global::System.Action<global::CAServer.ContractEventHandler.CreateHolderEto, global::System.Guid>)fieldUtils.GetReferenceSetter(field0);
            global::System.Reflection.FieldInfo field5 = typeof(global::CAServer.ContractEventHandler.ContractServiceEto).GetField("<Id>k__BackingField", (global::System.Reflection.BindingFlags.Instance | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Public));
            getField5 = (global::System.Func<global::CAServer.ContractEventHandler.ContractServiceEto, global::System.Guid>)fieldUtils.GetGetter(field5);
            setField5 = (global::System.Action<global::CAServer.ContractEventHandler.ContractServiceEto, global::System.Guid>)fieldUtils.GetReferenceSetter(field5);
        }

        [global::Orleans.CodeGeneration.CopierMethodAttribute]
        public object DeepCopier(object original, global::Orleans.Serialization.ICopyContext context)
        {
            global::CAServer.Grains.Grain.Account.CreateHolderResultGrainDto input = ((global::CAServer.Grains.Grain.Account.CreateHolderResultGrainDto)original);
            global::CAServer.Grains.Grain.Account.CreateHolderResultGrainDto result = new global::CAServer.Grains.Grain.Account.CreateHolderResultGrainDto();
            context.RecordCopy(original, result);
            result.CaAddress = input.CaAddress;
            result.CaHash = input.CaHash;
            result.Context = (global::CAServer.Hubs.HubRequestContext)context.DeepCopyInner(input.Context);
            result.GrainId = input.GrainId;
            setField0(result, getField0(input));
            setField5(result, getField5(input));
            result.RegisterMessage = input.RegisterMessage;
            result.RegisterSuccess = input.RegisterSuccess;
            result.RegisteredTime = input.RegisteredTime;
            return result;
        }

        [global::Orleans.CodeGeneration.SerializerMethodAttribute]
        public void Serializer(object untypedInput, global::Orleans.Serialization.ISerializationContext context, global::System.Type expected)
        {
            global::CAServer.Grains.Grain.Account.CreateHolderResultGrainDto input = (global::CAServer.Grains.Grain.Account.CreateHolderResultGrainDto)untypedInput;
            context.SerializeInner(input.CaAddress, typeof(string));
            context.SerializeInner(input.CaHash, typeof(string));
            context.SerializeInner(input.Context, typeof(global::CAServer.Hubs.HubRequestContext));
            context.SerializeInner(input.GrainId, typeof(string));
            context.SerializeInner(getField0(input), typeof(global::System.Guid));
            context.SerializeInner(getField5(input), typeof(global::System.Guid));
            context.SerializeInner(input.RegisterMessage, typeof(string));
            context.SerializeInner(input.RegisterSuccess, typeof(bool? ));
            context.SerializeInner(input.RegisteredTime, typeof(global::System.DateTime));
        }

        [global::Orleans.CodeGeneration.DeserializerMethodAttribute]
        public object Deserializer(global::System.Type expected, global::Orleans.Serialization.IDeserializationContext context)
        {
            global::CAServer.Grains.Grain.Account.CreateHolderResultGrainDto result = new global::CAServer.Grains.Grain.Account.CreateHolderResultGrainDto();
            context.RecordObject(result);
            result.CaAddress = (string)context.DeserializeInner(typeof(string));
            result.CaHash = (string)context.DeserializeInner(typeof(string));
            result.Context = (global::CAServer.Hubs.HubRequestContext)context.DeserializeInner(typeof(global::CAServer.Hubs.HubRequestContext));
            result.GrainId = (string)context.DeserializeInner(typeof(string));
            setField0(result, (global::System.Guid)context.DeserializeInner(typeof(global::System.Guid)));
            setField5(result, (global::System.Guid)context.DeserializeInner(typeof(global::System.Guid)));
            result.RegisterMessage = (string)context.DeserializeInner(typeof(string));
            result.RegisterSuccess = (bool? )context.DeserializeInner(typeof(bool? ));
            result.RegisteredTime = (global::System.DateTime)context.DeserializeInner(typeof(global::System.DateTime));
            return (global::CAServer.Grains.Grain.Account.CreateHolderResultGrainDto)result;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.SerializerAttribute(typeof(global::CAServer.Grains.Grain.Account.RecoveryGrainDto))]
    internal sealed class OrleansCodeGenCAServer_Grains_Grain_Account_RecoveryGrainDtoSerializer
    {
        public OrleansCodeGenCAServer_Grains_Grain_Account_RecoveryGrainDtoSerializer(global::Orleans.Serialization.IFieldUtils fieldUtils)
        {
        }

        [global::Orleans.CodeGeneration.CopierMethodAttribute]
        public object DeepCopier(object original, global::Orleans.Serialization.ICopyContext context)
        {
            global::CAServer.Grains.Grain.Account.RecoveryGrainDto input = ((global::CAServer.Grains.Grain.Account.RecoveryGrainDto)original);
            global::CAServer.Grains.Grain.Account.RecoveryGrainDto result = new global::CAServer.Grains.Grain.Account.RecoveryGrainDto();
            context.RecordCopy(original, result);
            result.CaAddress = input.CaAddress;
            result.CaHash = input.CaHash;
            result.ChainId = input.ChainId;
            result.Context = (global::CAServer.Hubs.HubRequestContext)context.DeepCopyInner(input.Context);
            result.CreateTime = input.CreateTime;
            result.GrainId = input.GrainId;
            result.GuardianApproved = (global::System.Collections.Generic.List<global::CAServer.Account.GuardianInfo>)context.DeepCopyInner(input.GuardianApproved);
            result.Id = input.Id;
            result.LoginGuardianIdentifierHash = input.LoginGuardianIdentifierHash;
            result.ManagerInfo = (global::CAServer.Account.ManagerInfo)context.DeepCopyInner(input.ManagerInfo);
            result.RecoveryMessage = input.RecoveryMessage;
            result.RecoverySuccess = input.RecoverySuccess;
            result.RecoveryTime = input.RecoveryTime;
            return result;
        }

        [global::Orleans.CodeGeneration.SerializerMethodAttribute]
        public void Serializer(object untypedInput, global::Orleans.Serialization.ISerializationContext context, global::System.Type expected)
        {
            global::CAServer.Grains.Grain.Account.RecoveryGrainDto input = (global::CAServer.Grains.Grain.Account.RecoveryGrainDto)untypedInput;
            context.SerializeInner(input.CaAddress, typeof(string));
            context.SerializeInner(input.CaHash, typeof(string));
            context.SerializeInner(input.ChainId, typeof(string));
            context.SerializeInner(input.Context, typeof(global::CAServer.Hubs.HubRequestContext));
            context.SerializeInner(input.CreateTime, typeof(global::System.DateTime? ));
            context.SerializeInner(input.GrainId, typeof(string));
            context.SerializeInner(input.GuardianApproved, typeof(global::System.Collections.Generic.List<global::CAServer.Account.GuardianInfo>));
            context.SerializeInner(input.Id, typeof(global::System.Guid));
            context.SerializeInner(input.LoginGuardianIdentifierHash, typeof(string));
            context.SerializeInner(input.ManagerInfo, typeof(global::CAServer.Account.ManagerInfo));
            context.SerializeInner(input.RecoveryMessage, typeof(string));
            context.SerializeInner(input.RecoverySuccess, typeof(bool? ));
            context.SerializeInner(input.RecoveryTime, typeof(global::System.DateTime? ));
        }

        [global::Orleans.CodeGeneration.DeserializerMethodAttribute]
        public object Deserializer(global::System.Type expected, global::Orleans.Serialization.IDeserializationContext context)
        {
            global::CAServer.Grains.Grain.Account.RecoveryGrainDto result = new global::CAServer.Grains.Grain.Account.RecoveryGrainDto();
            context.RecordObject(result);
            result.CaAddress = (string)context.DeserializeInner(typeof(string));
            result.CaHash = (string)context.DeserializeInner(typeof(string));
            result.ChainId = (string)context.DeserializeInner(typeof(string));
            result.Context = (global::CAServer.Hubs.HubRequestContext)context.DeserializeInner(typeof(global::CAServer.Hubs.HubRequestContext));
            result.CreateTime = (global::System.DateTime? )context.DeserializeInner(typeof(global::System.DateTime? ));
            result.GrainId = (string)context.DeserializeInner(typeof(string));
            result.GuardianApproved = (global::System.Collections.Generic.List<global::CAServer.Account.GuardianInfo>)context.DeserializeInner(typeof(global::System.Collections.Generic.List<global::CAServer.Account.GuardianInfo>));
            result.Id = (global::System.Guid)context.DeserializeInner(typeof(global::System.Guid));
            result.LoginGuardianIdentifierHash = (string)context.DeserializeInner(typeof(string));
            result.ManagerInfo = (global::CAServer.Account.ManagerInfo)context.DeserializeInner(typeof(global::CAServer.Account.ManagerInfo));
            result.RecoveryMessage = (string)context.DeserializeInner(typeof(string));
            result.RecoverySuccess = (bool? )context.DeserializeInner(typeof(bool? ));
            result.RecoveryTime = (global::System.DateTime? )context.DeserializeInner(typeof(global::System.DateTime? ));
            return (global::CAServer.Grains.Grain.Account.RecoveryGrainDto)result;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.SerializerAttribute(typeof(global::CAServer.Grains.Grain.Account.SocialRecoveryResultGrainDto))]
    internal sealed class OrleansCodeGenCAServer_Grains_Grain_Account_SocialRecoveryResultGrainDtoSerializer
    {
        private readonly global::System.Func<global::CAServer.ContractEventHandler.SocialRecoveryEto, global::System.Guid> getField1;
        private readonly global::System.Action<global::CAServer.ContractEventHandler.SocialRecoveryEto, global::System.Guid> setField1;
        private readonly global::System.Func<global::CAServer.ContractEventHandler.ContractServiceEto, global::System.Guid> getField5;
        private readonly global::System.Action<global::CAServer.ContractEventHandler.ContractServiceEto, global::System.Guid> setField5;
        public OrleansCodeGenCAServer_Grains_Grain_Account_SocialRecoveryResultGrainDtoSerializer(global::Orleans.Serialization.IFieldUtils fieldUtils)
        {
            global::System.Reflection.FieldInfo field1 = typeof(global::CAServer.ContractEventHandler.SocialRecoveryEto).GetField("<Id>k__BackingField", (global::System.Reflection.BindingFlags.Instance | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Public));
            getField1 = (global::System.Func<global::CAServer.ContractEventHandler.SocialRecoveryEto, global::System.Guid>)fieldUtils.GetGetter(field1);
            setField1 = (global::System.Action<global::CAServer.ContractEventHandler.SocialRecoveryEto, global::System.Guid>)fieldUtils.GetReferenceSetter(field1);
            global::System.Reflection.FieldInfo field5 = typeof(global::CAServer.ContractEventHandler.ContractServiceEto).GetField("<Id>k__BackingField", (global::System.Reflection.BindingFlags.Instance | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Public));
            getField5 = (global::System.Func<global::CAServer.ContractEventHandler.ContractServiceEto, global::System.Guid>)fieldUtils.GetGetter(field5);
            setField5 = (global::System.Action<global::CAServer.ContractEventHandler.ContractServiceEto, global::System.Guid>)fieldUtils.GetReferenceSetter(field5);
        }

        [global::Orleans.CodeGeneration.CopierMethodAttribute]
        public object DeepCopier(object original, global::Orleans.Serialization.ICopyContext context)
        {
            global::CAServer.Grains.Grain.Account.SocialRecoveryResultGrainDto input = ((global::CAServer.Grains.Grain.Account.SocialRecoveryResultGrainDto)original);
            global::CAServer.Grains.Grain.Account.SocialRecoveryResultGrainDto result = new global::CAServer.Grains.Grain.Account.SocialRecoveryResultGrainDto();
            context.RecordCopy(original, result);
            result.CaAddress = input.CaAddress;
            result.CaHash = input.CaHash;
            result.Context = (global::CAServer.Hubs.HubRequestContext)context.DeepCopyInner(input.Context);
            result.GrainId = input.GrainId;
            setField1(result, getField1(input));
            setField5(result, getField5(input));
            result.RecoveryMessage = input.RecoveryMessage;
            result.RecoverySuccess = input.RecoverySuccess;
            result.RecoveryTime = input.RecoveryTime;
            return result;
        }

        [global::Orleans.CodeGeneration.SerializerMethodAttribute]
        public void Serializer(object untypedInput, global::Orleans.Serialization.ISerializationContext context, global::System.Type expected)
        {
            global::CAServer.Grains.Grain.Account.SocialRecoveryResultGrainDto input = (global::CAServer.Grains.Grain.Account.SocialRecoveryResultGrainDto)untypedInput;
            context.SerializeInner(input.CaAddress, typeof(string));
            context.SerializeInner(input.CaHash, typeof(string));
            context.SerializeInner(input.Context, typeof(global::CAServer.Hubs.HubRequestContext));
            context.SerializeInner(input.GrainId, typeof(string));
            context.SerializeInner(getField1(input), typeof(global::System.Guid));
            context.SerializeInner(getField5(input), typeof(global::System.Guid));
            context.SerializeInner(input.RecoveryMessage, typeof(string));
            context.SerializeInner(input.RecoverySuccess, typeof(bool? ));
            context.SerializeInner(input.RecoveryTime, typeof(global::System.DateTime));
        }

        [global::Orleans.CodeGeneration.DeserializerMethodAttribute]
        public object Deserializer(global::System.Type expected, global::Orleans.Serialization.IDeserializationContext context)
        {
            global::CAServer.Grains.Grain.Account.SocialRecoveryResultGrainDto result = new global::CAServer.Grains.Grain.Account.SocialRecoveryResultGrainDto();
            context.RecordObject(result);
            result.CaAddress = (string)context.DeserializeInner(typeof(string));
            result.CaHash = (string)context.DeserializeInner(typeof(string));
            result.Context = (global::CAServer.Hubs.HubRequestContext)context.DeserializeInner(typeof(global::CAServer.Hubs.HubRequestContext));
            result.GrainId = (string)context.DeserializeInner(typeof(string));
            setField1(result, (global::System.Guid)context.DeserializeInner(typeof(global::System.Guid)));
            setField5(result, (global::System.Guid)context.DeserializeInner(typeof(global::System.Guid)));
            result.RecoveryMessage = (string)context.DeserializeInner(typeof(string));
            result.RecoverySuccess = (bool? )context.DeserializeInner(typeof(bool? ));
            result.RecoveryTime = (global::System.DateTime)context.DeserializeInner(typeof(global::System.DateTime));
            return (global::CAServer.Grains.Grain.Account.SocialRecoveryResultGrainDto)result;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.SerializerAttribute(typeof(global::CAServer.Grains.Grain.Account.RegisterGrainDto))]
    internal sealed class OrleansCodeGenCAServer_Grains_Grain_Account_RegisterGrainDtoSerializer
    {
        public OrleansCodeGenCAServer_Grains_Grain_Account_RegisterGrainDtoSerializer(global::Orleans.Serialization.IFieldUtils fieldUtils)
        {
        }

        [global::Orleans.CodeGeneration.CopierMethodAttribute]
        public object DeepCopier(object original, global::Orleans.Serialization.ICopyContext context)
        {
            global::CAServer.Grains.Grain.Account.RegisterGrainDto input = ((global::CAServer.Grains.Grain.Account.RegisterGrainDto)original);
            global::CAServer.Grains.Grain.Account.RegisterGrainDto result = new global::CAServer.Grains.Grain.Account.RegisterGrainDto();
            context.RecordCopy(original, result);
            result.CaAddress = input.CaAddress;
            result.CaHash = input.CaHash;
            result.ChainId = input.ChainId;
            result.Context = (global::CAServer.Hubs.HubRequestContext)context.DeepCopyInner(input.Context);
            result.CreateTime = input.CreateTime;
            result.GrainId = input.GrainId;
            result.GuardianInfo = (global::CAServer.Account.GuardianInfo)context.DeepCopyInner(input.GuardianInfo);
            result.Id = input.Id;
            result.ManagerInfo = (global::CAServer.Account.ManagerInfo)context.DeepCopyInner(input.ManagerInfo);
            result.RegisterMessage = input.RegisterMessage;
            result.RegisterSuccess = input.RegisterSuccess;
            result.RegisteredTime = input.RegisteredTime;
            return result;
        }

        [global::Orleans.CodeGeneration.SerializerMethodAttribute]
        public void Serializer(object untypedInput, global::Orleans.Serialization.ISerializationContext context, global::System.Type expected)
        {
            global::CAServer.Grains.Grain.Account.RegisterGrainDto input = (global::CAServer.Grains.Grain.Account.RegisterGrainDto)untypedInput;
            context.SerializeInner(input.CaAddress, typeof(string));
            context.SerializeInner(input.CaHash, typeof(string));
            context.SerializeInner(input.ChainId, typeof(string));
            context.SerializeInner(input.Context, typeof(global::CAServer.Hubs.HubRequestContext));
            context.SerializeInner(input.CreateTime, typeof(global::System.DateTime? ));
            context.SerializeInner(input.GrainId, typeof(string));
            context.SerializeInner(input.GuardianInfo, typeof(global::CAServer.Account.GuardianInfo));
            context.SerializeInner(input.Id, typeof(global::System.Guid));
            context.SerializeInner(input.ManagerInfo, typeof(global::CAServer.Account.ManagerInfo));
            context.SerializeInner(input.RegisterMessage, typeof(string));
            context.SerializeInner(input.RegisterSuccess, typeof(bool? ));
            context.SerializeInner(input.RegisteredTime, typeof(global::System.DateTime? ));
        }

        [global::Orleans.CodeGeneration.DeserializerMethodAttribute]
        public object Deserializer(global::System.Type expected, global::Orleans.Serialization.IDeserializationContext context)
        {
            global::CAServer.Grains.Grain.Account.RegisterGrainDto result = new global::CAServer.Grains.Grain.Account.RegisterGrainDto();
            context.RecordObject(result);
            result.CaAddress = (string)context.DeserializeInner(typeof(string));
            result.CaHash = (string)context.DeserializeInner(typeof(string));
            result.ChainId = (string)context.DeserializeInner(typeof(string));
            result.Context = (global::CAServer.Hubs.HubRequestContext)context.DeserializeInner(typeof(global::CAServer.Hubs.HubRequestContext));
            result.CreateTime = (global::System.DateTime? )context.DeserializeInner(typeof(global::System.DateTime? ));
            result.GrainId = (string)context.DeserializeInner(typeof(string));
            result.GuardianInfo = (global::CAServer.Account.GuardianInfo)context.DeserializeInner(typeof(global::CAServer.Account.GuardianInfo));
            result.Id = (global::System.Guid)context.DeserializeInner(typeof(global::System.Guid));
            result.ManagerInfo = (global::CAServer.Account.ManagerInfo)context.DeserializeInner(typeof(global::CAServer.Account.ManagerInfo));
            result.RegisterMessage = (string)context.DeserializeInner(typeof(string));
            result.RegisterSuccess = (bool? )context.DeserializeInner(typeof(bool? ));
            result.RegisteredTime = (global::System.DateTime? )context.DeserializeInner(typeof(global::System.DateTime? ));
            return (global::CAServer.Grains.Grain.Account.RegisterGrainDto)result;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.SerializerAttribute(typeof(global::CAServer.Grains.Grain.Account.ChainGrainDto))]
    internal sealed class OrleansCodeGenCAServer_Grains_Grain_Account_ChainGrainDtoSerializer
    {
        public OrleansCodeGenCAServer_Grains_Grain_Account_ChainGrainDtoSerializer(global::Orleans.Serialization.IFieldUtils fieldUtils)
        {
        }

        [global::Orleans.CodeGeneration.CopierMethodAttribute]
        public object DeepCopier(object original, global::Orleans.Serialization.ICopyContext context)
        {
            global::CAServer.Grains.Grain.Account.ChainGrainDto input = ((global::CAServer.Grains.Grain.Account.ChainGrainDto)original);
            global::CAServer.Grains.Grain.Account.ChainGrainDto result = new global::CAServer.Grains.Grain.Account.ChainGrainDto();
            context.RecordCopy(original, result);
            result.CaContractAddress = input.CaContractAddress;
            result.ChainId = input.ChainId;
            result.ChainName = input.ChainName;
            result.DefaultToken = (global::CAServer.Chain.DefaultToken)context.DeepCopyInner(input.DefaultToken);
            result.EndPoint = input.EndPoint;
            result.ExplorerUrl = input.ExplorerUrl;
            result.Id = input.Id;
            result.LastModifyTime = input.LastModifyTime;
            return result;
        }

        [global::Orleans.CodeGeneration.SerializerMethodAttribute]
        public void Serializer(object untypedInput, global::Orleans.Serialization.ISerializationContext context, global::System.Type expected)
        {
            global::CAServer.Grains.Grain.Account.ChainGrainDto input = (global::CAServer.Grains.Grain.Account.ChainGrainDto)untypedInput;
            context.SerializeInner(input.CaContractAddress, typeof(string));
            context.SerializeInner(input.ChainId, typeof(string));
            context.SerializeInner(input.ChainName, typeof(string));
            context.SerializeInner(input.DefaultToken, typeof(global::CAServer.Chain.DefaultToken));
            context.SerializeInner(input.EndPoint, typeof(string));
            context.SerializeInner(input.ExplorerUrl, typeof(string));
            context.SerializeInner(input.Id, typeof(string));
            context.SerializeInner(input.LastModifyTime, typeof(global::System.DateTime));
        }

        [global::Orleans.CodeGeneration.DeserializerMethodAttribute]
        public object Deserializer(global::System.Type expected, global::Orleans.Serialization.IDeserializationContext context)
        {
            global::CAServer.Grains.Grain.Account.ChainGrainDto result = new global::CAServer.Grains.Grain.Account.ChainGrainDto();
            context.RecordObject(result);
            result.CaContractAddress = (string)context.DeserializeInner(typeof(string));
            result.ChainId = (string)context.DeserializeInner(typeof(string));
            result.ChainName = (string)context.DeserializeInner(typeof(string));
            result.DefaultToken = (global::CAServer.Chain.DefaultToken)context.DeserializeInner(typeof(global::CAServer.Chain.DefaultToken));
            result.EndPoint = (string)context.DeserializeInner(typeof(string));
            result.ExplorerUrl = (string)context.DeserializeInner(typeof(string));
            result.Id = (string)context.DeserializeInner(typeof(string));
            result.LastModifyTime = (global::System.DateTime)context.DeserializeInner(typeof(global::System.DateTime));
            return (global::CAServer.Grains.Grain.Account.ChainGrainDto)result;
        }
    }
}

namespace CAServer.Grains.Grain.ApplicationHandler
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::Orleans.CodeGeneration.MethodInvokerAttribute(typeof(global::CAServer.Grains.Grain.ApplicationHandler.IContractServiceGrain), (int)0x45C22B81), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]
    internal class OrleansCodeGenContractServiceGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        public async global::System.Threading.Tasks.Task<object> Invoke(global::Orleans.Runtime.IAddressable grain, global::Orleans.CodeGeneration.InvokeMethodRequest request)
        {
            int interfaceId = request.InterfaceId;
            int methodId = request.MethodId;
            var arguments = request.Arguments;
            switch (interfaceId)
            {
                case (int)0x45C22B81:
                {
                    var casted = ((global::CAServer.Grains.Grain.ApplicationHandler.IContractServiceGrain)grain);
                    switch (methodId)
                    {
                        case (int)0x935CD0A:
                            return await casted.CreateHolderInfoAsync((global::CAServer.Grains.Grain.ApplicationHandler.CreateHolderDto)arguments[0]);
                        case unchecked((int)0xD7C68D70):
                            return await casted.SocialRecoveryAsync((global::CAServer.Grains.Grain.ApplicationHandler.SocialRecoveryDto)arguments[0]);
                        case unchecked((int)0xE45F052B):
                            return await casted.ValidateTransactionAsync((string)arguments[0], (global::Portkey.Contracts.CA.GetHolderInfoOutput)arguments[1], (global::Google.Protobuf.Collections.RepeatedField<string>)arguments[2]);
                        case unchecked((int)0xB70E20C7):
                            return await casted.GetSyncHolderInfoInputAsync((string)arguments[0], (global::CAServer.Grains.State.ApplicationHandler.TransactionInfo)arguments[1]);
                        case (int)0x3B16C14B:
                            return await casted.SyncTransactionAsync((string)arguments[0], (global::Portkey.Contracts.CA.SyncHolderInfoInput)arguments[1]);
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        public int InterfaceId => (int)0x45C22B81;
        public ushort InterfaceVersion => 0;
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.SerializableAttribute, global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.GrainReferenceAttribute(typeof(global::CAServer.Grains.Grain.ApplicationHandler.IContractServiceGrain))]
    internal class OrleansCodeGenContractServiceGrainReference : global::Orleans.Runtime.GrainReference, global::CAServer.Grains.Grain.ApplicationHandler.IContractServiceGrain
    {
        OrleansCodeGenContractServiceGrainReference(global::Orleans.Runtime.GrainReference other) : base(other)
        {
        }

        OrleansCodeGenContractServiceGrainReference(global::Orleans.Runtime.GrainReference other, global::Orleans.CodeGeneration.InvokeMethodOptions invokeMethodOptions) : base(other, invokeMethodOptions)
        {
        }

        OrleansCodeGenContractServiceGrainReference(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
        }

        public override int InterfaceId => (int)0x45C22B81;
        public override ushort InterfaceVersion => 0;
        public override string InterfaceName => "IContractServiceGrain";
        public override bool IsCompatible(int interfaceId) => interfaceId == (int)0x45C22B81;
        public override string GetMethodName(int interfaceId, int methodId)
        {
            switch (interfaceId)
            {
                case (int)0x45C22B81:
                {
                    switch (methodId)
                    {
                        case (int)0x935CD0A:
                            return "CreateHolderInfoAsync";
                        case unchecked((int)0xD7C68D70):
                            return "SocialRecoveryAsync";
                        case unchecked((int)0xE45F052B):
                            return "ValidateTransactionAsync";
                        case unchecked((int)0xB70E20C7):
                            return "GetSyncHolderInfoInputAsync";
                        case (int)0x3B16C14B:
                            return "SyncTransactionAsync";
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        global::System.Threading.Tasks.Task<global::AElf.Client.Dto.TransactionResultDto> global::CAServer.Grains.Grain.ApplicationHandler.IContractServiceGrain.CreateHolderInfoAsync(global::CAServer.Grains.Grain.ApplicationHandler.CreateHolderDto createHolderDto0)
        {
            return base.InvokeMethodAsync<global::AElf.Client.Dto.TransactionResultDto>((int)0x935CD0A, new object[]{createHolderDto0});
        }

        global::System.Threading.Tasks.Task<global::AElf.Client.Dto.TransactionResultDto> global::CAServer.Grains.Grain.ApplicationHandler.IContractServiceGrain.SocialRecoveryAsync(global::CAServer.Grains.Grain.ApplicationHandler.SocialRecoveryDto socialRecoveryDto0)
        {
            return base.InvokeMethodAsync<global::AElf.Client.Dto.TransactionResultDto>(unchecked((int)0xD7C68D70), new object[]{socialRecoveryDto0});
        }

        global::System.Threading.Tasks.Task<global::CAServer.Grains.Grain.ApplicationHandler.TransactionInfoDto> global::CAServer.Grains.Grain.ApplicationHandler.IContractServiceGrain.ValidateTransactionAsync(string chainId0, global::Portkey.Contracts.CA.GetHolderInfoOutput output1, global::Google.Protobuf.Collections.RepeatedField<string> unsetLoginGuardianTypes2)
        {
            return base.InvokeMethodAsync<global::CAServer.Grains.Grain.ApplicationHandler.TransactionInfoDto>(unchecked((int)0xE45F052B), new object[]{chainId0, output1, unsetLoginGuardianTypes2});
        }

        global::System.Threading.Tasks.Task<global::Portkey.Contracts.CA.SyncHolderInfoInput> global::CAServer.Grains.Grain.ApplicationHandler.IContractServiceGrain.GetSyncHolderInfoInputAsync(string chainId0, global::CAServer.Grains.State.ApplicationHandler.TransactionInfo transactionInfo1)
        {
            return base.InvokeMethodAsync<global::Portkey.Contracts.CA.SyncHolderInfoInput>(unchecked((int)0xB70E20C7), new object[]{chainId0, transactionInfo1});
        }

        global::System.Threading.Tasks.Task<global::AElf.Client.Dto.TransactionResultDto> global::CAServer.Grains.Grain.ApplicationHandler.IContractServiceGrain.SyncTransactionAsync(string chainId0, global::Portkey.Contracts.CA.SyncHolderInfoInput input1)
        {
            return base.InvokeMethodAsync<global::AElf.Client.Dto.TransactionResultDto>((int)0x3B16C14B, new object[]{chainId0, input1});
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::Orleans.CodeGeneration.MethodInvokerAttribute(typeof(global::CAServer.Grains.Grain.ApplicationHandler.IContractServiceGraphQLGrain), (int)0x6FAB38FA), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]
    internal class OrleansCodeGenContractServiceGraphQLGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        public async global::System.Threading.Tasks.Task<object> Invoke(global::Orleans.Runtime.IAddressable grain, global::Orleans.CodeGeneration.InvokeMethodRequest request)
        {
            int interfaceId = request.InterfaceId;
            int methodId = request.MethodId;
            var arguments = request.Arguments;
            switch (interfaceId)
            {
                case (int)0x6FAB38FA:
                {
                    var casted = ((global::CAServer.Grains.Grain.ApplicationHandler.IContractServiceGraphQLGrain)grain);
                    switch (methodId)
                    {
                        case (int)0x6D7FC4DF:
                            await casted.SetStateAsync((long)arguments[0]);
                            return null;
                        case (int)0x2B88059C:
                            return await casted.GetStateAsync();
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        public int InterfaceId => (int)0x6FAB38FA;
        public ushort InterfaceVersion => 0;
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.SerializableAttribute, global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.GrainReferenceAttribute(typeof(global::CAServer.Grains.Grain.ApplicationHandler.IContractServiceGraphQLGrain))]
    internal class OrleansCodeGenContractServiceGraphQLGrainReference : global::Orleans.Runtime.GrainReference, global::CAServer.Grains.Grain.ApplicationHandler.IContractServiceGraphQLGrain
    {
        OrleansCodeGenContractServiceGraphQLGrainReference(global::Orleans.Runtime.GrainReference other) : base(other)
        {
        }

        OrleansCodeGenContractServiceGraphQLGrainReference(global::Orleans.Runtime.GrainReference other, global::Orleans.CodeGeneration.InvokeMethodOptions invokeMethodOptions) : base(other, invokeMethodOptions)
        {
        }

        OrleansCodeGenContractServiceGraphQLGrainReference(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
        }

        public override int InterfaceId => (int)0x6FAB38FA;
        public override ushort InterfaceVersion => 0;
        public override string InterfaceName => "IContractServiceGraphQLGrain";
        public override bool IsCompatible(int interfaceId) => interfaceId == (int)0x6FAB38FA;
        public override string GetMethodName(int interfaceId, int methodId)
        {
            switch (interfaceId)
            {
                case (int)0x6FAB38FA:
                {
                    switch (methodId)
                    {
                        case (int)0x6D7FC4DF:
                            return "SetStateAsync";
                        case (int)0x2B88059C:
                            return "GetStateAsync";
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        global::System.Threading.Tasks.Task global::CAServer.Grains.Grain.ApplicationHandler.IContractServiceGraphQLGrain.SetStateAsync(long height0)
        {
            return base.InvokeMethodAsync<object>((int)0x6D7FC4DF, new object[]{height0});
        }

        global::System.Threading.Tasks.Task<long> global::CAServer.Grains.Grain.ApplicationHandler.IContractServiceGraphQLGrain.GetStateAsync()
        {
            return base.InvokeMethodAsync<long>((int)0x2B88059C, null);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::Orleans.CodeGeneration.MethodInvokerAttribute(typeof(global::CAServer.Grains.Grain.ApplicationHandler.ISyncRecordGrain), unchecked((int)0xCB476306)), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]
    internal class OrleansCodeGenSyncRecordGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        public async global::System.Threading.Tasks.Task<object> Invoke(global::Orleans.Runtime.IAddressable grain, global::Orleans.CodeGeneration.InvokeMethodRequest request)
        {
            int interfaceId = request.InterfaceId;
            int methodId = request.MethodId;
            var arguments = request.Arguments;
            switch (interfaceId)
            {
                case unchecked((int)0xCB476306):
                {
                    var casted = ((global::CAServer.Grains.Grain.ApplicationHandler.ISyncRecordGrain)grain);
                    switch (methodId)
                    {
                        case unchecked((int)0xCDFE91BD):
                            await casted.AddValidatedRecordsAsync((global::System.Collections.Generic.List<global::CAServer.Grains.State.ApplicationHandler.SyncRecord>)arguments[0]);
                            return null;
                        case (int)0x6BE7E74F:
                            return await casted.GetValidatedRecordsAsync();
                        case (int)0x45EBD968:
                            await casted.AddToBeValidatedRecordsAsync((global::System.Collections.Generic.List<global::CAServer.Grains.State.ApplicationHandler.SyncRecord>)arguments[0]);
                            return null;
                        case (int)0x54E84329:
                            return await casted.GetToBeValidatedRecordsAsync();
                        case unchecked((int)0xCDA0A655):
                            await casted.SetValidatedRecords((global::System.Collections.Generic.List<global::CAServer.Grains.State.ApplicationHandler.SyncRecord>)arguments[0]);
                            return null;
                        case unchecked((int)0xFE15214C):
                            await casted.SetToBeValidatedRecords((global::System.Collections.Generic.List<global::CAServer.Grains.State.ApplicationHandler.SyncRecord>)arguments[0]);
                            return null;
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        public int InterfaceId => unchecked((int)0xCB476306);
        public ushort InterfaceVersion => 0;
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.SerializableAttribute, global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.GrainReferenceAttribute(typeof(global::CAServer.Grains.Grain.ApplicationHandler.ISyncRecordGrain))]
    internal class OrleansCodeGenSyncRecordGrainReference : global::Orleans.Runtime.GrainReference, global::CAServer.Grains.Grain.ApplicationHandler.ISyncRecordGrain
    {
        OrleansCodeGenSyncRecordGrainReference(global::Orleans.Runtime.GrainReference other) : base(other)
        {
        }

        OrleansCodeGenSyncRecordGrainReference(global::Orleans.Runtime.GrainReference other, global::Orleans.CodeGeneration.InvokeMethodOptions invokeMethodOptions) : base(other, invokeMethodOptions)
        {
        }

        OrleansCodeGenSyncRecordGrainReference(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
        }

        public override int InterfaceId => unchecked((int)0xCB476306);
        public override ushort InterfaceVersion => 0;
        public override string InterfaceName => "ISyncRecordGrain";
        public override bool IsCompatible(int interfaceId) => interfaceId == unchecked((int)0xCB476306);
        public override string GetMethodName(int interfaceId, int methodId)
        {
            switch (interfaceId)
            {
                case unchecked((int)0xCB476306):
                {
                    switch (methodId)
                    {
                        case unchecked((int)0xCDFE91BD):
                            return "AddValidatedRecordsAsync";
                        case (int)0x6BE7E74F:
                            return "GetValidatedRecordsAsync";
                        case (int)0x45EBD968:
                            return "AddToBeValidatedRecordsAsync";
                        case (int)0x54E84329:
                            return "GetToBeValidatedRecordsAsync";
                        case unchecked((int)0xCDA0A655):
                            return "SetValidatedRecords";
                        case unchecked((int)0xFE15214C):
                            return "SetToBeValidatedRecords";
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        global::System.Threading.Tasks.Task global::CAServer.Grains.Grain.ApplicationHandler.ISyncRecordGrain.AddValidatedRecordsAsync(global::System.Collections.Generic.List<global::CAServer.Grains.State.ApplicationHandler.SyncRecord> records0)
        {
            return base.InvokeMethodAsync<object>(unchecked((int)0xCDFE91BD), new object[]{records0});
        }

        global::System.Threading.Tasks.Task<global::System.Collections.Generic.List<global::CAServer.Grains.State.ApplicationHandler.SyncRecord>> global::CAServer.Grains.Grain.ApplicationHandler.ISyncRecordGrain.GetValidatedRecordsAsync()
        {
            return base.InvokeMethodAsync<global::System.Collections.Generic.List<global::CAServer.Grains.State.ApplicationHandler.SyncRecord>>((int)0x6BE7E74F, null);
        }

        global::System.Threading.Tasks.Task global::CAServer.Grains.Grain.ApplicationHandler.ISyncRecordGrain.AddToBeValidatedRecordsAsync(global::System.Collections.Generic.List<global::CAServer.Grains.State.ApplicationHandler.SyncRecord> records0)
        {
            return base.InvokeMethodAsync<object>((int)0x45EBD968, new object[]{records0});
        }

        global::System.Threading.Tasks.Task<global::System.Collections.Generic.List<global::CAServer.Grains.State.ApplicationHandler.SyncRecord>> global::CAServer.Grains.Grain.ApplicationHandler.ISyncRecordGrain.GetToBeValidatedRecordsAsync()
        {
            return base.InvokeMethodAsync<global::System.Collections.Generic.List<global::CAServer.Grains.State.ApplicationHandler.SyncRecord>>((int)0x54E84329, null);
        }

        global::System.Threading.Tasks.Task global::CAServer.Grains.Grain.ApplicationHandler.ISyncRecordGrain.SetValidatedRecords(global::System.Collections.Generic.List<global::CAServer.Grains.State.ApplicationHandler.SyncRecord> records0)
        {
            return base.InvokeMethodAsync<object>(unchecked((int)0xCDA0A655), new object[]{records0});
        }

        global::System.Threading.Tasks.Task global::CAServer.Grains.Grain.ApplicationHandler.ISyncRecordGrain.SetToBeValidatedRecords(global::System.Collections.Generic.List<global::CAServer.Grains.State.ApplicationHandler.SyncRecord> records0)
        {
            return base.InvokeMethodAsync<object>(unchecked((int)0xFE15214C), new object[]{records0});
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.SerializerAttribute(typeof(global::CAServer.Grains.Grain.ApplicationHandler.TransactionInfoDto))]
    internal sealed class OrleansCodeGenCAServer_Grains_Grain_ApplicationHandler_TransactionInfoDtoSerializer
    {
        public OrleansCodeGenCAServer_Grains_Grain_ApplicationHandler_TransactionInfoDtoSerializer(global::Orleans.Serialization.IFieldUtils fieldUtils)
        {
        }

        [global::Orleans.CodeGeneration.CopierMethodAttribute]
        public object DeepCopier(object original, global::Orleans.Serialization.ICopyContext context)
        {
            global::CAServer.Grains.Grain.ApplicationHandler.TransactionInfoDto input = ((global::CAServer.Grains.Grain.ApplicationHandler.TransactionInfoDto)original);
            global::CAServer.Grains.Grain.ApplicationHandler.TransactionInfoDto result = new global::CAServer.Grains.Grain.ApplicationHandler.TransactionInfoDto();
            context.RecordCopy(original, result);
            result.Transaction = (global::AElf.Types.Transaction)context.DeepCopyInner(input.Transaction);
            result.TransactionResultDto = (global::AElf.Client.Dto.TransactionResultDto)context.DeepCopyInner(input.TransactionResultDto);
            return result;
        }

        [global::Orleans.CodeGeneration.SerializerMethodAttribute]
        public void Serializer(object untypedInput, global::Orleans.Serialization.ISerializationContext context, global::System.Type expected)
        {
            global::CAServer.Grains.Grain.ApplicationHandler.TransactionInfoDto input = (global::CAServer.Grains.Grain.ApplicationHandler.TransactionInfoDto)untypedInput;
            context.SerializeInner(input.Transaction, typeof(global::AElf.Types.Transaction));
            context.SerializeInner(input.TransactionResultDto, typeof(global::AElf.Client.Dto.TransactionResultDto));
        }

        [global::Orleans.CodeGeneration.DeserializerMethodAttribute]
        public object Deserializer(global::System.Type expected, global::Orleans.Serialization.IDeserializationContext context)
        {
            global::CAServer.Grains.Grain.ApplicationHandler.TransactionInfoDto result = new global::CAServer.Grains.Grain.ApplicationHandler.TransactionInfoDto();
            context.RecordObject(result);
            result.Transaction = (global::AElf.Types.Transaction)context.DeserializeInner(typeof(global::AElf.Types.Transaction));
            result.TransactionResultDto = (global::AElf.Client.Dto.TransactionResultDto)context.DeserializeInner(typeof(global::AElf.Client.Dto.TransactionResultDto));
            return (global::CAServer.Grains.Grain.ApplicationHandler.TransactionInfoDto)result;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.SerializerAttribute(typeof(global::CAServer.Grains.Grain.ApplicationHandler.CreateHolderDto))]
    internal sealed class OrleansCodeGenCAServer_Grains_Grain_ApplicationHandler_CreateHolderDtoSerializer
    {
        public OrleansCodeGenCAServer_Grains_Grain_ApplicationHandler_CreateHolderDtoSerializer(global::Orleans.Serialization.IFieldUtils fieldUtils)
        {
        }

        [global::Orleans.CodeGeneration.CopierMethodAttribute]
        public object DeepCopier(object original, global::Orleans.Serialization.ICopyContext context)
        {
            global::CAServer.Grains.Grain.ApplicationHandler.CreateHolderDto input = ((global::CAServer.Grains.Grain.ApplicationHandler.CreateHolderDto)original);
            global::CAServer.Grains.Grain.ApplicationHandler.CreateHolderDto result = new global::CAServer.Grains.Grain.ApplicationHandler.CreateHolderDto();
            context.RecordCopy(original, result);
            result.CaAddress = (global::AElf.Types.Address)context.DeepCopyInner(input.CaAddress);
            result.CaHash = (global::AElf.Types.Hash)context.DeepCopyInner(input.CaHash);
            result.ChainId = input.ChainId;
            result.Context = (global::CAServer.Hubs.HubRequestContext)context.DeepCopyInner(input.Context);
            result.GrainId = input.GrainId;
            result.GuardianInfo = (global::Portkey.Contracts.CA.GuardianInfo)context.DeepCopyInner(input.GuardianInfo);
            result.Id = input.Id;
            result.ManagerInfo = (global::Portkey.Contracts.CA.ManagerInfo)context.DeepCopyInner(input.ManagerInfo);
            return result;
        }

        [global::Orleans.CodeGeneration.SerializerMethodAttribute]
        public void Serializer(object untypedInput, global::Orleans.Serialization.ISerializationContext context, global::System.Type expected)
        {
            global::CAServer.Grains.Grain.ApplicationHandler.CreateHolderDto input = (global::CAServer.Grains.Grain.ApplicationHandler.CreateHolderDto)untypedInput;
            context.SerializeInner(input.CaAddress, typeof(global::AElf.Types.Address));
            context.SerializeInner(input.CaHash, typeof(global::AElf.Types.Hash));
            context.SerializeInner(input.ChainId, typeof(string));
            context.SerializeInner(input.Context, typeof(global::CAServer.Hubs.HubRequestContext));
            context.SerializeInner(input.GrainId, typeof(string));
            context.SerializeInner(input.GuardianInfo, typeof(global::Portkey.Contracts.CA.GuardianInfo));
            context.SerializeInner(input.Id, typeof(global::System.Guid));
            context.SerializeInner(input.ManagerInfo, typeof(global::Portkey.Contracts.CA.ManagerInfo));
        }

        [global::Orleans.CodeGeneration.DeserializerMethodAttribute]
        public object Deserializer(global::System.Type expected, global::Orleans.Serialization.IDeserializationContext context)
        {
            global::CAServer.Grains.Grain.ApplicationHandler.CreateHolderDto result = new global::CAServer.Grains.Grain.ApplicationHandler.CreateHolderDto();
            context.RecordObject(result);
            result.CaAddress = (global::AElf.Types.Address)context.DeserializeInner(typeof(global::AElf.Types.Address));
            result.CaHash = (global::AElf.Types.Hash)context.DeserializeInner(typeof(global::AElf.Types.Hash));
            result.ChainId = (string)context.DeserializeInner(typeof(string));
            result.Context = (global::CAServer.Hubs.HubRequestContext)context.DeserializeInner(typeof(global::CAServer.Hubs.HubRequestContext));
            result.GrainId = (string)context.DeserializeInner(typeof(string));
            result.GuardianInfo = (global::Portkey.Contracts.CA.GuardianInfo)context.DeserializeInner(typeof(global::Portkey.Contracts.CA.GuardianInfo));
            result.Id = (global::System.Guid)context.DeserializeInner(typeof(global::System.Guid));
            result.ManagerInfo = (global::Portkey.Contracts.CA.ManagerInfo)context.DeserializeInner(typeof(global::Portkey.Contracts.CA.ManagerInfo));
            return (global::CAServer.Grains.Grain.ApplicationHandler.CreateHolderDto)result;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.SerializerAttribute(typeof(global::CAServer.Grains.Grain.ApplicationHandler.SocialRecoveryDto))]
    internal sealed class OrleansCodeGenCAServer_Grains_Grain_ApplicationHandler_SocialRecoveryDtoSerializer
    {
        public OrleansCodeGenCAServer_Grains_Grain_ApplicationHandler_SocialRecoveryDtoSerializer(global::Orleans.Serialization.IFieldUtils fieldUtils)
        {
        }

        [global::Orleans.CodeGeneration.CopierMethodAttribute]
        public object DeepCopier(object original, global::Orleans.Serialization.ICopyContext context)
        {
            global::CAServer.Grains.Grain.ApplicationHandler.SocialRecoveryDto input = ((global::CAServer.Grains.Grain.ApplicationHandler.SocialRecoveryDto)original);
            global::CAServer.Grains.Grain.ApplicationHandler.SocialRecoveryDto result = new global::CAServer.Grains.Grain.ApplicationHandler.SocialRecoveryDto();
            context.RecordCopy(original, result);
            result.CaAddress = (global::AElf.Types.Address)context.DeepCopyInner(input.CaAddress);
            result.CaHash = (global::AElf.Types.Hash)context.DeepCopyInner(input.CaHash);
            result.ChainId = input.ChainId;
            result.Context = (global::CAServer.Hubs.HubRequestContext)context.DeepCopyInner(input.Context);
            result.GrainId = input.GrainId;
            result.GuardianApproved = (global::System.Collections.Generic.List<global::Portkey.Contracts.CA.GuardianInfo>)context.DeepCopyInner(input.GuardianApproved);
            result.Id = input.Id;
            result.LoginGuardianIdentifierHash = (global::AElf.Types.Hash)context.DeepCopyInner(input.LoginGuardianIdentifierHash);
            result.ManagerInfo = (global::Portkey.Contracts.CA.ManagerInfo)context.DeepCopyInner(input.ManagerInfo);
            return result;
        }

        [global::Orleans.CodeGeneration.SerializerMethodAttribute]
        public void Serializer(object untypedInput, global::Orleans.Serialization.ISerializationContext context, global::System.Type expected)
        {
            global::CAServer.Grains.Grain.ApplicationHandler.SocialRecoveryDto input = (global::CAServer.Grains.Grain.ApplicationHandler.SocialRecoveryDto)untypedInput;
            context.SerializeInner(input.CaAddress, typeof(global::AElf.Types.Address));
            context.SerializeInner(input.CaHash, typeof(global::AElf.Types.Hash));
            context.SerializeInner(input.ChainId, typeof(string));
            context.SerializeInner(input.Context, typeof(global::CAServer.Hubs.HubRequestContext));
            context.SerializeInner(input.GrainId, typeof(string));
            context.SerializeInner(input.GuardianApproved, typeof(global::System.Collections.Generic.List<global::Portkey.Contracts.CA.GuardianInfo>));
            context.SerializeInner(input.Id, typeof(global::System.Guid));
            context.SerializeInner(input.LoginGuardianIdentifierHash, typeof(global::AElf.Types.Hash));
            context.SerializeInner(input.ManagerInfo, typeof(global::Portkey.Contracts.CA.ManagerInfo));
        }

        [global::Orleans.CodeGeneration.DeserializerMethodAttribute]
        public object Deserializer(global::System.Type expected, global::Orleans.Serialization.IDeserializationContext context)
        {
            global::CAServer.Grains.Grain.ApplicationHandler.SocialRecoveryDto result = new global::CAServer.Grains.Grain.ApplicationHandler.SocialRecoveryDto();
            context.RecordObject(result);
            result.CaAddress = (global::AElf.Types.Address)context.DeserializeInner(typeof(global::AElf.Types.Address));
            result.CaHash = (global::AElf.Types.Hash)context.DeserializeInner(typeof(global::AElf.Types.Hash));
            result.ChainId = (string)context.DeserializeInner(typeof(string));
            result.Context = (global::CAServer.Hubs.HubRequestContext)context.DeserializeInner(typeof(global::CAServer.Hubs.HubRequestContext));
            result.GrainId = (string)context.DeserializeInner(typeof(string));
            result.GuardianApproved = (global::System.Collections.Generic.List<global::Portkey.Contracts.CA.GuardianInfo>)context.DeserializeInner(typeof(global::System.Collections.Generic.List<global::Portkey.Contracts.CA.GuardianInfo>));
            result.Id = (global::System.Guid)context.DeserializeInner(typeof(global::System.Guid));
            result.LoginGuardianIdentifierHash = (global::AElf.Types.Hash)context.DeserializeInner(typeof(global::AElf.Types.Hash));
            result.ManagerInfo = (global::Portkey.Contracts.CA.ManagerInfo)context.DeserializeInner(typeof(global::Portkey.Contracts.CA.ManagerInfo));
            return (global::CAServer.Grains.Grain.ApplicationHandler.SocialRecoveryDto)result;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.SerializerAttribute(typeof(global::CAServer.Grains.Grain.ApplicationHandler.ContractDtoBase))]
    internal sealed class OrleansCodeGenCAServer_Grains_Grain_ApplicationHandler_ContractDtoBaseSerializer
    {
        public OrleansCodeGenCAServer_Grains_Grain_ApplicationHandler_ContractDtoBaseSerializer(global::Orleans.Serialization.IFieldUtils fieldUtils)
        {
        }

        [global::Orleans.CodeGeneration.CopierMethodAttribute]
        public object DeepCopier(object original, global::Orleans.Serialization.ICopyContext context)
        {
            global::CAServer.Grains.Grain.ApplicationHandler.ContractDtoBase input = ((global::CAServer.Grains.Grain.ApplicationHandler.ContractDtoBase)original);
            global::CAServer.Grains.Grain.ApplicationHandler.ContractDtoBase result = new global::CAServer.Grains.Grain.ApplicationHandler.ContractDtoBase();
            context.RecordCopy(original, result);
            result.CaAddress = (global::AElf.Types.Address)context.DeepCopyInner(input.CaAddress);
            result.CaHash = (global::AElf.Types.Hash)context.DeepCopyInner(input.CaHash);
            result.ChainId = input.ChainId;
            result.Context = (global::CAServer.Hubs.HubRequestContext)context.DeepCopyInner(input.Context);
            result.GrainId = input.GrainId;
            result.Id = input.Id;
            result.ManagerInfo = (global::Portkey.Contracts.CA.ManagerInfo)context.DeepCopyInner(input.ManagerInfo);
            return result;
        }

        [global::Orleans.CodeGeneration.SerializerMethodAttribute]
        public void Serializer(object untypedInput, global::Orleans.Serialization.ISerializationContext context, global::System.Type expected)
        {
            global::CAServer.Grains.Grain.ApplicationHandler.ContractDtoBase input = (global::CAServer.Grains.Grain.ApplicationHandler.ContractDtoBase)untypedInput;
            context.SerializeInner(input.CaAddress, typeof(global::AElf.Types.Address));
            context.SerializeInner(input.CaHash, typeof(global::AElf.Types.Hash));
            context.SerializeInner(input.ChainId, typeof(string));
            context.SerializeInner(input.Context, typeof(global::CAServer.Hubs.HubRequestContext));
            context.SerializeInner(input.GrainId, typeof(string));
            context.SerializeInner(input.Id, typeof(global::System.Guid));
            context.SerializeInner(input.ManagerInfo, typeof(global::Portkey.Contracts.CA.ManagerInfo));
        }

        [global::Orleans.CodeGeneration.DeserializerMethodAttribute]
        public object Deserializer(global::System.Type expected, global::Orleans.Serialization.IDeserializationContext context)
        {
            global::CAServer.Grains.Grain.ApplicationHandler.ContractDtoBase result = new global::CAServer.Grains.Grain.ApplicationHandler.ContractDtoBase();
            context.RecordObject(result);
            result.CaAddress = (global::AElf.Types.Address)context.DeserializeInner(typeof(global::AElf.Types.Address));
            result.CaHash = (global::AElf.Types.Hash)context.DeserializeInner(typeof(global::AElf.Types.Hash));
            result.ChainId = (string)context.DeserializeInner(typeof(string));
            result.Context = (global::CAServer.Hubs.HubRequestContext)context.DeserializeInner(typeof(global::CAServer.Hubs.HubRequestContext));
            result.GrainId = (string)context.DeserializeInner(typeof(string));
            result.Id = (global::System.Guid)context.DeserializeInner(typeof(global::System.Guid));
            result.ManagerInfo = (global::Portkey.Contracts.CA.ManagerInfo)context.DeserializeInner(typeof(global::Portkey.Contracts.CA.ManagerInfo));
            return (global::CAServer.Grains.Grain.ApplicationHandler.ContractDtoBase)result;
        }
    }
}

namespace CAServer.Grains.Grain.Chain
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::Orleans.CodeGeneration.MethodInvokerAttribute(typeof(global::CAServer.Grains.Grain.Chain.IChainGrain), unchecked((int)0xB380DB20)), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]
    internal class OrleansCodeGenChainGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        public async global::System.Threading.Tasks.Task<object> Invoke(global::Orleans.Runtime.IAddressable grain, global::Orleans.CodeGeneration.InvokeMethodRequest request)
        {
            int interfaceId = request.InterfaceId;
            int methodId = request.MethodId;
            var arguments = request.Arguments;
            switch (interfaceId)
            {
                case unchecked((int)0xB380DB20):
                {
                    var casted = ((global::CAServer.Grains.Grain.Chain.IChainGrain)grain);
                    switch (methodId)
                    {
                        case unchecked((int)0xD690DF99):
                            return await casted.AddChainAsync((global::CAServer.Grains.Grain.Account.ChainGrainDto)arguments[0]);
                        case unchecked((int)0x8FFBA2FB):
                            return await casted.UpdateChainAsync((global::CAServer.Grains.Grain.Account.ChainGrainDto)arguments[0]);
                        case (int)0x7FD895D5:
                            return await casted.DeleteChainAsync();
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        public int InterfaceId => unchecked((int)0xB380DB20);
        public ushort InterfaceVersion => 0;
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.SerializableAttribute, global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.GrainReferenceAttribute(typeof(global::CAServer.Grains.Grain.Chain.IChainGrain))]
    internal class OrleansCodeGenChainGrainReference : global::Orleans.Runtime.GrainReference, global::CAServer.Grains.Grain.Chain.IChainGrain
    {
        OrleansCodeGenChainGrainReference(global::Orleans.Runtime.GrainReference other) : base(other)
        {
        }

        OrleansCodeGenChainGrainReference(global::Orleans.Runtime.GrainReference other, global::Orleans.CodeGeneration.InvokeMethodOptions invokeMethodOptions) : base(other, invokeMethodOptions)
        {
        }

        OrleansCodeGenChainGrainReference(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
        }

        public override int InterfaceId => unchecked((int)0xB380DB20);
        public override ushort InterfaceVersion => 0;
        public override string InterfaceName => "IChainGrain";
        public override bool IsCompatible(int interfaceId) => interfaceId == unchecked((int)0xB380DB20);
        public override string GetMethodName(int interfaceId, int methodId)
        {
            switch (interfaceId)
            {
                case unchecked((int)0xB380DB20):
                {
                    switch (methodId)
                    {
                        case unchecked((int)0xD690DF99):
                            return "AddChainAsync";
                        case unchecked((int)0x8FFBA2FB):
                            return "UpdateChainAsync";
                        case (int)0x7FD895D5:
                            return "DeleteChainAsync";
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        global::System.Threading.Tasks.Task<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Account.ChainGrainDto>> global::CAServer.Grains.Grain.Chain.IChainGrain.AddChainAsync(global::CAServer.Grains.Grain.Account.ChainGrainDto chainGrainDto0)
        {
            return base.InvokeMethodAsync<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Account.ChainGrainDto>>(unchecked((int)0xD690DF99), new object[]{chainGrainDto0});
        }

        global::System.Threading.Tasks.Task<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Account.ChainGrainDto>> global::CAServer.Grains.Grain.Chain.IChainGrain.UpdateChainAsync(global::CAServer.Grains.Grain.Account.ChainGrainDto chainGrainDto0)
        {
            return base.InvokeMethodAsync<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Account.ChainGrainDto>>(unchecked((int)0x8FFBA2FB), new object[]{chainGrainDto0});
        }

        global::System.Threading.Tasks.Task<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Account.ChainGrainDto>> global::CAServer.Grains.Grain.Chain.IChainGrain.DeleteChainAsync()
        {
            return base.InvokeMethodAsync<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Account.ChainGrainDto>>((int)0x7FD895D5, null);
        }
    }
}

namespace CAServer.Grains.Grain.Contacts
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::Orleans.CodeGeneration.MethodInvokerAttribute(typeof(global::CAServer.Grains.Grain.Contacts.ICAHolderGrain), (int)0x47BE019C), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]
    internal class OrleansCodeGenCAHolderGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        public async global::System.Threading.Tasks.Task<object> Invoke(global::Orleans.Runtime.IAddressable grain, global::Orleans.CodeGeneration.InvokeMethodRequest request)
        {
            int interfaceId = request.InterfaceId;
            int methodId = request.MethodId;
            var arguments = request.Arguments;
            switch (interfaceId)
            {
                case (int)0x47BE019C:
                {
                    var casted = ((global::CAServer.Grains.Grain.Contacts.ICAHolderGrain)grain);
                    switch (methodId)
                    {
                        case (int)0x2136E9D4:
                            return await casted.AddHolderAsync((global::CAServer.Grains.Grain.Contacts.CAHolderGrainDto)arguments[0]);
                        case unchecked((int)0xA1691129):
                            return await casted.UpdateNicknameAsync((string)arguments[0]);
                        case unchecked((int)0xFB945E1A):
                            return await casted.GetCAHashAsync();
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        public int InterfaceId => (int)0x47BE019C;
        public ushort InterfaceVersion => 0;
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.SerializableAttribute, global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.GrainReferenceAttribute(typeof(global::CAServer.Grains.Grain.Contacts.ICAHolderGrain))]
    internal class OrleansCodeGenCAHolderGrainReference : global::Orleans.Runtime.GrainReference, global::CAServer.Grains.Grain.Contacts.ICAHolderGrain
    {
        OrleansCodeGenCAHolderGrainReference(global::Orleans.Runtime.GrainReference other) : base(other)
        {
        }

        OrleansCodeGenCAHolderGrainReference(global::Orleans.Runtime.GrainReference other, global::Orleans.CodeGeneration.InvokeMethodOptions invokeMethodOptions) : base(other, invokeMethodOptions)
        {
        }

        OrleansCodeGenCAHolderGrainReference(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
        }

        public override int InterfaceId => (int)0x47BE019C;
        public override ushort InterfaceVersion => 0;
        public override string InterfaceName => "ICAHolderGrain";
        public override bool IsCompatible(int interfaceId) => interfaceId == (int)0x47BE019C;
        public override string GetMethodName(int interfaceId, int methodId)
        {
            switch (interfaceId)
            {
                case (int)0x47BE019C:
                {
                    switch (methodId)
                    {
                        case (int)0x2136E9D4:
                            return "AddHolderAsync";
                        case unchecked((int)0xA1691129):
                            return "UpdateNicknameAsync";
                        case unchecked((int)0xFB945E1A):
                            return "GetCAHashAsync";
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        global::System.Threading.Tasks.Task<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Contacts.CAHolderGrainDto>> global::CAServer.Grains.Grain.Contacts.ICAHolderGrain.AddHolderAsync(global::CAServer.Grains.Grain.Contacts.CAHolderGrainDto caHolderDto0)
        {
            return base.InvokeMethodAsync<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Contacts.CAHolderGrainDto>>((int)0x2136E9D4, new object[]{caHolderDto0});
        }

        global::System.Threading.Tasks.Task<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Contacts.CAHolderGrainDto>> global::CAServer.Grains.Grain.Contacts.ICAHolderGrain.UpdateNicknameAsync(string nickname0)
        {
            return base.InvokeMethodAsync<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Contacts.CAHolderGrainDto>>(unchecked((int)0xA1691129), new object[]{nickname0});
        }

        global::System.Threading.Tasks.Task<string> global::CAServer.Grains.Grain.Contacts.ICAHolderGrain.GetCAHashAsync()
        {
            return base.InvokeMethodAsync<string>(unchecked((int)0xFB945E1A), null);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::Orleans.CodeGeneration.MethodInvokerAttribute(typeof(global::CAServer.Grains.Grain.Contacts.IContactGrain), unchecked((int)0xDC1C828A)), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]
    internal class OrleansCodeGenContactGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        public async global::System.Threading.Tasks.Task<object> Invoke(global::Orleans.Runtime.IAddressable grain, global::Orleans.CodeGeneration.InvokeMethodRequest request)
        {
            int interfaceId = request.InterfaceId;
            int methodId = request.MethodId;
            var arguments = request.Arguments;
            switch (interfaceId)
            {
                case unchecked((int)0xDC1C828A):
                {
                    var casted = ((global::CAServer.Grains.Grain.Contacts.IContactGrain)grain);
                    switch (methodId)
                    {
                        case unchecked((int)0x803438BE):
                            return await casted.AddContactAsync((global::System.Guid)arguments[0], (global::CAServer.Grains.Grain.Contacts.ContactGrainDto)arguments[1]);
                        case (int)0x16E6D2B2:
                            return await casted.UpdateContactAsync((global::System.Guid)arguments[0], (global::CAServer.Grains.Grain.Contacts.ContactGrainDto)arguments[1]);
                        case unchecked((int)0xD4194635):
                            return await casted.DeleteContactAsync((global::System.Guid)arguments[0]);
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        public int InterfaceId => unchecked((int)0xDC1C828A);
        public ushort InterfaceVersion => 0;
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.SerializableAttribute, global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.GrainReferenceAttribute(typeof(global::CAServer.Grains.Grain.Contacts.IContactGrain))]
    internal class OrleansCodeGenContactGrainReference : global::Orleans.Runtime.GrainReference, global::CAServer.Grains.Grain.Contacts.IContactGrain
    {
        OrleansCodeGenContactGrainReference(global::Orleans.Runtime.GrainReference other) : base(other)
        {
        }

        OrleansCodeGenContactGrainReference(global::Orleans.Runtime.GrainReference other, global::Orleans.CodeGeneration.InvokeMethodOptions invokeMethodOptions) : base(other, invokeMethodOptions)
        {
        }

        OrleansCodeGenContactGrainReference(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
        }

        public override int InterfaceId => unchecked((int)0xDC1C828A);
        public override ushort InterfaceVersion => 0;
        public override string InterfaceName => "IContactGrain";
        public override bool IsCompatible(int interfaceId) => interfaceId == unchecked((int)0xDC1C828A);
        public override string GetMethodName(int interfaceId, int methodId)
        {
            switch (interfaceId)
            {
                case unchecked((int)0xDC1C828A):
                {
                    switch (methodId)
                    {
                        case unchecked((int)0x803438BE):
                            return "AddContactAsync";
                        case (int)0x16E6D2B2:
                            return "UpdateContactAsync";
                        case unchecked((int)0xD4194635):
                            return "DeleteContactAsync";
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        global::System.Threading.Tasks.Task<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Contacts.ContactGrainDto>> global::CAServer.Grains.Grain.Contacts.IContactGrain.AddContactAsync(global::System.Guid userId0, global::CAServer.Grains.Grain.Contacts.ContactGrainDto contactDto1)
        {
            return base.InvokeMethodAsync<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Contacts.ContactGrainDto>>(unchecked((int)0x803438BE), new object[]{userId0, contactDto1});
        }

        global::System.Threading.Tasks.Task<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Contacts.ContactGrainDto>> global::CAServer.Grains.Grain.Contacts.IContactGrain.UpdateContactAsync(global::System.Guid userId0, global::CAServer.Grains.Grain.Contacts.ContactGrainDto contactDto1)
        {
            return base.InvokeMethodAsync<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Contacts.ContactGrainDto>>((int)0x16E6D2B2, new object[]{userId0, contactDto1});
        }

        global::System.Threading.Tasks.Task<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Contacts.ContactGrainDto>> global::CAServer.Grains.Grain.Contacts.IContactGrain.DeleteContactAsync(global::System.Guid userId0)
        {
            return base.InvokeMethodAsync<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Contacts.ContactGrainDto>>(unchecked((int)0xD4194635), new object[]{userId0});
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::Orleans.CodeGeneration.MethodInvokerAttribute(typeof(global::CAServer.Grains.Grain.Contacts.IContactNameGrain), (int)0x61BB0A72), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]
    internal class OrleansCodeGenContactNameGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        public async global::System.Threading.Tasks.Task<object> Invoke(global::Orleans.Runtime.IAddressable grain, global::Orleans.CodeGeneration.InvokeMethodRequest request)
        {
            int interfaceId = request.InterfaceId;
            int methodId = request.MethodId;
            var arguments = request.Arguments;
            switch (interfaceId)
            {
                case (int)0x61BB0A72:
                {
                    var casted = ((global::CAServer.Grains.Grain.Contacts.IContactNameGrain)grain);
                    switch (methodId)
                    {
                        case unchecked((int)0x8F414250):
                            return await casted.AddContactNameAsync((global::System.Guid)arguments[0], (string)arguments[1]);
                        case (int)0x3A836AE8:
                            await casted.DeleteContactNameAsync((global::System.Guid)arguments[0], (string)arguments[1]);
                            return null;
                        case (int)0xEBDC11F:
                            return await casted.IsNameAvailableAsync((global::System.Guid)arguments[0], (string)arguments[1]);
                        case (int)0x785EC234:
                            return await casted.IsNameExist((string)arguments[0]);
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        public int InterfaceId => (int)0x61BB0A72;
        public ushort InterfaceVersion => 0;
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.SerializableAttribute, global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.GrainReferenceAttribute(typeof(global::CAServer.Grains.Grain.Contacts.IContactNameGrain))]
    internal class OrleansCodeGenContactNameGrainReference : global::Orleans.Runtime.GrainReference, global::CAServer.Grains.Grain.Contacts.IContactNameGrain
    {
        OrleansCodeGenContactNameGrainReference(global::Orleans.Runtime.GrainReference other) : base(other)
        {
        }

        OrleansCodeGenContactNameGrainReference(global::Orleans.Runtime.GrainReference other, global::Orleans.CodeGeneration.InvokeMethodOptions invokeMethodOptions) : base(other, invokeMethodOptions)
        {
        }

        OrleansCodeGenContactNameGrainReference(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
        }

        public override int InterfaceId => (int)0x61BB0A72;
        public override ushort InterfaceVersion => 0;
        public override string InterfaceName => "IContactNameGrain";
        public override bool IsCompatible(int interfaceId) => interfaceId == (int)0x61BB0A72;
        public override string GetMethodName(int interfaceId, int methodId)
        {
            switch (interfaceId)
            {
                case (int)0x61BB0A72:
                {
                    switch (methodId)
                    {
                        case unchecked((int)0x8F414250):
                            return "AddContactNameAsync";
                        case (int)0x3A836AE8:
                            return "DeleteContactNameAsync";
                        case (int)0xEBDC11F:
                            return "IsNameAvailableAsync";
                        case (int)0x785EC234:
                            return "IsNameExist";
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        global::System.Threading.Tasks.Task<bool> global::CAServer.Grains.Grain.Contacts.IContactNameGrain.AddContactNameAsync(global::System.Guid userId0, string name1)
        {
            return base.InvokeMethodAsync<bool>(unchecked((int)0x8F414250), new object[]{userId0, name1});
        }

        global::System.Threading.Tasks.Task global::CAServer.Grains.Grain.Contacts.IContactNameGrain.DeleteContactNameAsync(global::System.Guid userId0, string name1)
        {
            return base.InvokeMethodAsync<object>((int)0x3A836AE8, new object[]{userId0, name1});
        }

        global::System.Threading.Tasks.Task<bool> global::CAServer.Grains.Grain.Contacts.IContactNameGrain.IsNameAvailableAsync(global::System.Guid userId0, string name1)
        {
            return base.InvokeMethodAsync<bool>((int)0xEBDC11F, new object[]{userId0, name1});
        }

        global::System.Threading.Tasks.Task<bool> global::CAServer.Grains.Grain.Contacts.IContactNameGrain.IsNameExist(string name0)
        {
            return base.InvokeMethodAsync<bool>((int)0x785EC234, new object[]{name0});
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.SerializerAttribute(typeof(global::CAServer.Grains.Grain.Contacts.CAHolderGrainDto))]
    internal sealed class OrleansCodeGenCAServer_Grains_Grain_Contacts_CAHolderGrainDtoSerializer
    {
        public OrleansCodeGenCAServer_Grains_Grain_Contacts_CAHolderGrainDtoSerializer(global::Orleans.Serialization.IFieldUtils fieldUtils)
        {
        }

        [global::Orleans.CodeGeneration.CopierMethodAttribute]
        public object DeepCopier(object original, global::Orleans.Serialization.ICopyContext context)
        {
            global::CAServer.Grains.Grain.Contacts.CAHolderGrainDto input = ((global::CAServer.Grains.Grain.Contacts.CAHolderGrainDto)original);
            global::CAServer.Grains.Grain.Contacts.CAHolderGrainDto result = new global::CAServer.Grains.Grain.Contacts.CAHolderGrainDto();
            context.RecordCopy(original, result);
            result.CaHash = input.CaHash;
            result.CreateTime = input.CreateTime;
            result.Id = input.Id;
            result.Nickname = input.Nickname;
            result.UserId = input.UserId;
            return result;
        }

        [global::Orleans.CodeGeneration.SerializerMethodAttribute]
        public void Serializer(object untypedInput, global::Orleans.Serialization.ISerializationContext context, global::System.Type expected)
        {
            global::CAServer.Grains.Grain.Contacts.CAHolderGrainDto input = (global::CAServer.Grains.Grain.Contacts.CAHolderGrainDto)untypedInput;
            context.SerializeInner(input.CaHash, typeof(string));
            context.SerializeInner(input.CreateTime, typeof(global::System.DateTime));
            context.SerializeInner(input.Id, typeof(global::System.Guid));
            context.SerializeInner(input.Nickname, typeof(string));
            context.SerializeInner(input.UserId, typeof(global::System.Guid));
        }

        [global::Orleans.CodeGeneration.DeserializerMethodAttribute]
        public object Deserializer(global::System.Type expected, global::Orleans.Serialization.IDeserializationContext context)
        {
            global::CAServer.Grains.Grain.Contacts.CAHolderGrainDto result = new global::CAServer.Grains.Grain.Contacts.CAHolderGrainDto();
            context.RecordObject(result);
            result.CaHash = (string)context.DeserializeInner(typeof(string));
            result.CreateTime = (global::System.DateTime)context.DeserializeInner(typeof(global::System.DateTime));
            result.Id = (global::System.Guid)context.DeserializeInner(typeof(global::System.Guid));
            result.Nickname = (string)context.DeserializeInner(typeof(string));
            result.UserId = (global::System.Guid)context.DeserializeInner(typeof(global::System.Guid));
            return (global::CAServer.Grains.Grain.Contacts.CAHolderGrainDto)result;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.SerializerAttribute(typeof(global::CAServer.Grains.Grain.Contacts.ContactGrainDto))]
    internal sealed class OrleansCodeGenCAServer_Grains_Grain_Contacts_ContactGrainDtoSerializer
    {
        public OrleansCodeGenCAServer_Grains_Grain_Contacts_ContactGrainDtoSerializer(global::Orleans.Serialization.IFieldUtils fieldUtils)
        {
        }

        [global::Orleans.CodeGeneration.CopierMethodAttribute]
        public object DeepCopier(object original, global::Orleans.Serialization.ICopyContext context)
        {
            global::CAServer.Grains.Grain.Contacts.ContactGrainDto input = ((global::CAServer.Grains.Grain.Contacts.ContactGrainDto)original);
            global::CAServer.Grains.Grain.Contacts.ContactGrainDto result = new global::CAServer.Grains.Grain.Contacts.ContactGrainDto();
            context.RecordCopy(original, result);
            result.Addresses = (global::System.Collections.Generic.List<global::CAServer.Contacts.ContactAddressDto>)context.DeepCopyInner(input.Addresses);
            result.Id = input.Id;
            result.Index = input.Index;
            result.IsDeleted = input.IsDeleted;
            result.ModificationTime = input.ModificationTime;
            result.Name = input.Name;
            result.UserId = input.UserId;
            return result;
        }

        [global::Orleans.CodeGeneration.SerializerMethodAttribute]
        public void Serializer(object untypedInput, global::Orleans.Serialization.ISerializationContext context, global::System.Type expected)
        {
            global::CAServer.Grains.Grain.Contacts.ContactGrainDto input = (global::CAServer.Grains.Grain.Contacts.ContactGrainDto)untypedInput;
            context.SerializeInner(input.Addresses, typeof(global::System.Collections.Generic.List<global::CAServer.Contacts.ContactAddressDto>));
            context.SerializeInner(input.Id, typeof(global::System.Guid));
            context.SerializeInner(input.Index, typeof(string));
            context.SerializeInner(input.IsDeleted, typeof(bool));
            context.SerializeInner(input.ModificationTime, typeof(long));
            context.SerializeInner(input.Name, typeof(string));
            context.SerializeInner(input.UserId, typeof(global::System.Guid));
        }

        [global::Orleans.CodeGeneration.DeserializerMethodAttribute]
        public object Deserializer(global::System.Type expected, global::Orleans.Serialization.IDeserializationContext context)
        {
            global::CAServer.Grains.Grain.Contacts.ContactGrainDto result = new global::CAServer.Grains.Grain.Contacts.ContactGrainDto();
            context.RecordObject(result);
            result.Addresses = (global::System.Collections.Generic.List<global::CAServer.Contacts.ContactAddressDto>)context.DeserializeInner(typeof(global::System.Collections.Generic.List<global::CAServer.Contacts.ContactAddressDto>));
            result.Id = (global::System.Guid)context.DeserializeInner(typeof(global::System.Guid));
            result.Index = (string)context.DeserializeInner(typeof(string));
            result.IsDeleted = (bool)context.DeserializeInner(typeof(bool));
            result.ModificationTime = (long)context.DeserializeInner(typeof(long));
            result.Name = (string)context.DeserializeInner(typeof(string));
            result.UserId = (global::System.Guid)context.DeserializeInner(typeof(global::System.Guid));
            return (global::CAServer.Grains.Grain.Contacts.ContactGrainDto)result;
        }
    }
}

namespace CAServer.Grains.Grain.CrossChain
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::Orleans.CodeGeneration.MethodInvokerAttribute(typeof(global::CAServer.Grains.Grain.CrossChain.ICrossChainTransferGrain), (int)0x60B5CC7C), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]
    internal class OrleansCodeGenCrossChainTransferGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        public async global::System.Threading.Tasks.Task<object> Invoke(global::Orleans.Runtime.IAddressable grain, global::Orleans.CodeGeneration.InvokeMethodRequest request)
        {
            int interfaceId = request.InterfaceId;
            int methodId = request.MethodId;
            var arguments = request.Arguments;
            switch (interfaceId)
            {
                case (int)0x60B5CC7C:
                {
                    var casted = ((global::CAServer.Grains.Grain.CrossChain.ICrossChainTransferGrain)grain);
                    switch (methodId)
                    {
                        case (int)0x1F002AC1:
                            return await casted.GetUnFinishedTransfersAsync();
                        case unchecked((int)0x91136658):
                            return await casted.GetLastedProcessedHeightAsync();
                        case (int)0x2E3FFDA9:
                            await casted.AddTransfersAsync((long)arguments[0], (global::System.Collections.Generic.List<global::CAServer.Grains.Grain.CrossChain.CrossChainTransferDto>)arguments[1]);
                            return null;
                        case (int)0x6667FED7:
                            await casted.UpdateTransferAsync((global::CAServer.Grains.Grain.CrossChain.CrossChainTransferDto)arguments[0]);
                            return null;
                        case unchecked((int)0xCE28EE3A):
                            return await casted.GetTransactionDicAsync();
                        case (int)0x63102B1B:
                            await casted.UpdateTransfersDicAsync((long)arguments[0], (global::System.Collections.Generic.Dictionary<long, string>)arguments[1]);
                            return null;
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        public int InterfaceId => (int)0x60B5CC7C;
        public ushort InterfaceVersion => 0;
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.SerializableAttribute, global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.GrainReferenceAttribute(typeof(global::CAServer.Grains.Grain.CrossChain.ICrossChainTransferGrain))]
    internal class OrleansCodeGenCrossChainTransferGrainReference : global::Orleans.Runtime.GrainReference, global::CAServer.Grains.Grain.CrossChain.ICrossChainTransferGrain
    {
        OrleansCodeGenCrossChainTransferGrainReference(global::Orleans.Runtime.GrainReference other) : base(other)
        {
        }

        OrleansCodeGenCrossChainTransferGrainReference(global::Orleans.Runtime.GrainReference other, global::Orleans.CodeGeneration.InvokeMethodOptions invokeMethodOptions) : base(other, invokeMethodOptions)
        {
        }

        OrleansCodeGenCrossChainTransferGrainReference(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
        }

        public override int InterfaceId => (int)0x60B5CC7C;
        public override ushort InterfaceVersion => 0;
        public override string InterfaceName => "ICrossChainTransferGrain";
        public override bool IsCompatible(int interfaceId) => interfaceId == (int)0x60B5CC7C;
        public override string GetMethodName(int interfaceId, int methodId)
        {
            switch (interfaceId)
            {
                case (int)0x60B5CC7C:
                {
                    switch (methodId)
                    {
                        case (int)0x1F002AC1:
                            return "GetUnFinishedTransfersAsync";
                        case unchecked((int)0x91136658):
                            return "GetLastedProcessedHeightAsync";
                        case (int)0x2E3FFDA9:
                            return "AddTransfersAsync";
                        case (int)0x6667FED7:
                            return "UpdateTransferAsync";
                        case unchecked((int)0xCE28EE3A):
                            return "GetTransactionDicAsync";
                        case (int)0x63102B1B:
                            return "UpdateTransfersDicAsync";
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        global::System.Threading.Tasks.Task<global::CAServer.Grains.Grain.GrainResultDto<global::System.Collections.Generic.List<global::CAServer.Grains.Grain.CrossChain.CrossChainTransferDto>>> global::CAServer.Grains.Grain.CrossChain.ICrossChainTransferGrain.GetUnFinishedTransfersAsync()
        {
            return base.InvokeMethodAsync<global::CAServer.Grains.Grain.GrainResultDto<global::System.Collections.Generic.List<global::CAServer.Grains.Grain.CrossChain.CrossChainTransferDto>>>((int)0x1F002AC1, null);
        }

        global::System.Threading.Tasks.Task<global::CAServer.Grains.Grain.GrainResultDto<long>> global::CAServer.Grains.Grain.CrossChain.ICrossChainTransferGrain.GetLastedProcessedHeightAsync()
        {
            return base.InvokeMethodAsync<global::CAServer.Grains.Grain.GrainResultDto<long>>(unchecked((int)0x91136658), null);
        }

        global::System.Threading.Tasks.Task global::CAServer.Grains.Grain.CrossChain.ICrossChainTransferGrain.AddTransfersAsync(long lastedHeight0, global::System.Collections.Generic.List<global::CAServer.Grains.Grain.CrossChain.CrossChainTransferDto> transfers1)
        {
            return base.InvokeMethodAsync<object>((int)0x2E3FFDA9, new object[]{lastedHeight0, transfers1});
        }

        global::System.Threading.Tasks.Task global::CAServer.Grains.Grain.CrossChain.ICrossChainTransferGrain.UpdateTransferAsync(global::CAServer.Grains.Grain.CrossChain.CrossChainTransferDto transfer0)
        {
            return base.InvokeMethodAsync<object>((int)0x6667FED7, new object[]{transfer0});
        }

        global::System.Threading.Tasks.Task<global::System.Collections.Generic.Dictionary<long, string>> global::CAServer.Grains.Grain.CrossChain.ICrossChainTransferGrain.GetTransactionDicAsync()
        {
            return base.InvokeMethodAsync<global::System.Collections.Generic.Dictionary<long, string>>(unchecked((int)0xCE28EE3A), null);
        }

        global::System.Threading.Tasks.Task global::CAServer.Grains.Grain.CrossChain.ICrossChainTransferGrain.UpdateTransfersDicAsync(long startHeight0, global::System.Collections.Generic.Dictionary<long, string> dic1)
        {
            return base.InvokeMethodAsync<object>((int)0x63102B1B, new object[]{startHeight0, dic1});
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.SerializerAttribute(typeof(global::CAServer.Grains.Grain.CrossChain.CrossChainTransferDto))]
    internal sealed class OrleansCodeGenCAServer_Grains_Grain_CrossChain_CrossChainTransferDtoSerializer
    {
        public OrleansCodeGenCAServer_Grains_Grain_CrossChain_CrossChainTransferDtoSerializer(global::Orleans.Serialization.IFieldUtils fieldUtils)
        {
        }

        [global::Orleans.CodeGeneration.CopierMethodAttribute]
        public object DeepCopier(object original, global::Orleans.Serialization.ICopyContext context)
        {
            global::CAServer.Grains.Grain.CrossChain.CrossChainTransferDto input = ((global::CAServer.Grains.Grain.CrossChain.CrossChainTransferDto)original);
            global::CAServer.Grains.Grain.CrossChain.CrossChainTransferDto result = new global::CAServer.Grains.Grain.CrossChain.CrossChainTransferDto();
            context.RecordCopy(original, result);
            result.FromChainId = input.FromChainId;
            result.Id = input.Id;
            result.MainChainIndexHeight = input.MainChainIndexHeight;
            result.ReceiveTransactionBlockHash = input.ReceiveTransactionBlockHash;
            result.ReceiveTransactionBlockHeight = input.ReceiveTransactionBlockHeight;
            result.ReceiveTransactionId = input.ReceiveTransactionId;
            result.RetryTimes = input.RetryTimes;
            result.Status = input.Status;
            result.ToChainId = input.ToChainId;
            result.TransferTransactionBlockHash = input.TransferTransactionBlockHash;
            result.TransferTransactionHeight = input.TransferTransactionHeight;
            result.TransferTransactionId = input.TransferTransactionId;
            return result;
        }

        [global::Orleans.CodeGeneration.SerializerMethodAttribute]
        public void Serializer(object untypedInput, global::Orleans.Serialization.ISerializationContext context, global::System.Type expected)
        {
            global::CAServer.Grains.Grain.CrossChain.CrossChainTransferDto input = (global::CAServer.Grains.Grain.CrossChain.CrossChainTransferDto)untypedInput;
            context.SerializeInner(input.FromChainId, typeof(string));
            context.SerializeInner(input.Id, typeof(string));
            context.SerializeInner(input.MainChainIndexHeight, typeof(long));
            context.SerializeInner(input.ReceiveTransactionBlockHash, typeof(string));
            context.SerializeInner(input.ReceiveTransactionBlockHeight, typeof(long));
            context.SerializeInner(input.ReceiveTransactionId, typeof(string));
            context.SerializeInner(input.RetryTimes, typeof(int));
            context.SerializeInner(input.Status, typeof(global::CAServer.Grains.State.CrossChain.CrossChainStatus));
            context.SerializeInner(input.ToChainId, typeof(string));
            context.SerializeInner(input.TransferTransactionBlockHash, typeof(string));
            context.SerializeInner(input.TransferTransactionHeight, typeof(long));
            context.SerializeInner(input.TransferTransactionId, typeof(string));
        }

        [global::Orleans.CodeGeneration.DeserializerMethodAttribute]
        public object Deserializer(global::System.Type expected, global::Orleans.Serialization.IDeserializationContext context)
        {
            global::CAServer.Grains.Grain.CrossChain.CrossChainTransferDto result = new global::CAServer.Grains.Grain.CrossChain.CrossChainTransferDto();
            context.RecordObject(result);
            result.FromChainId = (string)context.DeserializeInner(typeof(string));
            result.Id = (string)context.DeserializeInner(typeof(string));
            result.MainChainIndexHeight = (long)context.DeserializeInner(typeof(long));
            result.ReceiveTransactionBlockHash = (string)context.DeserializeInner(typeof(string));
            result.ReceiveTransactionBlockHeight = (long)context.DeserializeInner(typeof(long));
            result.ReceiveTransactionId = (string)context.DeserializeInner(typeof(string));
            result.RetryTimes = (int)context.DeserializeInner(typeof(int));
            result.Status = (global::CAServer.Grains.State.CrossChain.CrossChainStatus)context.DeserializeInner(typeof(global::CAServer.Grains.State.CrossChain.CrossChainStatus));
            result.ToChainId = (string)context.DeserializeInner(typeof(string));
            result.TransferTransactionBlockHash = (string)context.DeserializeInner(typeof(string));
            result.TransferTransactionHeight = (long)context.DeserializeInner(typeof(long));
            result.TransferTransactionId = (string)context.DeserializeInner(typeof(string));
            return (global::CAServer.Grains.Grain.CrossChain.CrossChainTransferDto)result;
        }
    }
}

namespace CAServer.Grains.Grain.Device
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::Orleans.CodeGeneration.MethodInvokerAttribute(typeof(global::CAServer.Grains.Grain.Device.IDeviceGrain), (int)0x4B6EC0F4), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]
    internal class OrleansCodeGenDeviceGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        public async global::System.Threading.Tasks.Task<object> Invoke(global::Orleans.Runtime.IAddressable grain, global::Orleans.CodeGeneration.InvokeMethodRequest request)
        {
            int interfaceId = request.InterfaceId;
            int methodId = request.MethodId;
            var arguments = request.Arguments;
            switch (interfaceId)
            {
                case (int)0x4B6EC0F4:
                {
                    var casted = ((global::CAServer.Grains.Grain.Device.IDeviceGrain)grain);
                    switch (methodId)
                    {
                        case (int)0x6713676:
                            return await casted.GetOrGenerateSaltAsync();
                        case unchecked((int)0xDA6F59C0):
                            await casted.SetSaltAsync((string)arguments[0]);
                            return null;
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        public int InterfaceId => (int)0x4B6EC0F4;
        public ushort InterfaceVersion => 0;
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.SerializableAttribute, global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.GrainReferenceAttribute(typeof(global::CAServer.Grains.Grain.Device.IDeviceGrain))]
    internal class OrleansCodeGenDeviceGrainReference : global::Orleans.Runtime.GrainReference, global::CAServer.Grains.Grain.Device.IDeviceGrain
    {
        OrleansCodeGenDeviceGrainReference(global::Orleans.Runtime.GrainReference other) : base(other)
        {
        }

        OrleansCodeGenDeviceGrainReference(global::Orleans.Runtime.GrainReference other, global::Orleans.CodeGeneration.InvokeMethodOptions invokeMethodOptions) : base(other, invokeMethodOptions)
        {
        }

        OrleansCodeGenDeviceGrainReference(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
        }

        public override int InterfaceId => (int)0x4B6EC0F4;
        public override ushort InterfaceVersion => 0;
        public override string InterfaceName => "IDeviceGrain";
        public override bool IsCompatible(int interfaceId) => interfaceId == (int)0x4B6EC0F4;
        public override string GetMethodName(int interfaceId, int methodId)
        {
            switch (interfaceId)
            {
                case (int)0x4B6EC0F4:
                {
                    switch (methodId)
                    {
                        case (int)0x6713676:
                            return "GetOrGenerateSaltAsync";
                        case unchecked((int)0xDA6F59C0):
                            return "SetSaltAsync";
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        global::System.Threading.Tasks.Task<string> global::CAServer.Grains.Grain.Device.IDeviceGrain.GetOrGenerateSaltAsync()
        {
            return base.InvokeMethodAsync<string>((int)0x6713676, null);
        }

        global::System.Threading.Tasks.Task global::CAServer.Grains.Grain.Device.IDeviceGrain.SetSaltAsync(string salt0)
        {
            return base.InvokeMethodAsync<object>(unchecked((int)0xDA6F59C0), new object[]{salt0});
        }
    }
}

namespace CAServer.Grains.Grain.Guardian
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::Orleans.CodeGeneration.MethodInvokerAttribute(typeof(global::CAServer.Grains.Grain.Guardian.IGuardianGrain), (int)0x4CF2A3A1), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]
    internal class OrleansCodeGenGuardianGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        public async global::System.Threading.Tasks.Task<object> Invoke(global::Orleans.Runtime.IAddressable grain, global::Orleans.CodeGeneration.InvokeMethodRequest request)
        {
            int interfaceId = request.InterfaceId;
            int methodId = request.MethodId;
            var arguments = request.Arguments;
            switch (interfaceId)
            {
                case (int)0x4CF2A3A1:
                {
                    var casted = ((global::CAServer.Grains.Grain.Guardian.IGuardianGrain)grain);
                    switch (methodId)
                    {
                        case unchecked((int)0xB8FE7331):
                            return await casted.AddGuardianAsync((string)arguments[0], (string)arguments[1], (string)arguments[2]);
                        case unchecked((int)0xC81C902C):
                            return await casted.GetGuardianAsync((string)arguments[0]);
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        public int InterfaceId => (int)0x4CF2A3A1;
        public ushort InterfaceVersion => 0;
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.SerializableAttribute, global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.GrainReferenceAttribute(typeof(global::CAServer.Grains.Grain.Guardian.IGuardianGrain))]
    internal class OrleansCodeGenGuardianGrainReference : global::Orleans.Runtime.GrainReference, global::CAServer.Grains.Grain.Guardian.IGuardianGrain
    {
        OrleansCodeGenGuardianGrainReference(global::Orleans.Runtime.GrainReference other) : base(other)
        {
        }

        OrleansCodeGenGuardianGrainReference(global::Orleans.Runtime.GrainReference other, global::Orleans.CodeGeneration.InvokeMethodOptions invokeMethodOptions) : base(other, invokeMethodOptions)
        {
        }

        OrleansCodeGenGuardianGrainReference(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
        }

        public override int InterfaceId => (int)0x4CF2A3A1;
        public override ushort InterfaceVersion => 0;
        public override string InterfaceName => "IGuardianGrain";
        public override bool IsCompatible(int interfaceId) => interfaceId == (int)0x4CF2A3A1;
        public override string GetMethodName(int interfaceId, int methodId)
        {
            switch (interfaceId)
            {
                case (int)0x4CF2A3A1:
                {
                    switch (methodId)
                    {
                        case unchecked((int)0xB8FE7331):
                            return "AddGuardianAsync";
                        case unchecked((int)0xC81C902C):
                            return "GetGuardianAsync";
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        global::System.Threading.Tasks.Task<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Guardian.GuardianGrainDto>> global::CAServer.Grains.Grain.Guardian.IGuardianGrain.AddGuardianAsync(string identifier0, string salt1, string identifierHash2)
        {
            return base.InvokeMethodAsync<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Guardian.GuardianGrainDto>>(unchecked((int)0xB8FE7331), new object[]{identifier0, salt1, identifierHash2});
        }

        global::System.Threading.Tasks.Task<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Guardian.GuardianGrainDto>> global::CAServer.Grains.Grain.Guardian.IGuardianGrain.GetGuardianAsync(string identifier0)
        {
            return base.InvokeMethodAsync<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Guardian.GuardianGrainDto>>(unchecked((int)0xC81C902C), new object[]{identifier0});
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.SerializerAttribute(typeof(global::CAServer.Grains.Grain.Guardian.GuardianGrainDto))]
    internal sealed class OrleansCodeGenCAServer_Grains_Grain_Guardian_GuardianGrainDtoSerializer
    {
        public OrleansCodeGenCAServer_Grains_Grain_Guardian_GuardianGrainDtoSerializer(global::Orleans.Serialization.IFieldUtils fieldUtils)
        {
        }

        [global::Orleans.CodeGeneration.CopierMethodAttribute]
        public object DeepCopier(object original, global::Orleans.Serialization.ICopyContext context)
        {
            global::CAServer.Grains.Grain.Guardian.GuardianGrainDto input = ((global::CAServer.Grains.Grain.Guardian.GuardianGrainDto)original);
            global::CAServer.Grains.Grain.Guardian.GuardianGrainDto result = new global::CAServer.Grains.Grain.Guardian.GuardianGrainDto();
            context.RecordCopy(original, result);
            result.Id = input.Id;
            result.Identifier = input.Identifier;
            result.IdentifierHash = input.IdentifierHash;
            result.Salt = input.Salt;
            return result;
        }

        [global::Orleans.CodeGeneration.SerializerMethodAttribute]
        public void Serializer(object untypedInput, global::Orleans.Serialization.ISerializationContext context, global::System.Type expected)
        {
            global::CAServer.Grains.Grain.Guardian.GuardianGrainDto input = (global::CAServer.Grains.Grain.Guardian.GuardianGrainDto)untypedInput;
            context.SerializeInner(input.Id, typeof(string));
            context.SerializeInner(input.Identifier, typeof(string));
            context.SerializeInner(input.IdentifierHash, typeof(string));
            context.SerializeInner(input.Salt, typeof(string));
        }

        [global::Orleans.CodeGeneration.DeserializerMethodAttribute]
        public object Deserializer(global::System.Type expected, global::Orleans.Serialization.IDeserializationContext context)
        {
            global::CAServer.Grains.Grain.Guardian.GuardianGrainDto result = new global::CAServer.Grains.Grain.Guardian.GuardianGrainDto();
            context.RecordObject(result);
            result.Id = (string)context.DeserializeInner(typeof(string));
            result.Identifier = (string)context.DeserializeInner(typeof(string));
            result.IdentifierHash = (string)context.DeserializeInner(typeof(string));
            result.Salt = (string)context.DeserializeInner(typeof(string));
            return (global::CAServer.Grains.Grain.Guardian.GuardianGrainDto)result;
        }
    }
}

namespace CAServer.Grains.Grain.Notify
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::Orleans.CodeGeneration.MethodInvokerAttribute(typeof(global::CAServer.Grains.Grain.Notify.INotifyGrain), (int)0x511C8A4D), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]
    internal class OrleansCodeGenNotifyGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        public async global::System.Threading.Tasks.Task<object> Invoke(global::Orleans.Runtime.IAddressable grain, global::Orleans.CodeGeneration.InvokeMethodRequest request)
        {
            int interfaceId = request.InterfaceId;
            int methodId = request.MethodId;
            var arguments = request.Arguments;
            switch (interfaceId)
            {
                case (int)0x511C8A4D:
                {
                    var casted = ((global::CAServer.Grains.Grain.Notify.INotifyGrain)grain);
                    switch (methodId)
                    {
                        case unchecked((int)0xAF2FADA3):
                            return await casted.GetNotifyAsync();
                        case (int)0x4AA29DFC:
                            return await casted.AddNotifyAsync((global::CAServer.Grains.Grain.Notify.NotifyGrainDto)arguments[0]);
                        case (int)0xBE21EC5:
                            return await casted.UpdateNotifyAsync((global::CAServer.Grains.Grain.Notify.NotifyGrainDto)arguments[0]);
                        case unchecked((int)0xF89BDB04):
                            return await casted.DeleteNotifyAsync((global::System.Guid)arguments[0]);
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        public int InterfaceId => (int)0x511C8A4D;
        public ushort InterfaceVersion => 0;
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.SerializableAttribute, global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.GrainReferenceAttribute(typeof(global::CAServer.Grains.Grain.Notify.INotifyGrain))]
    internal class OrleansCodeGenNotifyGrainReference : global::Orleans.Runtime.GrainReference, global::CAServer.Grains.Grain.Notify.INotifyGrain
    {
        OrleansCodeGenNotifyGrainReference(global::Orleans.Runtime.GrainReference other) : base(other)
        {
        }

        OrleansCodeGenNotifyGrainReference(global::Orleans.Runtime.GrainReference other, global::Orleans.CodeGeneration.InvokeMethodOptions invokeMethodOptions) : base(other, invokeMethodOptions)
        {
        }

        OrleansCodeGenNotifyGrainReference(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
        }

        public override int InterfaceId => (int)0x511C8A4D;
        public override ushort InterfaceVersion => 0;
        public override string InterfaceName => "INotifyGrain";
        public override bool IsCompatible(int interfaceId) => interfaceId == (int)0x511C8A4D;
        public override string GetMethodName(int interfaceId, int methodId)
        {
            switch (interfaceId)
            {
                case (int)0x511C8A4D:
                {
                    switch (methodId)
                    {
                        case unchecked((int)0xAF2FADA3):
                            return "GetNotifyAsync";
                        case (int)0x4AA29DFC:
                            return "AddNotifyAsync";
                        case (int)0xBE21EC5:
                            return "UpdateNotifyAsync";
                        case unchecked((int)0xF89BDB04):
                            return "DeleteNotifyAsync";
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        global::System.Threading.Tasks.Task<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Notify.NotifyGrainDto>> global::CAServer.Grains.Grain.Notify.INotifyGrain.GetNotifyAsync()
        {
            return base.InvokeMethodAsync<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Notify.NotifyGrainDto>>(unchecked((int)0xAF2FADA3), null);
        }

        global::System.Threading.Tasks.Task<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Notify.NotifyGrainDto>> global::CAServer.Grains.Grain.Notify.INotifyGrain.AddNotifyAsync(global::CAServer.Grains.Grain.Notify.NotifyGrainDto notifyDto0)
        {
            return base.InvokeMethodAsync<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Notify.NotifyGrainDto>>((int)0x4AA29DFC, new object[]{notifyDto0});
        }

        global::System.Threading.Tasks.Task<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Notify.NotifyGrainDto>> global::CAServer.Grains.Grain.Notify.INotifyGrain.UpdateNotifyAsync(global::CAServer.Grains.Grain.Notify.NotifyGrainDto notifyDto0)
        {
            return base.InvokeMethodAsync<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Notify.NotifyGrainDto>>((int)0xBE21EC5, new object[]{notifyDto0});
        }

        global::System.Threading.Tasks.Task<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Notify.NotifyGrainDto>> global::CAServer.Grains.Grain.Notify.INotifyGrain.DeleteNotifyAsync(global::System.Guid notifyId0)
        {
            return base.InvokeMethodAsync<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Notify.NotifyGrainDto>>(unchecked((int)0xF89BDB04), new object[]{notifyId0});
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::Orleans.CodeGeneration.MethodInvokerAttribute(typeof(global::CAServer.Grains.Grain.Notify.INotifyRulesGrain), (int)0x5A56D526), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]
    internal class OrleansCodeGenNotifyRulesGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        public async global::System.Threading.Tasks.Task<object> Invoke(global::Orleans.Runtime.IAddressable grain, global::Orleans.CodeGeneration.InvokeMethodRequest request)
        {
            int interfaceId = request.InterfaceId;
            int methodId = request.MethodId;
            var arguments = request.Arguments;
            switch (interfaceId)
            {
                case (int)0x5A56D526:
                {
                    var casted = ((global::CAServer.Grains.Grain.Notify.INotifyRulesGrain)grain);
                    switch (methodId)
                    {
                        case (int)0x1DBBF8AF:
                            return await casted.AddOrUpdateNotifyAsync((global::CAServer.Grains.Grain.Notify.NotifyRulesGrainDto)arguments[0]);
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        public int InterfaceId => (int)0x5A56D526;
        public ushort InterfaceVersion => 0;
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.SerializableAttribute, global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.GrainReferenceAttribute(typeof(global::CAServer.Grains.Grain.Notify.INotifyRulesGrain))]
    internal class OrleansCodeGenNotifyRulesGrainReference : global::Orleans.Runtime.GrainReference, global::CAServer.Grains.Grain.Notify.INotifyRulesGrain
    {
        OrleansCodeGenNotifyRulesGrainReference(global::Orleans.Runtime.GrainReference other) : base(other)
        {
        }

        OrleansCodeGenNotifyRulesGrainReference(global::Orleans.Runtime.GrainReference other, global::Orleans.CodeGeneration.InvokeMethodOptions invokeMethodOptions) : base(other, invokeMethodOptions)
        {
        }

        OrleansCodeGenNotifyRulesGrainReference(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
        }

        public override int InterfaceId => (int)0x5A56D526;
        public override ushort InterfaceVersion => 0;
        public override string InterfaceName => "INotifyRulesGrain";
        public override bool IsCompatible(int interfaceId) => interfaceId == (int)0x5A56D526;
        public override string GetMethodName(int interfaceId, int methodId)
        {
            switch (interfaceId)
            {
                case (int)0x5A56D526:
                {
                    switch (methodId)
                    {
                        case (int)0x1DBBF8AF:
                            return "AddOrUpdateNotifyAsync";
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        global::System.Threading.Tasks.Task<global::CAServer.Grains.Grain.Notify.NotifyRulesGrainDto> global::CAServer.Grains.Grain.Notify.INotifyRulesGrain.AddOrUpdateNotifyAsync(global::CAServer.Grains.Grain.Notify.NotifyRulesGrainDto rulesGrainDto0)
        {
            return base.InvokeMethodAsync<global::CAServer.Grains.Grain.Notify.NotifyRulesGrainDto>((int)0x1DBBF8AF, new object[]{rulesGrainDto0});
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.SerializerAttribute(typeof(global::CAServer.Grains.Grain.Notify.NotifyGrainDto))]
    internal sealed class OrleansCodeGenCAServer_Grains_Grain_Notify_NotifyGrainDtoSerializer
    {
        private readonly global::System.Func<global::CAServer.Notify.NotifyRulesBase, int> getField9;
        private readonly global::System.Action<global::CAServer.Notify.NotifyRulesBase, int> setField9;
        private readonly global::System.Func<global::CAServer.Grains.Grain.Notify.NotifyGrainDto, int> getField1;
        private readonly global::System.Action<global::CAServer.Grains.Grain.Notify.NotifyGrainDto, int> setField1;
        public OrleansCodeGenCAServer_Grains_Grain_Notify_NotifyGrainDtoSerializer(global::Orleans.Serialization.IFieldUtils fieldUtils)
        {
            global::System.Reflection.FieldInfo field9 = typeof(global::CAServer.Notify.NotifyRulesBase).GetField("<NotifyId>k__BackingField", (global::System.Reflection.BindingFlags.Instance | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Public));
            getField9 = (global::System.Func<global::CAServer.Notify.NotifyRulesBase, int>)fieldUtils.GetGetter(field9);
            setField9 = (global::System.Action<global::CAServer.Notify.NotifyRulesBase, int>)fieldUtils.GetReferenceSetter(field9);
            global::System.Reflection.FieldInfo field1 = typeof(global::CAServer.Grains.Grain.Notify.NotifyGrainDto).GetField("<NotifyId>k__BackingField", (global::System.Reflection.BindingFlags.Instance | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Public));
            getField1 = (global::System.Func<global::CAServer.Grains.Grain.Notify.NotifyGrainDto, int>)fieldUtils.GetGetter(field1);
            setField1 = (global::System.Action<global::CAServer.Grains.Grain.Notify.NotifyGrainDto, int>)fieldUtils.GetReferenceSetter(field1);
        }

        [global::Orleans.CodeGeneration.CopierMethodAttribute]
        public object DeepCopier(object original, global::Orleans.Serialization.ICopyContext context)
        {
            global::CAServer.Grains.Grain.Notify.NotifyGrainDto input = ((global::CAServer.Grains.Grain.Notify.NotifyGrainDto)original);
            global::CAServer.Grains.Grain.Notify.NotifyGrainDto result = new global::CAServer.Grains.Grain.Notify.NotifyGrainDto();
            context.RecordCopy(original, result);
            result.AppId = input.AppId;
            result.AppVersions = (string[])context.DeepCopyInner(input.AppVersions);
            result.Content = input.Content;
            result.Countries = (string[])context.DeepCopyInner(input.Countries);
            result.DeviceBrands = (string[])context.DeepCopyInner(input.DeviceBrands);
            result.DeviceTypes = (string[])context.DeepCopyInner(input.DeviceTypes);
            result.DownloadUrl = input.DownloadUrl;
            result.Id = input.Id;
            result.IsApproved = input.IsApproved;
            result.IsForceUpdate = input.IsForceUpdate;
            setField9(result, getField9(input));
            setField1(result, getField1(input));
            result.OperatingSystemVersions = (string[])context.DeepCopyInner(input.OperatingSystemVersions);
            result.ReleaseTime = input.ReleaseTime;
            result.SendTypes = (global::CAServer.NotifySendType[])context.DeepCopyInner(input.SendTypes);
            result.StyleType = input.StyleType;
            result.TargetVersion = input.TargetVersion;
            result.Title = input.Title;
            return result;
        }

        [global::Orleans.CodeGeneration.SerializerMethodAttribute]
        public void Serializer(object untypedInput, global::Orleans.Serialization.ISerializationContext context, global::System.Type expected)
        {
            global::CAServer.Grains.Grain.Notify.NotifyGrainDto input = (global::CAServer.Grains.Grain.Notify.NotifyGrainDto)untypedInput;
            context.SerializeInner(input.AppId, typeof(string));
            context.SerializeInner(input.AppVersions, typeof(string[]));
            context.SerializeInner(input.Content, typeof(string));
            context.SerializeInner(input.Countries, typeof(string[]));
            context.SerializeInner(input.DeviceBrands, typeof(string[]));
            context.SerializeInner(input.DeviceTypes, typeof(string[]));
            context.SerializeInner(input.DownloadUrl, typeof(string));
            context.SerializeInner(input.Id, typeof(global::System.Guid));
            context.SerializeInner(input.IsApproved, typeof(bool));
            context.SerializeInner(input.IsForceUpdate, typeof(bool));
            context.SerializeInner(getField9(input), typeof(int));
            context.SerializeInner(getField1(input), typeof(int));
            context.SerializeInner(input.OperatingSystemVersions, typeof(string[]));
            context.SerializeInner(input.ReleaseTime, typeof(global::System.DateTime));
            context.SerializeInner(input.SendTypes, typeof(global::CAServer.NotifySendType[]));
            context.SerializeInner(input.StyleType, typeof(global::CAServer.StyleType));
            context.SerializeInner(input.TargetVersion, typeof(string));
            context.SerializeInner(input.Title, typeof(string));
        }

        [global::Orleans.CodeGeneration.DeserializerMethodAttribute]
        public object Deserializer(global::System.Type expected, global::Orleans.Serialization.IDeserializationContext context)
        {
            global::CAServer.Grains.Grain.Notify.NotifyGrainDto result = new global::CAServer.Grains.Grain.Notify.NotifyGrainDto();
            context.RecordObject(result);
            result.AppId = (string)context.DeserializeInner(typeof(string));
            result.AppVersions = (string[])context.DeserializeInner(typeof(string[]));
            result.Content = (string)context.DeserializeInner(typeof(string));
            result.Countries = (string[])context.DeserializeInner(typeof(string[]));
            result.DeviceBrands = (string[])context.DeserializeInner(typeof(string[]));
            result.DeviceTypes = (string[])context.DeserializeInner(typeof(string[]));
            result.DownloadUrl = (string)context.DeserializeInner(typeof(string));
            result.Id = (global::System.Guid)context.DeserializeInner(typeof(global::System.Guid));
            result.IsApproved = (bool)context.DeserializeInner(typeof(bool));
            result.IsForceUpdate = (bool)context.DeserializeInner(typeof(bool));
            setField9(result, (int)context.DeserializeInner(typeof(int)));
            setField1(result, (int)context.DeserializeInner(typeof(int)));
            result.OperatingSystemVersions = (string[])context.DeserializeInner(typeof(string[]));
            result.ReleaseTime = (global::System.DateTime)context.DeserializeInner(typeof(global::System.DateTime));
            result.SendTypes = (global::CAServer.NotifySendType[])context.DeserializeInner(typeof(global::CAServer.NotifySendType[]));
            result.StyleType = (global::CAServer.StyleType)context.DeserializeInner(typeof(global::CAServer.StyleType));
            result.TargetVersion = (string)context.DeserializeInner(typeof(string));
            result.Title = (string)context.DeserializeInner(typeof(string));
            return (global::CAServer.Grains.Grain.Notify.NotifyGrainDto)result;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.SerializerAttribute(typeof(global::CAServer.Grains.Grain.Notify.NotifyRulesGrainDto))]
    internal sealed class OrleansCodeGenCAServer_Grains_Grain_Notify_NotifyRulesGrainDtoSerializer
    {
        public OrleansCodeGenCAServer_Grains_Grain_Notify_NotifyRulesGrainDtoSerializer(global::Orleans.Serialization.IFieldUtils fieldUtils)
        {
        }

        [global::Orleans.CodeGeneration.CopierMethodAttribute]
        public object DeepCopier(object original, global::Orleans.Serialization.ICopyContext context)
        {
            global::CAServer.Grains.Grain.Notify.NotifyRulesGrainDto input = ((global::CAServer.Grains.Grain.Notify.NotifyRulesGrainDto)original);
            global::CAServer.Grains.Grain.Notify.NotifyRulesGrainDto result = new global::CAServer.Grains.Grain.Notify.NotifyRulesGrainDto();
            context.RecordCopy(original, result);
            result.AppId = input.AppId;
            result.AppVersions = (string[])context.DeepCopyInner(input.AppVersions);
            result.Countries = (string[])context.DeepCopyInner(input.Countries);
            result.DeviceBrands = (string[])context.DeepCopyInner(input.DeviceBrands);
            result.DeviceTypes = (string[])context.DeepCopyInner(input.DeviceTypes);
            result.Id = input.Id;
            result.IsApproved = input.IsApproved;
            result.NotifyId = input.NotifyId;
            result.OperatingSystemVersions = (string[])context.DeepCopyInner(input.OperatingSystemVersions);
            result.SendTypes = (global::CAServer.NotifySendType[])context.DeepCopyInner(input.SendTypes);
            return result;
        }

        [global::Orleans.CodeGeneration.SerializerMethodAttribute]
        public void Serializer(object untypedInput, global::Orleans.Serialization.ISerializationContext context, global::System.Type expected)
        {
            global::CAServer.Grains.Grain.Notify.NotifyRulesGrainDto input = (global::CAServer.Grains.Grain.Notify.NotifyRulesGrainDto)untypedInput;
            context.SerializeInner(input.AppId, typeof(string));
            context.SerializeInner(input.AppVersions, typeof(string[]));
            context.SerializeInner(input.Countries, typeof(string[]));
            context.SerializeInner(input.DeviceBrands, typeof(string[]));
            context.SerializeInner(input.DeviceTypes, typeof(string[]));
            context.SerializeInner(input.Id, typeof(global::System.Guid));
            context.SerializeInner(input.IsApproved, typeof(bool));
            context.SerializeInner(input.NotifyId, typeof(int));
            context.SerializeInner(input.OperatingSystemVersions, typeof(string[]));
            context.SerializeInner(input.SendTypes, typeof(global::CAServer.NotifySendType[]));
        }

        [global::Orleans.CodeGeneration.DeserializerMethodAttribute]
        public object Deserializer(global::System.Type expected, global::Orleans.Serialization.IDeserializationContext context)
        {
            global::CAServer.Grains.Grain.Notify.NotifyRulesGrainDto result = new global::CAServer.Grains.Grain.Notify.NotifyRulesGrainDto();
            context.RecordObject(result);
            result.AppId = (string)context.DeserializeInner(typeof(string));
            result.AppVersions = (string[])context.DeserializeInner(typeof(string[]));
            result.Countries = (string[])context.DeserializeInner(typeof(string[]));
            result.DeviceBrands = (string[])context.DeserializeInner(typeof(string[]));
            result.DeviceTypes = (string[])context.DeserializeInner(typeof(string[]));
            result.Id = (global::System.Guid)context.DeserializeInner(typeof(global::System.Guid));
            result.IsApproved = (bool)context.DeserializeInner(typeof(bool));
            result.NotifyId = (int)context.DeserializeInner(typeof(int));
            result.OperatingSystemVersions = (string[])context.DeserializeInner(typeof(string[]));
            result.SendTypes = (global::CAServer.NotifySendType[])context.DeserializeInner(typeof(global::CAServer.NotifySendType[]));
            return (global::CAServer.Grains.Grain.Notify.NotifyRulesGrainDto)result;
        }
    }
}

namespace CAServer.Grains.Grain.ThirdPart
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::Orleans.CodeGeneration.MethodInvokerAttribute(typeof(global::CAServer.Grains.Grain.ThirdPart.IOrderGrain), unchecked((int)0xBA336752)), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]
    internal class OrleansCodeGenOrderGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        public async global::System.Threading.Tasks.Task<object> Invoke(global::Orleans.Runtime.IAddressable grain, global::Orleans.CodeGeneration.InvokeMethodRequest request)
        {
            int interfaceId = request.InterfaceId;
            int methodId = request.MethodId;
            var arguments = request.Arguments;
            switch (interfaceId)
            {
                case unchecked((int)0xBA336752):
                {
                    var casted = ((global::CAServer.Grains.Grain.ThirdPart.IOrderGrain)grain);
                    switch (methodId)
                    {
                        case unchecked((int)0xEC94E639):
                            return await casted.CreateUserOrderAsync((global::CAServer.Grains.Grain.ThirdPart.OrderGrainDto)arguments[0]);
                        case (int)0x7FC15523:
                            return await casted.UpdateOrderAsync((global::CAServer.Grains.Grain.ThirdPart.OrderGrainDto)arguments[0]);
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        public int InterfaceId => unchecked((int)0xBA336752);
        public ushort InterfaceVersion => 0;
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.SerializableAttribute, global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.GrainReferenceAttribute(typeof(global::CAServer.Grains.Grain.ThirdPart.IOrderGrain))]
    internal class OrleansCodeGenOrderGrainReference : global::Orleans.Runtime.GrainReference, global::CAServer.Grains.Grain.ThirdPart.IOrderGrain
    {
        OrleansCodeGenOrderGrainReference(global::Orleans.Runtime.GrainReference other) : base(other)
        {
        }

        OrleansCodeGenOrderGrainReference(global::Orleans.Runtime.GrainReference other, global::Orleans.CodeGeneration.InvokeMethodOptions invokeMethodOptions) : base(other, invokeMethodOptions)
        {
        }

        OrleansCodeGenOrderGrainReference(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
        }

        public override int InterfaceId => unchecked((int)0xBA336752);
        public override ushort InterfaceVersion => 0;
        public override string InterfaceName => "IOrderGrain";
        public override bool IsCompatible(int interfaceId) => interfaceId == unchecked((int)0xBA336752);
        public override string GetMethodName(int interfaceId, int methodId)
        {
            switch (interfaceId)
            {
                case unchecked((int)0xBA336752):
                {
                    switch (methodId)
                    {
                        case unchecked((int)0xEC94E639):
                            return "CreateUserOrderAsync";
                        case (int)0x7FC15523:
                            return "UpdateOrderAsync";
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        global::System.Threading.Tasks.Task<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.ThirdPart.OrderGrainDto>> global::CAServer.Grains.Grain.ThirdPart.IOrderGrain.CreateUserOrderAsync(global::CAServer.Grains.Grain.ThirdPart.OrderGrainDto input0)
        {
            return base.InvokeMethodAsync<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.ThirdPart.OrderGrainDto>>(unchecked((int)0xEC94E639), new object[]{input0});
        }

        global::System.Threading.Tasks.Task<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.ThirdPart.OrderGrainDto>> global::CAServer.Grains.Grain.ThirdPart.IOrderGrain.UpdateOrderAsync(global::CAServer.Grains.Grain.ThirdPart.OrderGrainDto input0)
        {
            return base.InvokeMethodAsync<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.ThirdPart.OrderGrainDto>>((int)0x7FC15523, new object[]{input0});
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.SerializerAttribute(typeof(global::CAServer.Grains.Grain.ThirdPart.OrderGrainDto))]
    internal sealed class OrleansCodeGenCAServer_Grains_Grain_ThirdPart_OrderGrainDtoSerializer
    {
        public OrleansCodeGenCAServer_Grains_Grain_ThirdPart_OrderGrainDtoSerializer(global::Orleans.Serialization.IFieldUtils fieldUtils)
        {
        }

        [global::Orleans.CodeGeneration.CopierMethodAttribute]
        public object DeepCopier(object original, global::Orleans.Serialization.ICopyContext context)
        {
            global::CAServer.Grains.Grain.ThirdPart.OrderGrainDto input = ((global::CAServer.Grains.Grain.ThirdPart.OrderGrainDto)original);
            global::CAServer.Grains.Grain.ThirdPart.OrderGrainDto result = new global::CAServer.Grains.Grain.ThirdPart.OrderGrainDto();
            context.RecordCopy(original, result);
            result.Address = input.Address;
            result.Crypto = input.Crypto;
            result.CryptoPrice = input.CryptoPrice;
            result.CryptoQuantity = input.CryptoQuantity;
            result.Fiat = input.Fiat;
            result.FiatAmount = input.FiatAmount;
            result.Id = input.Id;
            result.LastModifyTime = input.LastModifyTime;
            result.MerchantName = input.MerchantName;
            result.PaymentMethod = input.PaymentMethod;
            result.ReceiptTime = input.ReceiptTime;
            result.ReceivingMethod = input.ReceivingMethod;
            result.Status = input.Status;
            result.TransDirect = input.TransDirect;
            result.TxTime = input.TxTime;
            result.UserId = input.UserId;
            return result;
        }

        [global::Orleans.CodeGeneration.SerializerMethodAttribute]
        public void Serializer(object untypedInput, global::Orleans.Serialization.ISerializationContext context, global::System.Type expected)
        {
            global::CAServer.Grains.Grain.ThirdPart.OrderGrainDto input = (global::CAServer.Grains.Grain.ThirdPart.OrderGrainDto)untypedInput;
            context.SerializeInner(input.Address, typeof(string));
            context.SerializeInner(input.Crypto, typeof(string));
            context.SerializeInner(input.CryptoPrice, typeof(string));
            context.SerializeInner(input.CryptoQuantity, typeof(string));
            context.SerializeInner(input.Fiat, typeof(string));
            context.SerializeInner(input.FiatAmount, typeof(string));
            context.SerializeInner(input.Id, typeof(global::System.Guid));
            context.SerializeInner(input.LastModifyTime, typeof(string));
            context.SerializeInner(input.MerchantName, typeof(string));
            context.SerializeInner(input.PaymentMethod, typeof(string));
            context.SerializeInner(input.ReceiptTime, typeof(string));
            context.SerializeInner(input.ReceivingMethod, typeof(string));
            context.SerializeInner(input.Status, typeof(string));
            context.SerializeInner(input.TransDirect, typeof(string));
            context.SerializeInner(input.TxTime, typeof(string));
            context.SerializeInner(input.UserId, typeof(global::System.Guid));
        }

        [global::Orleans.CodeGeneration.DeserializerMethodAttribute]
        public object Deserializer(global::System.Type expected, global::Orleans.Serialization.IDeserializationContext context)
        {
            global::CAServer.Grains.Grain.ThirdPart.OrderGrainDto result = new global::CAServer.Grains.Grain.ThirdPart.OrderGrainDto();
            context.RecordObject(result);
            result.Address = (string)context.DeserializeInner(typeof(string));
            result.Crypto = (string)context.DeserializeInner(typeof(string));
            result.CryptoPrice = (string)context.DeserializeInner(typeof(string));
            result.CryptoQuantity = (string)context.DeserializeInner(typeof(string));
            result.Fiat = (string)context.DeserializeInner(typeof(string));
            result.FiatAmount = (string)context.DeserializeInner(typeof(string));
            result.Id = (global::System.Guid)context.DeserializeInner(typeof(global::System.Guid));
            result.LastModifyTime = (string)context.DeserializeInner(typeof(string));
            result.MerchantName = (string)context.DeserializeInner(typeof(string));
            result.PaymentMethod = (string)context.DeserializeInner(typeof(string));
            result.ReceiptTime = (string)context.DeserializeInner(typeof(string));
            result.ReceivingMethod = (string)context.DeserializeInner(typeof(string));
            result.Status = (string)context.DeserializeInner(typeof(string));
            result.TransDirect = (string)context.DeserializeInner(typeof(string));
            result.TxTime = (string)context.DeserializeInner(typeof(string));
            result.UserId = (global::System.Guid)context.DeserializeInner(typeof(global::System.Guid));
            return (global::CAServer.Grains.Grain.ThirdPart.OrderGrainDto)result;
        }
    }
}

namespace CAServer.Grains.Grain.Tokens.TokenPrice
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::Orleans.CodeGeneration.MethodInvokerAttribute(typeof(global::CAServer.Grains.Grain.Tokens.TokenPrice.ITokenPriceGrain), (int)0x1090005B), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]
    internal class OrleansCodeGenTokenPriceGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        public async global::System.Threading.Tasks.Task<object> Invoke(global::Orleans.Runtime.IAddressable grain, global::Orleans.CodeGeneration.InvokeMethodRequest request)
        {
            int interfaceId = request.InterfaceId;
            int methodId = request.MethodId;
            var arguments = request.Arguments;
            switch (interfaceId)
            {
                case (int)0x1090005B:
                {
                    var casted = ((global::CAServer.Grains.Grain.Tokens.TokenPrice.ITokenPriceGrain)grain);
                    switch (methodId)
                    {
                        case unchecked((int)0xD11DB2E1):
                            return await casted.GetCurrentPriceAsync((string)arguments[0]);
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        public int InterfaceId => (int)0x1090005B;
        public ushort InterfaceVersion => 0;
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.SerializableAttribute, global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.GrainReferenceAttribute(typeof(global::CAServer.Grains.Grain.Tokens.TokenPrice.ITokenPriceGrain))]
    internal class OrleansCodeGenTokenPriceGrainReference : global::Orleans.Runtime.GrainReference, global::CAServer.Grains.Grain.Tokens.TokenPrice.ITokenPriceGrain
    {
        OrleansCodeGenTokenPriceGrainReference(global::Orleans.Runtime.GrainReference other) : base(other)
        {
        }

        OrleansCodeGenTokenPriceGrainReference(global::Orleans.Runtime.GrainReference other, global::Orleans.CodeGeneration.InvokeMethodOptions invokeMethodOptions) : base(other, invokeMethodOptions)
        {
        }

        OrleansCodeGenTokenPriceGrainReference(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
        }

        public override int InterfaceId => (int)0x1090005B;
        public override ushort InterfaceVersion => 0;
        public override string InterfaceName => "ITokenPriceGrain";
        public override bool IsCompatible(int interfaceId) => interfaceId == (int)0x1090005B;
        public override string GetMethodName(int interfaceId, int methodId)
        {
            switch (interfaceId)
            {
                case (int)0x1090005B:
                {
                    switch (methodId)
                    {
                        case unchecked((int)0xD11DB2E1):
                            return "GetCurrentPriceAsync";
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        global::System.Threading.Tasks.Task<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Tokens.TokenPrice.TokenPriceGrainDto>> global::CAServer.Grains.Grain.Tokens.TokenPrice.ITokenPriceGrain.GetCurrentPriceAsync(string symbol0)
        {
            return base.InvokeMethodAsync<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Tokens.TokenPrice.TokenPriceGrainDto>>(unchecked((int)0xD11DB2E1), new object[]{symbol0});
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::Orleans.CodeGeneration.MethodInvokerAttribute(typeof(global::CAServer.Grains.Grain.Tokens.TokenPrice.ITokenPriceSnapshotGrain), (int)0x4B82AE00), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]
    internal class OrleansCodeGenTokenPriceSnapshotGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        public async global::System.Threading.Tasks.Task<object> Invoke(global::Orleans.Runtime.IAddressable grain, global::Orleans.CodeGeneration.InvokeMethodRequest request)
        {
            int interfaceId = request.InterfaceId;
            int methodId = request.MethodId;
            var arguments = request.Arguments;
            switch (interfaceId)
            {
                case (int)0x4B82AE00:
                {
                    var casted = ((global::CAServer.Grains.Grain.Tokens.TokenPrice.ITokenPriceSnapshotGrain)grain);
                    switch (methodId)
                    {
                        case unchecked((int)0xB5E34B8C):
                            return await casted.GetHistoryPriceAsync((string)arguments[0], (string)arguments[1]);
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        public int InterfaceId => (int)0x4B82AE00;
        public ushort InterfaceVersion => 0;
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.SerializableAttribute, global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.GrainReferenceAttribute(typeof(global::CAServer.Grains.Grain.Tokens.TokenPrice.ITokenPriceSnapshotGrain))]
    internal class OrleansCodeGenTokenPriceSnapshotGrainReference : global::Orleans.Runtime.GrainReference, global::CAServer.Grains.Grain.Tokens.TokenPrice.ITokenPriceSnapshotGrain
    {
        OrleansCodeGenTokenPriceSnapshotGrainReference(global::Orleans.Runtime.GrainReference other) : base(other)
        {
        }

        OrleansCodeGenTokenPriceSnapshotGrainReference(global::Orleans.Runtime.GrainReference other, global::Orleans.CodeGeneration.InvokeMethodOptions invokeMethodOptions) : base(other, invokeMethodOptions)
        {
        }

        OrleansCodeGenTokenPriceSnapshotGrainReference(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
        }

        public override int InterfaceId => (int)0x4B82AE00;
        public override ushort InterfaceVersion => 0;
        public override string InterfaceName => "ITokenPriceSnapshotGrain";
        public override bool IsCompatible(int interfaceId) => interfaceId == (int)0x4B82AE00;
        public override string GetMethodName(int interfaceId, int methodId)
        {
            switch (interfaceId)
            {
                case (int)0x4B82AE00:
                {
                    switch (methodId)
                    {
                        case unchecked((int)0xB5E34B8C):
                            return "GetHistoryPriceAsync";
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        global::System.Threading.Tasks.Task<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Tokens.TokenPrice.TokenPriceGrainDto>> global::CAServer.Grains.Grain.Tokens.TokenPrice.ITokenPriceSnapshotGrain.GetHistoryPriceAsync(string symbol0, string dateTime1)
        {
            return base.InvokeMethodAsync<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Tokens.TokenPrice.TokenPriceGrainDto>>(unchecked((int)0xB5E34B8C), new object[]{symbol0, dateTime1});
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.SerializerAttribute(typeof(global::CAServer.Grains.Grain.Tokens.TokenPrice.TokenPriceGrainDto))]
    internal sealed class OrleansCodeGenCAServer_Grains_Grain_Tokens_TokenPrice_TokenPriceGrainDtoSerializer
    {
        public OrleansCodeGenCAServer_Grains_Grain_Tokens_TokenPrice_TokenPriceGrainDtoSerializer(global::Orleans.Serialization.IFieldUtils fieldUtils)
        {
        }

        [global::Orleans.CodeGeneration.CopierMethodAttribute]
        public object DeepCopier(object original, global::Orleans.Serialization.ICopyContext context)
        {
            global::CAServer.Grains.Grain.Tokens.TokenPrice.TokenPriceGrainDto input = ((global::CAServer.Grains.Grain.Tokens.TokenPrice.TokenPriceGrainDto)original);
            global::CAServer.Grains.Grain.Tokens.TokenPrice.TokenPriceGrainDto result = new global::CAServer.Grains.Grain.Tokens.TokenPrice.TokenPriceGrainDto();
            context.RecordCopy(original, result);
            result.PriceInUsd = input.PriceInUsd;
            result.Symbol = input.Symbol;
            return result;
        }

        [global::Orleans.CodeGeneration.SerializerMethodAttribute]
        public void Serializer(object untypedInput, global::Orleans.Serialization.ISerializationContext context, global::System.Type expected)
        {
            global::CAServer.Grains.Grain.Tokens.TokenPrice.TokenPriceGrainDto input = (global::CAServer.Grains.Grain.Tokens.TokenPrice.TokenPriceGrainDto)untypedInput;
            context.SerializeInner(input.PriceInUsd, typeof(decimal));
            context.SerializeInner(input.Symbol, typeof(string));
        }

        [global::Orleans.CodeGeneration.DeserializerMethodAttribute]
        public object Deserializer(global::System.Type expected, global::Orleans.Serialization.IDeserializationContext context)
        {
            global::CAServer.Grains.Grain.Tokens.TokenPrice.TokenPriceGrainDto result = new global::CAServer.Grains.Grain.Tokens.TokenPrice.TokenPriceGrainDto();
            context.RecordObject(result);
            result.PriceInUsd = (decimal)context.DeserializeInner(typeof(decimal));
            result.Symbol = (string)context.DeserializeInner(typeof(string));
            return (global::CAServer.Grains.Grain.Tokens.TokenPrice.TokenPriceGrainDto)result;
        }
    }
}

namespace CAServer.Grains.Grain.Tokens.UserTokens
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::Orleans.CodeGeneration.MethodInvokerAttribute(typeof(global::CAServer.Grains.Grain.Tokens.UserTokens.IUserTokenGrain), (int)0x29DDC99C), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]
    internal class OrleansCodeGenUserTokenGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        public async global::System.Threading.Tasks.Task<object> Invoke(global::Orleans.Runtime.IAddressable grain, global::Orleans.CodeGeneration.InvokeMethodRequest request)
        {
            int interfaceId = request.InterfaceId;
            int methodId = request.MethodId;
            var arguments = request.Arguments;
            switch (interfaceId)
            {
                case (int)0x29DDC99C:
                {
                    var casted = ((global::CAServer.Grains.Grain.Tokens.UserTokens.IUserTokenGrain)grain);
                    switch (methodId)
                    {
                        case unchecked((int)0x89C6193A):
                            return await casted.AddUserTokenAsync((global::System.Guid)arguments[0], (global::CAServer.Grains.Grain.Tokens.UserTokens.UserTokenGrainDto)arguments[1]);
                        case unchecked((int)0xAF3981B5):
                            return await casted.ChangeTokenDisplayAsync((global::System.Guid)arguments[0], (bool)arguments[1]);
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        public int InterfaceId => (int)0x29DDC99C;
        public ushort InterfaceVersion => 0;
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.SerializableAttribute, global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.GrainReferenceAttribute(typeof(global::CAServer.Grains.Grain.Tokens.UserTokens.IUserTokenGrain))]
    internal class OrleansCodeGenUserTokenGrainReference : global::Orleans.Runtime.GrainReference, global::CAServer.Grains.Grain.Tokens.UserTokens.IUserTokenGrain
    {
        OrleansCodeGenUserTokenGrainReference(global::Orleans.Runtime.GrainReference other) : base(other)
        {
        }

        OrleansCodeGenUserTokenGrainReference(global::Orleans.Runtime.GrainReference other, global::Orleans.CodeGeneration.InvokeMethodOptions invokeMethodOptions) : base(other, invokeMethodOptions)
        {
        }

        OrleansCodeGenUserTokenGrainReference(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
        }

        public override int InterfaceId => (int)0x29DDC99C;
        public override ushort InterfaceVersion => 0;
        public override string InterfaceName => "IUserTokenGrain";
        public override bool IsCompatible(int interfaceId) => interfaceId == (int)0x29DDC99C;
        public override string GetMethodName(int interfaceId, int methodId)
        {
            switch (interfaceId)
            {
                case (int)0x29DDC99C:
                {
                    switch (methodId)
                    {
                        case unchecked((int)0x89C6193A):
                            return "AddUserTokenAsync";
                        case unchecked((int)0xAF3981B5):
                            return "ChangeTokenDisplayAsync";
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        global::System.Threading.Tasks.Task<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Tokens.UserTokens.UserTokenGrainDto>> global::CAServer.Grains.Grain.Tokens.UserTokens.IUserTokenGrain.AddUserTokenAsync(global::System.Guid userId0, global::CAServer.Grains.Grain.Tokens.UserTokens.UserTokenGrainDto tokenItem1)
        {
            return base.InvokeMethodAsync<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Tokens.UserTokens.UserTokenGrainDto>>(unchecked((int)0x89C6193A), new object[]{userId0, tokenItem1});
        }

        global::System.Threading.Tasks.Task<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Tokens.UserTokens.UserTokenGrainDto>> global::CAServer.Grains.Grain.Tokens.UserTokens.IUserTokenGrain.ChangeTokenDisplayAsync(global::System.Guid userId0, bool isDisplay1)
        {
            return base.InvokeMethodAsync<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.Tokens.UserTokens.UserTokenGrainDto>>(unchecked((int)0xAF3981B5), new object[]{userId0, isDisplay1});
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::Orleans.CodeGeneration.MethodInvokerAttribute(typeof(global::CAServer.Grains.Grain.Tokens.UserTokens.IUserTokenSymbolGrain), unchecked((int)0xE86EBF34)), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]
    internal class OrleansCodeGenUserTokenSymbolGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        public async global::System.Threading.Tasks.Task<object> Invoke(global::Orleans.Runtime.IAddressable grain, global::Orleans.CodeGeneration.InvokeMethodRequest request)
        {
            int interfaceId = request.InterfaceId;
            int methodId = request.MethodId;
            var arguments = request.Arguments;
            switch (interfaceId)
            {
                case unchecked((int)0xE86EBF34):
                {
                    var casted = ((global::CAServer.Grains.Grain.Tokens.UserTokens.IUserTokenSymbolGrain)grain);
                    switch (methodId)
                    {
                        case (int)0x341FB48B:
                            return await casted.AddUserTokenSymbolAsync((global::System.Guid)arguments[0], (string)arguments[1], (string)arguments[2]);
                        case unchecked((int)0xE117719E):
                            return await casted.IsUserTokenSymbolExistAsync((string)arguments[0], (string)arguments[1]);
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        public int InterfaceId => unchecked((int)0xE86EBF34);
        public ushort InterfaceVersion => 0;
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.SerializableAttribute, global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.GrainReferenceAttribute(typeof(global::CAServer.Grains.Grain.Tokens.UserTokens.IUserTokenSymbolGrain))]
    internal class OrleansCodeGenUserTokenSymbolGrainReference : global::Orleans.Runtime.GrainReference, global::CAServer.Grains.Grain.Tokens.UserTokens.IUserTokenSymbolGrain
    {
        OrleansCodeGenUserTokenSymbolGrainReference(global::Orleans.Runtime.GrainReference other) : base(other)
        {
        }

        OrleansCodeGenUserTokenSymbolGrainReference(global::Orleans.Runtime.GrainReference other, global::Orleans.CodeGeneration.InvokeMethodOptions invokeMethodOptions) : base(other, invokeMethodOptions)
        {
        }

        OrleansCodeGenUserTokenSymbolGrainReference(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
        }

        public override int InterfaceId => unchecked((int)0xE86EBF34);
        public override ushort InterfaceVersion => 0;
        public override string InterfaceName => "IUserTokenSymbolGrain";
        public override bool IsCompatible(int interfaceId) => interfaceId == unchecked((int)0xE86EBF34);
        public override string GetMethodName(int interfaceId, int methodId)
        {
            switch (interfaceId)
            {
                case unchecked((int)0xE86EBF34):
                {
                    switch (methodId)
                    {
                        case (int)0x341FB48B:
                            return "AddUserTokenSymbolAsync";
                        case unchecked((int)0xE117719E):
                            return "IsUserTokenSymbolExistAsync";
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        global::System.Threading.Tasks.Task<bool> global::CAServer.Grains.Grain.Tokens.UserTokens.IUserTokenSymbolGrain.AddUserTokenSymbolAsync(global::System.Guid userId0, string chainId1, string symbol2)
        {
            return base.InvokeMethodAsync<bool>((int)0x341FB48B, new object[]{userId0, chainId1, symbol2});
        }

        global::System.Threading.Tasks.Task<bool> global::CAServer.Grains.Grain.Tokens.UserTokens.IUserTokenSymbolGrain.IsUserTokenSymbolExistAsync(string chainId0, string symbol1)
        {
            return base.InvokeMethodAsync<bool>(unchecked((int)0xE117719E), new object[]{chainId0, symbol1});
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.SerializerAttribute(typeof(global::CAServer.Grains.Grain.Tokens.UserTokens.UserTokenGrainDto))]
    internal sealed class OrleansCodeGenCAServer_Grains_Grain_Tokens_UserTokens_UserTokenGrainDtoSerializer
    {
        public OrleansCodeGenCAServer_Grains_Grain_Tokens_UserTokens_UserTokenGrainDtoSerializer(global::Orleans.Serialization.IFieldUtils fieldUtils)
        {
        }

        [global::Orleans.CodeGeneration.CopierMethodAttribute]
        public object DeepCopier(object original, global::Orleans.Serialization.ICopyContext context)
        {
            global::CAServer.Grains.Grain.Tokens.UserTokens.UserTokenGrainDto input = ((global::CAServer.Grains.Grain.Tokens.UserTokens.UserTokenGrainDto)original);
            global::CAServer.Grains.Grain.Tokens.UserTokens.UserTokenGrainDto result = new global::CAServer.Grains.Grain.Tokens.UserTokens.UserTokenGrainDto();
            context.RecordCopy(original, result);
            result.Id = input.Id;
            result.IsDefault = input.IsDefault;
            result.IsDisplay = input.IsDisplay;
            result.SortWeight = input.SortWeight;
            result.Token = (global::CAServer.Tokens.Dtos.Token)context.DeepCopyInner(input.Token);
            result.UserId = input.UserId;
            return result;
        }

        [global::Orleans.CodeGeneration.SerializerMethodAttribute]
        public void Serializer(object untypedInput, global::Orleans.Serialization.ISerializationContext context, global::System.Type expected)
        {
            global::CAServer.Grains.Grain.Tokens.UserTokens.UserTokenGrainDto input = (global::CAServer.Grains.Grain.Tokens.UserTokens.UserTokenGrainDto)untypedInput;
            context.SerializeInner(input.Id, typeof(global::System.Guid));
            context.SerializeInner(input.IsDefault, typeof(bool));
            context.SerializeInner(input.IsDisplay, typeof(bool));
            context.SerializeInner(input.SortWeight, typeof(int));
            context.SerializeInner(input.Token, typeof(global::CAServer.Tokens.Dtos.Token));
            context.SerializeInner(input.UserId, typeof(global::System.Guid));
        }

        [global::Orleans.CodeGeneration.DeserializerMethodAttribute]
        public object Deserializer(global::System.Type expected, global::Orleans.Serialization.IDeserializationContext context)
        {
            global::CAServer.Grains.Grain.Tokens.UserTokens.UserTokenGrainDto result = new global::CAServer.Grains.Grain.Tokens.UserTokens.UserTokenGrainDto();
            context.RecordObject(result);
            result.Id = (global::System.Guid)context.DeserializeInner(typeof(global::System.Guid));
            result.IsDefault = (bool)context.DeserializeInner(typeof(bool));
            result.IsDisplay = (bool)context.DeserializeInner(typeof(bool));
            result.SortWeight = (int)context.DeserializeInner(typeof(int));
            result.Token = (global::CAServer.Tokens.Dtos.Token)context.DeserializeInner(typeof(global::CAServer.Tokens.Dtos.Token));
            result.UserId = (global::System.Guid)context.DeserializeInner(typeof(global::System.Guid));
            return (global::CAServer.Grains.Grain.Tokens.UserTokens.UserTokenGrainDto)result;
        }
    }
}

namespace CAServer.Grains.Grain.UserExtraInfo
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::Orleans.CodeGeneration.MethodInvokerAttribute(typeof(global::CAServer.Grains.Grain.UserExtraInfo.IUserExtraInfoGrain), unchecked((int)0x8AFDD27E)), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]
    internal class OrleansCodeGenUserExtraInfoGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        public async global::System.Threading.Tasks.Task<object> Invoke(global::Orleans.Runtime.IAddressable grain, global::Orleans.CodeGeneration.InvokeMethodRequest request)
        {
            int interfaceId = request.InterfaceId;
            int methodId = request.MethodId;
            var arguments = request.Arguments;
            switch (interfaceId)
            {
                case unchecked((int)0x8AFDD27E):
                {
                    var casted = ((global::CAServer.Grains.Grain.UserExtraInfo.IUserExtraInfoGrain)grain);
                    switch (methodId)
                    {
                        case (int)0x69F6E9E:
                            return await casted.AddOrUpdateAsync((global::CAServer.Grains.Grain.UserExtraInfo.UserExtraInfoGrainDto)arguments[0]);
                        case unchecked((int)0xCC09E583):
                            return await casted.AddOrUpdateAppleUserAsync((global::CAServer.Grains.Grain.UserExtraInfo.UserExtraInfoGrainDto)arguments[0]);
                        case unchecked((int)0x96C8A830):
                            return await casted.GetAsync();
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        public int InterfaceId => unchecked((int)0x8AFDD27E);
        public ushort InterfaceVersion => 0;
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.SerializableAttribute, global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.GrainReferenceAttribute(typeof(global::CAServer.Grains.Grain.UserExtraInfo.IUserExtraInfoGrain))]
    internal class OrleansCodeGenUserExtraInfoGrainReference : global::Orleans.Runtime.GrainReference, global::CAServer.Grains.Grain.UserExtraInfo.IUserExtraInfoGrain
    {
        OrleansCodeGenUserExtraInfoGrainReference(global::Orleans.Runtime.GrainReference other) : base(other)
        {
        }

        OrleansCodeGenUserExtraInfoGrainReference(global::Orleans.Runtime.GrainReference other, global::Orleans.CodeGeneration.InvokeMethodOptions invokeMethodOptions) : base(other, invokeMethodOptions)
        {
        }

        OrleansCodeGenUserExtraInfoGrainReference(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
        }

        public override int InterfaceId => unchecked((int)0x8AFDD27E);
        public override ushort InterfaceVersion => 0;
        public override string InterfaceName => "IUserExtraInfoGrain";
        public override bool IsCompatible(int interfaceId) => interfaceId == unchecked((int)0x8AFDD27E);
        public override string GetMethodName(int interfaceId, int methodId)
        {
            switch (interfaceId)
            {
                case unchecked((int)0x8AFDD27E):
                {
                    switch (methodId)
                    {
                        case (int)0x69F6E9E:
                            return "AddOrUpdateAsync";
                        case unchecked((int)0xCC09E583):
                            return "AddOrUpdateAppleUserAsync";
                        case unchecked((int)0x96C8A830):
                            return "GetAsync";
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        global::System.Threading.Tasks.Task<global::CAServer.Grains.Grain.UserExtraInfo.UserExtraInfoGrainDto> global::CAServer.Grains.Grain.UserExtraInfo.IUserExtraInfoGrain.AddOrUpdateAsync(global::CAServer.Grains.Grain.UserExtraInfo.UserExtraInfoGrainDto userExtraInfoGrainDto0)
        {
            return base.InvokeMethodAsync<global::CAServer.Grains.Grain.UserExtraInfo.UserExtraInfoGrainDto>((int)0x69F6E9E, new object[]{userExtraInfoGrainDto0});
        }

        global::System.Threading.Tasks.Task<global::CAServer.Grains.Grain.UserExtraInfo.UserExtraInfoGrainDto> global::CAServer.Grains.Grain.UserExtraInfo.IUserExtraInfoGrain.AddOrUpdateAppleUserAsync(global::CAServer.Grains.Grain.UserExtraInfo.UserExtraInfoGrainDto userExtraInfoGrainDto0)
        {
            return base.InvokeMethodAsync<global::CAServer.Grains.Grain.UserExtraInfo.UserExtraInfoGrainDto>(unchecked((int)0xCC09E583), new object[]{userExtraInfoGrainDto0});
        }

        global::System.Threading.Tasks.Task<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.UserExtraInfo.UserExtraInfoGrainDto>> global::CAServer.Grains.Grain.UserExtraInfo.IUserExtraInfoGrain.GetAsync()
        {
            return base.InvokeMethodAsync<global::CAServer.Grains.Grain.GrainResultDto<global::CAServer.Grains.Grain.UserExtraInfo.UserExtraInfoGrainDto>>(unchecked((int)0x96C8A830), null);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.SerializerAttribute(typeof(global::CAServer.Grains.Grain.UserExtraInfo.UserExtraInfoGrainDto))]
    internal sealed class OrleansCodeGenCAServer_Grains_Grain_UserExtraInfo_UserExtraInfoGrainDtoSerializer
    {
        public OrleansCodeGenCAServer_Grains_Grain_UserExtraInfo_UserExtraInfoGrainDtoSerializer(global::Orleans.Serialization.IFieldUtils fieldUtils)
        {
        }

        [global::Orleans.CodeGeneration.CopierMethodAttribute]
        public object DeepCopier(object original, global::Orleans.Serialization.ICopyContext context)
        {
            global::CAServer.Grains.Grain.UserExtraInfo.UserExtraInfoGrainDto input = ((global::CAServer.Grains.Grain.UserExtraInfo.UserExtraInfoGrainDto)original);
            global::CAServer.Grains.Grain.UserExtraInfo.UserExtraInfoGrainDto result = new global::CAServer.Grains.Grain.UserExtraInfo.UserExtraInfoGrainDto();
            context.RecordCopy(original, result);
            result.AuthTime = input.AuthTime;
            result.Email = input.Email;
            result.FirstName = input.FirstName;
            result.FullName = input.FullName;
            result.GuardianType = input.GuardianType;
            result.Id = input.Id;
            result.IsPrivateEmail = input.IsPrivateEmail;
            result.LastName = input.LastName;
            result.Picture = input.Picture;
            result.VerifiedEmail = input.VerifiedEmail;
            return result;
        }

        [global::Orleans.CodeGeneration.SerializerMethodAttribute]
        public void Serializer(object untypedInput, global::Orleans.Serialization.ISerializationContext context, global::System.Type expected)
        {
            global::CAServer.Grains.Grain.UserExtraInfo.UserExtraInfoGrainDto input = (global::CAServer.Grains.Grain.UserExtraInfo.UserExtraInfoGrainDto)untypedInput;
            context.SerializeInner(input.AuthTime, typeof(global::System.DateTime));
            context.SerializeInner(input.Email, typeof(string));
            context.SerializeInner(input.FirstName, typeof(string));
            context.SerializeInner(input.FullName, typeof(string));
            context.SerializeInner(input.GuardianType, typeof(string));
            context.SerializeInner(input.Id, typeof(string));
            context.SerializeInner(input.IsPrivateEmail, typeof(bool));
            context.SerializeInner(input.LastName, typeof(string));
            context.SerializeInner(input.Picture, typeof(string));
            context.SerializeInner(input.VerifiedEmail, typeof(bool));
        }

        [global::Orleans.CodeGeneration.DeserializerMethodAttribute]
        public object Deserializer(global::System.Type expected, global::Orleans.Serialization.IDeserializationContext context)
        {
            global::CAServer.Grains.Grain.UserExtraInfo.UserExtraInfoGrainDto result = new global::CAServer.Grains.Grain.UserExtraInfo.UserExtraInfoGrainDto();
            context.RecordObject(result);
            result.AuthTime = (global::System.DateTime)context.DeserializeInner(typeof(global::System.DateTime));
            result.Email = (string)context.DeserializeInner(typeof(string));
            result.FirstName = (string)context.DeserializeInner(typeof(string));
            result.FullName = (string)context.DeserializeInner(typeof(string));
            result.GuardianType = (string)context.DeserializeInner(typeof(string));
            result.Id = (string)context.DeserializeInner(typeof(string));
            result.IsPrivateEmail = (bool)context.DeserializeInner(typeof(bool));
            result.LastName = (string)context.DeserializeInner(typeof(string));
            result.Picture = (string)context.DeserializeInner(typeof(string));
            result.VerifiedEmail = (bool)context.DeserializeInner(typeof(bool));
            return (global::CAServer.Grains.Grain.UserExtraInfo.UserExtraInfoGrainDto)result;
        }
    }
}

namespace CAVerifierServer.Grains.Grain
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::Orleans.CodeGeneration.MethodInvokerAttribute(typeof(global::CAVerifierServer.Grains.Grain.ISecurityGrain), (int)0x5DE8AF5B), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]
    internal class OrleansCodeGenSecurityGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        public async global::System.Threading.Tasks.Task<object> Invoke(global::Orleans.Runtime.IAddressable grain, global::Orleans.CodeGeneration.InvokeMethodRequest request)
        {
            int interfaceId = request.InterfaceId;
            int methodId = request.MethodId;
            var arguments = request.Arguments;
            switch (interfaceId)
            {
                case (int)0x5DE8AF5B:
                {
                    var casted = ((global::CAVerifierServer.Grains.Grain.ISecurityGrain)grain);
                    switch (methodId)
                    {
                        case unchecked((int)0x90A6C4CC):
                            return await casted.IsUserIpInWhiteListAsync((string)arguments[0]);
                        case unchecked((int)0xE7D10888):
                            await casted.AddUserIptoWhiteListAsync((string)arguments[0]);
                            return null;
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        public int InterfaceId => (int)0x5DE8AF5B;
        public ushort InterfaceVersion => 0;
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.SerializableAttribute, global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.GrainReferenceAttribute(typeof(global::CAVerifierServer.Grains.Grain.ISecurityGrain))]
    internal class OrleansCodeGenSecurityGrainReference : global::Orleans.Runtime.GrainReference, global::CAVerifierServer.Grains.Grain.ISecurityGrain
    {
        OrleansCodeGenSecurityGrainReference(global::Orleans.Runtime.GrainReference other) : base(other)
        {
        }

        OrleansCodeGenSecurityGrainReference(global::Orleans.Runtime.GrainReference other, global::Orleans.CodeGeneration.InvokeMethodOptions invokeMethodOptions) : base(other, invokeMethodOptions)
        {
        }

        OrleansCodeGenSecurityGrainReference(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
        {
        }

        public override int InterfaceId => (int)0x5DE8AF5B;
        public override ushort InterfaceVersion => 0;
        public override string InterfaceName => "ISecurityGrain";
        public override bool IsCompatible(int interfaceId) => interfaceId == (int)0x5DE8AF5B;
        public override string GetMethodName(int interfaceId, int methodId)
        {
            switch (interfaceId)
            {
                case (int)0x5DE8AF5B:
                {
                    switch (methodId)
                    {
                        case unchecked((int)0x90A6C4CC):
                            return "IsUserIpInWhiteListAsync";
                        case unchecked((int)0xE7D10888):
                            return "AddUserIptoWhiteListAsync";
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        global::System.Threading.Tasks.Task<bool> global::CAVerifierServer.Grains.Grain.ISecurityGrain.IsUserIpInWhiteListAsync(string ip0)
        {
            return base.InvokeMethodAsync<bool>(unchecked((int)0x90A6C4CC), new object[]{ip0});
        }

        global::System.Threading.Tasks.Task global::CAVerifierServer.Grains.Grain.ISecurityGrain.AddUserIptoWhiteListAsync(string userIp0)
        {
            return base.InvokeMethodAsync<object>(unchecked((int)0xE7D10888), new object[]{userIp0});
        }
    }
}

namespace CAServer.Grains.Grain
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.SerializerAttribute(typeof(global::CAServer.Grains.Grain.GrainResultDto<>))]
    internal sealed class OrleansCodeGenCAServer_Grains_Grain_GrainResultDtoSerializer<T>
    {
        public OrleansCodeGenCAServer_Grains_Grain_GrainResultDtoSerializer(global::Orleans.Serialization.IFieldUtils fieldUtils)
        {
        }

        [global::Orleans.CodeGeneration.CopierMethodAttribute]
        public object DeepCopier(object original, global::Orleans.Serialization.ICopyContext context)
        {
            global::CAServer.Grains.Grain.GrainResultDto<T> input = ((global::CAServer.Grains.Grain.GrainResultDto<T>)original);
            global::CAServer.Grains.Grain.GrainResultDto<T> result = new global::CAServer.Grains.Grain.GrainResultDto<T>();
            context.RecordCopy(original, result);
            result.Data = (T)context.DeepCopyInner(input.Data);
            result.Message = input.Message;
            result.Success = input.Success;
            return result;
        }

        [global::Orleans.CodeGeneration.SerializerMethodAttribute]
        public void Serializer(object untypedInput, global::Orleans.Serialization.ISerializationContext context, global::System.Type expected)
        {
            global::CAServer.Grains.Grain.GrainResultDto<T> input = (global::CAServer.Grains.Grain.GrainResultDto<T>)untypedInput;
            context.SerializeInner(input.Data, typeof(T));
            context.SerializeInner(input.Message, typeof(string));
            context.SerializeInner(input.Success, typeof(bool));
        }

        [global::Orleans.CodeGeneration.DeserializerMethodAttribute]
        public object Deserializer(global::System.Type expected, global::Orleans.Serialization.IDeserializationContext context)
        {
            global::CAServer.Grains.Grain.GrainResultDto<T> result = new global::CAServer.Grains.Grain.GrainResultDto<T>();
            context.RecordObject(result);
            result.Data = (T)context.DeserializeInner(typeof(T));
            result.Message = (string)context.DeserializeInner(typeof(string));
            result.Success = (bool)context.DeserializeInner(typeof(bool));
            return (global::CAServer.Grains.Grain.GrainResultDto<T>)result;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.SerializerAttribute(typeof(global::CAServer.Grains.Grain.GrainResultDto))]
    internal sealed class OrleansCodeGenCAServer_Grains_Grain_GrainResultDtoSerializer
    {
        public OrleansCodeGenCAServer_Grains_Grain_GrainResultDtoSerializer(global::Orleans.Serialization.IFieldUtils fieldUtils)
        {
        }

        [global::Orleans.CodeGeneration.CopierMethodAttribute]
        public object DeepCopier(object original, global::Orleans.Serialization.ICopyContext context)
        {
            global::CAServer.Grains.Grain.GrainResultDto input = ((global::CAServer.Grains.Grain.GrainResultDto)original);
            global::CAServer.Grains.Grain.GrainResultDto result = new global::CAServer.Grains.Grain.GrainResultDto();
            context.RecordCopy(original, result);
            result.Message = input.Message;
            result.Success = input.Success;
            return result;
        }

        [global::Orleans.CodeGeneration.SerializerMethodAttribute]
        public void Serializer(object untypedInput, global::Orleans.Serialization.ISerializationContext context, global::System.Type expected)
        {
            global::CAServer.Grains.Grain.GrainResultDto input = (global::CAServer.Grains.Grain.GrainResultDto)untypedInput;
            context.SerializeInner(input.Message, typeof(string));
            context.SerializeInner(input.Success, typeof(bool));
        }

        [global::Orleans.CodeGeneration.DeserializerMethodAttribute]
        public object Deserializer(global::System.Type expected, global::Orleans.Serialization.IDeserializationContext context)
        {
            global::CAServer.Grains.Grain.GrainResultDto result = new global::CAServer.Grains.Grain.GrainResultDto();
            context.RecordObject(result);
            result.Message = (string)context.DeserializeInner(typeof(string));
            result.Success = (bool)context.DeserializeInner(typeof(bool));
            return (global::CAServer.Grains.Grain.GrainResultDto)result;
        }
    }
}

namespace CAServer.Grains.State.ApplicationHandler
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.SerializerAttribute(typeof(global::CAServer.Grains.State.ApplicationHandler.TransactionInfo))]
    internal sealed class OrleansCodeGenCAServer_Grains_State_ApplicationHandler_TransactionInfoSerializer
    {
        public OrleansCodeGenCAServer_Grains_State_ApplicationHandler_TransactionInfoSerializer(global::Orleans.Serialization.IFieldUtils fieldUtils)
        {
        }

        [global::Orleans.CodeGeneration.CopierMethodAttribute]
        public object DeepCopier(object original, global::Orleans.Serialization.ICopyContext context)
        {
            global::CAServer.Grains.State.ApplicationHandler.TransactionInfo input = ((global::CAServer.Grains.State.ApplicationHandler.TransactionInfo)original);
            global::CAServer.Grains.State.ApplicationHandler.TransactionInfo result = new global::CAServer.Grains.State.ApplicationHandler.TransactionInfo();
            context.RecordCopy(original, result);
            result.BlockNumber = input.BlockNumber;
            result.Transaction = (byte[])context.DeepCopyInner(input.Transaction);
            result.TransactionId = input.TransactionId;
            return result;
        }

        [global::Orleans.CodeGeneration.SerializerMethodAttribute]
        public void Serializer(object untypedInput, global::Orleans.Serialization.ISerializationContext context, global::System.Type expected)
        {
            global::CAServer.Grains.State.ApplicationHandler.TransactionInfo input = (global::CAServer.Grains.State.ApplicationHandler.TransactionInfo)untypedInput;
            context.SerializeInner(input.BlockNumber, typeof(long));
            context.SerializeInner(input.Transaction, typeof(byte[]));
            context.SerializeInner(input.TransactionId, typeof(string));
        }

        [global::Orleans.CodeGeneration.DeserializerMethodAttribute]
        public object Deserializer(global::System.Type expected, global::Orleans.Serialization.IDeserializationContext context)
        {
            global::CAServer.Grains.State.ApplicationHandler.TransactionInfo result = new global::CAServer.Grains.State.ApplicationHandler.TransactionInfo();
            context.RecordObject(result);
            result.BlockNumber = (long)context.DeserializeInner(typeof(long));
            result.Transaction = (byte[])context.DeserializeInner(typeof(byte[]));
            result.TransactionId = (string)context.DeserializeInner(typeof(string));
            return (global::CAServer.Grains.State.ApplicationHandler.TransactionInfo)result;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.SerializerAttribute(typeof(global::CAServer.Grains.State.ApplicationHandler.SyncRecord))]
    internal sealed class OrleansCodeGenCAServer_Grains_State_ApplicationHandler_SyncRecordSerializer
    {
        public OrleansCodeGenCAServer_Grains_State_ApplicationHandler_SyncRecordSerializer(global::Orleans.Serialization.IFieldUtils fieldUtils)
        {
        }

        [global::Orleans.CodeGeneration.CopierMethodAttribute]
        public object DeepCopier(object original, global::Orleans.Serialization.ICopyContext context)
        {
            global::CAServer.Grains.State.ApplicationHandler.SyncRecord input = ((global::CAServer.Grains.State.ApplicationHandler.SyncRecord)original);
            global::CAServer.Grains.State.ApplicationHandler.SyncRecord result = new global::CAServer.Grains.State.ApplicationHandler.SyncRecord();
            context.RecordCopy(original, result);
            result.BlockHash = input.BlockHash;
            result.BlockHeight = input.BlockHeight;
            result.CaHash = input.CaHash;
            result.ChangeType = input.ChangeType;
            result.Manager = input.Manager;
            result.NotLoginGuardian = input.NotLoginGuardian;
            result.RetryTimes = input.RetryTimes;
            result.ValidateHeight = input.ValidateHeight;
            result.ValidateTransactionInfoDto = (global::CAServer.Grains.State.ApplicationHandler.TransactionInfo)context.DeepCopyInner(input.ValidateTransactionInfoDto);
            return result;
        }

        [global::Orleans.CodeGeneration.SerializerMethodAttribute]
        public void Serializer(object untypedInput, global::Orleans.Serialization.ISerializationContext context, global::System.Type expected)
        {
            global::CAServer.Grains.State.ApplicationHandler.SyncRecord input = (global::CAServer.Grains.State.ApplicationHandler.SyncRecord)untypedInput;
            context.SerializeInner(input.BlockHash, typeof(string));
            context.SerializeInner(input.BlockHeight, typeof(long));
            context.SerializeInner(input.CaHash, typeof(string));
            context.SerializeInner(input.ChangeType, typeof(string));
            context.SerializeInner(input.Manager, typeof(string));
            context.SerializeInner(input.NotLoginGuardian, typeof(string));
            context.SerializeInner(input.RetryTimes, typeof(int));
            context.SerializeInner(input.ValidateHeight, typeof(long));
            context.SerializeInner(input.ValidateTransactionInfoDto, typeof(global::CAServer.Grains.State.ApplicationHandler.TransactionInfo));
        }

        [global::Orleans.CodeGeneration.DeserializerMethodAttribute]
        public object Deserializer(global::System.Type expected, global::Orleans.Serialization.IDeserializationContext context)
        {
            global::CAServer.Grains.State.ApplicationHandler.SyncRecord result = new global::CAServer.Grains.State.ApplicationHandler.SyncRecord();
            context.RecordObject(result);
            result.BlockHash = (string)context.DeserializeInner(typeof(string));
            result.BlockHeight = (long)context.DeserializeInner(typeof(long));
            result.CaHash = (string)context.DeserializeInner(typeof(string));
            result.ChangeType = (string)context.DeserializeInner(typeof(string));
            result.Manager = (string)context.DeserializeInner(typeof(string));
            result.NotLoginGuardian = (string)context.DeserializeInner(typeof(string));
            result.RetryTimes = (int)context.DeserializeInner(typeof(int));
            result.ValidateHeight = (long)context.DeserializeInner(typeof(long));
            result.ValidateTransactionInfoDto = (global::CAServer.Grains.State.ApplicationHandler.TransactionInfo)context.DeserializeInner(typeof(global::CAServer.Grains.State.ApplicationHandler.TransactionInfo));
            return (global::CAServer.Grains.State.ApplicationHandler.SyncRecord)result;
        }
    }
}

namespace OrleansGeneratedCode
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0")]
    internal sealed class OrleansCodeGenCAServer_GrainsFeaturePopulator : global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Metadata.GrainInterfaceFeature>, global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Metadata.GrainClassFeature>, global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Serialization.SerializerFeature>
    {
        public void Populate(global::Orleans.Metadata.GrainInterfaceFeature feature)
        {
            feature.Interfaces.Add(new global::Orleans.Metadata.GrainInterfaceMetadata(typeof(global::CAServer.Grains.Grain.Account.IRecoveryGrain), typeof(CAServer.Grains.Grain.Account.OrleansCodeGenRecoveryGrainReference), typeof(CAServer.Grains.Grain.Account.OrleansCodeGenRecoveryGrainMethodInvoker), (int)0x167E62AE));
            feature.Interfaces.Add(new global::Orleans.Metadata.GrainInterfaceMetadata(typeof(global::CAServer.Grains.Grain.Account.IRegisterGrain), typeof(CAServer.Grains.Grain.Account.OrleansCodeGenRegisterGrainReference), typeof(CAServer.Grains.Grain.Account.OrleansCodeGenRegisterGrainMethodInvoker), unchecked((int)0xD9E28E28)));
            feature.Interfaces.Add(new global::Orleans.Metadata.GrainInterfaceMetadata(typeof(global::CAServer.Grains.Grain.ApplicationHandler.IContractServiceGrain), typeof(CAServer.Grains.Grain.ApplicationHandler.OrleansCodeGenContractServiceGrainReference), typeof(CAServer.Grains.Grain.ApplicationHandler.OrleansCodeGenContractServiceGrainMethodInvoker), (int)0x45C22B81));
            feature.Interfaces.Add(new global::Orleans.Metadata.GrainInterfaceMetadata(typeof(global::CAServer.Grains.Grain.ApplicationHandler.IContractServiceGraphQLGrain), typeof(CAServer.Grains.Grain.ApplicationHandler.OrleansCodeGenContractServiceGraphQLGrainReference), typeof(CAServer.Grains.Grain.ApplicationHandler.OrleansCodeGenContractServiceGraphQLGrainMethodInvoker), (int)0x6FAB38FA));
            feature.Interfaces.Add(new global::Orleans.Metadata.GrainInterfaceMetadata(typeof(global::CAServer.Grains.Grain.ApplicationHandler.ISyncRecordGrain), typeof(CAServer.Grains.Grain.ApplicationHandler.OrleansCodeGenSyncRecordGrainReference), typeof(CAServer.Grains.Grain.ApplicationHandler.OrleansCodeGenSyncRecordGrainMethodInvoker), unchecked((int)0xCB476306)));
            feature.Interfaces.Add(new global::Orleans.Metadata.GrainInterfaceMetadata(typeof(global::CAServer.Grains.Grain.Chain.IChainGrain), typeof(CAServer.Grains.Grain.Chain.OrleansCodeGenChainGrainReference), typeof(CAServer.Grains.Grain.Chain.OrleansCodeGenChainGrainMethodInvoker), unchecked((int)0xB380DB20)));
            feature.Interfaces.Add(new global::Orleans.Metadata.GrainInterfaceMetadata(typeof(global::CAServer.Grains.Grain.Contacts.ICAHolderGrain), typeof(CAServer.Grains.Grain.Contacts.OrleansCodeGenCAHolderGrainReference), typeof(CAServer.Grains.Grain.Contacts.OrleansCodeGenCAHolderGrainMethodInvoker), (int)0x47BE019C));
            feature.Interfaces.Add(new global::Orleans.Metadata.GrainInterfaceMetadata(typeof(global::CAServer.Grains.Grain.Contacts.IContactGrain), typeof(CAServer.Grains.Grain.Contacts.OrleansCodeGenContactGrainReference), typeof(CAServer.Grains.Grain.Contacts.OrleansCodeGenContactGrainMethodInvoker), unchecked((int)0xDC1C828A)));
            feature.Interfaces.Add(new global::Orleans.Metadata.GrainInterfaceMetadata(typeof(global::CAServer.Grains.Grain.Contacts.IContactNameGrain), typeof(CAServer.Grains.Grain.Contacts.OrleansCodeGenContactNameGrainReference), typeof(CAServer.Grains.Grain.Contacts.OrleansCodeGenContactNameGrainMethodInvoker), (int)0x61BB0A72));
            feature.Interfaces.Add(new global::Orleans.Metadata.GrainInterfaceMetadata(typeof(global::CAServer.Grains.Grain.CrossChain.ICrossChainTransferGrain), typeof(CAServer.Grains.Grain.CrossChain.OrleansCodeGenCrossChainTransferGrainReference), typeof(CAServer.Grains.Grain.CrossChain.OrleansCodeGenCrossChainTransferGrainMethodInvoker), (int)0x60B5CC7C));
            feature.Interfaces.Add(new global::Orleans.Metadata.GrainInterfaceMetadata(typeof(global::CAServer.Grains.Grain.Device.IDeviceGrain), typeof(CAServer.Grains.Grain.Device.OrleansCodeGenDeviceGrainReference), typeof(CAServer.Grains.Grain.Device.OrleansCodeGenDeviceGrainMethodInvoker), (int)0x4B6EC0F4));
            feature.Interfaces.Add(new global::Orleans.Metadata.GrainInterfaceMetadata(typeof(global::CAServer.Grains.Grain.Guardian.IGuardianGrain), typeof(CAServer.Grains.Grain.Guardian.OrleansCodeGenGuardianGrainReference), typeof(CAServer.Grains.Grain.Guardian.OrleansCodeGenGuardianGrainMethodInvoker), (int)0x4CF2A3A1));
            feature.Interfaces.Add(new global::Orleans.Metadata.GrainInterfaceMetadata(typeof(global::CAServer.Grains.Grain.Notify.INotifyGrain), typeof(CAServer.Grains.Grain.Notify.OrleansCodeGenNotifyGrainReference), typeof(CAServer.Grains.Grain.Notify.OrleansCodeGenNotifyGrainMethodInvoker), (int)0x511C8A4D));
            feature.Interfaces.Add(new global::Orleans.Metadata.GrainInterfaceMetadata(typeof(global::CAServer.Grains.Grain.Notify.INotifyRulesGrain), typeof(CAServer.Grains.Grain.Notify.OrleansCodeGenNotifyRulesGrainReference), typeof(CAServer.Grains.Grain.Notify.OrleansCodeGenNotifyRulesGrainMethodInvoker), (int)0x5A56D526));
            feature.Interfaces.Add(new global::Orleans.Metadata.GrainInterfaceMetadata(typeof(global::CAServer.Grains.Grain.ThirdPart.IOrderGrain), typeof(CAServer.Grains.Grain.ThirdPart.OrleansCodeGenOrderGrainReference), typeof(CAServer.Grains.Grain.ThirdPart.OrleansCodeGenOrderGrainMethodInvoker), unchecked((int)0xBA336752)));
            feature.Interfaces.Add(new global::Orleans.Metadata.GrainInterfaceMetadata(typeof(global::CAServer.Grains.Grain.Tokens.TokenPrice.ITokenPriceGrain), typeof(CAServer.Grains.Grain.Tokens.TokenPrice.OrleansCodeGenTokenPriceGrainReference), typeof(CAServer.Grains.Grain.Tokens.TokenPrice.OrleansCodeGenTokenPriceGrainMethodInvoker), (int)0x1090005B));
            feature.Interfaces.Add(new global::Orleans.Metadata.GrainInterfaceMetadata(typeof(global::CAServer.Grains.Grain.Tokens.TokenPrice.ITokenPriceSnapshotGrain), typeof(CAServer.Grains.Grain.Tokens.TokenPrice.OrleansCodeGenTokenPriceSnapshotGrainReference), typeof(CAServer.Grains.Grain.Tokens.TokenPrice.OrleansCodeGenTokenPriceSnapshotGrainMethodInvoker), (int)0x4B82AE00));
            feature.Interfaces.Add(new global::Orleans.Metadata.GrainInterfaceMetadata(typeof(global::CAServer.Grains.Grain.Tokens.UserTokens.IUserTokenGrain), typeof(CAServer.Grains.Grain.Tokens.UserTokens.OrleansCodeGenUserTokenGrainReference), typeof(CAServer.Grains.Grain.Tokens.UserTokens.OrleansCodeGenUserTokenGrainMethodInvoker), (int)0x29DDC99C));
            feature.Interfaces.Add(new global::Orleans.Metadata.GrainInterfaceMetadata(typeof(global::CAServer.Grains.Grain.Tokens.UserTokens.IUserTokenSymbolGrain), typeof(CAServer.Grains.Grain.Tokens.UserTokens.OrleansCodeGenUserTokenSymbolGrainReference), typeof(CAServer.Grains.Grain.Tokens.UserTokens.OrleansCodeGenUserTokenSymbolGrainMethodInvoker), unchecked((int)0xE86EBF34)));
            feature.Interfaces.Add(new global::Orleans.Metadata.GrainInterfaceMetadata(typeof(global::CAServer.Grains.Grain.UserExtraInfo.IUserExtraInfoGrain), typeof(CAServer.Grains.Grain.UserExtraInfo.OrleansCodeGenUserExtraInfoGrainReference), typeof(CAServer.Grains.Grain.UserExtraInfo.OrleansCodeGenUserExtraInfoGrainMethodInvoker), unchecked((int)0x8AFDD27E)));
            feature.Interfaces.Add(new global::Orleans.Metadata.GrainInterfaceMetadata(typeof(global::CAVerifierServer.Grains.Grain.ISecurityGrain), typeof(CAVerifierServer.Grains.Grain.OrleansCodeGenSecurityGrainReference), typeof(CAVerifierServer.Grains.Grain.OrleansCodeGenSecurityGrainMethodInvoker), (int)0x5DE8AF5B));
        }

        public void Populate(global::Orleans.Metadata.GrainClassFeature feature)
        {
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof(global::CAServer.Grains.Grain.Account.RecoveryGrain)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof(global::CAServer.Grains.Grain.Account.RegisterGrain)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof(global::CAServer.Grains.Grain.ApplicationHandler.ContractServiceGrain)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof(global::CAServer.Grains.Grain.ApplicationHandler.ContractServiceGraphQLGrain)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof(global::CAServer.Grains.Grain.ApplicationHandler.SyncRecordGrain)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof(global::CAServer.Grains.Grain.Chain.ChainGrain)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof(global::CAServer.Grains.Grain.Contacts.CAHolderGrain)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof(global::CAServer.Grains.Grain.Contacts.ContactGrain)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof(global::CAServer.Grains.Grain.Contacts.ContactNameGrain)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof(global::CAServer.Grains.Grain.CrossChain.CrossChainTransferGrain)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof(global::CAServer.Grains.Grain.Device.DeviceGrain)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof(global::CAServer.Grains.Grain.Notify.NotifyGrain)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof(global::CAServer.Grains.Grain.Notify.NotifyRulesGrain)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof(global::CAServer.Grains.Grain.ThirdPart.OrderGrain)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof(global::CAServer.Grains.Grain.Tokens.TokenPrice.TokenPriceGrain)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof(global::CAServer.Grains.Grain.Tokens.TokenPrice.TokenPriceSnapshotGrain)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof(global::CAServer.Grains.Grain.Tokens.UserTokens.UserTokenGrain)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof(global::CAServer.Grains.Grain.Tokens.UserTokens.UserTokenSymbolGrain)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof(global::CAServer.Grains.Grain.UserExtraInfo.UserExtraInfoGrain)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof(global::GuardianGrain)));
            feature.Classes.Add(new global::Orleans.Metadata.GrainClassMetadata(typeof(global::CAVerifierServer.Grains.Grain.SecurityGrain)));
        }

        public void Populate(global::Orleans.Serialization.SerializerFeature feature)
        {
            feature.AddSerializerType(typeof(global::CAServer.Grains.Grain.Account.CreateHolderResultGrainDto), typeof(CAServer.Grains.Grain.Account.OrleansCodeGenCAServer_Grains_Grain_Account_CreateHolderResultGrainDtoSerializer), false);
            feature.AddSerializerType(typeof(global::CAServer.Grains.Grain.GrainResultDto<>), typeof(CAServer.Grains.Grain.OrleansCodeGenCAServer_Grains_Grain_GrainResultDtoSerializer<>), false);
            feature.AddSerializerType(typeof(global::CAServer.Grains.Grain.Account.RecoveryGrainDto), typeof(CAServer.Grains.Grain.Account.OrleansCodeGenCAServer_Grains_Grain_Account_RecoveryGrainDtoSerializer), false);
            feature.AddSerializerType(typeof(global::CAServer.Grains.Grain.GrainResultDto), typeof(CAServer.Grains.Grain.OrleansCodeGenCAServer_Grains_Grain_GrainResultDtoSerializer), false);
            feature.AddSerializerType(typeof(global::CAServer.Grains.Grain.Account.SocialRecoveryResultGrainDto), typeof(CAServer.Grains.Grain.Account.OrleansCodeGenCAServer_Grains_Grain_Account_SocialRecoveryResultGrainDtoSerializer), false);
            feature.AddSerializerType(typeof(global::CAServer.Grains.Grain.Account.RegisterGrainDto), typeof(CAServer.Grains.Grain.Account.OrleansCodeGenCAServer_Grains_Grain_Account_RegisterGrainDtoSerializer), false);
            feature.AddSerializerType(typeof(global::CAServer.Grains.Grain.Account.ChainGrainDto), typeof(CAServer.Grains.Grain.Account.OrleansCodeGenCAServer_Grains_Grain_Account_ChainGrainDtoSerializer), false);
            feature.AddSerializerType(typeof(global::CAServer.Grains.Grain.ApplicationHandler.TransactionInfoDto), typeof(CAServer.Grains.Grain.ApplicationHandler.OrleansCodeGenCAServer_Grains_Grain_ApplicationHandler_TransactionInfoDtoSerializer), false);
            feature.AddSerializerType(typeof(global::CAServer.Grains.Grain.ApplicationHandler.CreateHolderDto), typeof(CAServer.Grains.Grain.ApplicationHandler.OrleansCodeGenCAServer_Grains_Grain_ApplicationHandler_CreateHolderDtoSerializer), false);
            feature.AddSerializerType(typeof(global::CAServer.Grains.Grain.ApplicationHandler.SocialRecoveryDto), typeof(CAServer.Grains.Grain.ApplicationHandler.OrleansCodeGenCAServer_Grains_Grain_ApplicationHandler_SocialRecoveryDtoSerializer), false);
            feature.AddSerializerType(typeof(global::CAServer.Grains.Grain.ApplicationHandler.ContractDtoBase), typeof(CAServer.Grains.Grain.ApplicationHandler.OrleansCodeGenCAServer_Grains_Grain_ApplicationHandler_ContractDtoBaseSerializer), false);
            feature.AddSerializerType(typeof(global::CAServer.Grains.State.ApplicationHandler.TransactionInfo), typeof(CAServer.Grains.State.ApplicationHandler.OrleansCodeGenCAServer_Grains_State_ApplicationHandler_TransactionInfoSerializer), false);
            feature.AddSerializerType(typeof(global::CAServer.Grains.State.ApplicationHandler.SyncRecord), typeof(CAServer.Grains.State.ApplicationHandler.OrleansCodeGenCAServer_Grains_State_ApplicationHandler_SyncRecordSerializer), false);
            feature.AddSerializerType(typeof(global::CAServer.Grains.Grain.Contacts.CAHolderGrainDto), typeof(CAServer.Grains.Grain.Contacts.OrleansCodeGenCAServer_Grains_Grain_Contacts_CAHolderGrainDtoSerializer), false);
            feature.AddSerializerType(typeof(global::CAServer.Grains.Grain.Contacts.ContactGrainDto), typeof(CAServer.Grains.Grain.Contacts.OrleansCodeGenCAServer_Grains_Grain_Contacts_ContactGrainDtoSerializer), false);
            feature.AddSerializerType(typeof(global::CAServer.Grains.Grain.CrossChain.CrossChainTransferDto), typeof(CAServer.Grains.Grain.CrossChain.OrleansCodeGenCAServer_Grains_Grain_CrossChain_CrossChainTransferDtoSerializer), false);
            feature.AddSerializerType(typeof(global::CAServer.Grains.Grain.Guardian.GuardianGrainDto), typeof(CAServer.Grains.Grain.Guardian.OrleansCodeGenCAServer_Grains_Grain_Guardian_GuardianGrainDtoSerializer), false);
            feature.AddSerializerType(typeof(global::CAServer.Grains.Grain.Notify.NotifyGrainDto), typeof(CAServer.Grains.Grain.Notify.OrleansCodeGenCAServer_Grains_Grain_Notify_NotifyGrainDtoSerializer), false);
            feature.AddSerializerType(typeof(global::CAServer.Grains.Grain.Notify.NotifyRulesGrainDto), typeof(CAServer.Grains.Grain.Notify.OrleansCodeGenCAServer_Grains_Grain_Notify_NotifyRulesGrainDtoSerializer), false);
            feature.AddSerializerType(typeof(global::CAServer.Grains.Grain.ThirdPart.OrderGrainDto), typeof(CAServer.Grains.Grain.ThirdPart.OrleansCodeGenCAServer_Grains_Grain_ThirdPart_OrderGrainDtoSerializer), false);
            feature.AddSerializerType(typeof(global::CAServer.Grains.Grain.Tokens.TokenPrice.TokenPriceGrainDto), typeof(CAServer.Grains.Grain.Tokens.TokenPrice.OrleansCodeGenCAServer_Grains_Grain_Tokens_TokenPrice_TokenPriceGrainDtoSerializer), false);
            feature.AddSerializerType(typeof(global::CAServer.Grains.Grain.Tokens.UserTokens.UserTokenGrainDto), typeof(CAServer.Grains.Grain.Tokens.UserTokens.OrleansCodeGenCAServer_Grains_Grain_Tokens_UserTokens_UserTokenGrainDtoSerializer), false);
            feature.AddSerializerType(typeof(global::CAServer.Grains.Grain.UserExtraInfo.UserExtraInfoGrainDto), typeof(CAServer.Grains.Grain.UserExtraInfo.OrleansCodeGenCAServer_Grains_Grain_UserExtraInfo_UserExtraInfoGrainDtoSerializer), false);
            feature.AddKnownType("CAServer.Grains.Grain.Account.RecoveryGrain,CAServer.Grains", "CAServer.Grains.Grain.Account.RecoveryGrain");
            feature.AddKnownType("CAServer.Grains.Grain.Account.RegisterGrain,CAServer.Grains", "CAServer.Grains.Grain.Account.RegisterGrain");
            feature.AddKnownType("CAServer.Grains.Grain.ApplicationHandler.ContractServiceGrain,CAServer.Grains", "CAServer.Grains.Grain.ApplicationHandler.ContractServiceGrain");
            feature.AddKnownType("CAServer.Grains.Grain.ApplicationHandler.ContractServiceGraphQLGrain,CAServer.Grains", "CAServer.Grains.Grain.ApplicationHandler.ContractServiceGraphQLGrain");
            feature.AddKnownType("CAServer.Grains.Grain.ApplicationHandler.SyncRecordGrain,CAServer.Grains", "CAServer.Grains.Grain.ApplicationHandler.SyncRecordGrain");
            feature.AddKnownType("CAServer.Grains.Grain.Chain.ChainGrain,CAServer.Grains", "CAServer.Grains.Grain.Chain.ChainGrain");
            feature.AddKnownType("CAServer.Grains.Grain.Contacts.CAHolderGrain,CAServer.Grains", "CAServer.Grains.Grain.Contacts.CAHolderGrain");
            feature.AddKnownType("CAServer.Grains.Grain.Contacts.ContactGrain,CAServer.Grains", "CAServer.Grains.Grain.Contacts.ContactGrain");
            feature.AddKnownType("CAServer.Grains.Grain.Contacts.ContactNameGrain,CAServer.Grains", "CAServer.Grains.Grain.Contacts.ContactNameGrain");
            feature.AddKnownType("CAServer.Grains.Grain.CrossChain.CrossChainTransferGrain,CAServer.Grains", "CAServer.Grains.Grain.CrossChain.CrossChainTransferGrain");
            feature.AddKnownType("CAServer.Grains.Grain.Device.DeviceGrain,CAServer.Grains", "CAServer.Grains.Grain.Device.DeviceGrain");
            feature.AddKnownType("CAServer.Grains.Grain.Notify.NotifyGrain,CAServer.Grains", "CAServer.Grains.Grain.Notify.NotifyGrain");
            feature.AddKnownType("CAServer.Grains.Grain.Notify.NotifyRulesGrain,CAServer.Grains", "CAServer.Grains.Grain.Notify.NotifyRulesGrain");
            feature.AddKnownType("CAServer.Grains.Grain.ThirdPart.OrderGrain,CAServer.Grains", "CAServer.Grains.Grain.ThirdPart.OrderGrain");
            feature.AddKnownType("CAServer.Grains.Grain.Tokens.TokenPrice.TokenPriceGrain,CAServer.Grains", "CAServer.Grains.Grain.Tokens.TokenPrice.TokenPriceGrain");
            feature.AddKnownType("CAServer.Grains.Grain.Tokens.TokenPrice.TokenPriceSnapshotGrain,CAServer.Grains", "CAServer.Grains.Grain.Tokens.TokenPrice.TokenPriceSnapshotGrain");
            feature.AddKnownType("CAServer.Grains.Grain.Tokens.UserTokens.UserTokenGrain,CAServer.Grains", "CAServer.Grains.Grain.Tokens.UserTokens.UserTokenGrain");
            feature.AddKnownType("CAServer.Grains.Grain.Tokens.UserTokens.UserTokenSymbolGrain,CAServer.Grains", "CAServer.Grains.Grain.Tokens.UserTokens.UserTokenSymbolGrain");
            feature.AddKnownType("CAServer.Grains.Grain.UserExtraInfo.UserExtraInfoGrain,CAServer.Grains", "CAServer.Grains.Grain.UserExtraInfo.UserExtraInfoGrain");
            feature.AddKnownType("GuardianGrain,CAServer.Grains", "<global namespace>.GuardianGrain");
            feature.AddKnownType("CAVerifierServer.Grains.Grain.SecurityGrain,CAServer.Grains", "CAVerifierServer.Grains.Grain.SecurityGrain");
            feature.AddKnownType("CAServer.Grains.CAServerGrainsAutoMapperProfile,CAServer.Grains", "CAServer.Grains.CAServerGrainsAutoMapperProfile");
            feature.AddKnownType("CAServer.Grains.CAServerGrainsModule,CAServer.Grains", "CAServer.Grains.CAServerGrainsModule");
            feature.AddKnownType("CAServer.Grains.Grain.Account.CAAccountOption,CAServer.Grains", "CAServer.Grains.Grain.Account.CAAccountOption");
            feature.AddKnownType("CAServer.Grains.Grain.Account.CreateHolderResultGrainDto,CAServer.Grains", "CAServer.Grains.Grain.Account.CreateHolderResultGrainDto");
            feature.AddKnownType("CAServer.Grains.Grain.Account.IRecoveryGrain,CAServer.Grains", "CAServer.Grains.Grain.Account.IRecoveryGrain");
            feature.AddKnownType("System.Threading.Tasks.Task`1", "Task`1'1");
            feature.AddKnownType("CAServer.Grains.Grain.GrainResultDto`1,CAServer.Grains", "CAServer.Grains.Grain.GrainResultDto`1'1");
            feature.AddKnownType("CAServer.Grains.Grain.Account.RecoveryGrainDto,CAServer.Grains", "CAServer.Grains.Grain.Account.RecoveryGrainDto");
            feature.AddKnownType("CAServer.Dtos.RecoveryDto,CAServer.Application.Contracts", "CAServer.Dtos.RecoveryDto");
            feature.AddKnownType("CAServer.Account.CAAccountBase,CAServer.Application.Contracts", "CAServer.Account.CAAccountBase");
            feature.AddKnownType("CAServer.Grains.Grain.GrainResultDto,CAServer.Grains", "CAServer.Grains.Grain.GrainResultDto");
            feature.AddKnownType("System.Threading.Tasks.Task", "Task");
            feature.AddKnownType("CAServer.Grains.Grain.Account.SocialRecoveryResultGrainDto,CAServer.Grains", "CAServer.Grains.Grain.Account.SocialRecoveryResultGrainDto");
            feature.AddKnownType("CAServer.ContractEventHandler.SocialRecoveryEto,CAServer.Application.Contracts", "CAServer.ContractEventHandler.SocialRecoveryEto");
            feature.AddKnownType("CAServer.ContractEventHandler.ContractServiceEto,CAServer.Application.Contracts", "CAServer.ContractEventHandler.ContractServiceEto");
            feature.AddKnownType("CAServer.Grains.Grain.Account.IRegisterGrain,CAServer.Grains", "CAServer.Grains.Grain.Account.IRegisterGrain");
            feature.AddKnownType("CAServer.Grains.Grain.Account.RegisterGrainDto,CAServer.Grains", "CAServer.Grains.Grain.Account.RegisterGrainDto");
            feature.AddKnownType("CAServer.Dtos.RegisterDto,CAServer.Application.Contracts", "CAServer.Dtos.RegisterDto");
            feature.AddKnownType("CAServer.ContractEventHandler.CreateHolderEto,CAServer.Application.Contracts", "CAServer.ContractEventHandler.CreateHolderEto");
            feature.AddKnownType("CAServer.Grains.Grain.Account.RecoveryMessage,CAServer.Grains", "CAServer.Grains.Grain.Account.RecoveryMessage");
            feature.AddKnownType("CAServer.Grains.Grain.Account.RegisterMessage,CAServer.Grains", "CAServer.Grains.Grain.Account.RegisterMessage");
            feature.AddKnownType("CAServer.Grains.Grain.Account.ChainGrainDto,CAServer.Grains", "CAServer.Grains.Grain.Account.ChainGrainDto");
            feature.AddKnownType("CAServer.Grains.Grain.ApplicationHandler.TransactionInfoDto,CAServer.Grains", "CAServer.Grains.Grain.ApplicationHandler.TransactionInfoDto");
            feature.AddKnownType("CAServer.Grains.Grain.ApplicationHandler.ChainInfo,CAServer.Grains", "CAServer.Grains.Grain.ApplicationHandler.ChainInfo");
            feature.AddKnownType("CAServer.Grains.Grain.ApplicationHandler.CreateHolderDto,CAServer.Grains", "CAServer.Grains.Grain.ApplicationHandler.CreateHolderDto");
            feature.AddKnownType("CAServer.Grains.Grain.ApplicationHandler.SocialRecoveryDto,CAServer.Grains", "CAServer.Grains.Grain.ApplicationHandler.SocialRecoveryDto");
            feature.AddKnownType("CAServer.Grains.Grain.ApplicationHandler.ContractDtoBase,CAServer.Grains", "CAServer.Grains.Grain.ApplicationHandler.ContractDtoBase");
            feature.AddKnownType("CAServer.Grains.Grain.ApplicationHandler.IContractServiceGrain,CAServer.Grains", "CAServer.Grains.Grain.ApplicationHandler.IContractServiceGrain");
            feature.AddKnownType("AElf.Client.Dto.TransactionResultDto,AElf.Client", "AElf.Client.Dto.TransactionResultDto");
            feature.AddKnownType("Portkey.Contracts.CA.GetHolderInfoOutput,CAServer.Application.Contracts", "Portkey.Contracts.CA.GetHolderInfoOutput");
            feature.AddKnownType("Google.Protobuf.Collections.RepeatedField`1,Google.Protobuf", "Google.Protobuf.Collections.RepeatedField`1'1");
            feature.AddKnownType("Portkey.Contracts.CA.SyncHolderInfoInput,CAServer.Application.Contracts", "Portkey.Contracts.CA.SyncHolderInfoInput");
            feature.AddKnownType("CAServer.Grains.State.ApplicationHandler.TransactionInfo,CAServer.Grains", "CAServer.Grains.State.ApplicationHandler.TransactionInfo");
            feature.AddKnownType("CAServer.Grains.Grain.ApplicationHandler.IContractServiceGraphQLGrain,CAServer.Grains", "CAServer.Grains.Grain.ApplicationHandler.IContractServiceGraphQLGrain");
            feature.AddKnownType("CAServer.Grains.Grain.ApplicationHandler.ChainOptions,CAServer.Grains", "CAServer.Grains.Grain.ApplicationHandler.ChainOptions");
            feature.AddKnownType("CAServer.Grains.Grain.ApplicationHandler.GrainOptions,CAServer.Grains", "CAServer.Grains.Grain.ApplicationHandler.GrainOptions");
            feature.AddKnownType("CAServer.Grains.Grain.ApplicationHandler.ISyncRecordGrain,CAServer.Grains", "CAServer.Grains.Grain.ApplicationHandler.ISyncRecordGrain");
            feature.AddKnownType("System.Collections.Generic.List`1", "List`1'1");
            feature.AddKnownType("CAServer.Grains.State.ApplicationHandler.SyncRecord,CAServer.Grains", "CAServer.Grains.State.ApplicationHandler.SyncRecord");
            feature.AddKnownType("CAServer.Grains.Grain.Chain.ChainMessage,CAServer.Grains", "CAServer.Grains.Grain.Chain.ChainMessage");
            feature.AddKnownType("CAServer.Grains.Grain.Chain.IChainGrain,CAServer.Grains", "CAServer.Grains.Grain.Chain.IChainGrain");
            feature.AddKnownType("CAServer.Chain.ChainDto,CAServer.Application.Contracts", "CAServer.Chain.ChainDto");
            feature.AddKnownType("CAServer.Grains.Grain.Contacts.CAHolderGrainDto,CAServer.Grains", "CAServer.Grains.Grain.Contacts.CAHolderGrainDto");
            feature.AddKnownType("CAServer.Grains.Grain.Contacts.CAHolderMessage,CAServer.Grains", "CAServer.Grains.Grain.Contacts.CAHolderMessage");
            feature.AddKnownType("CAServer.Grains.Grain.Contacts.ContactAddress,CAServer.Grains", "CAServer.Grains.Grain.Contacts.ContactAddress");
            feature.AddKnownType("CAServer.Grains.Grain.Contacts.ContactGrainDto,CAServer.Grains", "CAServer.Grains.Grain.Contacts.ContactGrainDto");
            feature.AddKnownType("CAServer.Grains.Grain.Contacts.ContactMessage,CAServer.Grains", "CAServer.Grains.Grain.Contacts.ContactMessage");
            feature.AddKnownType("CAServer.Grains.Grain.Contacts.ICAHolderGrain,CAServer.Grains", "CAServer.Grains.Grain.Contacts.ICAHolderGrain");
            feature.AddKnownType("CAServer.Dtos.CAHolderDto,CAServer.Application.Contracts", "CAServer.Dtos.CAHolderDto");
            feature.AddKnownType("CAServer.Grains.Grain.Contacts.IContactGrain,CAServer.Grains", "CAServer.Grains.Grain.Contacts.IContactGrain");
            feature.AddKnownType("CAServer.Contacts.ContactDto,CAServer.Application.Contracts", "CAServer.Contacts.ContactDto");
            feature.AddKnownType("System.Guid", "Guid");
            feature.AddKnownType("CAServer.Grains.Grain.Contacts.IContactNameGrain,CAServer.Grains", "CAServer.Grains.Grain.Contacts.IContactNameGrain");
            feature.AddKnownType("CAServer.Grains.Grain.CrossChain.CrossChainTransferDto,CAServer.Grains", "CAServer.Grains.Grain.CrossChain.CrossChainTransferDto");
            feature.AddKnownType("CAServer.Grains.Grain.CrossChain.ICrossChainTransferGrain,CAServer.Grains", "CAServer.Grains.Grain.CrossChain.ICrossChainTransferGrain");
            feature.AddKnownType("System.Collections.Generic.Dictionary`2", "Dictionary`2'2");
            feature.AddKnownType("CAServer.Grains.Grain.Device.DeviceGrainConstants,CAServer.Grains", "CAServer.Grains.Grain.Device.DeviceGrainConstants");
            feature.AddKnownType("CAServer.Grains.Grain.Device.IDeviceGrain,CAServer.Grains", "CAServer.Grains.Grain.Device.IDeviceGrain");
            feature.AddKnownType("CAServer.Grains.Grain.Guardian.GuardianGrainDto,CAServer.Grains", "CAServer.Grains.Grain.Guardian.GuardianGrainDto");
            feature.AddKnownType("CAServer.Grains.Grain.Guardian.IGuardianGrain,CAServer.Grains", "CAServer.Grains.Grain.Guardian.IGuardianGrain");
            feature.AddKnownType("CAServer.Grains.Grain.Notify.INotifyGrain,CAServer.Grains", "CAServer.Grains.Grain.Notify.INotifyGrain");
            feature.AddKnownType("CAServer.Grains.Grain.Notify.NotifyGrainDto,CAServer.Grains", "CAServer.Grains.Grain.Notify.NotifyGrainDto");
            feature.AddKnownType("CAServer.Notify.NotifyRulesBase,CAServer.Application.Contracts", "CAServer.Notify.NotifyRulesBase");
            feature.AddKnownType("CAServer.Grains.Grain.Notify.INotifyRulesGrain,CAServer.Grains", "CAServer.Grains.Grain.Notify.INotifyRulesGrain");
            feature.AddKnownType("CAServer.Grains.Grain.Notify.NotifyRulesGrainDto,CAServer.Grains", "CAServer.Grains.Grain.Notify.NotifyRulesGrainDto");
            feature.AddKnownType("CAServer.Grains.Grain.Notify.NotifyGrainResultDto,CAServer.Grains", "CAServer.Grains.Grain.Notify.NotifyGrainResultDto");
            feature.AddKnownType("CAServer.Grains.Grain.Notify.NotifyMessage,CAServer.Grains", "CAServer.Grains.Grain.Notify.NotifyMessage");
            feature.AddKnownType("CAServer.Grains.Grain.ThirdPart.IOrderGrain,CAServer.Grains", "CAServer.Grains.Grain.ThirdPart.IOrderGrain");
            feature.AddKnownType("CAServer.Grains.Grain.ThirdPart.OrderGrainDto,CAServer.Grains", "CAServer.Grains.Grain.ThirdPart.OrderGrainDto");
            feature.AddKnownType("CAServer.Grains.Grain.Tokens.TokenPrice.ITokenPriceGrain,CAServer.Grains", "CAServer.Grains.Grain.Tokens.TokenPrice.ITokenPriceGrain");
            feature.AddKnownType("CAServer.Grains.Grain.Tokens.TokenPrice.TokenPriceGrainDto,CAServer.Grains", "CAServer.Grains.Grain.Tokens.TokenPrice.TokenPriceGrainDto");
            feature.AddKnownType("CAServer.Tokens.Dtos.TokenPriceDataDto,CAServer.Application.Contracts", "CAServer.Tokens.Dtos.TokenPriceDataDto");
            feature.AddKnownType("CAServer.Grains.Grain.Tokens.TokenPrice.ITokenPriceProvider,CAServer.Grains", "CAServer.Grains.Grain.Tokens.TokenPrice.ITokenPriceProvider");
            feature.AddKnownType("CAServer.Grains.Grain.Tokens.TokenPrice.ITokenPriceSnapshotGrain,CAServer.Grains", "CAServer.Grains.Grain.Tokens.TokenPrice.ITokenPriceSnapshotGrain");
            feature.AddKnownType("CAServer.Grains.Grain.Tokens.UserTokens.IUserTokenGrain,CAServer.Grains", "CAServer.Grains.Grain.Tokens.UserTokens.IUserTokenGrain");
            feature.AddKnownType("CAServer.Grains.Grain.Tokens.UserTokens.UserTokenGrainDto,CAServer.Grains", "CAServer.Grains.Grain.Tokens.UserTokens.UserTokenGrainDto");
            feature.AddKnownType("CAServer.Tokens.Dtos.UserTokenDto,CAServer.Application.Contracts", "CAServer.Tokens.Dtos.UserTokenDto");
            feature.AddKnownType("CAServer.Grains.Grain.Tokens.UserTokens.IUserTokenSymbolGrain,CAServer.Grains", "CAServer.Grains.Grain.Tokens.UserTokens.IUserTokenSymbolGrain");
            feature.AddKnownType("CAServer.Grains.Grain.Tokens.UserTokens.UserTokenMessage,CAServer.Grains", "CAServer.Grains.Grain.Tokens.UserTokens.UserTokenMessage");
            feature.AddKnownType("CAServer.Grains.Grain.UserExtraInfo.IUserExtraInfoGrain,CAServer.Grains", "CAServer.Grains.Grain.UserExtraInfo.IUserExtraInfoGrain");
            feature.AddKnownType("CAServer.Grains.Grain.UserExtraInfo.UserExtraInfoGrainDto,CAServer.Grains", "CAServer.Grains.Grain.UserExtraInfo.UserExtraInfoGrainDto");
            feature.AddKnownType("CAServer.Grains.State.CAHolderState,CAServer.Grains", "CAServer.Grains.State.CAHolderState");
            feature.AddKnownType("CAServer.Grains.State.RecoveryState,CAServer.Grains", "CAServer.Grains.State.RecoveryState");
            feature.AddKnownType("CAServer.Grains.State.RecoveryInfo,CAServer.Grains", "CAServer.Grains.State.RecoveryInfo");
            feature.AddKnownType("CAServer.Grains.State.RegisterState,CAServer.Grains", "CAServer.Grains.State.RegisterState");
            feature.AddKnownType("CAServer.Grains.State.RegisterInfo,CAServer.Grains", "CAServer.Grains.State.RegisterInfo");
            feature.AddKnownType("CAServer.Grains.State.ActivityState,CAServer.Grains", "CAServer.Grains.State.ActivityState");
            feature.AddKnownType("CAServer.Grains.State.ApplicationHandler.GraphQlState,CAServer.Grains", "CAServer.Grains.State.ApplicationHandler.GraphQlState");
            feature.AddKnownType("CAServer.Grains.State.ApplicationHandler.SyncRecordState,CAServer.Grains", "CAServer.Grains.State.ApplicationHandler.SyncRecordState");
            feature.AddKnownType("CAServer.Grains.State.Chain.ChainState,CAServer.Grains", "CAServer.Grains.State.Chain.ChainState");
            feature.AddKnownType("CAServer.Grains.State.Contacts.ContactNameState,CAServer.Grains", "CAServer.Grains.State.Contacts.ContactNameState");
            feature.AddKnownType("CAServer.Grains.State.Contacts.ContactState,CAServer.Grains", "CAServer.Grains.State.Contacts.ContactState");
            feature.AddKnownType("CAServer.Grains.State.CrossChain.CrossChainTransferState,CAServer.Grains", "CAServer.Grains.State.CrossChain.CrossChainTransferState");
            feature.AddKnownType("CAServer.Grains.State.CrossChain.CrossChainTransfer,CAServer.Grains", "CAServer.Grains.State.CrossChain.CrossChainTransfer");
            feature.AddKnownType("CAServer.Grains.State.CrossChain.CrossChainStatus,CAServer.Grains", "CAServer.Grains.State.CrossChain.CrossChainStatus");
            feature.AddKnownType("CAServer.Grains.State.Device.DeviceState,CAServer.Grains", "CAServer.Grains.State.Device.DeviceState");
            feature.AddKnownType("CAServer.Grains.State.GuardianState,CAServer.Grains", "CAServer.Grains.State.GuardianState");
            feature.AddKnownType("CAServer.Grains.State.Notify.NotifyRulesState,CAServer.Grains", "CAServer.Grains.State.Notify.NotifyRulesState");
            feature.AddKnownType("CAServer.Grains.State.Notify.NotifyState,CAServer.Grains", "CAServer.Grains.State.Notify.NotifyState");
            feature.AddKnownType("CAServer.Grains.State.Order.OrderState,CAServer.Grains", "CAServer.Grains.State.Order.OrderState");
            feature.AddKnownType("CAServer.Grains.State.SampleState,CAServer.Grains", "CAServer.Grains.State.SampleState");
            feature.AddKnownType("CAServer.Grains.State.Tokens.CurrentTokenPriceState,CAServer.Grains", "CAServer.Grains.State.Tokens.CurrentTokenPriceState");
            feature.AddKnownType("CAServer.Grains.State.Tokens.TokenPriceBase,CAServer.Grains", "CAServer.Grains.State.Tokens.TokenPriceBase");
            feature.AddKnownType("CAServer.Grains.State.Tokens.TokenPriceSnapshotState,CAServer.Grains", "CAServer.Grains.State.Tokens.TokenPriceSnapshotState");
            feature.AddKnownType("CAServer.Grains.State.Tokens.UserTokenState,CAServer.Grains", "CAServer.Grains.State.Tokens.UserTokenState");
            feature.AddKnownType("CAServer.Grains.State.Tokens.UserTokenSymbolState,CAServer.Grains", "CAServer.Grains.State.Tokens.UserTokenSymbolState");
            feature.AddKnownType("CAServer.Grains.State.UserExtraInfo.UserExtraInfoState,CAServer.Grains", "CAServer.Grains.State.UserExtraInfo.UserExtraInfoState");
            feature.AddKnownType("CAServer.Options.TokenPriceExpirationTimeOptions,CAServer.Grains", "CAServer.Options.TokenPriceExpirationTimeOptions");
            feature.AddKnownType("CAVerifierServer.Grains.Grain.ISecurityGrain,CAServer.Grains", "CAVerifierServer.Grains.Grain.ISecurityGrain");
            feature.AddKnownType("CAVerifierServer.Grains.State.SecurityState,CAServer.Grains", "CAVerifierServer.Grains.State.SecurityState");
            feature.AddKnownType("System.Nullable`1", "Nullable`1'1");
            feature.AddKnownType("CAServer.Hubs.HubRequestContext,CAServer.Application.Contracts", "CAServer.Hubs.HubRequestContext");
            feature.AddKnownType("CAServer.Account.GuardianInfo,CAServer.Domain.Shared", "CAServer.Account.GuardianInfo");
            feature.AddKnownType("CAServer.Account.ManagerInfo,CAServer.Domain.Shared", "CAServer.Account.ManagerInfo");
            feature.AddKnownType("CAServer.Chain.DefaultToken,CAServer.Application.Contracts", "CAServer.Chain.DefaultToken");
            feature.AddKnownType("AElf.Types.Transaction,AElf.Types", "AElf.Types.Transaction");
            feature.AddKnownType("Portkey.Contracts.CA.GuardianInfo,CAServer.Application.Contracts", "Portkey.Contracts.CA.GuardianInfo");
            feature.AddKnownType("Portkey.Contracts.CA.ManagerInfo,CAServer.Application.Contracts", "Portkey.Contracts.CA.ManagerInfo");
            feature.AddKnownType("AElf.Types.Hash,AElf.Types", "AElf.Types.Hash");
            feature.AddKnownType("AElf.Types.Address,AElf.Types", "AElf.Types.Address");
            feature.AddKnownType("AElf.Client.Dto.TransactionDto,AElf.Client", "AElf.Client.Dto.TransactionDto");
            feature.AddKnownType("Google.Protobuf.UnknownFieldSet,Google.Protobuf", "Google.Protobuf.UnknownFieldSet");
            feature.AddKnownType("Portkey.Contracts.CA.GuardianList,CAServer.Application.Contracts", "Portkey.Contracts.CA.GuardianList");
            feature.AddKnownType("Portkey.Contracts.CA.VerificationTransactionInfo,CAServer.Application.Contracts", "Portkey.Contracts.CA.VerificationTransactionInfo");
            feature.AddKnownType("CAServer.Contacts.ContactAddressDto,CAServer.Application.Contracts", "CAServer.Contacts.ContactAddressDto");
            feature.AddKnownType("CAServer.StyleType,CAServer.Domain.Shared", "CAServer.StyleType");
            feature.AddKnownType("CAServer.Tokens.Dtos.Token,CAServer.Application.Contracts", "CAServer.Tokens.Dtos.Token");
            feature.AddKnownType("CAServer.Account.GuardianType,CAServer.Domain.Shared", "CAServer.Account.GuardianType");
            feature.AddKnownType("CAServer.Account.VerificationInfo,CAServer.Domain.Shared", "CAServer.Account.VerificationInfo");
            feature.AddKnownType("Google.Protobuf.ByteString,Google.Protobuf", "Google.Protobuf.ByteString");
            feature.AddKnownType("Portkey.Contracts.CA.GuardianType,CAServer.Application.Contracts", "Portkey.Contracts.CA.GuardianType");
            feature.AddKnownType("Portkey.Contracts.CA.VerificationInfo,CAServer.Application.Contracts", "Portkey.Contracts.CA.VerificationInfo");
            feature.AddKnownType("System.Collections.Generic.IDictionary`2", "IDictionary`2'2");
            feature.AddKnownType("Google.Protobuf.UnknownField,Google.Protobuf", "Google.Protobuf.UnknownField");
            feature.AddKnownType("Portkey.Contracts.CA.Guardian,CAServer.Application.Contracts", "Portkey.Contracts.CA.Guardian");
            feature.AddKnownType("AElf.Types.MerklePath,AElf.Types", "AElf.Types.MerklePath");
            feature.AddKnownType("System.ReadOnlyMemory`1", "ReadOnlyMemory`1'1");
            feature.AddKnownType("AElf.Types.MerklePathNode,AElf.Types", "AElf.Types.MerklePathNode");
            feature.AddKnownType("AElf.Client.AElfClientException,AElf.Client", "AElf.Client.AElfClientException");
            feature.AddKnownType("AElf.Client.Error,AElf.Client", "AElf.Client.Error");
            feature.AddKnownType("AElf.Client.AssociationAuth.Organization,AElf.Client", "AElf.Client.AssociationAuth.Organization");
            feature.AddKnownType("AElf.Client.Consensus.AEDPoS.MinerList,AElf.Client", "AElf.Client.Consensus.AEDPoS.MinerList");
            feature.AddKnownType("AElf.Client.Consensus.AEDPoS.PubkeyList,AElf.Client", "AElf.Client.Consensus.AEDPoS.PubkeyList");
            feature.AddKnownType("AElf.Client.Consensus.AEDPoS.MinerListWithRoundNumber,AElf.Client", "AElf.Client.Consensus.AEDPoS.MinerListWithRoundNumber");
            feature.AddKnownType("AElf.Client.Consensus.AEDPoS.GetMinerListInput,AElf.Client", "AElf.Client.Consensus.AEDPoS.GetMinerListInput");
            feature.AddKnownType("AElf.Client.CrossChain.VerifyTransactionInput,AElf.Client", "AElf.Client.CrossChain.VerifyTransactionInput");
            feature.AddKnownType("AElf.Client.Dto.BlockBodyDto,AElf.Client", "AElf.Client.Dto.BlockBodyDto");
            feature.AddKnownType("AElf.Client.Dto.BlockDto,AElf.Client", "AElf.Client.Dto.BlockDto");
            feature.AddKnownType("AElf.Client.Dto.BlockHeaderDto,AElf.Client", "AElf.Client.Dto.BlockHeaderDto");
            feature.AddKnownType("AElf.Client.Dto.ChainStatusDto,AElf.Client", "AElf.Client.Dto.ChainStatusDto");
            feature.AddKnownType("AElf.Client.Dto.CreateRawTransactionInput,AElf.Client", "AElf.Client.Dto.CreateRawTransactionInput");
            feature.AddKnownType("AElf.Client.Dto.CreateRawTransactionOutput,AElf.Client", "AElf.Client.Dto.CreateRawTransactionOutput");
            feature.AddKnownType("AElf.Client.Dto.RoundDto,AElf.Client", "AElf.Client.Dto.RoundDto");
            feature.AddKnownType("AElf.Client.Dto.MinerInRoundDto,AElf.Client", "AElf.Client.Dto.MinerInRoundDto");
            feature.AddKnownType("AElf.Client.Dto.ExecuteRawTransactionDto,AElf.Client", "AElf.Client.Dto.ExecuteRawTransactionDto");
            feature.AddKnownType("AElf.Client.Dto.ExecuteTransactionDto,AElf.Client", "AElf.Client.Dto.ExecuteTransactionDto");
            feature.AddKnownType("AElf.Client.Dto.LogEventDto,AElf.Client", "AElf.Client.Dto.LogEventDto");
            feature.AddKnownType("AElf.Client.Dto.MerklePathDto,AElf.Client", "AElf.Client.Dto.MerklePathDto");
            feature.AddKnownType("AElf.Client.Dto.MerklePathNodeDto,AElf.Client", "AElf.Client.Dto.MerklePathNodeDto");
            feature.AddKnownType("AElf.Client.Dto.NetworkInfoOutput,AElf.Client", "AElf.Client.Dto.NetworkInfoOutput");
            feature.AddKnownType("AElf.Client.Dto.PeerDto,AElf.Client", "AElf.Client.Dto.PeerDto");
            feature.AddKnownType("AElf.Client.Dto.RequestMetric,AElf.Client", "AElf.Client.Dto.RequestMetric");
            feature.AddKnownType("AElf.Client.Dto.SendRawTransactionInput,AElf.Client", "AElf.Client.Dto.SendRawTransactionInput");
            feature.AddKnownType("AElf.Client.Dto.SendRawTransactionOutput,AElf.Client", "AElf.Client.Dto.SendRawTransactionOutput");
            feature.AddKnownType("AElf.Client.Dto.SendTransactionInput,AElf.Client", "AElf.Client.Dto.SendTransactionInput");
            feature.AddKnownType("AElf.Client.Dto.SendTransactionOutput,AElf.Client", "AElf.Client.Dto.SendTransactionOutput");
            feature.AddKnownType("AElf.Client.Dto.SendTransactionsInput,AElf.Client", "AElf.Client.Dto.SendTransactionsInput");
            feature.AddKnownType("AElf.Client.Dto.TaskQueueInfoDto,AElf.Client", "AElf.Client.Dto.TaskQueueInfoDto");
            feature.AddKnownType("AElf.Client.Dto.TransactionPoolStatusOutput,AElf.Client", "AElf.Client.Dto.TransactionPoolStatusOutput");
            feature.AddKnownType("AElf.Client.Election.CandidateInformation,AElf.Client", "AElf.Client.Election.CandidateInformation");
            feature.AddKnownType("AElf.Client.Election.GetTermSnapshotInput,AElf.Client", "AElf.Client.Election.GetTermSnapshotInput");
            feature.AddKnownType("AElf.Client.Election.TermSnapshot,AElf.Client", "AElf.Client.Election.TermSnapshot");
            feature.AddKnownType("AElf.Client.Election.GetElectionResultInput,AElf.Client", "AElf.Client.Election.GetElectionResultInput");
            feature.AddKnownType("AElf.Client.Election.ElectionResult,AElf.Client", "AElf.Client.Election.ElectionResult");
            feature.AddKnownType("AElf.Client.Election.ElectorVote,AElf.Client", "AElf.Client.Election.ElectorVote");
            feature.AddKnownType("AElf.Client.Election.ElectionVotingRecord,AElf.Client", "AElf.Client.Election.ElectionVotingRecord");
            feature.AddKnownType("AElf.Client.Election.CandidateVote,AElf.Client", "AElf.Client.Election.CandidateVote");
            feature.AddKnownType("AElf.Client.Election.GetWelfareRewardAmountSampleInput,AElf.Client", "AElf.Client.Election.GetWelfareRewardAmountSampleInput");
            feature.AddKnownType("AElf.Client.Election.GetWelfareRewardAmountSampleOutput,AElf.Client", "AElf.Client.Election.GetWelfareRewardAmountSampleOutput");
            feature.AddKnownType("AElf.Client.Election.PageInformation,AElf.Client", "AElf.Client.Election.PageInformation");
            feature.AddKnownType("AElf.Client.Election.CandidateDetail,AElf.Client", "AElf.Client.Election.CandidateDetail");
            feature.AddKnownType("AElf.Client.Election.GetPageableCandidateInformationOutput,AElf.Client", "AElf.Client.Election.GetPageableCandidateInformationOutput");
            feature.AddKnownType("AElf.Client.Election.DataCenterRankingList,AElf.Client", "AElf.Client.Election.DataCenterRankingList");
            feature.AddKnownType("AElf.Client.Helper.PeerEndpoint,AElf.Client", "AElf.Client.Helper.PeerEndpoint");
            feature.AddKnownType("AElf.Client.Model.KeyPairInfo,AElf.Client", "AElf.Client.Model.KeyPairInfo");
            feature.AddKnownType("AElf.Client.MultiToken.TokenInfo,AElf.Client", "AElf.Client.MultiToken.TokenInfo");
            feature.AddKnownType("AElf.Client.MultiToken.GetTokenInfoInput,AElf.Client", "AElf.Client.MultiToken.GetTokenInfoInput");
            feature.AddKnownType("AElf.Client.MultiToken.TokenInfoList,AElf.Client", "AElf.Client.MultiToken.TokenInfoList");
            feature.AddKnownType("AElf.Client.MultiToken.GetBalanceInput,AElf.Client", "AElf.Client.MultiToken.GetBalanceInput");
            feature.AddKnownType("AElf.Client.MultiToken.GetBalanceOutput,AElf.Client", "AElf.Client.MultiToken.GetBalanceOutput");
            feature.AddKnownType("AElf.Client.MultiToken.GetAllowanceInput,AElf.Client", "AElf.Client.MultiToken.GetAllowanceInput");
            feature.AddKnownType("AElf.Client.MultiToken.GetAllowanceOutput,AElf.Client", "AElf.Client.MultiToken.GetAllowanceOutput");
            feature.AddKnownType("AElf.Client.MultiToken.IsInWhiteListInput,AElf.Client", "AElf.Client.MultiToken.IsInWhiteListInput");
            feature.AddKnownType("AElf.Client.MultiToken.GetLockedAmountInput,AElf.Client", "AElf.Client.MultiToken.GetLockedAmountInput");
            feature.AddKnownType("AElf.Client.MultiToken.GetLockedAmountOutput,AElf.Client", "AElf.Client.MultiToken.GetLockedAmountOutput");
            feature.AddKnownType("AElf.Client.MultiToken.GetVirtualAddressForLockingInput,AElf.Client", "AElf.Client.MultiToken.GetVirtualAddressForLockingInput");
            feature.AddKnownType("AElf.Client.MultiToken.GetCrossChainTransferTokenContractAddressInput,AElf.Client", "AElf.Client.MultiToken.GetCrossChainTransferTokenContractAddressInput");
            feature.AddKnownType("AElf.Client.MultiToken.TransferFromInput,AElf.Client", "AElf.Client.MultiToken.TransferFromInput");
            feature.AddKnownType("AElf.Client.MultiToken.TransferInput,AElf.Client", "AElf.Client.MultiToken.TransferInput");
            feature.AddKnownType("AElf.Client.MultiToken.TransactionSizeFeeSymbols,AElf.Client", "AElf.Client.MultiToken.TransactionSizeFeeSymbols");
            feature.AddKnownType("AElf.Client.MultiToken.TransactionSizeFeeSymbol,AElf.Client", "AElf.Client.MultiToken.TransactionSizeFeeSymbol");
            feature.AddKnownType("AElf.Client.MultiToken.TransactionFeeCharged,AElf.Client", "AElf.Client.MultiToken.TransactionFeeCharged");
            feature.AddKnownType("AElf.Client.MultiToken.ResourceTokenCharged,AElf.Client", "AElf.Client.MultiToken.ResourceTokenCharged");
            feature.AddKnownType("AElf.Client.MultiToken.ResourceTokenOwned,AElf.Client", "AElf.Client.MultiToken.ResourceTokenOwned");
            feature.AddKnownType("AElf.Client.ParliamentAuth.ProposalIdList,AElf.Client", "AElf.Client.ParliamentAuth.ProposalIdList");
            feature.AddKnownType("AElf.Client.ParliamentAuth.Organization,AElf.Client", "AElf.Client.ParliamentAuth.Organization");
            feature.AddKnownType("AElf.Client.Profit.CreatedSchemeIds,AElf.Client", "AElf.Client.Profit.CreatedSchemeIds");
            feature.AddKnownType("AElf.Client.Profit.GetManagingSchemeIdsInput,AElf.Client", "AElf.Client.Profit.GetManagingSchemeIdsInput");
            feature.AddKnownType("AElf.Client.Profit.SchemeBeneficiaryShare,AElf.Client", "AElf.Client.Profit.SchemeBeneficiaryShare");
            feature.AddKnownType("AElf.Client.Profit.Scheme,AElf.Client", "AElf.Client.Profit.Scheme");
            feature.AddKnownType("AElf.Client.Profit.SchemePeriod,AElf.Client", "AElf.Client.Profit.SchemePeriod");
            feature.AddKnownType("AElf.Client.Profit.DistributedProfitsInfo,AElf.Client", "AElf.Client.Profit.DistributedProfitsInfo");
            feature.AddKnownType("AElf.Client.Profit.GetProfitDetailsInput,AElf.Client", "AElf.Client.Profit.GetProfitDetailsInput");
            feature.AddKnownType("AElf.Client.Profit.ProfitDetails,AElf.Client", "AElf.Client.Profit.ProfitDetails");
            feature.AddKnownType("AElf.Client.Profit.ProfitDetail,AElf.Client", "AElf.Client.Profit.ProfitDetail");
            feature.AddKnownType("AElf.Client.Profit.ClaimProfitsInput,AElf.Client", "AElf.Client.Profit.ClaimProfitsInput");
            feature.AddKnownType("AElf.Client.Proto.ThresholdCheckType,AElf.Client", "AElf.Client.Proto.ThresholdCheckType");
            feature.AddKnownType("AElf.Client.Proto.Address,AElf.Client", "AElf.Client.Proto.Address");
            feature.AddKnownType("AElf.Client.Proto.Hash,AElf.Client", "AElf.Client.Proto.Hash");
            feature.AddKnownType("AElf.Client.Proto.MerklePath,AElf.Client", "AElf.Client.Proto.MerklePath");
            feature.AddKnownType("AElf.Client.Proto.MerklePathNode,AElf.Client", "AElf.Client.Proto.MerklePathNode");
            feature.AddKnownType("AElf.Client.Proto.BinaryMerkleTree,AElf.Client", "AElf.Client.Proto.BinaryMerkleTree");
            feature.AddKnownType("AElf.Client.Proto.ScopedStatePath,AElf.Client", "AElf.Client.Proto.ScopedStatePath");
            feature.AddKnownType("AElf.Client.Proto.StatePath,AElf.Client", "AElf.Client.Proto.StatePath");
            feature.AddKnownType("AElf.Client.Proto.SmartContractRegistration,AElf.Client", "AElf.Client.Proto.SmartContractRegistration");
            feature.AddKnownType("AElf.Client.Proto.ContractInfo,AElf.Client", "AElf.Client.Proto.ContractInfo");
            feature.AddKnownType("AElf.Client.Proto.MethodFees,AElf.Client", "AElf.Client.Proto.MethodFees");
            feature.AddKnownType("AElf.Client.Proto.MethodFee,AElf.Client", "AElf.Client.Proto.MethodFee");
            feature.AddKnownType("AElf.Client.Proto.ResourceInfo,AElf.Client", "AElf.Client.Proto.ResourceInfo");
            feature.AddKnownType("AElf.Client.Proto.ProposalOutput,AElf.Client", "AElf.Client.Proto.ProposalOutput");
            feature.AddKnownType("AElf.Client.Proto.ProposalReleaseThreshold,AElf.Client", "AElf.Client.Proto.ProposalReleaseThreshold");
            feature.AddKnownType("AElf.Client.Proto.ProposerWhiteList,AElf.Client", "AElf.Client.Proto.ProposerWhiteList");
            feature.AddKnownType("AElf.Client.Proto.ValidationResult,AElf.Client", "AElf.Client.Proto.ValidationResult");
            feature.AddKnownType("AElf.Client.Proto.MethodCallingThreshold,AElf.Client", "AElf.Client.Proto.MethodCallingThreshold");
            feature.AddKnownType("AElf.Client.Proto.SideChainIndexingInformationList,AElf.Client", "AElf.Client.Proto.SideChainIndexingInformationList");
            feature.AddKnownType("AElf.Client.Proto.SideChainIndexingInformation,AElf.Client", "AElf.Client.Proto.SideChainIndexingInformation");
            feature.AddKnownType("AElf.Client.Proto.CrossChainBlockData,AElf.Client", "AElf.Client.Proto.CrossChainBlockData");
            feature.AddKnownType("AElf.Client.Proto.SideChainBlockData,AElf.Client", "AElf.Client.Proto.SideChainBlockData");
            feature.AddKnownType("AElf.Client.Proto.ParentChainBlockData,AElf.Client", "AElf.Client.Proto.ParentChainBlockData");
            feature.AddKnownType("AElf.Client.Proto.CrossChainExtraData,AElf.Client", "AElf.Client.Proto.CrossChainExtraData");
            feature.AddKnownType("AElf.Client.Proto.CrossChainMerkleProofContext,AElf.Client", "AElf.Client.Proto.CrossChainMerkleProofContext");
            feature.AddKnownType("AElf.Client.Proto.ChainInitializationData,AElf.Client", "AElf.Client.Proto.ChainInitializationData");
            feature.AddKnownType("AElf.Client.Proto.ResourceTokenInfo,AElf.Client", "AElf.Client.Proto.ResourceTokenInfo");
            feature.AddKnownType("AElf.Client.Proto.ChainPrimaryTokenInfo,AElf.Client", "AElf.Client.Proto.ChainPrimaryTokenInfo");
            feature.AddKnownType("AElf.Client.Proto.ChainInitializationConsensusInfo,AElf.Client", "AElf.Client.Proto.ChainInitializationConsensusInfo");
            feature.AddKnownType("AElf.Client.Proto.SideChainTokenInitialIssue,AElf.Client", "AElf.Client.Proto.SideChainTokenInitialIssue");
            feature.AddKnownType("AElf.Client.ReferendumAuth.Organization,AElf.Client", "AElf.Client.ReferendumAuth.Organization");
            feature.AddKnownType("AElf.Client.ReferendumAuth.OrganizationMemberList,AElf.Client", "AElf.Client.ReferendumAuth.OrganizationMemberList");
            feature.AddKnownType("AElf.Client.Runtime.FileDescriptorSet,AElf.Client", "AElf.Client.Runtime.FileDescriptorSet");
            feature.AddKnownType("AElf.Client.Service.IClientService,AElf.Client", "AElf.Client.Service.IClientService");
            feature.AddKnownType("AElf.Client.Service.AElfClient,AElf.Client", "AElf.Client.Service.AElfClient");
            feature.AddKnownType("AElf.Client.Service.IBlockAppService,AElf.Client", "AElf.Client.Service.IBlockAppService");
            feature.AddKnownType("AElf.Client.Service.IChainAppService,AElf.Client", "AElf.Client.Service.IChainAppService");
            feature.AddKnownType("AElf.Client.Service.IHttpService,AElf.Client", "AElf.Client.Service.IHttpService");
            feature.AddKnownType("AElf.Client.Service.HttpService,AElf.Client", "AElf.Client.Service.HttpService");
            feature.AddKnownType("AElf.Client.Service.INetAppService,AElf.Client", "AElf.Client.Service.INetAppService");
            feature.AddKnownType("AElf.Client.Service.ITransactionAppService,AElf.Client", "AElf.Client.Service.ITransactionAppService");
            feature.AddKnownType("AElf.Client.TokenConverter.TokenSymbol,AElf.Client", "AElf.Client.TokenConverter.TokenSymbol");
            feature.AddKnownType("AElf.Client.TokenConverter.Connector,AElf.Client", "AElf.Client.TokenConverter.Connector");
            feature.AddKnownType("AElf.Client.Treasury.GetWelfareRewardAmountSampleInput,AElf.Client", "AElf.Client.Treasury.GetWelfareRewardAmountSampleInput");
            feature.AddKnownType("AElf.Client.Treasury.GetWelfareRewardAmountSampleOutput,AElf.Client", "AElf.Client.Treasury.GetWelfareRewardAmountSampleOutput");
            feature.AddKnownType("AElf.Client.Vote.GetVotingItemInput,AElf.Client", "AElf.Client.Vote.GetVotingItemInput");
            feature.AddKnownType("AElf.Client.Vote.VotedItems,AElf.Client", "AElf.Client.Vote.VotedItems");
            feature.AddKnownType("AElf.Client.Vote.VotedIds,AElf.Client", "AElf.Client.Vote.VotedIds");
            feature.AddKnownType("AElf.Client.Vote.GetVotingResultInput,AElf.Client", "AElf.Client.Vote.GetVotingResultInput");
            feature.AddKnownType("AElf.Client.Vote.VotingResult,AElf.Client", "AElf.Client.Vote.VotingResult");
            feature.AddKnownType("AElf.Client.Vote.VotingRecord,AElf.Client", "AElf.Client.Vote.VotingRecord");
            feature.AddKnownType("AElf.Client.Vote.GetVotingRecordsInput,AElf.Client", "AElf.Client.Vote.GetVotingRecordsInput");
            feature.AddKnownType("AElf.Client.Vote.VotingRecords,AElf.Client", "AElf.Client.Vote.VotingRecords");
            feature.AddKnownType("AElf.AElfDefaultConventionalRegistrar,AElf.Core", "AElf.AElfDefaultConventionalRegistrar");
            feature.AddKnownType("AElf.CoreAElfModule,AElf.Core", "AElf.CoreAElfModule");
            feature.AddKnownType("AElf.IServiceContainer`1,AElf.Core", "AElf.IServiceContainer`1'1");
            feature.AddKnownType("AElf.ServiceContainerFactoryOptions`1,AElf.Core", "AElf.ServiceContainerFactoryOptions`1'1");
            feature.AddKnownType("AElf.ServiceContainerFactory`1,AElf.Core", "AElf.ServiceContainerFactory`1'1");
            feature.AddKnownType("AElf.ITaskQueue,AElf.Core", "AElf.ITaskQueue");
            feature.AddKnownType("AElf.TaskQueue,AElf.Core", "AElf.TaskQueue");
            feature.AddKnownType("AElf.ITaskQueueManager,AElf.Core", "AElf.ITaskQueueManager");
            feature.AddKnownType("AElf.TaskQueueManager,AElf.Core", "AElf.TaskQueueManager");
            feature.AddKnownType("AElf.TaskQueueInfo,AElf.Core", "AElf.TaskQueueInfo");
            feature.AddKnownType("AElf.Modularity.AElfModule,AElf.Core", "AElf.Modularity.AElfModule");
            feature.AddKnownType("AElf.Modularity.AElfModule`1,AElf.Core", "AElf.Modularity.AElfModule`1'1");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,AElf.Core", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("AElf.Indexing.Elasticsearch.AElfIndexingElasticsearchModule,AElf.Indexing.Elasticsearch", "AElf.Indexing.Elasticsearch.AElfIndexingElasticsearchModule");
            feature.AddKnownType("AElf.Indexing.Elasticsearch.IIndexBuild,AElf.Indexing.Elasticsearch", "AElf.Indexing.Elasticsearch.IIndexBuild");
            feature.AddKnownType("AElf.Indexing.Elasticsearch.IncludeNullValueSerializer,AElf.Indexing.Elasticsearch", "AElf.Indexing.Elasticsearch.IncludeNullValueSerializer");
            feature.AddKnownType("AElf.Indexing.Elasticsearch.INESTReaderRepository`2,AElf.Indexing.Elasticsearch", "AElf.Indexing.Elasticsearch.INESTReaderRepository`2'2");
            feature.AddKnownType("AElf.Indexing.Elasticsearch.INESTRepository`2,AElf.Indexing.Elasticsearch", "AElf.Indexing.Elasticsearch.INESTRepository`2'2");
            feature.AddKnownType("AElf.Indexing.Elasticsearch.INESTWriterRepository`2,AElf.Indexing.Elasticsearch", "AElf.Indexing.Elasticsearch.INESTWriterRepository`2'2");
            feature.AddKnownType("AElf.Indexing.Elasticsearch.NESTBaseRepository`2,AElf.Indexing.Elasticsearch", "AElf.Indexing.Elasticsearch.NESTBaseRepository`2'2");
            feature.AddKnownType("AElf.Indexing.Elasticsearch.NESTReaderRepository`2,AElf.Indexing.Elasticsearch", "AElf.Indexing.Elasticsearch.NESTReaderRepository`2'2");
            feature.AddKnownType("AElf.Indexing.Elasticsearch.NESTRepository`2,AElf.Indexing.Elasticsearch", "AElf.Indexing.Elasticsearch.NESTRepository`2'2");
            feature.AddKnownType("AElf.Indexing.Elasticsearch.Exceptions.ElasticSearchException,AElf.Indexing.Elasticsearch", "AElf.Indexing.Elasticsearch.Exceptions.ElasticSearchException");
            feature.AddKnownType("AElf.Indexing.Elasticsearch.Options.EsEndpointOption,AElf.Indexing.Elasticsearch", "AElf.Indexing.Elasticsearch.Options.EsEndpointOption");
            feature.AddKnownType("AElf.Indexing.Elasticsearch.Options.IndexCreateOption,AElf.Indexing.Elasticsearch", "AElf.Indexing.Elasticsearch.Options.IndexCreateOption");
            feature.AddKnownType("AElf.Indexing.Elasticsearch.Options.IndexSettingOptions,AElf.Indexing.Elasticsearch", "AElf.Indexing.Elasticsearch.Options.IndexSettingOptions");
            feature.AddKnownType("AElf.Indexing.Elasticsearch.Provider.IEsClientProvider,AElf.Indexing.Elasticsearch", "AElf.Indexing.Elasticsearch.Provider.IEsClientProvider");
            feature.AddKnownType("AElf.Indexing.Elasticsearch.Provider.DefaultEsClientProvider,AElf.Indexing.Elasticsearch", "AElf.Indexing.Elasticsearch.Provider.DefaultEsClientProvider");
            feature.AddKnownType("AElf.Indexing.Elasticsearch.Services.IElasticIndexService,AElf.Indexing.Elasticsearch", "AElf.Indexing.Elasticsearch.Services.IElasticIndexService");
            feature.AddKnownType("AElf.Indexing.Elasticsearch.Services.ElasticIndexService,AElf.Indexing.Elasticsearch", "AElf.Indexing.Elasticsearch.Services.ElasticIndexService");
            feature.AddKnownType("AElf.Indexing.Elasticsearch.Services.IEnsureIndexBuildService,AElf.Indexing.Elasticsearch", "AElf.Indexing.Elasticsearch.Services.IEnsureIndexBuildService");
            feature.AddKnownType("AElf.Indexing.Elasticsearch.Services.EnsureIndexBuildService,AElf.Indexing.Elasticsearch", "AElf.Indexing.Elasticsearch.Services.EnsureIndexBuildService");
            feature.AddKnownType("AElf.Indexing.Elasticsearch.Translator.BinaryExpressionHandler,AElf.Indexing.Elasticsearch", "AElf.Indexing.Elasticsearch.Translator.BinaryExpressionHandler");
            feature.AddKnownType("AElf.Indexing.Elasticsearch.Translator.Builders`1,AElf.Indexing.Elasticsearch", "AElf.Indexing.Elasticsearch.Translator.Builders`1'1");
            feature.AddKnownType("AElf.Indexing.Elasticsearch.Translator.QueryTranslator,AElf.Indexing.Elasticsearch", "AElf.Indexing.Elasticsearch.Translator.QueryTranslator");
            feature.AddKnownType("AElf.Kernel.Block,AElf.Kernel.Types", "AElf.Kernel.Block");
            feature.AddKnownType("AElf.Kernel.BlockBody,AElf.Kernel.Types", "AElf.Kernel.BlockBody");
            feature.AddKnownType("AElf.Kernel.BlockHeader,AElf.Kernel.Types", "AElf.Kernel.BlockHeader");
            feature.AddKnownType("AElf.Kernel.IBlock,AElf.Kernel.Types", "AElf.Kernel.IBlock");
            feature.AddKnownType("AElf.Kernel.IBlockBody,AElf.Kernel.Types", "AElf.Kernel.IBlockBody");
            feature.AddKnownType("AElf.Kernel.IBlockHeader,AElf.Kernel.Types", "AElf.Kernel.IBlockHeader");
            feature.AddKnownType("AElf.Kernel.IBlockIndex,AElf.Kernel.Types", "AElf.Kernel.IBlockIndex");
            feature.AddKnownType("AElf.Kernel.BlockIndex,AElf.Kernel.Types", "AElf.Kernel.BlockIndex");
            feature.AddKnownType("AElf.Kernel.Bloom,AElf.Kernel.Types", "AElf.Kernel.Bloom");
            feature.AddKnownType("AElf.Kernel.Chain,AElf.Kernel.Types", "AElf.Kernel.Chain");
            feature.AddKnownType("AElf.Kernel.ChainContext,AElf.Kernel.Types", "AElf.Kernel.ChainContext");
            feature.AddKnownType("AElf.Kernel.DiscardedBranch,AElf.Kernel.Types", "AElf.Kernel.DiscardedBranch");
            feature.AddKnownType("AElf.Kernel.IChainContext,AElf.Kernel.Types", "AElf.Kernel.IChainContext");
            feature.AddKnownType("AElf.Kernel.IStateCache,AElf.Kernel.Types", "AElf.Kernel.IStateCache");
            feature.AddKnownType("AElf.Kernel.StateValue,AElf.Kernel.Types", "AElf.Kernel.StateValue");
            feature.AddKnownType("AElf.Kernel.RefBlockStatus,AElf.Kernel.Types", "AElf.Kernel.RefBlockStatus");
            feature.AddKnownType("AElf.Kernel.QueuedTransaction,AElf.Kernel.Types", "AElf.Kernel.QueuedTransaction");
            feature.AddKnownType("AElf.Kernel.TransactionTrace,AElf.Kernel.Types", "AElf.Kernel.TransactionTrace");
            feature.AddKnownType("AElf.Kernel.TransactionStatus,AElf.Kernel.Types", "AElf.Kernel.TransactionStatus");
            feature.AddKnownType("AElf.Kernel.ExecutionStatus,AElf.Kernel.Types", "AElf.Kernel.ExecutionStatus");
            feature.AddKnownType("AElf.Kernel.ChainStateMergingStatus,AElf.Kernel.Types", "AElf.Kernel.ChainStateMergingStatus");
            feature.AddKnownType("AElf.Kernel.ChainBlockLinkExecutionStatus,AElf.Kernel.Types", "AElf.Kernel.ChainBlockLinkExecutionStatus");
            feature.AddKnownType("AElf.Kernel.StateChange,AElf.Kernel.Types", "AElf.Kernel.StateChange");
            feature.AddKnownType("AElf.Kernel.ExecutionReturnSet,AElf.Kernel.Types", "AElf.Kernel.ExecutionReturnSet");
            feature.AddKnownType("AElf.Kernel.BlockHeaderList,AElf.Kernel.Types", "AElf.Kernel.BlockHeaderList");
            feature.AddKnownType("AElf.Kernel.VersionedState,AElf.Kernel.Types", "AElf.Kernel.VersionedState");
            feature.AddKnownType("AElf.Kernel.BlockStateSet,AElf.Kernel.Types", "AElf.Kernel.BlockStateSet");
            feature.AddKnownType("AElf.Kernel.ChainStateInfo,AElf.Kernel.Types", "AElf.Kernel.ChainStateInfo");
            feature.AddKnownType("AElf.Kernel.ChainBlockLink,AElf.Kernel.Types", "AElf.Kernel.ChainBlockLink");
            feature.AddKnownType("AElf.Kernel.ChainBlockIndex,AElf.Kernel.Types", "AElf.Kernel.ChainBlockIndex");
            feature.AddKnownType("AElf.Kernel.TransactionBlockIndex,AElf.Kernel.Types", "AElf.Kernel.TransactionBlockIndex");
            feature.AddKnownType("AElf.Kernel.SmartContractAddress,AElf.Kernel.Types", "AElf.Kernel.SmartContractAddress");
            feature.AddKnownType("AElf.Kernel.SmartContract.Metadata.DataAccessPath,AElf.Kernel.Types", "AElf.Kernel.SmartContract.Metadata.DataAccessPath");
            feature.AddKnownType("AElf.Kernel.SmartContract.Metadata.DataAccessPath+Types+AccessMode,AElf.Kernel.Types", "AElf.Kernel.SmartContract.Metadata.AElf.Kernel.SmartContract.Metadata.AElf.Kernel.SmartContract.Metadata.DataAccessPath.Types.AccessMode");
            feature.AddKnownType("AElf.Kernel.SmartContract.Metadata.InlineCall,AElf.Kernel.Types", "AElf.Kernel.SmartContract.Metadata.InlineCall");
            feature.AddKnownType("Autofac.ContainerBuilder,Autofac", "Autofac.ContainerBuilder");
            feature.AddKnownType("Autofac.ContainerBuilderResources,Autofac", "Autofac.ContainerBuilderResources");
            feature.AddKnownType("Autofac.IComponentContext,Autofac", "Autofac.IComponentContext");
            feature.AddKnownType("Autofac.IContainer,Autofac", "Autofac.IContainer");
            feature.AddKnownType("Autofac.ILifetimeScope,Autofac", "Autofac.ILifetimeScope");
            feature.AddKnownType("Autofac.IStartable,Autofac", "Autofac.IStartable");
            feature.AddKnownType("Autofac.Module,Autofac", "Autofac.Module");
            feature.AddKnownType("Autofac.ModuleResources,Autofac", "Autofac.ModuleResources");
            feature.AddKnownType("Autofac.NamedParameter,Autofac", "Autofac.NamedParameter");
            feature.AddKnownType("Autofac.PositionalParameter,Autofac", "Autofac.PositionalParameter");
            feature.AddKnownType("Autofac.PropertyWiringOptions,Autofac", "Autofac.PropertyWiringOptions");
            feature.AddKnownType("Autofac.RegistrationExtensionsResources,Autofac", "Autofac.RegistrationExtensionsResources");
            feature.AddKnownType("Autofac.ResolutionExtensionsResources,Autofac", "Autofac.ResolutionExtensionsResources");
            feature.AddKnownType("Autofac.ResolveRequest,Autofac", "Autofac.ResolveRequest");
            feature.AddKnownType("Autofac.TypedParameter,Autofac", "Autofac.TypedParameter");
            feature.AddKnownType("Autofac.TypeExtensionsResources,Autofac", "Autofac.TypeExtensionsResources");
            feature.AddKnownType("Autofac.Builder.BuildCallbackService,Autofac", "Autofac.Builder.BuildCallbackService");
            feature.AddKnownType("Autofac.Builder.BuildCallbackServiceResources,Autofac", "Autofac.Builder.BuildCallbackServiceResources");
            feature.AddKnownType("Autofac.Builder.ConcreteReflectionActivatorData,Autofac", "Autofac.Builder.ConcreteReflectionActivatorData");
            feature.AddKnownType("Autofac.Builder.ContainerBuildOptions,Autofac", "Autofac.Builder.ContainerBuildOptions");
            feature.AddKnownType("Autofac.Builder.DeferredCallback,Autofac", "Autofac.Builder.DeferredCallback");
            feature.AddKnownType("Autofac.Builder.DynamicRegistrationStyle,Autofac", "Autofac.Builder.DynamicRegistrationStyle");
            feature.AddKnownType("Autofac.Builder.IConcreteActivatorData,Autofac", "Autofac.Builder.IConcreteActivatorData");
            feature.AddKnownType("Autofac.Builder.IHideObjectMembers,Autofac", "Autofac.Builder.IHideObjectMembers");
            feature.AddKnownType("Autofac.Builder.IRegistrationBuilder`3,Autofac", "Autofac.Builder.IRegistrationBuilder`3'3");
            feature.AddKnownType("Autofac.Builder.MetadataConfiguration`1,Autofac", "Autofac.Builder.MetadataConfiguration`1'1");
            feature.AddKnownType("Autofac.Builder.ReflectionActivatorData,Autofac", "Autofac.Builder.ReflectionActivatorData");
            feature.AddKnownType("Autofac.Builder.RegistrationBuilder`3,Autofac", "Autofac.Builder.RegistrationBuilder`3'3");
            feature.AddKnownType("Autofac.Builder.RegistrationBuilderResources,Autofac", "Autofac.Builder.RegistrationBuilderResources");
            feature.AddKnownType("Autofac.Builder.RegistrationData,Autofac", "Autofac.Builder.RegistrationData");
            feature.AddKnownType("Autofac.Builder.SimpleActivatorData,Autofac", "Autofac.Builder.SimpleActivatorData");
            feature.AddKnownType("Autofac.Builder.SingleRegistrationStyle,Autofac", "Autofac.Builder.SingleRegistrationStyle");
            feature.AddKnownType("Autofac.Core.ActivatedEventArgs`1,Autofac", "Autofac.Core.ActivatedEventArgs`1'1");
            feature.AddKnownType("Autofac.Core.ActivatingEventArgs`1,Autofac", "Autofac.Core.ActivatingEventArgs`1'1");
            feature.AddKnownType("Autofac.Core.DefaultPropertySelector,Autofac", "Autofac.Core.DefaultPropertySelector");
            feature.AddKnownType("Autofac.Core.DelegatePropertySelector,Autofac", "Autofac.Core.DelegatePropertySelector");
            feature.AddKnownType("Autofac.Core.IPropertySelector,Autofac", "Autofac.Core.IPropertySelector");
            feature.AddKnownType("Autofac.Core.AutoActivateService,Autofac", "Autofac.Core.AutoActivateService");
            feature.AddKnownType("Autofac.Core.ComponentRegisteredEventArgs,Autofac", "Autofac.Core.ComponentRegisteredEventArgs");
            feature.AddKnownType("Autofac.Core.ConstantParameter,Autofac", "Autofac.Core.ConstantParameter");
            feature.AddKnownType("Autofac.Core.Container,Autofac", "Autofac.Core.Container");
            feature.AddKnownType("Autofac.Core.ContainerResources,Autofac", "Autofac.Core.ContainerResources");
            feature.AddKnownType("Autofac.Core.DependencyResolutionException,Autofac", "Autofac.Core.DependencyResolutionException");
            feature.AddKnownType("Autofac.Core.Disposer,Autofac", "Autofac.Core.Disposer");
            feature.AddKnownType("Autofac.Core.DisposerResources,Autofac", "Autofac.Core.DisposerResources");
            feature.AddKnownType("Autofac.Core.IActivatedEventArgs`1,Autofac", "Autofac.Core.IActivatedEventArgs`1'1");
            feature.AddKnownType("Autofac.Core.IActivatingEventArgs`1,Autofac", "Autofac.Core.IActivatingEventArgs`1'1");
            feature.AddKnownType("Autofac.Core.IComponentLifetime,Autofac", "Autofac.Core.IComponentLifetime");
            feature.AddKnownType("Autofac.Core.IComponentRegistration,Autofac", "Autofac.Core.IComponentRegistration");
            feature.AddKnownType("Autofac.Core.IComponentRegistry,Autofac", "Autofac.Core.IComponentRegistry");
            feature.AddKnownType("Autofac.Core.IComponentRegistryServices,Autofac", "Autofac.Core.IComponentRegistryServices");
            feature.AddKnownType("Autofac.Core.IDisposer,Autofac", "Autofac.Core.IDisposer");
            feature.AddKnownType("Autofac.Core.IInstanceActivator,Autofac", "Autofac.Core.IInstanceActivator");
            feature.AddKnownType("Autofac.Core.IModule,Autofac", "Autofac.Core.IModule");
            feature.AddKnownType("Autofac.Core.ImplicitRegistrationSource,Autofac", "Autofac.Core.ImplicitRegistrationSource");
            feature.AddKnownType("Autofac.Core.ImplicitRegistrationSourceResources,Autofac", "Autofac.Core.ImplicitRegistrationSourceResources");
            feature.AddKnownType("Autofac.Core.InstanceOwnership,Autofac", "Autofac.Core.InstanceOwnership");
            feature.AddKnownType("Autofac.Core.InstanceSharing,Autofac", "Autofac.Core.InstanceSharing");
            feature.AddKnownType("Autofac.Core.IRegistrationSource,Autofac", "Autofac.Core.IRegistrationSource");
            feature.AddKnownType("Autofac.Core.IServiceWithType,Autofac", "Autofac.Core.IServiceWithType");
            feature.AddKnownType("Autofac.Core.ISharingLifetimeScope,Autofac", "Autofac.Core.ISharingLifetimeScope");
            feature.AddKnownType("Autofac.Core.KeyedService,Autofac", "Autofac.Core.KeyedService");
            feature.AddKnownType("Autofac.Core.NamedPropertyParameter,Autofac", "Autofac.Core.NamedPropertyParameter");
            feature.AddKnownType("Autofac.Core.Parameter,Autofac", "Autofac.Core.Parameter");
            feature.AddKnownType("Autofac.Core.PreparingEventArgs,Autofac", "Autofac.Core.PreparingEventArgs");
            feature.AddKnownType("Autofac.Core.RegistrationSourceAddedEventArgs,Autofac", "Autofac.Core.RegistrationSourceAddedEventArgs");
            feature.AddKnownType("Autofac.Core.ResolvedParameter,Autofac", "Autofac.Core.ResolvedParameter");
            feature.AddKnownType("Autofac.Core.SelfComponentRegistration,Autofac", "Autofac.Core.SelfComponentRegistration");
            feature.AddKnownType("Autofac.Core.Service,Autofac", "Autofac.Core.Service");
            feature.AddKnownType("Autofac.Core.ServiceRegistration,Autofac", "Autofac.Core.ServiceRegistration");
            feature.AddKnownType("Autofac.Core.ServiceResources,Autofac", "Autofac.Core.ServiceResources");
            feature.AddKnownType("Autofac.Core.TypedService,Autofac", "Autofac.Core.TypedService");
            feature.AddKnownType("Autofac.Core.UniqueService,Autofac", "Autofac.Core.UniqueService");
            feature.AddKnownType("Autofac.Core.Activators.InstanceActivator,Autofac", "Autofac.Core.Activators.InstanceActivator");
            feature.AddKnownType("Autofac.Core.Activators.InstanceActivatorResources,Autofac", "Autofac.Core.Activators.InstanceActivatorResources");
            feature.AddKnownType("Autofac.Core.Activators.Delegate.DelegateActivator,Autofac", "Autofac.Core.Activators.Delegate.DelegateActivator");
            feature.AddKnownType("Autofac.Core.Activators.Delegate.DelegateActivatorResources,Autofac", "Autofac.Core.Activators.Delegate.DelegateActivatorResources");
            feature.AddKnownType("Autofac.Core.Activators.ProvidedInstance.ProvidedInstanceActivator,Autofac", "Autofac.Core.Activators.ProvidedInstance.ProvidedInstanceActivator");
            feature.AddKnownType("Autofac.Core.Activators.ProvidedInstance.ProvidedInstanceActivatorResources,Autofac", "Autofac.Core.Activators.ProvidedInstance.ProvidedInstanceActivatorResources");
            feature.AddKnownType("Autofac.Core.Activators.Reflection.AutowiringParameter,Autofac", "Autofac.Core.Activators.Reflection.AutowiringParameter");
            feature.AddKnownType("Autofac.Core.Activators.Reflection.BoundConstructor,Autofac", "Autofac.Core.Activators.Reflection.BoundConstructor");
            feature.AddKnownType("Autofac.Core.Activators.Reflection.BoundConstructorResources,Autofac", "Autofac.Core.Activators.Reflection.BoundConstructorResources");
            feature.AddKnownType("Autofac.Core.Activators.Reflection.ConstructorBinder,Autofac", "Autofac.Core.Activators.Reflection.ConstructorBinder");
            feature.AddKnownType("Autofac.Core.Activators.Reflection.DefaultConstructorFinder,Autofac", "Autofac.Core.Activators.Reflection.DefaultConstructorFinder");
            feature.AddKnownType("Autofac.Core.Activators.Reflection.DefaultValueParameter,Autofac", "Autofac.Core.Activators.Reflection.DefaultValueParameter");
            feature.AddKnownType("Autofac.Core.Activators.Reflection.IConstructorFinder,Autofac", "Autofac.Core.Activators.Reflection.IConstructorFinder");
            feature.AddKnownType("Autofac.Core.Activators.Reflection.IConstructorSelector,Autofac", "Autofac.Core.Activators.Reflection.IConstructorSelector");
            feature.AddKnownType("Autofac.Core.Activators.Reflection.IConstructorSelectorWithEarlyBinding,Autofac", "Autofac.Core.Activators.Reflection.IConstructorSelectorWithEarlyBinding");
            feature.AddKnownType("Autofac.Core.Activators.Reflection.MatchingSignatureConstructorSelector,Autofac", "Autofac.Core.Activators.Reflection.MatchingSignatureConstructorSelector");
            feature.AddKnownType("Autofac.Core.Activators.Reflection.MatchingSignatureConstructorSelectorResources,Autofac", "Autofac.Core.Activators.Reflection.MatchingSignatureConstructorSelectorResources");
            feature.AddKnownType("Autofac.Core.Activators.Reflection.MostParametersConstructorSelector,Autofac", "Autofac.Core.Activators.Reflection.MostParametersConstructorSelector");
            feature.AddKnownType("Autofac.Core.Activators.Reflection.MostParametersConstructorSelectorResources,Autofac", "Autofac.Core.Activators.Reflection.MostParametersConstructorSelectorResources");
            feature.AddKnownType("Autofac.Core.Activators.Reflection.NoConstructorsFoundException,Autofac", "Autofac.Core.Activators.Reflection.NoConstructorsFoundException");
            feature.AddKnownType("Autofac.Core.Activators.Reflection.NoConstructorsFoundExceptionResources,Autofac", "Autofac.Core.Activators.Reflection.NoConstructorsFoundExceptionResources");
            feature.AddKnownType("Autofac.Core.Activators.Reflection.ReflectionActivator,Autofac", "Autofac.Core.Activators.Reflection.ReflectionActivator");
            feature.AddKnownType("Autofac.Core.Activators.Reflection.ReflectionActivatorResources,Autofac", "Autofac.Core.Activators.Reflection.ReflectionActivatorResources");
            feature.AddKnownType("Autofac.Core.Lifetime.CurrentScopeLifetime,Autofac", "Autofac.Core.Lifetime.CurrentScopeLifetime");
            feature.AddKnownType("Autofac.Core.Lifetime.LifetimeScope,Autofac", "Autofac.Core.Lifetime.LifetimeScope");
            feature.AddKnownType("Autofac.Core.Lifetime.LifetimeScopeBeginningEventArgs,Autofac", "Autofac.Core.Lifetime.LifetimeScopeBeginningEventArgs");
            feature.AddKnownType("Autofac.Core.Lifetime.LifetimeScopeEndingEventArgs,Autofac", "Autofac.Core.Lifetime.LifetimeScopeEndingEventArgs");
            feature.AddKnownType("Autofac.Core.Lifetime.LifetimeScopeResources,Autofac", "Autofac.Core.Lifetime.LifetimeScopeResources");
            feature.AddKnownType("Autofac.Core.Lifetime.MatchingScopeLifetime,Autofac", "Autofac.Core.Lifetime.MatchingScopeLifetime");
            feature.AddKnownType("Autofac.Core.Lifetime.MatchingScopeLifetimeResources,Autofac", "Autofac.Core.Lifetime.MatchingScopeLifetimeResources");
            feature.AddKnownType("Autofac.Core.Lifetime.RootScopeLifetime,Autofac", "Autofac.Core.Lifetime.RootScopeLifetime");
            feature.AddKnownType("Autofac.Core.Pipeline.ResolvePipeline,Autofac", "Autofac.Core.Pipeline.ResolvePipeline");
            feature.AddKnownType("Autofac.Core.Registration.ComponentNotRegisteredException,Autofac", "Autofac.Core.Registration.ComponentNotRegisteredException");
            feature.AddKnownType("Autofac.Core.Registration.ComponentNotRegisteredExceptionResources,Autofac", "Autofac.Core.Registration.ComponentNotRegisteredExceptionResources");
            feature.AddKnownType("Autofac.Core.Registration.ComponentPipelineBuildingArgs,Autofac", "Autofac.Core.Registration.ComponentPipelineBuildingArgs");
            feature.AddKnownType("Autofac.Core.Registration.ComponentRegistration,Autofac", "Autofac.Core.Registration.ComponentRegistration");
            feature.AddKnownType("Autofac.Core.Registration.ComponentRegistrationLifetimeDecorator,Autofac", "Autofac.Core.Registration.ComponentRegistrationLifetimeDecorator");
            feature.AddKnownType("Autofac.Core.Registration.ComponentRegistrationResources,Autofac", "Autofac.Core.Registration.ComponentRegistrationResources");
            feature.AddKnownType("Autofac.Core.Registration.ComponentRegistry,Autofac", "Autofac.Core.Registration.ComponentRegistry");
            feature.AddKnownType("Autofac.Core.Registration.ComponentRegistryBuilder,Autofac", "Autofac.Core.Registration.ComponentRegistryBuilder");
            feature.AddKnownType("Autofac.Core.Registration.DefaultRegisteredServicesTracker,Autofac", "Autofac.Core.Registration.DefaultRegisteredServicesTracker");
            feature.AddKnownType("Autofac.Core.Registration.ExternalComponentRegistration,Autofac", "Autofac.Core.Registration.ExternalComponentRegistration");
            feature.AddKnownType("Autofac.Core.Registration.ExternalComponentRegistration+NoOpActivator,Autofac", "Autofac.Core.Registration.NoOpActivator");
            feature.AddKnownType("Autofac.Core.Registration.ExternalRegistryServiceMiddlewareSource,Autofac", "Autofac.Core.Registration.ExternalRegistryServiceMiddlewareSource");
            feature.AddKnownType("Autofac.Core.Registration.ExternalRegistrySource,Autofac", "Autofac.Core.Registration.ExternalRegistrySource");
            feature.AddKnownType("Autofac.Core.Registration.IComponentRegistryBuilder,Autofac", "Autofac.Core.Registration.IComponentRegistryBuilder");
            feature.AddKnownType("Autofac.Core.Registration.IModuleRegistrar,Autofac", "Autofac.Core.Registration.IModuleRegistrar");
            feature.AddKnownType("Autofac.Core.Registration.IRegisteredServicesTracker,Autofac", "Autofac.Core.Registration.IRegisteredServicesTracker");
            feature.AddKnownType("Autofac.Core.Registration.IServiceMiddlewareSource,Autofac", "Autofac.Core.Registration.IServiceMiddlewareSource");
            feature.AddKnownType("Autofac.Core.Registration.IServiceMiddlewareSourceRegistrar,Autofac", "Autofac.Core.Registration.IServiceMiddlewareSourceRegistrar");
            feature.AddKnownType("Autofac.Core.Registration.ISourceRegistrar,Autofac", "Autofac.Core.Registration.ISourceRegistrar");
            feature.AddKnownType("Autofac.Core.Registration.ModuleRegistrar,Autofac", "Autofac.Core.Registration.ModuleRegistrar");
            feature.AddKnownType("Autofac.Core.Registration.ModuleRegistrarData,Autofac", "Autofac.Core.Registration.ModuleRegistrarData");
            feature.AddKnownType("Autofac.Core.Registration.RegistrationOptions,Autofac", "Autofac.Core.Registration.RegistrationOptions");
            feature.AddKnownType("Autofac.Core.Registration.ScopeRestrictedRegisteredServicesTracker,Autofac", "Autofac.Core.Registration.ScopeRestrictedRegisteredServicesTracker");
            feature.AddKnownType("Autofac.Core.Registration.ServiceMiddlewareSourceRegistrar,Autofac", "Autofac.Core.Registration.ServiceMiddlewareSourceRegistrar");
            feature.AddKnownType("Autofac.Core.Registration.ServiceRegistrationInfo,Autofac", "Autofac.Core.Registration.ServiceRegistrationInfo");
            feature.AddKnownType("Autofac.Core.Registration.ServiceRegistrationInfoResources,Autofac", "Autofac.Core.Registration.ServiceRegistrationInfoResources");
            feature.AddKnownType("Autofac.Core.Registration.ServiceWithTypeMiddlewareSource,Autofac", "Autofac.Core.Registration.ServiceWithTypeMiddlewareSource");
            feature.AddKnownType("Autofac.Core.Registration.SourceRegistrar,Autofac", "Autofac.Core.Registration.SourceRegistrar");
            feature.AddKnownType("Autofac.Core.Resolving.BaseGenericResolveDelegateInvoker,Autofac", "Autofac.Core.Resolving.BaseGenericResolveDelegateInvoker");
            feature.AddKnownType("Autofac.Core.Resolving.ComponentActivationResources,Autofac", "Autofac.Core.Resolving.ComponentActivationResources");
            feature.AddKnownType("Autofac.Core.Resolving.IDependencyTrackingResolveOperation,Autofac", "Autofac.Core.Resolving.IDependencyTrackingResolveOperation");
            feature.AddKnownType("Autofac.Core.Resolving.IResolveOperation,Autofac", "Autofac.Core.Resolving.IResolveOperation");
            feature.AddKnownType("Autofac.Core.Resolving.ResolveOperation,Autofac", "Autofac.Core.Resolving.ResolveOperation");
            feature.AddKnownType("Autofac.Core.Resolving.ResolveOperationBeginningEventArgs,Autofac", "Autofac.Core.Resolving.ResolveOperationBeginningEventArgs");
            feature.AddKnownType("Autofac.Core.Resolving.ResolveOperationEndingEventArgs,Autofac", "Autofac.Core.Resolving.ResolveOperationEndingEventArgs");
            feature.AddKnownType("Autofac.Core.Resolving.ResolveOperationResources,Autofac", "Autofac.Core.Resolving.ResolveOperationResources");
            feature.AddKnownType("Autofac.Core.Resolving.ResolveRequestBeginningEventArgs,Autofac", "Autofac.Core.Resolving.ResolveRequestBeginningEventArgs");
            feature.AddKnownType("Autofac.Core.Resolving.ResolveRequestCompletingEventArgs,Autofac", "Autofac.Core.Resolving.ResolveRequestCompletingEventArgs");
            feature.AddKnownType("Autofac.Core.Resolving.SegmentedStack`1,Autofac", "Autofac.Core.Resolving.SegmentedStack`1'1");
            feature.AddKnownType("Autofac.Core.Resolving.SegmentedStack`1+StackSegment,Autofac", "Autofac.Core.Resolving.StackSegment'1");
            feature.AddKnownType("Autofac.Core.Resolving.SegmentedStack`1+Enumerator,Autofac", "Autofac.Core.Resolving.Enumerator'1");
            feature.AddKnownType("Autofac.Core.Resolving.SegmentedStackResources,Autofac", "Autofac.Core.Resolving.SegmentedStackResources");
            feature.AddKnownType("Autofac.Core.Resolving.DelegateInvokers+DelegateInvoker1`2,Autofac", "Autofac.Core.Resolving.Autofac.Core.Resolving.DelegateInvokers.DelegateInvoker1`2'2");
            feature.AddKnownType("Autofac.Core.Resolving.DelegateInvokers+DelegateInvoker1WithComponentContext`2,Autofac", "Autofac.Core.Resolving.Autofac.Core.Resolving.DelegateInvokers.DelegateInvoker1WithComponentContext`2'2");
            feature.AddKnownType("Autofac.Core.Resolving.DelegateInvokers+DelegateInvoker2`3,Autofac", "Autofac.Core.Resolving.Autofac.Core.Resolving.DelegateInvokers.DelegateInvoker2`3'3");
            feature.AddKnownType("Autofac.Core.Resolving.DelegateInvokers+DelegateInvoker2WithComponentContext`3,Autofac", "Autofac.Core.Resolving.Autofac.Core.Resolving.DelegateInvokers.DelegateInvoker2WithComponentContext`3'3");
            feature.AddKnownType("Autofac.Core.Resolving.DelegateInvokers+DelegateInvoker3`4,Autofac", "Autofac.Core.Resolving.Autofac.Core.Resolving.DelegateInvokers.DelegateInvoker3`4'4");
            feature.AddKnownType("Autofac.Core.Resolving.DelegateInvokers+DelegateInvoker3WithComponentContext`4,Autofac", "Autofac.Core.Resolving.Autofac.Core.Resolving.DelegateInvokers.DelegateInvoker3WithComponentContext`4'4");
            feature.AddKnownType("Autofac.Core.Resolving.DelegateInvokers+DelegateInvoker4`5,Autofac", "Autofac.Core.Resolving.Autofac.Core.Resolving.DelegateInvokers.DelegateInvoker4`5'5");
            feature.AddKnownType("Autofac.Core.Resolving.DelegateInvokers+DelegateInvoker4WithComponentContext`5,Autofac", "Autofac.Core.Resolving.Autofac.Core.Resolving.DelegateInvokers.DelegateInvoker4WithComponentContext`5'5");
            feature.AddKnownType("Autofac.Core.Resolving.DelegateInvokers+DelegateInvoker5`6,Autofac", "Autofac.Core.Resolving.Autofac.Core.Resolving.DelegateInvokers.DelegateInvoker5`6'6");
            feature.AddKnownType("Autofac.Core.Resolving.DelegateInvokers+DelegateInvoker5WithComponentContext`6,Autofac", "Autofac.Core.Resolving.Autofac.Core.Resolving.DelegateInvokers.DelegateInvoker5WithComponentContext`6'6");
            feature.AddKnownType("Autofac.Core.Resolving.DelegateInvokers+DelegateInvoker6`7,Autofac", "Autofac.Core.Resolving.Autofac.Core.Resolving.DelegateInvokers.DelegateInvoker6`7'7");
            feature.AddKnownType("Autofac.Core.Resolving.DelegateInvokers+DelegateInvoker6WithComponentContext`7,Autofac", "Autofac.Core.Resolving.Autofac.Core.Resolving.DelegateInvokers.DelegateInvoker6WithComponentContext`7'7");
            feature.AddKnownType("Autofac.Core.Resolving.DelegateInvokers+DelegateInvoker7`8,Autofac", "Autofac.Core.Resolving.Autofac.Core.Resolving.DelegateInvokers.DelegateInvoker7`8'8");
            feature.AddKnownType("Autofac.Core.Resolving.DelegateInvokers+DelegateInvoker7WithComponentContext`8,Autofac", "Autofac.Core.Resolving.Autofac.Core.Resolving.DelegateInvokers.DelegateInvoker7WithComponentContext`8'8");
            feature.AddKnownType("Autofac.Core.Resolving.DelegateInvokers+DelegateInvoker8`9,Autofac", "Autofac.Core.Resolving.Autofac.Core.Resolving.DelegateInvokers.DelegateInvoker8`9'9");
            feature.AddKnownType("Autofac.Core.Resolving.DelegateInvokers+DelegateInvoker8WithComponentContext`9,Autofac", "Autofac.Core.Resolving.Autofac.Core.Resolving.DelegateInvokers.DelegateInvoker8WithComponentContext`9'9");
            feature.AddKnownType("Autofac.Core.Resolving.DelegateInvokers+DelegateInvoker9`10,Autofac", "Autofac.Core.Resolving.Autofac.Core.Resolving.DelegateInvokers.DelegateInvoker9`10'10");
            feature.AddKnownType("Autofac.Core.Resolving.DelegateInvokers+DelegateInvoker9WithComponentContext`10,Autofac", "Autofac.Core.Resolving.Autofac.Core.Resolving.DelegateInvokers.DelegateInvoker9WithComponentContext`10'10");
            feature.AddKnownType("Autofac.Core.Resolving.DelegateInvokers+DelegateInvoker10`11,Autofac", "Autofac.Core.Resolving.Autofac.Core.Resolving.DelegateInvokers.DelegateInvoker10`11'11");
            feature.AddKnownType("Autofac.Core.Resolving.DelegateInvokers+DelegateInvoker10WithComponentContext`11,Autofac", "Autofac.Core.Resolving.Autofac.Core.Resolving.DelegateInvokers.DelegateInvoker10WithComponentContext`11'11");
            feature.AddKnownType("Autofac.Core.Resolving.Middleware.ActivatorErrorHandlingMiddleware,Autofac", "Autofac.Core.Resolving.Middleware.ActivatorErrorHandlingMiddleware");
            feature.AddKnownType("Autofac.Core.Resolving.Middleware.CircularDependencyDetectorMessages,Autofac", "Autofac.Core.Resolving.Middleware.CircularDependencyDetectorMessages");
            feature.AddKnownType("Autofac.Core.Resolving.Middleware.CircularDependencyDetectorMiddleware,Autofac", "Autofac.Core.Resolving.Middleware.CircularDependencyDetectorMiddleware");
            feature.AddKnownType("Autofac.Core.Resolving.Middleware.CoreEventMiddleware,Autofac", "Autofac.Core.Resolving.Middleware.CoreEventMiddleware");
            feature.AddKnownType("Autofac.Core.Resolving.Middleware.DelegateMiddleware,Autofac", "Autofac.Core.Resolving.Middleware.DelegateMiddleware");
            feature.AddKnownType("Autofac.Core.Resolving.Middleware.DisposalTrackingMiddleware,Autofac", "Autofac.Core.Resolving.Middleware.DisposalTrackingMiddleware");
            feature.AddKnownType("Autofac.Core.Resolving.Middleware.MiddlewareMessages,Autofac", "Autofac.Core.Resolving.Middleware.MiddlewareMessages");
            feature.AddKnownType("Autofac.Core.Resolving.Middleware.RegistrationPipelineInvokeMiddleware,Autofac", "Autofac.Core.Resolving.Middleware.RegistrationPipelineInvokeMiddleware");
            feature.AddKnownType("Autofac.Core.Resolving.Middleware.ScopeSelectionMiddleware,Autofac", "Autofac.Core.Resolving.Middleware.ScopeSelectionMiddleware");
            feature.AddKnownType("Autofac.Core.Resolving.Middleware.SharingMiddleware,Autofac", "Autofac.Core.Resolving.Middleware.SharingMiddleware");
            feature.AddKnownType("Autofac.Core.Resolving.Middleware.StartableMiddleware,Autofac", "Autofac.Core.Resolving.Middleware.StartableMiddleware");
            feature.AddKnownType("Autofac.Core.Resolving.Middleware.ResolveEventType,Autofac", "Autofac.Core.Resolving.Middleware.ResolveEventType");
            feature.AddKnownType("Autofac.Core.Resolving.Pipeline.DefaultResolveRequestContext,Autofac", "Autofac.Core.Resolving.Pipeline.DefaultResolveRequestContext");
            feature.AddKnownType("Autofac.Core.Resolving.Pipeline.IResolveMiddleware,Autofac", "Autofac.Core.Resolving.Pipeline.IResolveMiddleware");
            feature.AddKnownType("Autofac.Core.Resolving.Pipeline.IResolvePipeline,Autofac", "Autofac.Core.Resolving.Pipeline.IResolvePipeline");
            feature.AddKnownType("Autofac.Core.Resolving.Pipeline.IResolvePipelineBuilder,Autofac", "Autofac.Core.Resolving.Pipeline.IResolvePipelineBuilder");
            feature.AddKnownType("Autofac.Core.Resolving.Pipeline.MiddlewareDeclaration,Autofac", "Autofac.Core.Resolving.Pipeline.MiddlewareDeclaration");
            feature.AddKnownType("Autofac.Core.Resolving.Pipeline.MiddlewareInsertionMode,Autofac", "Autofac.Core.Resolving.Pipeline.MiddlewareInsertionMode");
            feature.AddKnownType("Autofac.Core.Resolving.Pipeline.PipelineBuilderEnumerator,Autofac", "Autofac.Core.Resolving.Pipeline.PipelineBuilderEnumerator");
            feature.AddKnownType("Autofac.Core.Resolving.Pipeline.PipelinePhase,Autofac", "Autofac.Core.Resolving.Pipeline.PipelinePhase");
            feature.AddKnownType("Autofac.Core.Resolving.Pipeline.PipelineType,Autofac", "Autofac.Core.Resolving.Pipeline.PipelineType");
            feature.AddKnownType("Autofac.Core.Resolving.Pipeline.ResolvePipelineBuilder,Autofac", "Autofac.Core.Resolving.Pipeline.ResolvePipelineBuilder");
            feature.AddKnownType("Autofac.Core.Resolving.Pipeline.ResolvePipelineBuilderMessages,Autofac", "Autofac.Core.Resolving.Pipeline.ResolvePipelineBuilderMessages");
            feature.AddKnownType("Autofac.Core.Resolving.Pipeline.ResolveRequestContext,Autofac", "Autofac.Core.Resolving.Pipeline.ResolveRequestContext");
            feature.AddKnownType("Autofac.Diagnostics.DefaultDiagnosticTracer,Autofac", "Autofac.Diagnostics.DefaultDiagnosticTracer");
            feature.AddKnownType("Autofac.Diagnostics.DefaultDiagnosticTracer+IndentingStringBuilder,Autofac", "Autofac.Diagnostics.IndentingStringBuilder");
            feature.AddKnownType("Autofac.Diagnostics.DiagnosticTracerBase,Autofac", "Autofac.Diagnostics.DiagnosticTracerBase");
            feature.AddKnownType("Autofac.Diagnostics.MiddlewareDiagnosticData,Autofac", "Autofac.Diagnostics.MiddlewareDiagnosticData");
            feature.AddKnownType("Autofac.Diagnostics.OperationDiagnosticTracerBase`1,Autofac", "Autofac.Diagnostics.OperationDiagnosticTracerBase`1'1");
            feature.AddKnownType("Autofac.Diagnostics.OperationFailureDiagnosticData,Autofac", "Autofac.Diagnostics.OperationFailureDiagnosticData");
            feature.AddKnownType("Autofac.Diagnostics.OperationStartDiagnosticData,Autofac", "Autofac.Diagnostics.OperationStartDiagnosticData");
            feature.AddKnownType("Autofac.Diagnostics.OperationSuccessDiagnosticData,Autofac", "Autofac.Diagnostics.OperationSuccessDiagnosticData");
            feature.AddKnownType("Autofac.Diagnostics.OperationTraceCompletedArgs`1,Autofac", "Autofac.Diagnostics.OperationTraceCompletedArgs`1'1");
            feature.AddKnownType("Autofac.Diagnostics.RequestDiagnosticData,Autofac", "Autofac.Diagnostics.RequestDiagnosticData");
            feature.AddKnownType("Autofac.Diagnostics.RequestFailureDiagnosticData,Autofac", "Autofac.Diagnostics.RequestFailureDiagnosticData");
            feature.AddKnownType("Autofac.Diagnostics.TracerMessages,Autofac", "Autofac.Diagnostics.TracerMessages");
            feature.AddKnownType("Autofac.Features.AttributeFilters.KeyFilterAttribute,Autofac", "Autofac.Features.AttributeFilters.KeyFilterAttribute");
            feature.AddKnownType("Autofac.Features.AttributeFilters.MetadataFilterAttribute,Autofac", "Autofac.Features.AttributeFilters.MetadataFilterAttribute");
            feature.AddKnownType("Autofac.Features.AttributeFilters.ParameterFilterAttribute,Autofac", "Autofac.Features.AttributeFilters.ParameterFilterAttribute");
            feature.AddKnownType("Autofac.Features.Collections.CollectionRegistrationSource,Autofac", "Autofac.Features.Collections.CollectionRegistrationSource");
            feature.AddKnownType("Autofac.Features.Collections.CollectionRegistrationSourceResources,Autofac", "Autofac.Features.Collections.CollectionRegistrationSourceResources");
            feature.AddKnownType("Autofac.Features.Decorators.DecoratorContext,Autofac", "Autofac.Features.Decorators.DecoratorContext");
            feature.AddKnownType("Autofac.Features.Decorators.DecoratorMiddleware,Autofac", "Autofac.Features.Decorators.DecoratorMiddleware");
            feature.AddKnownType("Autofac.Features.Decorators.DecoratorService,Autofac", "Autofac.Features.Decorators.DecoratorService");
            feature.AddKnownType("Autofac.Features.Decorators.IDecoratorContext,Autofac", "Autofac.Features.Decorators.IDecoratorContext");
            feature.AddKnownType("Autofac.Features.Decorators.OpenGenericDecoratorMiddlewareSource,Autofac", "Autofac.Features.Decorators.OpenGenericDecoratorMiddlewareSource");
            feature.AddKnownType("Autofac.Features.GeneratedFactories.FactoryGenerator,Autofac", "Autofac.Features.GeneratedFactories.FactoryGenerator");
            feature.AddKnownType("Autofac.Features.GeneratedFactories.GeneratedFactoryActivatorData,Autofac", "Autofac.Features.GeneratedFactories.GeneratedFactoryActivatorData");
            feature.AddKnownType("Autofac.Features.GeneratedFactories.GeneratedFactoryRegistrationSource,Autofac", "Autofac.Features.GeneratedFactories.GeneratedFactoryRegistrationSource");
            feature.AddKnownType("Autofac.Features.GeneratedFactories.GeneratedFactoryRegistrationSourceResources,Autofac", "Autofac.Features.GeneratedFactories.GeneratedFactoryRegistrationSourceResources");
            feature.AddKnownType("Autofac.Features.GeneratedFactories.ParameterMapping,Autofac", "Autofac.Features.GeneratedFactories.ParameterMapping");
            feature.AddKnownType("Autofac.Features.Indexed.IIndex`2,Autofac", "Autofac.Features.Indexed.IIndex`2'2");
            feature.AddKnownType("Autofac.Features.Indexed.KeyedServiceIndex`2,Autofac", "Autofac.Features.Indexed.KeyedServiceIndex`2'2");
            feature.AddKnownType("Autofac.Features.LazyDependencies.LazyRegistrationSource,Autofac", "Autofac.Features.LazyDependencies.LazyRegistrationSource");
            feature.AddKnownType("Autofac.Features.LazyDependencies.LazyRegistrationSourceResources,Autofac", "Autofac.Features.LazyDependencies.LazyRegistrationSourceResources");
            feature.AddKnownType("Autofac.Features.LazyDependencies.LazyWithMetadataRegistrationSource,Autofac", "Autofac.Features.LazyDependencies.LazyWithMetadataRegistrationSource");
            feature.AddKnownType("Autofac.Features.LazyDependencies.LazyWithMetadataRegistrationSourceResources,Autofac", "Autofac.Features.LazyDependencies.LazyWithMetadataRegistrationSourceResources");
            feature.AddKnownType("Autofac.Features.LightweightAdapters.LightweightAdapterActivatorData,Autofac", "Autofac.Features.LightweightAdapters.LightweightAdapterActivatorData");
            feature.AddKnownType("Autofac.Features.LightweightAdapters.LightweightAdapterRegistrationSource,Autofac", "Autofac.Features.LightweightAdapters.LightweightAdapterRegistrationSource");
            feature.AddKnownType("Autofac.Features.LightweightAdapters.LightweightAdapterRegistrationSourceResources,Autofac", "Autofac.Features.LightweightAdapters.LightweightAdapterRegistrationSourceResources");
            feature.AddKnownType("Autofac.Features.Metadata.MetadataViewProviderResources,Autofac", "Autofac.Features.Metadata.MetadataViewProviderResources");
            feature.AddKnownType("Autofac.Features.Metadata.MetaRegistrationSource,Autofac", "Autofac.Features.Metadata.MetaRegistrationSource");
            feature.AddKnownType("Autofac.Features.Metadata.MetaRegistrationSourceResources,Autofac", "Autofac.Features.Metadata.MetaRegistrationSourceResources");
            feature.AddKnownType("Autofac.Features.Metadata.Meta`2,Autofac", "Autofac.Features.Metadata.Meta`2'2");
            feature.AddKnownType("Autofac.Features.Metadata.Meta`1,Autofac", "Autofac.Features.Metadata.Meta`1'1");
            feature.AddKnownType("Autofac.Features.Metadata.StronglyTypedMetaRegistrationSource,Autofac", "Autofac.Features.Metadata.StronglyTypedMetaRegistrationSource");
            feature.AddKnownType("Autofac.Features.OpenGenerics.OpenGenericDecoratorActivatorData,Autofac", "Autofac.Features.OpenGenerics.OpenGenericDecoratorActivatorData");
            feature.AddKnownType("Autofac.Features.OpenGenerics.OpenGenericDecoratorActivatorDataResources,Autofac", "Autofac.Features.OpenGenerics.OpenGenericDecoratorActivatorDataResources");
            feature.AddKnownType("Autofac.Features.OpenGenerics.OpenGenericDecoratorRegistrationSource,Autofac", "Autofac.Features.OpenGenerics.OpenGenericDecoratorRegistrationSource");
            feature.AddKnownType("Autofac.Features.OpenGenerics.OpenGenericDecoratorRegistrationSourceResources,Autofac", "Autofac.Features.OpenGenerics.OpenGenericDecoratorRegistrationSourceResources");
            feature.AddKnownType("Autofac.Features.OpenGenerics.OpenGenericDelegateActivatorData,Autofac", "Autofac.Features.OpenGenerics.OpenGenericDelegateActivatorData");
            feature.AddKnownType("Autofac.Features.OpenGenerics.OpenGenericDelegateRegistrationSource,Autofac", "Autofac.Features.OpenGenerics.OpenGenericDelegateRegistrationSource");
            feature.AddKnownType("Autofac.Features.OpenGenerics.OpenGenericDelegateRegistrationSourceResources,Autofac", "Autofac.Features.OpenGenerics.OpenGenericDelegateRegistrationSourceResources");
            feature.AddKnownType("Autofac.Features.OpenGenerics.OpenGenericRegistrationExtensionsResources,Autofac", "Autofac.Features.OpenGenerics.OpenGenericRegistrationExtensionsResources");
            feature.AddKnownType("Autofac.Features.OpenGenerics.OpenGenericRegistrationSource,Autofac", "Autofac.Features.OpenGenerics.OpenGenericRegistrationSource");
            feature.AddKnownType("Autofac.Features.OpenGenerics.OpenGenericRegistrationSourceResources,Autofac", "Autofac.Features.OpenGenerics.OpenGenericRegistrationSourceResources");
            feature.AddKnownType("Autofac.Features.OpenGenerics.OpenGenericServiceBinderResources,Autofac", "Autofac.Features.OpenGenerics.OpenGenericServiceBinderResources");
            feature.AddKnownType("Autofac.Features.OwnedInstances.InstancePerOwnedKey,Autofac", "Autofac.Features.OwnedInstances.InstancePerOwnedKey");
            feature.AddKnownType("Autofac.Features.OwnedInstances.Owned`1,Autofac", "Autofac.Features.OwnedInstances.Owned`1'1");
            feature.AddKnownType("Autofac.Features.OwnedInstances.OwnedInstanceRegistrationSource,Autofac", "Autofac.Features.OwnedInstances.OwnedInstanceRegistrationSource");
            feature.AddKnownType("Autofac.Features.OwnedInstances.OwnedInstanceRegistrationSourceResources,Autofac", "Autofac.Features.OwnedInstances.OwnedInstanceRegistrationSourceResources");
            feature.AddKnownType("Autofac.Features.ResolveAnything.AnyConcreteTypeNotAlreadyRegisteredSource,Autofac", "Autofac.Features.ResolveAnything.AnyConcreteTypeNotAlreadyRegisteredSource");
            feature.AddKnownType("Autofac.Features.ResolveAnything.AnyConcreteTypeNotAlreadyRegisteredSourceResources,Autofac", "Autofac.Features.ResolveAnything.AnyConcreteTypeNotAlreadyRegisteredSourceResources");
            feature.AddKnownType("Autofac.Features.Scanning.BaseScanningActivatorData`2,Autofac", "Autofac.Features.Scanning.BaseScanningActivatorData`2'2");
            feature.AddKnownType("Autofac.Features.Scanning.OpenGenericScanningActivatorData,Autofac", "Autofac.Features.Scanning.OpenGenericScanningActivatorData");
            feature.AddKnownType("Autofac.Features.Scanning.ScanningActivatorData,Autofac", "Autofac.Features.Scanning.ScanningActivatorData");
            feature.AddKnownType("Autofac.Features.Variance.ContravariantRegistrationSource,Autofac", "Autofac.Features.Variance.ContravariantRegistrationSource");
            feature.AddKnownType("Autofac.Util.AsyncReleaseAction`1,Autofac", "Autofac.Util.AsyncReleaseAction`1'1");
            feature.AddKnownType("Autofac.Util.Disposable,Autofac", "Autofac.Util.Disposable");
            feature.AddKnownType("Autofac.Util.EnforceResources,Autofac", "Autofac.Util.EnforceResources");
            feature.AddKnownType("Autofac.Util.FallbackDictionary`2,Autofac", "Autofac.Util.FallbackDictionary`2'2");
            feature.AddKnownType("Autofac.Util.FallbackDictionaryResources,Autofac", "Autofac.Util.FallbackDictionaryResources");
            feature.AddKnownType("Autofac.Util.ReflectionExtensionsResources,Autofac", "Autofac.Util.ReflectionExtensionsResources");
            feature.AddKnownType("Autofac.Util.ReleaseAction`1,Autofac", "Autofac.Util.ReleaseAction`1'1");
            feature.AddKnownType("Autofac.Util.ValidatedNotNullAttribute,Autofac", "Autofac.Util.ValidatedNotNullAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Autofac", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("Autofac.Extensions.DependencyInjection.AutofacChildLifetimeScopeConfigurationAdapter,Autofac.Extensions.DependencyInjection", "Autofac.Extensions.DependencyInjection.AutofacChildLifetimeScopeConfigurationAdapter");
            feature.AddKnownType("Autofac.Extensions.DependencyInjection.AutofacChildLifetimeScopeServiceProviderFactory,Autofac.Extensions.DependencyInjection", "Autofac.Extensions.DependencyInjection.AutofacChildLifetimeScopeServiceProviderFactory");
            feature.AddKnownType("Autofac.Extensions.DependencyInjection.AutofacServiceProvider,Autofac.Extensions.DependencyInjection", "Autofac.Extensions.DependencyInjection.AutofacServiceProvider");
            feature.AddKnownType("Autofac.Extensions.DependencyInjection.AutofacServiceProviderFactory,Autofac.Extensions.DependencyInjection", "Autofac.Extensions.DependencyInjection.AutofacServiceProviderFactory");
            feature.AddKnownType("Autofac.Extensions.DependencyInjection.AutofacServiceScope,Autofac.Extensions.DependencyInjection", "Autofac.Extensions.DependencyInjection.AutofacServiceScope");
            feature.AddKnownType("Autofac.Extensions.DependencyInjection.AutofacServiceScopeFactory,Autofac.Extensions.DependencyInjection", "Autofac.Extensions.DependencyInjection.AutofacServiceScopeFactory");
            feature.AddKnownType("Autofac.Extensions.DependencyInjection.ServiceProviderExtensionsResources,Autofac.Extensions.DependencyInjection", "Autofac.Extensions.DependencyInjection.ServiceProviderExtensionsResources");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Autofac.Extensions.DependencyInjection", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("Autofac.Extras.DynamicProxy.InterceptAttribute,Autofac.Extras.DynamicProxy", "Autofac.Extras.DynamicProxy.InterceptAttribute");
            feature.AddKnownType("Autofac.Extras.DynamicProxy.RegistrationExtensionsResources,Autofac.Extras.DynamicProxy", "Autofac.Extras.DynamicProxy.RegistrationExtensionsResources");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Autofac.Extras.DynamicProxy", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("CAServer.CAServerDomainModule,CAServer.Domain", "CAServer.CAServerDomainModule");
            feature.AddKnownType("CAServer.Account.CAGuardian,CAServer.Domain", "CAServer.Account.CAGuardian");
            feature.AddKnownType("CAServer.Account.CAVerifier,CAServer.Domain", "CAServer.Account.CAVerifier");
            feature.AddKnownType("CAServer.Data.CAServerDbMigrationService,CAServer.Domain", "CAServer.Data.CAServerDbMigrationService");
            feature.AddKnownType("CAServer.Data.ICAServerDbSchemaMigrator,CAServer.Domain", "CAServer.Data.ICAServerDbSchemaMigrator");
            feature.AddKnownType("CAServer.Data.NullCAServerDbSchemaMigrator,CAServer.Domain", "CAServer.Data.NullCAServerDbSchemaMigrator");
            feature.AddKnownType("CAServer.Entities.CAServerEntity`1,CAServer.Domain", "CAServer.Entities.CAServerEntity`1'1");
            feature.AddKnownType("CAServer.Entities.IMultiChain,CAServer.Domain", "CAServer.Entities.IMultiChain");
            feature.AddKnownType("CAServer.Entities.MultiChainEntity`1,CAServer.Domain", "CAServer.Entities.MultiChainEntity`1'1");
            feature.AddKnownType("CAServer.Entities.Es.AccountRecoverIndex,CAServer.Domain", "CAServer.Entities.Es.AccountRecoverIndex");
            feature.AddKnownType("CAServer.Entities.Es.AccountRegisterIndex,CAServer.Domain", "CAServer.Entities.Es.AccountRegisterIndex");
            feature.AddKnownType("CAServer.Entities.Es.CAHolderIndex,CAServer.Domain", "CAServer.Entities.Es.CAHolderIndex");
            feature.AddKnownType("CAServer.Entities.Es.CAServerEsEntity`1,CAServer.Domain", "CAServer.Entities.Es.CAServerEsEntity`1'1");
            feature.AddKnownType("CAServer.Entities.Es.ChainsInfoIndex,CAServer.Domain", "CAServer.Entities.Es.ChainsInfoIndex");
            feature.AddKnownType("CAServer.Entities.Es.DefaultTokenInfo,CAServer.Domain", "CAServer.Entities.Es.DefaultTokenInfo");
            feature.AddKnownType("CAServer.Entities.Es.ContactIndex,CAServer.Domain", "CAServer.Entities.Es.ContactIndex");
            feature.AddKnownType("CAServer.Entities.Es.ContactAddress,CAServer.Domain", "CAServer.Entities.Es.ContactAddress");
            feature.AddKnownType("CAServer.Entities.Es.GuardianIndex,CAServer.Domain", "CAServer.Entities.Es.GuardianIndex");
            feature.AddKnownType("CAServer.Entities.Es.NotifyRulesIndex,CAServer.Domain", "CAServer.Entities.Es.NotifyRulesIndex");
            feature.AddKnownType("CAServer.Entities.Es.OrderIndex,CAServer.Domain", "CAServer.Entities.Es.OrderIndex");
            feature.AddKnownType("CAServer.Entities.Es.UserExtraInfoIndex,CAServer.Domain", "CAServer.Entities.Es.UserExtraInfoIndex");
            feature.AddKnownType("CAServer.Entities.Es.UserTokenIndex,CAServer.Domain", "CAServer.Entities.Es.UserTokenIndex");
            feature.AddKnownType("CAServer.Entities.Es.Token,CAServer.Domain", "CAServer.Entities.Es.Token");
            feature.AddKnownType("CAServer.OpenIddict.GrantTypeConstants,CAServer.Domain", "CAServer.OpenIddict.GrantTypeConstants");
            feature.AddKnownType("CAServer.OpenIddict.OpenIddictDataSeedContributor,CAServer.Domain", "CAServer.OpenIddict.OpenIddictDataSeedContributor");
            feature.AddKnownType("CAServer.Settings.CAServerSettingDefinitionProvider,CAServer.Domain", "CAServer.Settings.CAServerSettingDefinitionProvider");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,CAServer.Domain", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("CAServer.Signature.CAServerSignatureModule,CAServer.Signature", "CAServer.Signature.CAServerSignatureModule");
            feature.AddKnownType("CAServer.Signature.ISignatureProvider,CAServer.Signature", "CAServer.Signature.ISignatureProvider");
            feature.AddKnownType("CAServer.Signature.SignatureProvider,CAServer.Signature", "CAServer.Signature.SignatureProvider");
            feature.AddKnownType("CAServer.Signature.SendSignatureDto,CAServer.Signature", "CAServer.Signature.SendSignatureDto");
            feature.AddKnownType("CAServer.Signature.SignResponseDto,CAServer.Signature", "CAServer.Signature.SignResponseDto");
            feature.AddKnownType("CAServer.Signature.SignatureServerOptions,CAServer.Signature", "CAServer.Signature.SignatureServerOptions");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,CAServer.Signature", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Castle.DynamicProxy.AsyncDeterminationInterceptor,Castle.Core.AsyncInterceptor", "Castle.DynamicProxy.AsyncDeterminationInterceptor");
            feature.AddKnownType("Castle.DynamicProxy.AsyncDeterminationInterceptor+MethodType,Castle.Core.AsyncInterceptor", "Castle.DynamicProxy.MethodType");
            feature.AddKnownType("Castle.DynamicProxy.AsyncInterceptorBase,Castle.Core.AsyncInterceptor", "Castle.DynamicProxy.AsyncInterceptorBase");
            feature.AddKnownType("Castle.DynamicProxy.AsyncTimingInterceptor,Castle.Core.AsyncInterceptor", "Castle.DynamicProxy.AsyncTimingInterceptor");
            feature.AddKnownType("Castle.DynamicProxy.IAsyncInterceptor,Castle.Core.AsyncInterceptor", "Castle.DynamicProxy.IAsyncInterceptor");
            feature.AddKnownType("Castle.DynamicProxy.ProcessingAsyncInterceptor`1,Castle.Core.AsyncInterceptor", "Castle.DynamicProxy.ProcessingAsyncInterceptor`1'1");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Castle.Core.AsyncInterceptor", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.AbstractDictionaryAdapter,Castle.Core", "Castle.Components.DictionaryAdapter.AbstractDictionaryAdapter");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.AbstractDictionaryAdapterVisitor,Castle.Core", "Castle.Components.DictionaryAdapter.AbstractDictionaryAdapterVisitor");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.ComponentAttribute,Castle.Core", "Castle.Components.DictionaryAdapter.ComponentAttribute");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.DictionaryAdapterAttribute,Castle.Core", "Castle.Components.DictionaryAdapter.DictionaryAdapterAttribute");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.DictionaryBehaviorAttribute,Castle.Core", "Castle.Components.DictionaryAdapter.DictionaryBehaviorAttribute");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.FetchAttribute,Castle.Core", "Castle.Components.DictionaryAdapter.FetchAttribute");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.GroupAttribute,Castle.Core", "Castle.Components.DictionaryAdapter.GroupAttribute");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.IfExistsAttribute,Castle.Core", "Castle.Components.DictionaryAdapter.IfExistsAttribute");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.KeyAttribute,Castle.Core", "Castle.Components.DictionaryAdapter.KeyAttribute");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.KeyPrefixAttribute,Castle.Core", "Castle.Components.DictionaryAdapter.KeyPrefixAttribute");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.KeySubstitutionAttribute,Castle.Core", "Castle.Components.DictionaryAdapter.KeySubstitutionAttribute");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.MultiLevelEditAttribute,Castle.Core", "Castle.Components.DictionaryAdapter.MultiLevelEditAttribute");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.NewGuidAttribute,Castle.Core", "Castle.Components.DictionaryAdapter.NewGuidAttribute");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.OnDemandAttribute,Castle.Core", "Castle.Components.DictionaryAdapter.OnDemandAttribute");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.ReferenceAttribute,Castle.Core", "Castle.Components.DictionaryAdapter.ReferenceAttribute");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.RemoveIfAttribute,Castle.Core", "Castle.Components.DictionaryAdapter.RemoveIfAttribute");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.RemoveIfAttribute+ValueCondition,Castle.Core", "Castle.Components.DictionaryAdapter.ValueCondition");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.RemoveIfEmptyAttribute,Castle.Core", "Castle.Components.DictionaryAdapter.RemoveIfEmptyAttribute");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.RemoveIfEmptyAttribute+RemoveIfEmptyCondition,Castle.Core", "Castle.Components.DictionaryAdapter.RemoveIfEmptyCondition");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.StringFormatAttribute,Castle.Core", "Castle.Components.DictionaryAdapter.StringFormatAttribute");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.StringListAttribute,Castle.Core", "Castle.Components.DictionaryAdapter.StringListAttribute");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.StringListAttribute+StringListWrapper`1,Castle.Core", "Castle.Components.DictionaryAdapter.StringListWrapper`1'1");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.StringStorageAttribute,Castle.Core", "Castle.Components.DictionaryAdapter.StringStorageAttribute");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.StringValuesAttribute,Castle.Core", "Castle.Components.DictionaryAdapter.StringValuesAttribute");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.SuppressNotificationsAttribute,Castle.Core", "Castle.Components.DictionaryAdapter.SuppressNotificationsAttribute");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.TypeKeyPrefixAttribute,Castle.Core", "Castle.Components.DictionaryAdapter.TypeKeyPrefixAttribute");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.VolatileAttribute,Castle.Core", "Castle.Components.DictionaryAdapter.VolatileAttribute");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.XmlDefaultsAttribute,Castle.Core", "Castle.Components.DictionaryAdapter.XmlDefaultsAttribute");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.XmlNamespaceAttribute,Castle.Core", "Castle.Components.DictionaryAdapter.XmlNamespaceAttribute");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.CascadingDictionaryAdapter,Castle.Core", "Castle.Components.DictionaryAdapter.CascadingDictionaryAdapter");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.DefaultPropertyGetter,Castle.Core", "Castle.Components.DictionaryAdapter.DefaultPropertyGetter");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.DictionaryAdapterBase,Castle.Core", "Castle.Components.DictionaryAdapter.DictionaryAdapterBase");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.DictionaryAdapterBase+Edit,Castle.Core", "Castle.Components.DictionaryAdapter.Edit");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.DictionaryAdapterBase+SuppressEditingScope,Castle.Core", "Castle.Components.DictionaryAdapter.SuppressEditingScope");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.DictionaryAdapterBase+NotificationSuppressionScope,Castle.Core", "Castle.Components.DictionaryAdapter.NotificationSuppressionScope");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.DictionaryAdapterBase+TrackPropertyChangeScope,Castle.Core", "Castle.Components.DictionaryAdapter.Castle.Components.DictionaryAdapter.DictionaryAdapterBase.TrackPropertyChangeScope");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.DictionaryAdapterFactory,Castle.Core", "Castle.Components.DictionaryAdapter.DictionaryAdapterFactory");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.DictionaryAdapterInstance,Castle.Core", "Castle.Components.DictionaryAdapter.DictionaryAdapterInstance");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.DictionaryAdapterMeta,Castle.Core", "Castle.Components.DictionaryAdapter.DictionaryAdapterMeta");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.DictionaryValidateGroup,Castle.Core", "Castle.Components.DictionaryAdapter.DictionaryValidateGroup");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.DynamicDictionary,Castle.Core", "Castle.Components.DictionaryAdapter.DynamicDictionary");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.GenericDictionaryAdapter`1,Castle.Core", "Castle.Components.DictionaryAdapter.GenericDictionaryAdapter`1'1");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Core", "Castle.Components.DictionaryAdapter.IDictionaryAdapter");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.IDictionaryAdapterFactory,Castle.Core", "Castle.Components.DictionaryAdapter.IDictionaryAdapterFactory");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.IDictionaryAdapterVisitor,Castle.Core", "Castle.Components.DictionaryAdapter.IDictionaryAdapterVisitor");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.IDictionaryBehavior,Castle.Core", "Castle.Components.DictionaryAdapter.IDictionaryBehavior");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.IDictionaryBehaviorBuilder,Castle.Core", "Castle.Components.DictionaryAdapter.IDictionaryBehaviorBuilder");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.IDictionaryCoerceStrategy,Castle.Core", "Castle.Components.DictionaryAdapter.IDictionaryCoerceStrategy");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.IDictionaryCopyStrategy,Castle.Core", "Castle.Components.DictionaryAdapter.IDictionaryCopyStrategy");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.IDictionaryCreate,Castle.Core", "Castle.Components.DictionaryAdapter.IDictionaryCreate");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.IDictionaryCreateStrategy,Castle.Core", "Castle.Components.DictionaryAdapter.IDictionaryCreateStrategy");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.IDictionaryEdit,Castle.Core", "Castle.Components.DictionaryAdapter.IDictionaryEdit");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.IDictionaryEqualityHashCodeStrategy,Castle.Core", "Castle.Components.DictionaryAdapter.IDictionaryEqualityHashCodeStrategy");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.IDictionaryInitializer,Castle.Core", "Castle.Components.DictionaryAdapter.IDictionaryInitializer");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.IDictionaryKeyBuilder,Castle.Core", "Castle.Components.DictionaryAdapter.IDictionaryKeyBuilder");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.IDictionaryMetaInitializer,Castle.Core", "Castle.Components.DictionaryAdapter.IDictionaryMetaInitializer");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.IDictionaryNotify,Castle.Core", "Castle.Components.DictionaryAdapter.IDictionaryNotify");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.IDictionaryPropertyGetter,Castle.Core", "Castle.Components.DictionaryAdapter.IDictionaryPropertyGetter");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.IDictionaryPropertySetter,Castle.Core", "Castle.Components.DictionaryAdapter.IDictionaryPropertySetter");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.IDictionaryReferenceManager,Castle.Core", "Castle.Components.DictionaryAdapter.IDictionaryReferenceManager");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.IDictionaryValidate,Castle.Core", "Castle.Components.DictionaryAdapter.IDictionaryValidate");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.IDictionaryValidator,Castle.Core", "Castle.Components.DictionaryAdapter.IDictionaryValidator");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.IPropertyDescriptorInitializer,Castle.Core", "Castle.Components.DictionaryAdapter.IPropertyDescriptorInitializer");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.MemberwiseEqualityHashCodeStrategy,Castle.Core", "Castle.Components.DictionaryAdapter.MemberwiseEqualityHashCodeStrategy");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.MemberwiseEqualityHashCodeStrategy+HashCodeVisitor,Castle.Core", "Castle.Components.DictionaryAdapter.HashCodeVisitor");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.NameValueCollectionAdapter,Castle.Core", "Castle.Components.DictionaryAdapter.NameValueCollectionAdapter");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.PropertyChangedEventArgsEx,Castle.Core", "Castle.Components.DictionaryAdapter.PropertyChangedEventArgsEx");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.PropertyChangingEventArgsEx,Castle.Core", "Castle.Components.DictionaryAdapter.PropertyChangingEventArgsEx");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.PropertyDescriptor,Castle.Core", "Castle.Components.DictionaryAdapter.PropertyDescriptor");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.BindingList`1,Castle.Core", "Castle.Components.DictionaryAdapter.BindingList`1'1");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.BindingListInitializer`1,Castle.Core", "Castle.Components.DictionaryAdapter.BindingListInitializer`1'1");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.BindingListInitializer`1+SuppressListChangedEvents,Castle.Core", "Castle.Components.DictionaryAdapter.SuppressListChangedEvents'1");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.DynamicValue`1,Castle.Core", "Castle.Components.DictionaryAdapter.DynamicValue`1'1");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.DynamicValueDelegate`1,Castle.Core", "Castle.Components.DictionaryAdapter.DynamicValueDelegate`1'1");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.EditableBindingList`1,Castle.Core", "Castle.Components.DictionaryAdapter.EditableBindingList`1'1");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.EditableList`1,Castle.Core", "Castle.Components.DictionaryAdapter.EditableList`1'1");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.EditableList,Castle.Core", "Castle.Components.DictionaryAdapter.EditableList");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.IBindingList`1,Castle.Core", "Castle.Components.DictionaryAdapter.IBindingList`1'1");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.IBindingListSource,Castle.Core", "Castle.Components.DictionaryAdapter.IBindingListSource");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.ICollectionAdapter`1,Castle.Core", "Castle.Components.DictionaryAdapter.ICollectionAdapter`1'1");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.ICollectionAdapterObserver`1,Castle.Core", "Castle.Components.DictionaryAdapter.ICollectionAdapterObserver`1'1");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.ICollectionProjection,Castle.Core", "Castle.Components.DictionaryAdapter.ICollectionProjection");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.ICondition,Castle.Core", "Castle.Components.DictionaryAdapter.ICondition");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.IDynamicValue,Castle.Core", "Castle.Components.DictionaryAdapter.IDynamicValue");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.IDynamicValue`1,Castle.Core", "Castle.Components.DictionaryAdapter.IDynamicValue`1'1");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.IValueInitializer,Castle.Core", "Castle.Components.DictionaryAdapter.IValueInitializer");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.IVirtual,Castle.Core", "Castle.Components.DictionaryAdapter.IVirtual");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.IVirtual`1,Castle.Core", "Castle.Components.DictionaryAdapter.IVirtual`1'1");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.IVirtualSite`1,Castle.Core", "Castle.Components.DictionaryAdapter.IVirtualSite`1'1");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.IVirtualTarget`2,Castle.Core", "Castle.Components.DictionaryAdapter.IVirtualTarget`2'2");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.ListProjection`1,Castle.Core", "Castle.Components.DictionaryAdapter.ListProjection`1'1");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.ListProjectionDebugView`1,Castle.Core", "Castle.Components.DictionaryAdapter.ListProjectionDebugView`1'1");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.SetProjection`1,Castle.Core", "Castle.Components.DictionaryAdapter.SetProjection`1'1");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.VirtualObject`1,Castle.Core", "Castle.Components.DictionaryAdapter.VirtualObject`1'1");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.VirtualSite`2,Castle.Core", "Castle.Components.DictionaryAdapter.VirtualSite`2'2");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XPathAttribute,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XPathAttribute");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XPathFunctionAttribute,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XPathFunctionAttribute");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XPathVariableAttribute,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XPathVariableAttribute");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.DefaultXmlReferenceFormat,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.DefaultXmlReferenceFormat");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.IXmlReferenceFormat,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.IXmlReferenceFormat");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlAdapter,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlAdapter");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlMetadata,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlMetadata");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlMetadataBehavior,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlMetadataBehavior");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager+Entry,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.Entry");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager+Reference,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.Reference");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager+EntryValue,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.EntryValue");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.IXmlAccessor,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.IXmlAccessor");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.IXmlBehaviorSemantics`1,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.IXmlBehaviorSemantics`1'1");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.IXmlCollectionAccessor,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.IXmlCollectionAccessor");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.IXmlPropertyAccessor,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.IXmlPropertyAccessor");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlAccessor,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlAccessor");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlAccessor+States,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.States");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlArrayBehaviorAccessor,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlArrayBehaviorAccessor");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlArrayBehaviorAccessor+ItemAccessor,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.ItemAccessor");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlAttributeBehaviorAccessor,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlAttributeBehaviorAccessor");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlDefaultBehaviorAccessor,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlDefaultBehaviorAccessor");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlElementBehaviorAccessor,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlElementBehaviorAccessor");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlElementBehaviorAccessor+ItemAccessor,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.ItemAccessor");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlIgnoreBehaviorAccessor,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlIgnoreBehaviorAccessor");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlIgnoreBehaviorAccessor+DummyContext,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.DummyContext");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlNodeAccessor,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlNodeAccessor");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlSelfAccessor,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlSelfAccessor");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XPathBehaviorAccessor,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XPathBehaviorAccessor");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XPathBehaviorAccessor+DefaultAccessor,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.DefaultAccessor");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XPathBehaviorAccessor+ItemAccessor,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.ItemAccessor");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlCollectionAdapter`1,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlCollectionAdapter`1'1");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlCollectionItem`1,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlCollectionItem`1'1");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlNodeList`1,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlNodeList`1'1");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlNodeSet`1,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlNodeSet`1'1");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.CursorFlags,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.CursorFlags");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.IXmlContext,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.IXmlContext");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.IXmlCursor,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.IXmlCursor");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.IXmlIterator,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.IXmlIterator");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.IXmlNamespaceSource,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.IXmlNamespaceSource");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.IXmlNode");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.IXmlNodeSource,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.IXmlNodeSource");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlContext,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlContext");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlContextBase,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlContextBase");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlName,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlName");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlNameComparer,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlNameComparer");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlNodeBase,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlNodeBase");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlPositionComparer,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlPositionComparer");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlPositionComparer+ComparandIterator,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.ComparandIterator");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlSelfCursor,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlSelfCursor");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.SysXmlCursor,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.SysXmlCursor");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.SysXmlCursor+State,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.State");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.SysXmlNode,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.SysXmlNode");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.SysXmlSubtreeIterator,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.SysXmlSubtreeIterator");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.SysXmlSubtreeIterator+State,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.State");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.CompiledXPath,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.CompiledXPath");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.CompiledXPathNode,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.CompiledXPathNode");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.CompiledXPathStep,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.CompiledXPathStep");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XPathBufferedNodeIterator,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XPathBufferedNodeIterator");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XPathCompiler+Token,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.Token");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XPathCompiler+Tokenizer,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.Tokenizer");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XPathCompiler+Tokenizer+State,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.State");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XPathContext,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XPathContext");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XPathMutableCursor,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XPathMutableCursor");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XPathNode,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XPathNode");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XPathReadOnlyCursor,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XPathReadOnlyCursor");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlArraySerializer,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlArraySerializer");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlCollectionSerializer,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlCollectionSerializer");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlComponentSerializer,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlComponentSerializer");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlCustomSerializer,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlCustomSerializer");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlDefaultSerializer,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlDefaultSerializer");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlDynamicSerializer,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlDynamicSerializer");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlEnumerationSerializer,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlEnumerationSerializer");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlListSerializer,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlListSerializer");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlSetSerializer,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlSetSerializer");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlSimpleSerializer`1,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlSimpleSerializer`1'1");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlStringSerializer,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlStringSerializer");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlTypeKind,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlTypeKind");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlTypeSerializer,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlTypeSerializer");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlTypeSerializerCache,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlTypeSerializerCache");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlXmlNodeSerializer,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlXmlNodeSerializer");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.IXmlIdentity,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.IXmlIdentity");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.IXmlIncludedType,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.IXmlIncludedType");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.IXmlIncludedTypeMap,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.IXmlIncludedTypeMap");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.IXmlKnownType,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.IXmlKnownType");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.IXmlKnownTypeMap,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.IXmlKnownTypeMap");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlIncludedType,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlIncludedType");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlIncludedTypeSet,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlIncludedTypeSet");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlKnownType,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlKnownType");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlKnownTypeSet,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlKnownTypeSet");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlKnownTypeSet+XmlIdentityComparer,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlIdentityComparer");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlKnownTypeSet+XmlKnownTypeNameComparer,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlKnownTypeNameComparer");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.IConfigurable`1,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.IConfigurable`1'1");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.IRealizable`1,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.IRealizable`1'1");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.IRealizableSource,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.IRealizableSource");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.SingletonDispenser`2,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.SingletonDispenser`2'2");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlSubtreeReader,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlSubtreeReader");
            feature.AddKnownType("Castle.Components.DictionaryAdapter.Xml.XmlSubtreeWriter,Castle.Core", "Castle.Components.DictionaryAdapter.Xml.XmlSubtreeWriter");
            feature.AddKnownType("Castle.Core.IServiceEnabledComponent,Castle.Core", "Castle.Core.IServiceEnabledComponent");
            feature.AddKnownType("Castle.Core.IServiceProviderEx,Castle.Core", "Castle.Core.IServiceProviderEx");
            feature.AddKnownType("Castle.Core.IServiceProviderExAccessor,Castle.Core", "Castle.Core.IServiceProviderExAccessor");
            feature.AddKnownType("Castle.Core.ReferenceEqualityComparer`1,Castle.Core", "Castle.Core.ReferenceEqualityComparer`1'1");
            feature.AddKnownType("Castle.Core.ReflectionBasedDictionaryAdapter,Castle.Core", "Castle.Core.ReflectionBasedDictionaryAdapter");
            feature.AddKnownType("Castle.Core.ReflectionBasedDictionaryAdapter+DictionaryEntryEnumeratorAdapter,Castle.Core", "Castle.Core.DictionaryEntryEnumeratorAdapter");
            feature.AddKnownType("Castle.Core.StringObjectDictionaryAdapter,Castle.Core", "Castle.Core.StringObjectDictionaryAdapter");
            feature.AddKnownType("Castle.Core.StringObjectDictionaryAdapter+EnumeratorAdapter,Castle.Core", "Castle.Core.EnumeratorAdapter");
            feature.AddKnownType("Castle.Core.Configuration.AbstractConfiguration,Castle.Core", "Castle.Core.Configuration.AbstractConfiguration");
            feature.AddKnownType("Castle.Core.Configuration.ConfigurationAttributeCollection,Castle.Core", "Castle.Core.Configuration.ConfigurationAttributeCollection");
            feature.AddKnownType("Castle.Core.Configuration.ConfigurationCollection,Castle.Core", "Castle.Core.Configuration.ConfigurationCollection");
            feature.AddKnownType("Castle.Core.Configuration.IConfiguration,Castle.Core", "Castle.Core.Configuration.IConfiguration");
            feature.AddKnownType("Castle.Core.Configuration.MutableConfiguration,Castle.Core", "Castle.Core.Configuration.MutableConfiguration");
            feature.AddKnownType("Castle.Core.Configuration.Xml.XmlConfigurationDeserializer,Castle.Core", "Castle.Core.Configuration.Xml.XmlConfigurationDeserializer");
            feature.AddKnownType("Castle.Core.Internal.InterfaceAttributeUtil,Castle.Core", "Castle.Core.Internal.InterfaceAttributeUtil");
            feature.AddKnownType("Castle.Core.Internal.InterfaceAttributeUtil+Aged`1,Castle.Core", "Castle.Core.Internal.Aged`1'1");
            feature.AddKnownType("Castle.Core.Internal.InternalsVisible,Castle.Core", "Castle.Core.Internal.InternalsVisible");
            feature.AddKnownType("Castle.Core.Internal.SynchronizedDictionary`2,Castle.Core", "Castle.Core.Internal.SynchronizedDictionary`2'2");
            feature.AddKnownType("Castle.Core.Internal.WeakKey,Castle.Core", "Castle.Core.Internal.WeakKey");
            feature.AddKnownType("Castle.Core.Internal.WeakKeyComparer`1,Castle.Core", "Castle.Core.Internal.WeakKeyComparer`1'1");
            feature.AddKnownType("Castle.Core.Internal.WeakKeyDictionary`2,Castle.Core", "Castle.Core.Internal.WeakKeyDictionary`2'2");
            feature.AddKnownType("Castle.Core.Internal.WeakKeyDictionary`2+KeyCollection,Castle.Core", "Castle.Core.Internal.KeyCollection'2");
            feature.AddKnownType("Castle.Core.Logging.AbstractExtendedLoggerFactory,Castle.Core", "Castle.Core.Logging.AbstractExtendedLoggerFactory");
            feature.AddKnownType("Castle.Core.Logging.AbstractLoggerFactory,Castle.Core", "Castle.Core.Logging.AbstractLoggerFactory");
            feature.AddKnownType("Castle.Core.Logging.ConsoleFactory,Castle.Core", "Castle.Core.Logging.ConsoleFactory");
            feature.AddKnownType("Castle.Core.Logging.ConsoleLogger,Castle.Core", "Castle.Core.Logging.ConsoleLogger");
            feature.AddKnownType("Castle.Core.Logging.DiagnosticsLogger,Castle.Core", "Castle.Core.Logging.DiagnosticsLogger");
            feature.AddKnownType("Castle.Core.Logging.DiagnosticsLoggerFactory,Castle.Core", "Castle.Core.Logging.DiagnosticsLoggerFactory");
            feature.AddKnownType("Castle.Core.Logging.IContextProperties,Castle.Core", "Castle.Core.Logging.IContextProperties");
            feature.AddKnownType("Castle.Core.Logging.IContextStack,Castle.Core", "Castle.Core.Logging.IContextStack");
            feature.AddKnownType("Castle.Core.Logging.IContextStacks,Castle.Core", "Castle.Core.Logging.IContextStacks");
            feature.AddKnownType("Castle.Core.Logging.IExtendedLogger,Castle.Core", "Castle.Core.Logging.IExtendedLogger");
            feature.AddKnownType("Castle.Core.Logging.IExtendedLoggerFactory,Castle.Core", "Castle.Core.Logging.IExtendedLoggerFactory");
            feature.AddKnownType("Castle.Core.Logging.ILogger,Castle.Core", "Castle.Core.Logging.ILogger");
            feature.AddKnownType("Castle.Core.Logging.ILoggerFactory,Castle.Core", "Castle.Core.Logging.ILoggerFactory");
            feature.AddKnownType("Castle.Core.Logging.LevelFilteredLogger,Castle.Core", "Castle.Core.Logging.LevelFilteredLogger");
            feature.AddKnownType("Castle.Core.Logging.LoggerException,Castle.Core", "Castle.Core.Logging.LoggerException");
            feature.AddKnownType("Castle.Core.Logging.LoggerLevel,Castle.Core", "Castle.Core.Logging.LoggerLevel");
            feature.AddKnownType("Castle.Core.Logging.NullLogFactory,Castle.Core", "Castle.Core.Logging.NullLogFactory");
            feature.AddKnownType("Castle.Core.Logging.NullLogger,Castle.Core", "Castle.Core.Logging.NullLogger");
            feature.AddKnownType("Castle.Core.Logging.NullLogger+NullContextProperties,Castle.Core", "Castle.Core.Logging.NullContextProperties");
            feature.AddKnownType("Castle.Core.Logging.NullLogger+NullContextStack,Castle.Core", "Castle.Core.Logging.NullContextStack");
            feature.AddKnownType("Castle.Core.Logging.NullLogger+NullContextStacks,Castle.Core", "Castle.Core.Logging.NullContextStacks");
            feature.AddKnownType("Castle.Core.Logging.StreamLogger,Castle.Core", "Castle.Core.Logging.StreamLogger");
            feature.AddKnownType("Castle.Core.Logging.StreamLoggerFactory,Castle.Core", "Castle.Core.Logging.StreamLoggerFactory");
            feature.AddKnownType("Castle.Core.Logging.TraceLogger,Castle.Core", "Castle.Core.Logging.TraceLogger");
            feature.AddKnownType("Castle.Core.Logging.TraceLoggerFactory,Castle.Core", "Castle.Core.Logging.TraceLoggerFactory");
            feature.AddKnownType("Castle.Core.Resource.AbstractResource,Castle.Core", "Castle.Core.Resource.AbstractResource");
            feature.AddKnownType("Castle.Core.Resource.AbstractStreamResource,Castle.Core", "Castle.Core.Resource.AbstractStreamResource");
            feature.AddKnownType("Castle.Core.Resource.AssemblyBundleResource,Castle.Core", "Castle.Core.Resource.AssemblyBundleResource");
            feature.AddKnownType("Castle.Core.Resource.AssemblyResource,Castle.Core", "Castle.Core.Resource.AssemblyResource");
            feature.AddKnownType("Castle.Core.Resource.AssemblyResourceFactory,Castle.Core", "Castle.Core.Resource.AssemblyResourceFactory");
            feature.AddKnownType("Castle.Core.Resource.CustomUri,Castle.Core", "Castle.Core.Resource.CustomUri");
            feature.AddKnownType("Castle.Core.Resource.FileResource,Castle.Core", "Castle.Core.Resource.FileResource");
            feature.AddKnownType("Castle.Core.Resource.FileResourceFactory,Castle.Core", "Castle.Core.Resource.FileResourceFactory");
            feature.AddKnownType("Castle.Core.Resource.IResource,Castle.Core", "Castle.Core.Resource.IResource");
            feature.AddKnownType("Castle.Core.Resource.IResourceFactory,Castle.Core", "Castle.Core.Resource.IResourceFactory");
            feature.AddKnownType("Castle.Core.Resource.ResourceException,Castle.Core", "Castle.Core.Resource.ResourceException");
            feature.AddKnownType("Castle.Core.Resource.StaticContentResource,Castle.Core", "Castle.Core.Resource.StaticContentResource");
            feature.AddKnownType("Castle.Core.Resource.UncResource,Castle.Core", "Castle.Core.Resource.UncResource");
            feature.AddKnownType("Castle.Core.Resource.UncResourceFactory,Castle.Core", "Castle.Core.Resource.UncResourceFactory");
            feature.AddKnownType("Castle.Core.Smtp.DefaultSmtpSender,Castle.Core", "Castle.Core.Smtp.DefaultSmtpSender");
            feature.AddKnownType("Castle.Core.Smtp.IEmailSender,Castle.Core", "Castle.Core.Smtp.IEmailSender");
            feature.AddKnownType("Castle.DynamicProxy.AbstractInvocation,Castle.Core", "Castle.DynamicProxy.AbstractInvocation");
            feature.AddKnownType("Castle.DynamicProxy.AbstractInvocation+ProceedInfo,Castle.Core", "Castle.DynamicProxy.ProceedInfo");
            feature.AddKnownType("Castle.DynamicProxy.AllMethodsHook,Castle.Core", "Castle.DynamicProxy.AllMethodsHook");
            feature.AddKnownType("Castle.DynamicProxy.CustomAttributeInfo,Castle.Core", "Castle.DynamicProxy.CustomAttributeInfo");
            feature.AddKnownType("Castle.DynamicProxy.CustomAttributeInfo+AttributeArgumentValueEqualityComparer,Castle.Core", "Castle.DynamicProxy.AttributeArgumentValueEqualityComparer");
            feature.AddKnownType("Castle.DynamicProxy.DefaultProxyBuilder,Castle.Core", "Castle.DynamicProxy.DefaultProxyBuilder");
            feature.AddKnownType("Castle.DynamicProxy.DynamicProxyException,Castle.Core", "Castle.DynamicProxy.DynamicProxyException");
            feature.AddKnownType("Castle.DynamicProxy.IChangeProxyTarget,Castle.Core", "Castle.DynamicProxy.IChangeProxyTarget");
            feature.AddKnownType("Castle.DynamicProxy.IInterceptor,Castle.Core", "Castle.DynamicProxy.IInterceptor");
            feature.AddKnownType("Castle.DynamicProxy.IInterceptorSelector,Castle.Core", "Castle.DynamicProxy.IInterceptorSelector");
            feature.AddKnownType("Castle.DynamicProxy.IInvocation,Castle.Core", "Castle.DynamicProxy.IInvocation");
            feature.AddKnownType("Castle.DynamicProxy.IInvocationProceedInfo,Castle.Core", "Castle.DynamicProxy.IInvocationProceedInfo");
            feature.AddKnownType("Castle.DynamicProxy.IProxyBuilder,Castle.Core", "Castle.DynamicProxy.IProxyBuilder");
            feature.AddKnownType("Castle.DynamicProxy.IProxyGenerationHook,Castle.Core", "Castle.DynamicProxy.IProxyGenerationHook");
            feature.AddKnownType("Castle.DynamicProxy.IProxyGenerator,Castle.Core", "Castle.DynamicProxy.IProxyGenerator");
            feature.AddKnownType("Castle.DynamicProxy.IProxyTargetAccessor,Castle.Core", "Castle.DynamicProxy.IProxyTargetAccessor");
            feature.AddKnownType("Castle.DynamicProxy.MixinData,Castle.Core", "Castle.DynamicProxy.MixinData");
            feature.AddKnownType("Castle.DynamicProxy.ModuleScope,Castle.Core", "Castle.DynamicProxy.ModuleScope");
            feature.AddKnownType("Castle.DynamicProxy.ProxyGenerationOptions,Castle.Core", "Castle.DynamicProxy.ProxyGenerationOptions");
            feature.AddKnownType("Castle.DynamicProxy.ProxyGenerator,Castle.Core", "Castle.DynamicProxy.ProxyGenerator");
            feature.AddKnownType("Castle.DynamicProxy.StandardInterceptor,Castle.Core", "Castle.DynamicProxy.StandardInterceptor");
            feature.AddKnownType("Castle.DynamicProxy.Contributors.ClassMembersCollector,Castle.Core", "Castle.DynamicProxy.Contributors.ClassMembersCollector");
            feature.AddKnownType("Castle.DynamicProxy.Contributors.ClassProxyTargetContributor,Castle.Core", "Castle.DynamicProxy.Contributors.ClassProxyTargetContributor");
            feature.AddKnownType("Castle.DynamicProxy.Contributors.ClassProxyWithTargetTargetContributor,Castle.Core", "Castle.DynamicProxy.Contributors.ClassProxyWithTargetTargetContributor");
            feature.AddKnownType("Castle.DynamicProxy.Contributors.CompositeTypeContributor,Castle.Core", "Castle.DynamicProxy.Contributors.CompositeTypeContributor");
            feature.AddKnownType("Castle.DynamicProxy.Contributors.CompositeTypeContributor+MembersCollectorSink,Castle.Core", "Castle.DynamicProxy.Contributors.MembersCollectorSink");
            feature.AddKnownType("Castle.DynamicProxy.Contributors.DelegateTypeMembersCollector,Castle.Core", "Castle.DynamicProxy.Contributors.DelegateTypeMembersCollector");
            feature.AddKnownType("Castle.DynamicProxy.Contributors.FieldReferenceComparer,Castle.Core", "Castle.DynamicProxy.Contributors.FieldReferenceComparer");
            feature.AddKnownType("Castle.DynamicProxy.Contributors.IInvocationCreationContributor,Castle.Core", "Castle.DynamicProxy.Contributors.IInvocationCreationContributor");
            feature.AddKnownType("Castle.DynamicProxy.Contributors.IMembersCollectorSink,Castle.Core", "Castle.DynamicProxy.Contributors.IMembersCollectorSink");
            feature.AddKnownType("Castle.DynamicProxy.Contributors.InterfaceMembersCollector,Castle.Core", "Castle.DynamicProxy.Contributors.InterfaceMembersCollector");
            feature.AddKnownType("Castle.DynamicProxy.Contributors.InterfaceMembersOnClassCollector,Castle.Core", "Castle.DynamicProxy.Contributors.InterfaceMembersOnClassCollector");
            feature.AddKnownType("Castle.DynamicProxy.Contributors.InterfaceProxyTargetContributor,Castle.Core", "Castle.DynamicProxy.Contributors.InterfaceProxyTargetContributor");
            feature.AddKnownType("Castle.DynamicProxy.Contributors.InterfaceProxyWithOptionalTargetContributor,Castle.Core", "Castle.DynamicProxy.Contributors.InterfaceProxyWithOptionalTargetContributor");
            feature.AddKnownType("Castle.DynamicProxy.Contributors.InterfaceProxyWithoutTargetContributor,Castle.Core", "Castle.DynamicProxy.Contributors.InterfaceProxyWithoutTargetContributor");
            feature.AddKnownType("Castle.DynamicProxy.Contributors.InterfaceProxyWithTargetInterfaceTargetContributor,Castle.Core", "Castle.DynamicProxy.Contributors.InterfaceProxyWithTargetInterfaceTargetContributor");
            feature.AddKnownType("Castle.DynamicProxy.Contributors.InvocationWithDelegateContributor,Castle.Core", "Castle.DynamicProxy.Contributors.InvocationWithDelegateContributor");
            feature.AddKnownType("Castle.DynamicProxy.Contributors.InvocationWithGenericDelegateContributor,Castle.Core", "Castle.DynamicProxy.Contributors.InvocationWithGenericDelegateContributor");
            feature.AddKnownType("Castle.DynamicProxy.Contributors.ITypeContributor,Castle.Core", "Castle.DynamicProxy.Contributors.ITypeContributor");
            feature.AddKnownType("Castle.DynamicProxy.Contributors.MembersCollector,Castle.Core", "Castle.DynamicProxy.Contributors.MembersCollector");
            feature.AddKnownType("Castle.DynamicProxy.Contributors.MixinContributor,Castle.Core", "Castle.DynamicProxy.Contributors.MixinContributor");
            feature.AddKnownType("Castle.DynamicProxy.Contributors.NonInheritableAttributesContributor,Castle.Core", "Castle.DynamicProxy.Contributors.NonInheritableAttributesContributor");
            feature.AddKnownType("Castle.DynamicProxy.Contributors.ProxyTargetAccessorContributor,Castle.Core", "Castle.DynamicProxy.Contributors.ProxyTargetAccessorContributor");
            feature.AddKnownType("Castle.DynamicProxy.Contributors.WrappedClassMembersCollector,Castle.Core", "Castle.DynamicProxy.Contributors.WrappedClassMembersCollector");
            feature.AddKnownType("Castle.DynamicProxy.Generators.BaseClassProxyGenerator,Castle.Core", "Castle.DynamicProxy.Generators.BaseClassProxyGenerator");
            feature.AddKnownType("Castle.DynamicProxy.Generators.BaseInterfaceProxyGenerator,Castle.Core", "Castle.DynamicProxy.Generators.BaseInterfaceProxyGenerator");
            feature.AddKnownType("Castle.DynamicProxy.Generators.BaseProxyGenerator,Castle.Core", "Castle.DynamicProxy.Generators.BaseProxyGenerator");
            feature.AddKnownType("Castle.DynamicProxy.Generators.CacheKey,Castle.Core", "Castle.DynamicProxy.Generators.CacheKey");
            feature.AddKnownType("Castle.DynamicProxy.Generators.ClassProxyGenerator,Castle.Core", "Castle.DynamicProxy.Generators.ClassProxyGenerator");
            feature.AddKnownType("Castle.DynamicProxy.Generators.ClassProxyWithTargetGenerator,Castle.Core", "Castle.DynamicProxy.Generators.ClassProxyWithTargetGenerator");
            feature.AddKnownType("Castle.DynamicProxy.Generators.CompositionInvocationTypeGenerator,Castle.Core", "Castle.DynamicProxy.Generators.CompositionInvocationTypeGenerator");
            feature.AddKnownType("Castle.DynamicProxy.Generators.DelegateTypeGenerator,Castle.Core", "Castle.DynamicProxy.Generators.DelegateTypeGenerator");
            feature.AddKnownType("Castle.DynamicProxy.Generators.ForwardingMethodGenerator,Castle.Core", "Castle.DynamicProxy.Generators.ForwardingMethodGenerator");
            feature.AddKnownType("Castle.DynamicProxy.Generators.IGenerator`1,Castle.Core", "Castle.DynamicProxy.Generators.IGenerator`1'1");
            feature.AddKnownType("Castle.DynamicProxy.Generators.INamingScope,Castle.Core", "Castle.DynamicProxy.Generators.INamingScope");
            feature.AddKnownType("Castle.DynamicProxy.Generators.InheritanceInvocationTypeGenerator,Castle.Core", "Castle.DynamicProxy.Generators.InheritanceInvocationTypeGenerator");
            feature.AddKnownType("Castle.DynamicProxy.Generators.InterfaceProxyWithoutTargetGenerator,Castle.Core", "Castle.DynamicProxy.Generators.InterfaceProxyWithoutTargetGenerator");
            feature.AddKnownType("Castle.DynamicProxy.Generators.InterfaceProxyWithTargetGenerator,Castle.Core", "Castle.DynamicProxy.Generators.InterfaceProxyWithTargetGenerator");
            feature.AddKnownType("Castle.DynamicProxy.Generators.InterfaceProxyWithTargetInterfaceGenerator,Castle.Core", "Castle.DynamicProxy.Generators.InterfaceProxyWithTargetInterfaceGenerator");
            feature.AddKnownType("Castle.DynamicProxy.Generators.InvocationTypeGenerator,Castle.Core", "Castle.DynamicProxy.Generators.InvocationTypeGenerator");
            feature.AddKnownType("Castle.DynamicProxy.Generators.MetaEvent,Castle.Core", "Castle.DynamicProxy.Generators.MetaEvent");
            feature.AddKnownType("Castle.DynamicProxy.Generators.MetaMethod,Castle.Core", "Castle.DynamicProxy.Generators.MetaMethod");
            feature.AddKnownType("Castle.DynamicProxy.Generators.MetaProperty,Castle.Core", "Castle.DynamicProxy.Generators.MetaProperty");
            feature.AddKnownType("Castle.DynamicProxy.Generators.MetaType,Castle.Core", "Castle.DynamicProxy.Generators.MetaType");
            feature.AddKnownType("Castle.DynamicProxy.Generators.MetaTypeElement,Castle.Core", "Castle.DynamicProxy.Generators.MetaTypeElement");
            feature.AddKnownType("Castle.DynamicProxy.Generators.MetaTypeElementCollection`1,Castle.Core", "Castle.DynamicProxy.Generators.MetaTypeElementCollection`1'1");
            feature.AddKnownType("Castle.DynamicProxy.Generators.MethodFinder,Castle.Core", "Castle.DynamicProxy.Generators.MethodFinder");
            feature.AddKnownType("Castle.DynamicProxy.Generators.MethodGenerator,Castle.Core", "Castle.DynamicProxy.Generators.MethodGenerator");
            feature.AddKnownType("Castle.DynamicProxy.Generators.MethodSignatureComparer,Castle.Core", "Castle.DynamicProxy.Generators.MethodSignatureComparer");
            feature.AddKnownType("Castle.DynamicProxy.Generators.MethodWithInvocationGenerator,Castle.Core", "Castle.DynamicProxy.Generators.MethodWithInvocationGenerator");
            feature.AddKnownType("Castle.DynamicProxy.Generators.MinimialisticMethodGenerator,Castle.Core", "Castle.DynamicProxy.Generators.MinimialisticMethodGenerator");
            feature.AddKnownType("Castle.DynamicProxy.Generators.NamingScope,Castle.Core", "Castle.DynamicProxy.Generators.NamingScope");
            feature.AddKnownType("Castle.DynamicProxy.Generators.OptionallyForwardingMethodGenerator,Castle.Core", "Castle.DynamicProxy.Generators.OptionallyForwardingMethodGenerator");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.ArgumentsUtil,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.ArgumentsUtil");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.ClassEmitter,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.ClassEmitter");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.CodeBuilder,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.CodeBuilder");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.ConstructorEmitter,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.ConstructorEmitter");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.EventEmitter,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.EventEmitter");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.GenericUtil,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.GenericUtil");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.IMemberEmitter");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.LdcOpCodesDictionary,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.LdcOpCodesDictionary");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.LdindOpCodesDictionary,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.LdindOpCodesDictionary");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.MethodEmitter,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.MethodEmitter");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.NestedClassEmitter,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.NestedClassEmitter");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.OpCodeUtil,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.OpCodeUtil");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.PropertyEmitter,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.PropertyEmitter");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.StindOpCodesDictionary,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.StindOpCodesDictionary");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.TypeConstructorEmitter,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.TypeConstructorEmitter");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.ArgumentReference,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ArgumentReference");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.AssignArgumentStatement,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.AssignArgumentStatement");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.AssignArrayStatement,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.AssignArrayStatement");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.AssignStatement,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.AssignStatement");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.AsTypeReference,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.AsTypeReference");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.BlockStatement,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.BlockStatement");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.ByRefReference,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ByRefReference");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.ConstructorInvocationStatement,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ConstructorInvocationStatement");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.ConvertExpression,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ConvertExpression");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.DefaultValueExpression,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.DefaultValueExpression");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.EndExceptionBlockStatement,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.EndExceptionBlockStatement");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.FieldReference,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.FieldReference");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.FinallyStatement,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.FinallyStatement");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.IExpression,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.IExpression");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.IExpressionOrStatement,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.IExpressionOrStatement");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.IfNullExpression,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.IfNullExpression");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.IndirectReference,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.IndirectReference");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.IStatement,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.IStatement");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.LiteralBoolExpression,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.LiteralBoolExpression");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.LiteralIntExpression,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.LiteralIntExpression");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.LiteralStringExpression,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.LiteralStringExpression");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.LoadRefArrayElementExpression,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.LoadRefArrayElementExpression");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.LocalReference,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.LocalReference");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.MethodInvocationExpression,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.MethodInvocationExpression");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.MethodTokenExpression,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.MethodTokenExpression");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.NewArrayExpression,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.NewArrayExpression");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.NewInstanceExpression,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.NewInstanceExpression");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.NullCoalescingOperatorExpression,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.NullCoalescingOperatorExpression");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.NullExpression,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.NullExpression");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReferencesToObjectArrayExpression,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReferencesToObjectArrayExpression");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReturnStatement,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReturnStatement");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.SelfReference,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.SelfReference");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.ThrowStatement,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ThrowStatement");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.TryStatement,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.TryStatement");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.TypeReference,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.TypeReference");
            feature.AddKnownType("Castle.DynamicProxy.Generators.Emitters.SimpleAST.TypeTokenExpression,Castle.Core", "Castle.DynamicProxy.Generators.Emitters.SimpleAST.TypeTokenExpression");
            feature.AddKnownType("Castle.DynamicProxy.Internal.CompositionInvocation,Castle.Core", "Castle.DynamicProxy.Internal.CompositionInvocation");
            feature.AddKnownType("Castle.DynamicProxy.Internal.InheritanceInvocation,Castle.Core", "Castle.DynamicProxy.Internal.InheritanceInvocation");
            feature.AddKnownType("Castle.DynamicProxy.Internal.InterfaceMethodWithoutTargetInvocation,Castle.Core", "Castle.DynamicProxy.Internal.InterfaceMethodWithoutTargetInvocation");
            feature.AddKnownType("Castle.DynamicProxy.Internal.InvocationHelper+CacheKey,Castle.Core", "Castle.DynamicProxy.Internal.CacheKey");
            feature.AddKnownType("Castle.DynamicProxy.Internal.TypeUtil+TypeNameComparer,Castle.Core", "Castle.DynamicProxy.Internal.TypeNameComparer");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Castle.Core", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("Google.Protobuf.CodedInputStream,Google.Protobuf", "Google.Protobuf.CodedInputStream");
            feature.AddKnownType("Google.Protobuf.CodedOutputStream,Google.Protobuf", "Google.Protobuf.CodedOutputStream");
            feature.AddKnownType("Google.Protobuf.CodedOutputStream+OutOfSpaceException,Google.Protobuf", "Google.Protobuf.Google.Protobuf.CodedOutputStream.OutOfSpaceException");
            feature.AddKnownType("Google.Protobuf.Extension,Google.Protobuf", "Google.Protobuf.Extension");
            feature.AddKnownType("Google.Protobuf.Extension`2,Google.Protobuf", "Google.Protobuf.Extension`2'2");
            feature.AddKnownType("Google.Protobuf.RepeatedExtension`2,Google.Protobuf", "Google.Protobuf.RepeatedExtension`2'2");
            feature.AddKnownType("Google.Protobuf.ExtensionRegistry,Google.Protobuf", "Google.Protobuf.ExtensionRegistry");
            feature.AddKnownType("Google.Protobuf.ExtensionRegistry+ExtensionComparer,Google.Protobuf", "Google.Protobuf.ExtensionComparer");
            feature.AddKnownType("Google.Protobuf.ExtensionSet`1,Google.Protobuf", "Google.Protobuf.ExtensionSet`1'1");
            feature.AddKnownType("Google.Protobuf.IExtensionValue,Google.Protobuf", "Google.Protobuf.IExtensionValue");
            feature.AddKnownType("Google.Protobuf.ExtensionValue`1,Google.Protobuf", "Google.Protobuf.ExtensionValue`1'1");
            feature.AddKnownType("Google.Protobuf.RepeatedExtensionValue`1,Google.Protobuf", "Google.Protobuf.RepeatedExtensionValue`1'1");
            feature.AddKnownType("Google.Protobuf.FieldCodec`1,Google.Protobuf", "Google.Protobuf.FieldCodec`1'1");
            feature.AddKnownType("Google.Protobuf.FieldMaskTree,Google.Protobuf", "Google.Protobuf.FieldMaskTree");
            feature.AddKnownType("Google.Protobuf.FieldMaskTree+Node,Google.Protobuf", "Google.Protobuf.Node");
            feature.AddKnownType("Google.Protobuf.IBufferMessage,Google.Protobuf", "Google.Protobuf.IBufferMessage");
            feature.AddKnownType("Google.Protobuf.ICustomDiagnosticMessage,Google.Protobuf", "Google.Protobuf.ICustomDiagnosticMessage");
            feature.AddKnownType("Google.Protobuf.IDeepCloneable`1,Google.Protobuf", "Google.Protobuf.IDeepCloneable`1'1");
            feature.AddKnownType("Google.Protobuf.IExtendableMessage`1,Google.Protobuf", "Google.Protobuf.IExtendableMessage`1'1");
            feature.AddKnownType("Google.Protobuf.IMessage,Google.Protobuf", "Google.Protobuf.IMessage");
            feature.AddKnownType("Google.Protobuf.IMessage`1,Google.Protobuf", "Google.Protobuf.IMessage`1'1");
            feature.AddKnownType("Google.Protobuf.InvalidJsonException,Google.Protobuf", "Google.Protobuf.InvalidJsonException");
            feature.AddKnownType("Google.Protobuf.InvalidProtocolBufferException,Google.Protobuf", "Google.Protobuf.InvalidProtocolBufferException");
            feature.AddKnownType("Google.Protobuf.JsonFormatter,Google.Protobuf", "Google.Protobuf.JsonFormatter");
            feature.AddKnownType("Google.Protobuf.JsonFormatter+Settings,Google.Protobuf", "Google.Protobuf.Google.Protobuf.JsonFormatter.Settings");
            feature.AddKnownType("Google.Protobuf.JsonParser,Google.Protobuf", "Google.Protobuf.JsonParser");
            feature.AddKnownType("Google.Protobuf.JsonParser+Settings,Google.Protobuf", "Google.Protobuf.Google.Protobuf.JsonParser.Settings");
            feature.AddKnownType("Google.Protobuf.JsonToken,Google.Protobuf", "Google.Protobuf.JsonToken");
            feature.AddKnownType("Google.Protobuf.JsonToken+TokenType,Google.Protobuf", "Google.Protobuf.TokenType");
            feature.AddKnownType("Google.Protobuf.JsonTokenizer,Google.Protobuf", "Google.Protobuf.JsonTokenizer");
            feature.AddKnownType("Google.Protobuf.JsonTokenizer+JsonReplayTokenizer,Google.Protobuf", "Google.Protobuf.JsonReplayTokenizer");
            feature.AddKnownType("Google.Protobuf.JsonTokenizer+JsonTextTokenizer,Google.Protobuf", "Google.Protobuf.JsonTextTokenizer");
            feature.AddKnownType("Google.Protobuf.JsonTokenizer+JsonTextTokenizer+ContainerType,Google.Protobuf", "Google.Protobuf.ContainerType");
            feature.AddKnownType("Google.Protobuf.JsonTokenizer+JsonTextTokenizer+State,Google.Protobuf", "Google.Protobuf.State");
            feature.AddKnownType("Google.Protobuf.JsonTokenizer+JsonTextTokenizer+PushBackReader,Google.Protobuf", "Google.Protobuf.PushBackReader");
            feature.AddKnownType("Google.Protobuf.LimitedInputStream,Google.Protobuf", "Google.Protobuf.LimitedInputStream");
            feature.AddKnownType("Google.Protobuf.MessageParser,Google.Protobuf", "Google.Protobuf.MessageParser");
            feature.AddKnownType("Google.Protobuf.MessageParser`1,Google.Protobuf", "Google.Protobuf.MessageParser`1'1");
            feature.AddKnownType("Google.Protobuf.ObjectIntPair`1,Google.Protobuf", "Google.Protobuf.ObjectIntPair`1'1");
            feature.AddKnownType("Google.Protobuf.ParseContext,Google.Protobuf", "Google.Protobuf.ParseContext");
            feature.AddKnownType("Google.Protobuf.ParserInternalState,Google.Protobuf", "Google.Protobuf.ParserInternalState");
            feature.AddKnownType("Google.Protobuf.SegmentedBufferHelper,Google.Protobuf", "Google.Protobuf.SegmentedBufferHelper");
            feature.AddKnownType("Google.Protobuf.WireFormat+WireType,Google.Protobuf", "Google.Protobuf.Google.Protobuf.WireFormat.WireType");
            feature.AddKnownType("Google.Protobuf.WriteBufferHelper,Google.Protobuf", "Google.Protobuf.WriteBufferHelper");
            feature.AddKnownType("Google.Protobuf.WriteContext,Google.Protobuf", "Google.Protobuf.WriteContext");
            feature.AddKnownType("Google.Protobuf.WriterInternalState,Google.Protobuf", "Google.Protobuf.WriterInternalState");
            feature.AddKnownType("Google.Protobuf.Collections.MapField`2,Google.Protobuf", "Google.Protobuf.Collections.MapField`2'2");
            feature.AddKnownType("Google.Protobuf.Collections.MapField`2+DictionaryEnumerator,Google.Protobuf", "Google.Protobuf.Collections.DictionaryEnumerator'2");
            feature.AddKnownType("Google.Protobuf.Collections.MapField`2+Codec,Google.Protobuf", "Google.Protobuf.Collections.Google.Protobuf.Collections.MapField`2'2.Codec'2");
            feature.AddKnownType("Google.Protobuf.Collections.MapField`2+MapView`1,Google.Protobuf", "Google.Protobuf.Collections.MapView`1'3");
            feature.AddKnownType("Google.Protobuf.Collections.ProtobufEqualityComparers+BitwiseDoubleEqualityComparerImpl,Google.Protobuf", "Google.Protobuf.Collections.BitwiseDoubleEqualityComparerImpl");
            feature.AddKnownType("Google.Protobuf.Collections.ProtobufEqualityComparers+BitwiseSingleEqualityComparerImpl,Google.Protobuf", "Google.Protobuf.Collections.BitwiseSingleEqualityComparerImpl");
            feature.AddKnownType("Google.Protobuf.Collections.ProtobufEqualityComparers+BitwiseNullableDoubleEqualityComparerImpl,Google.Protobuf", "Google.Protobuf.Collections.BitwiseNullableDoubleEqualityComparerImpl");
            feature.AddKnownType("Google.Protobuf.Collections.ProtobufEqualityComparers+BitwiseNullableSingleEqualityComparerImpl,Google.Protobuf", "Google.Protobuf.Collections.BitwiseNullableSingleEqualityComparerImpl");
            feature.AddKnownType("Google.Protobuf.Collections.ReadOnlyDictionary`2,Google.Protobuf", "Google.Protobuf.Collections.ReadOnlyDictionary`2'2");
            feature.AddKnownType("Google.Protobuf.Reflection.CustomOptions,Google.Protobuf", "Google.Protobuf.Reflection.CustomOptions");
            feature.AddKnownType("Google.Protobuf.Reflection.FileDescriptorSet,Google.Protobuf", "Google.Protobuf.Reflection.FileDescriptorSet");
            feature.AddKnownType("Google.Protobuf.Reflection.FileDescriptorProto,Google.Protobuf", "Google.Protobuf.Reflection.FileDescriptorProto");
            feature.AddKnownType("Google.Protobuf.Reflection.DescriptorProto,Google.Protobuf", "Google.Protobuf.Reflection.DescriptorProto");
            feature.AddKnownType("Google.Protobuf.Reflection.DescriptorProto+Types+ExtensionRange,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.DescriptorProto.Types.ExtensionRange");
            feature.AddKnownType("Google.Protobuf.Reflection.DescriptorProto+Types+ReservedRange,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.DescriptorProto.Types.ReservedRange");
            feature.AddKnownType("Google.Protobuf.Reflection.ExtensionRangeOptions,Google.Protobuf", "Google.Protobuf.Reflection.ExtensionRangeOptions");
            feature.AddKnownType("Google.Protobuf.Reflection.FieldDescriptorProto,Google.Protobuf", "Google.Protobuf.Reflection.FieldDescriptorProto");
            feature.AddKnownType("Google.Protobuf.Reflection.FieldDescriptorProto+Types+Type,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type");
            feature.AddKnownType("Google.Protobuf.Reflection.FieldDescriptorProto+Types+Label,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.FieldDescriptorProto.Types.Label");
            feature.AddKnownType("Google.Protobuf.Reflection.OneofDescriptorProto,Google.Protobuf", "Google.Protobuf.Reflection.OneofDescriptorProto");
            feature.AddKnownType("Google.Protobuf.Reflection.EnumDescriptorProto,Google.Protobuf", "Google.Protobuf.Reflection.EnumDescriptorProto");
            feature.AddKnownType("Google.Protobuf.Reflection.EnumDescriptorProto+Types+EnumReservedRange,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.EnumDescriptorProto.Types.EnumReservedRange");
            feature.AddKnownType("Google.Protobuf.Reflection.EnumValueDescriptorProto,Google.Protobuf", "Google.Protobuf.Reflection.EnumValueDescriptorProto");
            feature.AddKnownType("Google.Protobuf.Reflection.ServiceDescriptorProto,Google.Protobuf", "Google.Protobuf.Reflection.ServiceDescriptorProto");
            feature.AddKnownType("Google.Protobuf.Reflection.MethodDescriptorProto,Google.Protobuf", "Google.Protobuf.Reflection.MethodDescriptorProto");
            feature.AddKnownType("Google.Protobuf.Reflection.FileOptions,Google.Protobuf", "Google.Protobuf.Reflection.FileOptions");
            feature.AddKnownType("Google.Protobuf.Reflection.FileOptions+Types+OptimizeMode,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.FileOptions.Types.OptimizeMode");
            feature.AddKnownType("Google.Protobuf.Reflection.MessageOptions,Google.Protobuf", "Google.Protobuf.Reflection.MessageOptions");
            feature.AddKnownType("Google.Protobuf.Reflection.FieldOptions,Google.Protobuf", "Google.Protobuf.Reflection.FieldOptions");
            feature.AddKnownType("Google.Protobuf.Reflection.FieldOptions+Types+CType,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.FieldOptions.Types.CType");
            feature.AddKnownType("Google.Protobuf.Reflection.FieldOptions+Types+JSType,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.FieldOptions.Types.JSType");
            feature.AddKnownType("Google.Protobuf.Reflection.OneofOptions,Google.Protobuf", "Google.Protobuf.Reflection.OneofOptions");
            feature.AddKnownType("Google.Protobuf.Reflection.EnumOptions,Google.Protobuf", "Google.Protobuf.Reflection.EnumOptions");
            feature.AddKnownType("Google.Protobuf.Reflection.EnumValueOptions,Google.Protobuf", "Google.Protobuf.Reflection.EnumValueOptions");
            feature.AddKnownType("Google.Protobuf.Reflection.ServiceOptions,Google.Protobuf", "Google.Protobuf.Reflection.ServiceOptions");
            feature.AddKnownType("Google.Protobuf.Reflection.MethodOptions,Google.Protobuf", "Google.Protobuf.Reflection.MethodOptions");
            feature.AddKnownType("Google.Protobuf.Reflection.MethodOptions+Types+IdempotencyLevel,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.MethodOptions.Types.IdempotencyLevel");
            feature.AddKnownType("Google.Protobuf.Reflection.UninterpretedOption,Google.Protobuf", "Google.Protobuf.Reflection.UninterpretedOption");
            feature.AddKnownType("Google.Protobuf.Reflection.UninterpretedOption+Types+NamePart,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.UninterpretedOption.Types.NamePart");
            feature.AddKnownType("Google.Protobuf.Reflection.SourceCodeInfo,Google.Protobuf", "Google.Protobuf.Reflection.SourceCodeInfo");
            feature.AddKnownType("Google.Protobuf.Reflection.SourceCodeInfo+Types+Location,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.SourceCodeInfo.Types.Location");
            feature.AddKnownType("Google.Protobuf.Reflection.GeneratedCodeInfo,Google.Protobuf", "Google.Protobuf.Reflection.GeneratedCodeInfo");
            feature.AddKnownType("Google.Protobuf.Reflection.GeneratedCodeInfo+Types+Annotation,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.GeneratedCodeInfo.Types.Annotation");
            feature.AddKnownType("Google.Protobuf.Reflection.DescriptorBase,Google.Protobuf", "Google.Protobuf.Reflection.DescriptorBase");
            feature.AddKnownType("Google.Protobuf.Reflection.DescriptorDeclaration,Google.Protobuf", "Google.Protobuf.Reflection.DescriptorDeclaration");
            feature.AddKnownType("Google.Protobuf.Reflection.DescriptorPool,Google.Protobuf", "Google.Protobuf.Reflection.DescriptorPool");
            feature.AddKnownType("Google.Protobuf.Reflection.DescriptorValidationException,Google.Protobuf", "Google.Protobuf.Reflection.DescriptorValidationException");
            feature.AddKnownType("Google.Protobuf.Reflection.EnumDescriptor,Google.Protobuf", "Google.Protobuf.Reflection.EnumDescriptor");
            feature.AddKnownType("Google.Protobuf.Reflection.EnumValueDescriptor,Google.Protobuf", "Google.Protobuf.Reflection.EnumValueDescriptor");
            feature.AddKnownType("Google.Protobuf.Reflection.ExtensionAccessor,Google.Protobuf", "Google.Protobuf.Reflection.ExtensionAccessor");
            feature.AddKnownType("Google.Protobuf.Reflection.ExtensionCollection,Google.Protobuf", "Google.Protobuf.Reflection.ExtensionCollection");
            feature.AddKnownType("Google.Protobuf.Reflection.FieldAccessorBase,Google.Protobuf", "Google.Protobuf.Reflection.FieldAccessorBase");
            feature.AddKnownType("Google.Protobuf.Reflection.FieldDescriptor,Google.Protobuf", "Google.Protobuf.Reflection.FieldDescriptor");
            feature.AddKnownType("Google.Protobuf.Reflection.FieldType,Google.Protobuf", "Google.Protobuf.Reflection.FieldType");
            feature.AddKnownType("Google.Protobuf.Reflection.Syntax,Google.Protobuf", "Google.Protobuf.Reflection.Syntax");
            feature.AddKnownType("Google.Protobuf.Reflection.FileDescriptor,Google.Protobuf", "Google.Protobuf.Reflection.FileDescriptor");
            feature.AddKnownType("Google.Protobuf.Reflection.GeneratedClrTypeInfo,Google.Protobuf", "Google.Protobuf.Reflection.GeneratedClrTypeInfo");
            feature.AddKnownType("Google.Protobuf.Reflection.IDescriptor,Google.Protobuf", "Google.Protobuf.Reflection.IDescriptor");
            feature.AddKnownType("Google.Protobuf.Reflection.IFieldAccessor,Google.Protobuf", "Google.Protobuf.Reflection.IFieldAccessor");
            feature.AddKnownType("Google.Protobuf.Reflection.MapFieldAccessor,Google.Protobuf", "Google.Protobuf.Reflection.MapFieldAccessor");
            feature.AddKnownType("Google.Protobuf.Reflection.MessageDescriptor,Google.Protobuf", "Google.Protobuf.Reflection.MessageDescriptor");
            feature.AddKnownType("Google.Protobuf.Reflection.MessageDescriptor+FieldCollection,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.MessageDescriptor.FieldCollection");
            feature.AddKnownType("Google.Protobuf.Reflection.MethodDescriptor,Google.Protobuf", "Google.Protobuf.Reflection.MethodDescriptor");
            feature.AddKnownType("Google.Protobuf.Reflection.OneofAccessor,Google.Protobuf", "Google.Protobuf.Reflection.OneofAccessor");
            feature.AddKnownType("Google.Protobuf.Reflection.OneofDescriptor,Google.Protobuf", "Google.Protobuf.Reflection.OneofDescriptor");
            feature.AddKnownType("Google.Protobuf.Reflection.OriginalNameAttribute,Google.Protobuf", "Google.Protobuf.Reflection.OriginalNameAttribute");
            feature.AddKnownType("Google.Protobuf.Reflection.PackageDescriptor,Google.Protobuf", "Google.Protobuf.Reflection.PackageDescriptor");
            feature.AddKnownType("Google.Protobuf.Reflection.ReflectionUtil+IReflectionHelper,Google.Protobuf", "Google.Protobuf.Reflection.IReflectionHelper");
            feature.AddKnownType("Google.Protobuf.Reflection.ReflectionUtil+IExtensionReflectionHelper,Google.Protobuf", "Google.Protobuf.Reflection.IExtensionReflectionHelper");
            feature.AddKnownType("Google.Protobuf.Reflection.ReflectionUtil+IExtensionSetReflector,Google.Protobuf", "Google.Protobuf.Reflection.IExtensionSetReflector");
            feature.AddKnownType("Google.Protobuf.Reflection.ReflectionUtil+ReflectionHelper`2,Google.Protobuf", "Google.Protobuf.Reflection.ReflectionHelper`2'2");
            feature.AddKnownType("Google.Protobuf.Reflection.ReflectionUtil+ExtensionReflectionHelper`2,Google.Protobuf", "Google.Protobuf.Reflection.ExtensionReflectionHelper`2'2");
            feature.AddKnownType("Google.Protobuf.Reflection.ReflectionUtil+ExtensionSetReflector`1,Google.Protobuf", "Google.Protobuf.Reflection.ExtensionSetReflector`1'1");
            feature.AddKnownType("Google.Protobuf.Reflection.ReflectionUtil+SampleEnum,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.ReflectionUtil.SampleEnum");
            feature.AddKnownType("Google.Protobuf.Reflection.RepeatedFieldAccessor,Google.Protobuf", "Google.Protobuf.Reflection.RepeatedFieldAccessor");
            feature.AddKnownType("Google.Protobuf.Reflection.ServiceDescriptor,Google.Protobuf", "Google.Protobuf.Reflection.ServiceDescriptor");
            feature.AddKnownType("Google.Protobuf.Reflection.SingleFieldAccessor,Google.Protobuf", "Google.Protobuf.Reflection.SingleFieldAccessor");
            feature.AddKnownType("Google.Protobuf.Reflection.TypeRegistry,Google.Protobuf", "Google.Protobuf.Reflection.TypeRegistry");
            feature.AddKnownType("Google.Protobuf.Reflection.TypeRegistry+Builder,Google.Protobuf", "Google.Protobuf.Reflection.Builder");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Any,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Any");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Api,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Api");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Method,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Method");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Mixin,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Mixin");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Duration,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Duration");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Empty,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Empty");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.FieldMask,Google.Protobuf", "Google.Protobuf.WellKnownTypes.FieldMask");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.FieldMask+MergeOptions,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Google.Protobuf.WellKnownTypes.FieldMask.MergeOptions");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.SourceContext,Google.Protobuf", "Google.Protobuf.WellKnownTypes.SourceContext");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.NullValue,Google.Protobuf", "Google.Protobuf.WellKnownTypes.NullValue");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Struct,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Struct");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Value,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Value");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Value+KindOneofCase,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Google.Protobuf.WellKnownTypes.Value.KindOneofCase");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.ListValue,Google.Protobuf", "Google.Protobuf.WellKnownTypes.ListValue");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Timestamp,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Timestamp");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Syntax,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Syntax");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Type,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Type");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Field,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Field");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Field+Types+Kind,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Google.Protobuf.WellKnownTypes.Google.Protobuf.WellKnownTypes.Field.Types.Kind");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Field+Types+Cardinality,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Google.Protobuf.WellKnownTypes.Google.Protobuf.WellKnownTypes.Field.Types.Cardinality");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Enum,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Enum");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.EnumValue,Google.Protobuf", "Google.Protobuf.WellKnownTypes.EnumValue");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Option,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Option");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.DoubleValue,Google.Protobuf", "Google.Protobuf.WellKnownTypes.DoubleValue");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.FloatValue,Google.Protobuf", "Google.Protobuf.WellKnownTypes.FloatValue");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Int64Value,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Int64Value");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.UInt64Value,Google.Protobuf", "Google.Protobuf.WellKnownTypes.UInt64Value");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Int32Value,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Int32Value");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.UInt32Value,Google.Protobuf", "Google.Protobuf.WellKnownTypes.UInt32Value");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.BoolValue,Google.Protobuf", "Google.Protobuf.WellKnownTypes.BoolValue");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.StringValue,Google.Protobuf", "Google.Protobuf.WellKnownTypes.StringValue");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.BytesValue,Google.Protobuf", "Google.Protobuf.WellKnownTypes.BytesValue");
            feature.AddKnownType("GraphQL.Client.Abstractions.IGraphQLClient,GraphQL.Client.Abstractions", "GraphQL.Client.Abstractions.IGraphQLClient");
            feature.AddKnownType("GraphQL.Client.Abstractions.IGraphQLJsonSerializer,GraphQL.Client.Abstractions", "GraphQL.Client.Abstractions.IGraphQLJsonSerializer");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,GraphQL.Client.Abstractions", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("GraphQL.Client.Abstractions.Websocket.GraphQLWebsocketConnectionState,GraphQL.Client.Abstractions.Websocket", "GraphQL.Client.Abstractions.Websocket.GraphQLWebsocketConnectionState");
            feature.AddKnownType("GraphQL.Client.Abstractions.Websocket.GraphQLWebSocketRequest,GraphQL.Client.Abstractions.Websocket", "GraphQL.Client.Abstractions.Websocket.GraphQLWebSocketRequest");
            feature.AddKnownType("GraphQL.Client.Abstractions.Websocket.GraphQLWebSocketResponse,GraphQL.Client.Abstractions.Websocket", "GraphQL.Client.Abstractions.Websocket.GraphQLWebSocketResponse");
            feature.AddKnownType("GraphQL.Client.Abstractions.Websocket.GraphQLWebSocketResponse`1,GraphQL.Client.Abstractions.Websocket", "GraphQL.Client.Abstractions.Websocket.GraphQLWebSocketResponse`1'1");
            feature.AddKnownType("GraphQL.Client.Abstractions.Websocket.IGraphQLWebsocketJsonSerializer,GraphQL.Client.Abstractions.Websocket", "GraphQL.Client.Abstractions.Websocket.IGraphQLWebsocketJsonSerializer");
            feature.AddKnownType("GraphQL.Client.Abstractions.Websocket.WebsocketMessageWrapper,GraphQL.Client.Abstractions.Websocket", "GraphQL.Client.Abstractions.Websocket.WebsocketMessageWrapper");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,GraphQL.Client.Abstractions.Websocket", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("GraphQL.Client.Http.GraphQLHttpClient,GraphQL.Client", "GraphQL.Client.Http.GraphQLHttpClient");
            feature.AddKnownType("GraphQL.Client.Http.GraphQLHttpClientOptions,GraphQL.Client", "GraphQL.Client.Http.GraphQLHttpClientOptions");
            feature.AddKnownType("GraphQL.Client.Http.GraphQLHttpRequest,GraphQL.Client", "GraphQL.Client.Http.GraphQLHttpRequest");
            feature.AddKnownType("GraphQL.Client.Http.GraphQLHttpRequestException,GraphQL.Client", "GraphQL.Client.Http.GraphQLHttpRequestException");
            feature.AddKnownType("GraphQL.Client.Http.GraphQLHttpResponse`1,GraphQL.Client", "GraphQL.Client.Http.GraphQLHttpResponse`1'1");
            feature.AddKnownType("GraphQL.Client.Http.GraphQLSubscriptionException,GraphQL.Client", "GraphQL.Client.Http.GraphQLSubscriptionException");
            feature.AddKnownType("GraphQL.Client.Http.Websocket.GraphQLHttpWebSocket,GraphQL.Client", "GraphQL.Client.Http.Websocket.GraphQLHttpWebSocket");
            feature.AddKnownType("GraphQL.Client.Http.Websocket.GraphQLWebsocketConnectionException,GraphQL.Client", "GraphQL.Client.Http.Websocket.GraphQLWebsocketConnectionException");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,GraphQL.Client", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("GraphQL.Client.Serializer.Newtonsoft.ConstantCaseEnumConverter,GraphQL.Client.Serializer.Newtonsoft", "GraphQL.Client.Serializer.Newtonsoft.ConstantCaseEnumConverter");
            feature.AddKnownType("GraphQL.Client.Serializer.Newtonsoft.MapConverter,GraphQL.Client.Serializer.Newtonsoft", "GraphQL.Client.Serializer.Newtonsoft.MapConverter");
            feature.AddKnownType("GraphQL.Client.Serializer.Newtonsoft.NewtonsoftJsonSerializer,GraphQL.Client.Serializer.Newtonsoft", "GraphQL.Client.Serializer.Newtonsoft.NewtonsoftJsonSerializer");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,GraphQL.Client.Serializer.Newtonsoft", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("GraphQL.ErrorPath,GraphQL.Primitives", "GraphQL.ErrorPath");
            feature.AddKnownType("GraphQL.GraphQLError,GraphQL.Primitives", "GraphQL.GraphQLError");
            feature.AddKnownType("GraphQL.GraphQLLocation,GraphQL.Primitives", "GraphQL.GraphQLLocation");
            feature.AddKnownType("GraphQL.GraphQLRequest,GraphQL.Primitives", "GraphQL.GraphQLRequest");
            feature.AddKnownType("GraphQL.GraphQLResponse`1,GraphQL.Primitives", "GraphQL.GraphQLResponse`1'1");
            feature.AddKnownType("GraphQL.IGraphQLResponse,GraphQL.Primitives", "GraphQL.IGraphQLResponse");
            feature.AddKnownType("GraphQL.Map,GraphQL.Primitives", "GraphQL.Map");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,GraphQL.Primitives", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("Microsoft.AspNetCore.Cryptography.DATA_BLOB,Microsoft.AspNetCore.Cryptography.Internal", "Microsoft.AspNetCore.Cryptography.DATA_BLOB");
            feature.AddKnownType("Microsoft.AspNetCore.Cryptography.Cng.BCryptBuffer,Microsoft.AspNetCore.Cryptography.Internal", "Microsoft.AspNetCore.Cryptography.Cng.BCryptBuffer");
            feature.AddKnownType("Microsoft.AspNetCore.Cryptography.Cng.BCryptBufferDesc,Microsoft.AspNetCore.Cryptography.Internal", "Microsoft.AspNetCore.Cryptography.Cng.BCryptBufferDesc");
            feature.AddKnownType("Microsoft.AspNetCore.Cryptography.Cng.BCryptEncryptFlags,Microsoft.AspNetCore.Cryptography.Internal", "Microsoft.AspNetCore.Cryptography.Cng.BCryptEncryptFlags");
            feature.AddKnownType("Microsoft.AspNetCore.Cryptography.Cng.BCryptGenRandomFlags,Microsoft.AspNetCore.Cryptography.Internal", "Microsoft.AspNetCore.Cryptography.Cng.BCryptGenRandomFlags");
            feature.AddKnownType("Microsoft.AspNetCore.Cryptography.Cng.BCryptKeyDerivationBufferType,Microsoft.AspNetCore.Cryptography.Internal", "Microsoft.AspNetCore.Cryptography.Cng.BCryptKeyDerivationBufferType");
            feature.AddKnownType("Microsoft.AspNetCore.Cryptography.Cng.BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO,Microsoft.AspNetCore.Cryptography.Internal", "Microsoft.AspNetCore.Cryptography.Cng.BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO");
            feature.AddKnownType("Microsoft.AspNetCore.Cryptography.Cng.BCRYPT_KEY_LENGTHS_STRUCT,Microsoft.AspNetCore.Cryptography.Internal", "Microsoft.AspNetCore.Cryptography.Cng.BCRYPT_KEY_LENGTHS_STRUCT");
            feature.AddKnownType("Microsoft.AspNetCore.Cryptography.Cng.CachedAlgorithmHandles+CachedAlgorithmInfo,Microsoft.AspNetCore.Cryptography.Internal", "Microsoft.AspNetCore.Cryptography.Cng.CachedAlgorithmInfo");
            feature.AddKnownType("Microsoft.AspNetCore.Cryptography.Cng.NCryptEncryptFlags,Microsoft.AspNetCore.Cryptography.Internal", "Microsoft.AspNetCore.Cryptography.Cng.NCryptEncryptFlags");
            feature.AddKnownType("Microsoft.AspNetCore.Cryptography.Cng.OSVersionUtil+OSVersion,Microsoft.AspNetCore.Cryptography.Internal", "Microsoft.AspNetCore.Cryptography.Cng.OSVersion");
            feature.AddKnownType("Microsoft.AspNetCore.Cryptography.SafeHandles.BCryptAlgorithmHandle,Microsoft.AspNetCore.Cryptography.Internal", "Microsoft.AspNetCore.Cryptography.SafeHandles.BCryptAlgorithmHandle");
            feature.AddKnownType("Microsoft.AspNetCore.Cryptography.SafeHandles.BCryptHandle,Microsoft.AspNetCore.Cryptography.Internal", "Microsoft.AspNetCore.Cryptography.SafeHandles.BCryptHandle");
            feature.AddKnownType("Microsoft.AspNetCore.Cryptography.SafeHandles.BCryptHashHandle,Microsoft.AspNetCore.Cryptography.Internal", "Microsoft.AspNetCore.Cryptography.SafeHandles.BCryptHashHandle");
            feature.AddKnownType("Microsoft.AspNetCore.Cryptography.SafeHandles.BCryptKeyHandle,Microsoft.AspNetCore.Cryptography.Internal", "Microsoft.AspNetCore.Cryptography.SafeHandles.BCryptKeyHandle");
            feature.AddKnownType("Microsoft.AspNetCore.Cryptography.SafeHandles.LocalAllocHandle,Microsoft.AspNetCore.Cryptography.Internal", "Microsoft.AspNetCore.Cryptography.SafeHandles.LocalAllocHandle");
            feature.AddKnownType("Microsoft.AspNetCore.Cryptography.SafeHandles.NCryptDescriptorHandle,Microsoft.AspNetCore.Cryptography.Internal", "Microsoft.AspNetCore.Cryptography.SafeHandles.NCryptDescriptorHandle");
            feature.AddKnownType("Microsoft.AspNetCore.Cryptography.SafeHandles.SafeLibraryHandle,Microsoft.AspNetCore.Cryptography.Internal", "Microsoft.AspNetCore.Cryptography.SafeHandles.SafeLibraryHandle");
            feature.AddKnownType("Microsoft.AspNetCore.Cryptography.SafeHandles.SecureLocalAllocHandle,Microsoft.AspNetCore.Cryptography.Internal", "Microsoft.AspNetCore.Cryptography.SafeHandles.SecureLocalAllocHandle");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.AspNetCore.Cryptography.Internal", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.AspNetCore.Cryptography.KeyDerivation.KeyDerivationPrf,Microsoft.AspNetCore.Cryptography.KeyDerivation", "Microsoft.AspNetCore.Cryptography.KeyDerivation.KeyDerivationPrf");
            feature.AddKnownType("Microsoft.AspNetCore.Cryptography.KeyDerivation.PBKDF2.IPbkdf2Provider,Microsoft.AspNetCore.Cryptography.KeyDerivation", "Microsoft.AspNetCore.Cryptography.KeyDerivation.PBKDF2.IPbkdf2Provider");
            feature.AddKnownType("Microsoft.AspNetCore.Cryptography.KeyDerivation.PBKDF2.ManagedPbkdf2Provider,Microsoft.AspNetCore.Cryptography.KeyDerivation", "Microsoft.AspNetCore.Cryptography.KeyDerivation.PBKDF2.ManagedPbkdf2Provider");
            feature.AddKnownType("Microsoft.AspNetCore.Cryptography.KeyDerivation.PBKDF2.NetCorePbkdf2Provider,Microsoft.AspNetCore.Cryptography.KeyDerivation", "Microsoft.AspNetCore.Cryptography.KeyDerivation.PBKDF2.NetCorePbkdf2Provider");
            feature.AddKnownType("Microsoft.AspNetCore.Cryptography.KeyDerivation.PBKDF2.Win7Pbkdf2Provider,Microsoft.AspNetCore.Cryptography.KeyDerivation", "Microsoft.AspNetCore.Cryptography.KeyDerivation.PBKDF2.Win7Pbkdf2Provider");
            feature.AddKnownType("Microsoft.AspNetCore.Cryptography.KeyDerivation.PBKDF2.Win8Pbkdf2Provider,Microsoft.AspNetCore.Cryptography.KeyDerivation", "Microsoft.AspNetCore.Cryptography.KeyDerivation.PBKDF2.Win8Pbkdf2Provider");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.AspNetCore.Cryptography.KeyDerivation", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ValidationHostedService,Microsoft.Extensions.Hosting", "Microsoft.Extensions.DependencyInjection.ValidationHostedService");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ValidatorOptions,Microsoft.Extensions.Hosting", "Microsoft.Extensions.DependencyInjection.ValidatorOptions");
            feature.AddKnownType("Microsoft.Extensions.Hosting.BackgroundServiceExceptionBehavior,Microsoft.Extensions.Hosting", "Microsoft.Extensions.Hosting.BackgroundServiceExceptionBehavior");
            feature.AddKnownType("Microsoft.Extensions.Hosting.ConsoleLifetimeOptions,Microsoft.Extensions.Hosting", "Microsoft.Extensions.Hosting.ConsoleLifetimeOptions");
            feature.AddKnownType("Microsoft.Extensions.Hosting.HostBuilder,Microsoft.Extensions.Hosting", "Microsoft.Extensions.Hosting.HostBuilder");
            feature.AddKnownType("Microsoft.Extensions.Hosting.HostOptions,Microsoft.Extensions.Hosting", "Microsoft.Extensions.Hosting.HostOptions");
            feature.AddKnownType("Microsoft.Extensions.Hosting.Internal.ApplicationLifetime,Microsoft.Extensions.Hosting", "Microsoft.Extensions.Hosting.Internal.ApplicationLifetime");
            feature.AddKnownType("Microsoft.Extensions.Hosting.Internal.ConfigureContainerAdapter`1,Microsoft.Extensions.Hosting", "Microsoft.Extensions.Hosting.Internal.ConfigureContainerAdapter`1'1");
            feature.AddKnownType("Microsoft.Extensions.Hosting.Internal.ConsoleLifetime,Microsoft.Extensions.Hosting", "Microsoft.Extensions.Hosting.Internal.ConsoleLifetime");
            feature.AddKnownType("Microsoft.Extensions.Hosting.Internal.Host,Microsoft.Extensions.Hosting", "Microsoft.Extensions.Hosting.Internal.Host");
            feature.AddKnownType("Microsoft.Extensions.Hosting.Internal.HostingEnvironment,Microsoft.Extensions.Hosting", "Microsoft.Extensions.Hosting.Internal.HostingEnvironment");
            feature.AddKnownType("Microsoft.Extensions.Hosting.Internal.IConfigureContainerAdapter,Microsoft.Extensions.Hosting", "Microsoft.Extensions.Hosting.Internal.IConfigureContainerAdapter");
            feature.AddKnownType("Microsoft.Extensions.Hosting.Internal.IServiceFactoryAdapter,Microsoft.Extensions.Hosting", "Microsoft.Extensions.Hosting.Internal.IServiceFactoryAdapter");
            feature.AddKnownType("Microsoft.Extensions.Hosting.Internal.NullLifetime,Microsoft.Extensions.Hosting", "Microsoft.Extensions.Hosting.Internal.NullLifetime");
            feature.AddKnownType("Microsoft.Extensions.Hosting.Internal.ServiceFactoryAdapter`1,Microsoft.Extensions.Hosting", "Microsoft.Extensions.Hosting.Internal.ServiceFactoryAdapter`1'1");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.Http", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.DefaultHttpClientBuilder,Microsoft.Extensions.Http", "Microsoft.Extensions.DependencyInjection.DefaultHttpClientBuilder");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.HttpClientMappingRegistry,Microsoft.Extensions.Http", "Microsoft.Extensions.DependencyInjection.HttpClientMappingRegistry");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,Microsoft.Extensions.Http", "Microsoft.Extensions.DependencyInjection.IHttpClientBuilder");
            feature.AddKnownType("Microsoft.Extensions.Http.ActiveHandlerTrackingEntry,Microsoft.Extensions.Http", "Microsoft.Extensions.Http.ActiveHandlerTrackingEntry");
            feature.AddKnownType("Microsoft.Extensions.Http.DefaultHttpClientFactory,Microsoft.Extensions.Http", "Microsoft.Extensions.Http.DefaultHttpClientFactory");
            feature.AddKnownType("Microsoft.Extensions.Http.DefaultHttpMessageHandlerBuilder,Microsoft.Extensions.Http", "Microsoft.Extensions.Http.DefaultHttpMessageHandlerBuilder");
            feature.AddKnownType("Microsoft.Extensions.Http.DefaultTypedHttpClientFactory`1,Microsoft.Extensions.Http", "Microsoft.Extensions.Http.DefaultTypedHttpClientFactory`1'1");
            feature.AddKnownType("Microsoft.Extensions.Http.DefaultTypedHttpClientFactory`1+Cache,Microsoft.Extensions.Http", "Microsoft.Extensions.Http.Microsoft.Extensions.Http.DefaultTypedHttpClientFactory`1'1.Cache'1");
            feature.AddKnownType("Microsoft.Extensions.Http.ExpiredHandlerTrackingEntry,Microsoft.Extensions.Http", "Microsoft.Extensions.Http.ExpiredHandlerTrackingEntry");
            feature.AddKnownType("Microsoft.Extensions.Http.HttpClientFactoryOptions,Microsoft.Extensions.Http", "Microsoft.Extensions.Http.HttpClientFactoryOptions");
            feature.AddKnownType("Microsoft.Extensions.Http.HttpMessageHandlerBuilder,Microsoft.Extensions.Http", "Microsoft.Extensions.Http.HttpMessageHandlerBuilder");
            feature.AddKnownType("Microsoft.Extensions.Http.IHttpMessageHandlerBuilderFilter,Microsoft.Extensions.Http", "Microsoft.Extensions.Http.IHttpMessageHandlerBuilderFilter");
            feature.AddKnownType("Microsoft.Extensions.Http.ITypedHttpClientFactory`1,Microsoft.Extensions.Http", "Microsoft.Extensions.Http.ITypedHttpClientFactory`1'1");
            feature.AddKnownType("Microsoft.Extensions.Http.LifetimeTrackingHttpMessageHandler,Microsoft.Extensions.Http", "Microsoft.Extensions.Http.LifetimeTrackingHttpMessageHandler");
            feature.AddKnownType("Microsoft.Extensions.Http.LoggingHttpMessageHandlerBuilderFilter,Microsoft.Extensions.Http", "Microsoft.Extensions.Http.LoggingHttpMessageHandlerBuilderFilter");
            feature.AddKnownType("Microsoft.Extensions.Http.Logging.HttpHeadersLogValue,Microsoft.Extensions.Http", "Microsoft.Extensions.Http.Logging.HttpHeadersLogValue");
            feature.AddKnownType("Microsoft.Extensions.Http.Logging.HttpHeadersLogValue+Kind,Microsoft.Extensions.Http", "Microsoft.Extensions.Http.Logging.Microsoft.Extensions.Http.Logging.HttpHeadersLogValue.Kind");
            feature.AddKnownType("Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler,Microsoft.Extensions.Http", "Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler");
            feature.AddKnownType("Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler,Microsoft.Extensions.Http", "Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler");
            feature.AddKnownType("Microsoft.Extensions.Internal.ValueStopwatch,Microsoft.Extensions.Http", "Microsoft.Extensions.Internal.ValueStopwatch");
            feature.AddKnownType("Microsoft.Extensions.Internal.TypeNameHelper+DisplayNameOptions,Microsoft.Extensions.Http", "Microsoft.Extensions.Internal.DisplayNameOptions");
            feature.AddKnownType("System.Net.Http.IHttpClientFactory", "IHttpClientFactory");
            feature.AddKnownType("System.Net.Http.IHttpMessageHandlerFactory", "IHttpMessageHandlerFactory");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.AuthenticatorTokenProvider`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.AuthenticatorTokenProvider`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.ClaimsIdentityOptions,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.ClaimsIdentityOptions");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.DefaultPersonalDataProtector,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.DefaultPersonalDataProtector");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.DefaultUserConfirmation`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.DefaultUserConfirmation`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.EmailTokenProvider`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.EmailTokenProvider`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.IdentityBuilder,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.IdentityBuilder");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.IdentityError,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.IdentityError");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.IdentityErrorDescriber,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.IdentityErrorDescriber");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.IdentityOptions,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.IdentityOptions");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.IdentityResult,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.IdentityResult");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.ILookupNormalizer,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.ILookupNormalizer");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.ILookupProtector,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.ILookupProtector");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.ILookupProtectorKeyRing,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.ILookupProtectorKeyRing");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.IPasswordHasher`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.IPasswordHasher`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.IPasswordValidator`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.IPasswordValidator`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.IPersonalDataProtector,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.IPersonalDataProtector");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.IProtectedUserStore`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.IProtectedUserStore`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.IQueryableRoleStore`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.IQueryableRoleStore`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.IQueryableUserStore`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.IQueryableUserStore`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.IRoleClaimStore`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.IRoleClaimStore`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.IRoleStore`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.IRoleStore`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.IRoleValidator`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.IRoleValidator`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.IUserClaimStore`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.IUserClaimStore`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.IUserConfirmation`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.IUserConfirmation`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.IUserEmailStore`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.IUserEmailStore`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.IUserLockoutStore`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.IUserLockoutStore`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.IUserLoginStore`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.IUserLoginStore`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.IUserPasswordStore`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.IUserPasswordStore`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.IUserPhoneNumberStore`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.IUserPhoneNumberStore`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.IUserRoleStore`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.IUserRoleStore`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.IUserSecurityStampStore`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.IUserSecurityStampStore`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.IUserStore`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.IUserStore`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.IUserTwoFactorStore`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.IUserTwoFactorStore`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.IUserValidator`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.IUserValidator`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.LockoutOptions,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.LockoutOptions");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.PasswordHasher`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.PasswordHasher`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.PasswordHasherCompatibilityMode,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.PasswordHasherCompatibilityMode");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.PasswordHasherOptions,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.PasswordHasherOptions");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.PasswordOptions,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.PasswordOptions");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.PasswordValidator`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.PasswordValidator`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.PasswordVerificationResult,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.PasswordVerificationResult");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.PersonalDataAttribute,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.PersonalDataAttribute");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.PhoneNumberTokenProvider`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.PhoneNumberTokenProvider`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.ProtectedPersonalDataAttribute,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.ProtectedPersonalDataAttribute");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.RoleManager`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.RoleManager`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.RoleValidator`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.RoleValidator`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.SignInOptions,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.SignInOptions");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.SignInResult,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.SignInResult");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.StoreOptions,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.StoreOptions");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.TokenOptions,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.TokenOptions");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.TokenProviderDescriptor,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.TokenProviderDescriptor");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.TotpSecurityStampBasedTokenProvider`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.TotpSecurityStampBasedTokenProvider`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.UpperInvariantLookupNormalizer,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.UpperInvariantLookupNormalizer");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.UserClaimsPrincipalFactory`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.UserClaimsPrincipalFactory`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.UserClaimsPrincipalFactory`2,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.UserClaimsPrincipalFactory`2'2");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.UserLoginInfo,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.UserLoginInfo");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.UserManager`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.UserManager`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.UserOptions,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.UserOptions");
            feature.AddKnownType("Microsoft.AspNetCore.Identity.UserValidator`1,Microsoft.Extensions.Identity.Core", "Microsoft.AspNetCore.Identity.UserValidator`1'1");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.Identity.Core", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerFilterConfigureOptions,Microsoft.Extensions.Logging.Configuration", "Microsoft.Extensions.Logging.LoggerFilterConfigureOptions");
            feature.AddKnownType("Microsoft.Extensions.Logging.Configuration.ILoggerProviderConfiguration`1,Microsoft.Extensions.Logging.Configuration", "Microsoft.Extensions.Logging.Configuration.ILoggerProviderConfiguration`1'1");
            feature.AddKnownType("Microsoft.Extensions.Logging.Configuration.ILoggerProviderConfigurationFactory,Microsoft.Extensions.Logging.Configuration", "Microsoft.Extensions.Logging.Configuration.ILoggerProviderConfigurationFactory");
            feature.AddKnownType("Microsoft.Extensions.Logging.Configuration.LoggerProviderConfiguration`1,Microsoft.Extensions.Logging.Configuration", "Microsoft.Extensions.Logging.Configuration.LoggerProviderConfiguration`1'1");
            feature.AddKnownType("Microsoft.Extensions.Logging.Configuration.LoggerProviderConfigurationFactory,Microsoft.Extensions.Logging.Configuration", "Microsoft.Extensions.Logging.Configuration.LoggerProviderConfigurationFactory");
            feature.AddKnownType("Microsoft.Extensions.Logging.Configuration.LoggerProviderConfigureOptions`2,Microsoft.Extensions.Logging.Configuration", "Microsoft.Extensions.Logging.Configuration.LoggerProviderConfigureOptions`2'2");
            feature.AddKnownType("Microsoft.Extensions.Logging.Configuration.LoggerProviderOptionsChangeTokenSource`2,Microsoft.Extensions.Logging.Configuration", "Microsoft.Extensions.Logging.Configuration.LoggerProviderOptionsChangeTokenSource`2'2");
            feature.AddKnownType("Microsoft.Extensions.Logging.Configuration.LoggingConfiguration,Microsoft.Extensions.Logging.Configuration", "Microsoft.Extensions.Logging.Configuration.LoggingConfiguration");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute", "UnconditionalSuppressMessageAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute", "DynamicallyAccessedMembersAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes", "DynamicallyAccessedMemberTypes");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute", "RequiresUnreferencedCodeAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.Logging.Console", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.Logging.ConsoleLoggerFormatterConfigureOptions`2,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.ConsoleLoggerFormatterConfigureOptions`2'2");
            feature.AddKnownType("Microsoft.Extensions.Logging.ConsoleLoggerFormatterOptionsChangeTokenSource`2,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.ConsoleLoggerFormatterOptionsChangeTokenSource`2'2");
            feature.AddKnownType("Microsoft.Extensions.Logging.NullExternalScopeProvider,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.NullExternalScopeProvider");
            feature.AddKnownType("Microsoft.Extensions.Logging.NullScope,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.NullScope");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.AnsiLogConsole,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.AnsiLogConsole");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.AnsiParser,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.AnsiParser");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.AnsiParsingLogConsole,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.AnsiParsingLogConsole");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.ConsoleFormatter,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.ConsoleFormatter");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.ConsoleLogger,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.ConsoleLogger");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.ConsoleLoggerFormat,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.ConsoleLoggerFormat");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.ConsoleLoggerProcessor,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.ConsoleLoggerProcessor");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.FormatterOptionsMonitor`1,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.FormatterOptionsMonitor`1'1");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.IConsole,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.IConsole");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.JsonConsoleFormatter,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.JsonConsoleFormatter");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.JsonConsoleFormatterOptions,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.JsonConsoleFormatterOptions");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.LoggerColorBehavior,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.LoggerColorBehavior");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.LogMessageEntry,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.LogMessageEntry");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.SimpleConsoleFormatter,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.SimpleConsoleFormatter");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.SimpleConsoleFormatter+ConsoleColors,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.ConsoleColors");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.SimpleConsoleFormatterOptions,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.SimpleConsoleFormatterOptions");
            feature.AddKnownType("Microsoft.Extensions.Logging.Console.SystemdConsoleFormatter,Microsoft.Extensions.Logging.Console", "Microsoft.Extensions.Logging.Console.SystemdConsoleFormatter");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Text.Json.PooledByteBufferWriter", "PooledByteBufferWriter");
            feature.AddKnownType("Microsoft.Extensions.Logging.NullExternalScopeProvider,Microsoft.Extensions.Logging.Debug", "Microsoft.Extensions.Logging.NullExternalScopeProvider");
            feature.AddKnownType("Microsoft.Extensions.Logging.NullScope,Microsoft.Extensions.Logging.Debug", "Microsoft.Extensions.Logging.NullScope");
            feature.AddKnownType("Microsoft.Extensions.Logging.Debug.DebugLogger,Microsoft.Extensions.Logging.Debug", "Microsoft.Extensions.Logging.Debug.DebugLogger");
            feature.AddKnownType("Microsoft.Extensions.Logging.Debug.DebugLoggerProvider,Microsoft.Extensions.Logging.Debug", "Microsoft.Extensions.Logging.Debug.DebugLoggerProvider");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.Logging.EventLog", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.Logging.NullExternalScopeProvider,Microsoft.Extensions.Logging.EventLog", "Microsoft.Extensions.Logging.NullExternalScopeProvider");
            feature.AddKnownType("Microsoft.Extensions.Logging.NullScope,Microsoft.Extensions.Logging.EventLog", "Microsoft.Extensions.Logging.NullScope");
            feature.AddKnownType("Microsoft.Extensions.Logging.EventLog.EventLogLogger,Microsoft.Extensions.Logging.EventLog", "Microsoft.Extensions.Logging.EventLog.EventLogLogger");
            feature.AddKnownType("Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider,Microsoft.Extensions.Logging.EventLog", "Microsoft.Extensions.Logging.EventLog.EventLogLoggerProvider");
            feature.AddKnownType("Microsoft.Extensions.Logging.EventLog.EventLogSettings,Microsoft.Extensions.Logging.EventLog", "Microsoft.Extensions.Logging.EventLog.EventLogSettings");
            feature.AddKnownType("Microsoft.Extensions.Logging.EventLog.IEventLog,Microsoft.Extensions.Logging.EventLog", "Microsoft.Extensions.Logging.EventLog.IEventLog");
            feature.AddKnownType("Microsoft.Extensions.Logging.EventLog.WindowsEventLog,Microsoft.Extensions.Logging.EventLog", "Microsoft.Extensions.Logging.EventLog.WindowsEventLog");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.Versioning.OSPlatformAttribute", "OSPlatformAttribute");
            feature.AddKnownType("System.Runtime.Versioning.TargetPlatformAttribute", "TargetPlatformAttribute");
            feature.AddKnownType("System.Runtime.Versioning.SupportedOSPlatformAttribute", "SupportedOSPlatformAttribute");
            feature.AddKnownType("System.Runtime.Versioning.UnsupportedOSPlatformAttribute", "UnsupportedOSPlatformAttribute");
            feature.AddKnownType("System.Runtime.Versioning.SupportedOSPlatformGuardAttribute", "SupportedOSPlatformGuardAttribute");
            feature.AddKnownType("System.Runtime.Versioning.UnsupportedOSPlatformGuardAttribute", "UnsupportedOSPlatformGuardAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.Logging.EventSource", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.Logging.EventLogFiltersConfigureOptions,Microsoft.Extensions.Logging.EventSource", "Microsoft.Extensions.Logging.EventLogFiltersConfigureOptions");
            feature.AddKnownType("Microsoft.Extensions.Logging.EventLogFiltersConfigureOptionsChangeSource,Microsoft.Extensions.Logging.EventSource", "Microsoft.Extensions.Logging.EventLogFiltersConfigureOptionsChangeSource");
            feature.AddKnownType("Microsoft.Extensions.Logging.NullExternalScopeProvider,Microsoft.Extensions.Logging.EventSource", "Microsoft.Extensions.Logging.NullExternalScopeProvider");
            feature.AddKnownType("Microsoft.Extensions.Logging.NullScope,Microsoft.Extensions.Logging.EventSource", "Microsoft.Extensions.Logging.NullScope");
            feature.AddKnownType("Microsoft.Extensions.Logging.EventSource.EventSourceLogger,Microsoft.Extensions.Logging.EventSource", "Microsoft.Extensions.Logging.EventSource.EventSourceLogger");
            feature.AddKnownType("Microsoft.Extensions.Logging.EventSource.EventSourceLogger+ActivityScope,Microsoft.Extensions.Logging.EventSource", "Microsoft.Extensions.Logging.EventSource.ActivityScope");
            feature.AddKnownType("Microsoft.Extensions.Logging.EventSource.EventSourceLoggerProvider,Microsoft.Extensions.Logging.EventSource", "Microsoft.Extensions.Logging.EventSource.EventSourceLoggerProvider");
            feature.AddKnownType("Microsoft.Extensions.Logging.EventSource.ExceptionInfo,Microsoft.Extensions.Logging.EventSource", "Microsoft.Extensions.Logging.EventSource.ExceptionInfo");
            feature.AddKnownType("Microsoft.Extensions.Logging.EventSource.LoggingEventSource,Microsoft.Extensions.Logging.EventSource", "Microsoft.Extensions.Logging.EventSource.LoggingEventSource");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("Nest.JsonNetSerializer.ConnectionSettingsAwareContractResolver,Nest.JsonNetSerializer", "Nest.JsonNetSerializer.ConnectionSettingsAwareContractResolver");
            feature.AddKnownType("Nest.JsonNetSerializer.ConnectionSettingsAwareSerializerBase,Nest.JsonNetSerializer", "Nest.JsonNetSerializer.ConnectionSettingsAwareSerializerBase");
            feature.AddKnownType("Nest.JsonNetSerializer.JsonNetSerializer,Nest.JsonNetSerializer", "Nest.JsonNetSerializer.JsonNetSerializer");
            feature.AddKnownType("Nest.JsonNetSerializer.Converters.HandleNestTypesOnSourceJsonConverter,Nest.JsonNetSerializer", "Nest.JsonNetSerializer.Converters.HandleNestTypesOnSourceJsonConverter");
            feature.AddKnownType("Nest.JsonNetSerializer.Converters.TimeSpanToStringConverter,Nest.JsonNetSerializer", "Nest.JsonNetSerializer.Converters.TimeSpanToStringConverter");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,OpenIddict.Core", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.OpenIddictCoreBuilder,OpenIddict.Core", "Microsoft.Extensions.DependencyInjection.OpenIddictCoreBuilder");
            feature.AddKnownType("OpenIddict.Core.OpenIddictApplicationCache`1,OpenIddict.Core", "OpenIddict.Core.OpenIddictApplicationCache`1'1");
            feature.AddKnownType("OpenIddict.Core.OpenIddictAuthorizationCache`1,OpenIddict.Core", "OpenIddict.Core.OpenIddictAuthorizationCache`1'1");
            feature.AddKnownType("OpenIddict.Core.OpenIddictScopeCache`1,OpenIddict.Core", "OpenIddict.Core.OpenIddictScopeCache`1'1");
            feature.AddKnownType("OpenIddict.Core.OpenIddictTokenCache`1,OpenIddict.Core", "OpenIddict.Core.OpenIddictTokenCache`1'1");
            feature.AddKnownType("OpenIddict.Core.OpenIddictApplicationManager`1,OpenIddict.Core", "OpenIddict.Core.OpenIddictApplicationManager`1'1");
            feature.AddKnownType("OpenIddict.Core.OpenIddictAuthorizationManager`1,OpenIddict.Core", "OpenIddict.Core.OpenIddictAuthorizationManager`1'1");
            feature.AddKnownType("OpenIddict.Core.OpenIddictScopeManager`1,OpenIddict.Core", "OpenIddict.Core.OpenIddictScopeManager`1'1");
            feature.AddKnownType("OpenIddict.Core.OpenIddictTokenManager`1,OpenIddict.Core", "OpenIddict.Core.OpenIddictTokenManager`1'1");
            feature.AddKnownType("OpenIddict.Core.OpenIddictCoreOptions,OpenIddict.Core", "OpenIddict.Core.OpenIddictCoreOptions");
            feature.AddKnownType("OpenIddict.Core.OpenIddictApplicationStoreResolver,OpenIddict.Core", "OpenIddict.Core.OpenIddictApplicationStoreResolver");
            feature.AddKnownType("OpenIddict.Core.OpenIddictAuthorizationStoreResolver,OpenIddict.Core", "OpenIddict.Core.OpenIddictAuthorizationStoreResolver");
            feature.AddKnownType("OpenIddict.Core.OpenIddictScopeStoreResolver,OpenIddict.Core", "OpenIddict.Core.OpenIddictScopeStoreResolver");
            feature.AddKnownType("OpenIddict.Core.OpenIddictTokenStoreResolver,OpenIddict.Core", "OpenIddict.Core.OpenIddictTokenStoreResolver");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Polly.AsyncPolicy,Polly", "Polly.AsyncPolicy");
            feature.AddKnownType("Polly.AsyncPolicy`1,Polly", "Polly.AsyncPolicy`1'1");
            feature.AddKnownType("Polly.Policy,Polly", "Polly.Policy");
            feature.AddKnownType("Polly.Policy`1,Polly", "Polly.Policy`1'1");
            feature.AddKnownType("Polly.Context,Polly", "Polly.Context");
            feature.AddKnownType("Polly.DelegateResult`1,Polly", "Polly.DelegateResult`1'1");
            feature.AddKnownType("Polly.ExceptionPredicates,Polly", "Polly.ExceptionPredicates");
            feature.AddKnownType("Polly.ExecutionRejectedException,Polly", "Polly.ExecutionRejectedException");
            feature.AddKnownType("Polly.IAsyncPolicy,Polly", "Polly.IAsyncPolicy");
            feature.AddKnownType("Polly.IAsyncPolicy`1,Polly", "Polly.IAsyncPolicy`1'1");
            feature.AddKnownType("Polly.IsPolicy,Polly", "Polly.IsPolicy");
            feature.AddKnownType("Polly.ISyncPolicy,Polly", "Polly.ISyncPolicy");
            feature.AddKnownType("Polly.ISyncPolicy`1,Polly", "Polly.ISyncPolicy`1'1");
            feature.AddKnownType("Polly.PolicyBase,Polly", "Polly.PolicyBase");
            feature.AddKnownType("Polly.PolicyBase`1,Polly", "Polly.PolicyBase`1'1");
            feature.AddKnownType("Polly.PolicyBuilder,Polly", "Polly.PolicyBuilder");
            feature.AddKnownType("Polly.PolicyBuilder`1,Polly", "Polly.PolicyBuilder`1'1");
            feature.AddKnownType("Polly.PolicyResult,Polly", "Polly.PolicyResult");
            feature.AddKnownType("Polly.PolicyResult`1,Polly", "Polly.PolicyResult`1'1");
            feature.AddKnownType("Polly.OutcomeType,Polly", "Polly.OutcomeType");
            feature.AddKnownType("Polly.ExceptionType,Polly", "Polly.ExceptionType");
            feature.AddKnownType("Polly.FaultType,Polly", "Polly.FaultType");
            feature.AddKnownType("Polly.ResultPredicates`1,Polly", "Polly.ResultPredicates`1'1");
            feature.AddKnownType("Polly.Bulkhead.AsyncBulkheadPolicy,Polly", "Polly.Bulkhead.AsyncBulkheadPolicy");
            feature.AddKnownType("Polly.Bulkhead.AsyncBulkheadPolicy`1,Polly", "Polly.Bulkhead.AsyncBulkheadPolicy`1'1");
            feature.AddKnownType("Polly.Bulkhead.BulkheadPolicy,Polly", "Polly.Bulkhead.BulkheadPolicy");
            feature.AddKnownType("Polly.Bulkhead.BulkheadPolicy`1,Polly", "Polly.Bulkhead.BulkheadPolicy`1'1");
            feature.AddKnownType("Polly.Bulkhead.BulkheadRejectedException,Polly", "Polly.Bulkhead.BulkheadRejectedException");
            feature.AddKnownType("Polly.Bulkhead.IBulkheadPolicy,Polly", "Polly.Bulkhead.IBulkheadPolicy");
            feature.AddKnownType("Polly.Bulkhead.IBulkheadPolicy`1,Polly", "Polly.Bulkhead.IBulkheadPolicy`1'1");
            feature.AddKnownType("Polly.Caching.AbsoluteTtl,Polly", "Polly.Caching.AbsoluteTtl");
            feature.AddKnownType("Polly.Caching.AsyncCachePolicy,Polly", "Polly.Caching.AsyncCachePolicy");
            feature.AddKnownType("Polly.Caching.AsyncCachePolicy`1,Polly", "Polly.Caching.AsyncCachePolicy`1'1");
            feature.AddKnownType("Polly.Caching.AsyncGenericCacheProvider`1,Polly", "Polly.Caching.AsyncGenericCacheProvider`1'1");
            feature.AddKnownType("Polly.Caching.AsyncSerializingCacheProvider`1,Polly", "Polly.Caching.AsyncSerializingCacheProvider`1'1");
            feature.AddKnownType("Polly.Caching.AsyncSerializingCacheProvider`2,Polly", "Polly.Caching.AsyncSerializingCacheProvider`2'2");
            feature.AddKnownType("Polly.Caching.CachePolicy,Polly", "Polly.Caching.CachePolicy");
            feature.AddKnownType("Polly.Caching.CachePolicy`1,Polly", "Polly.Caching.CachePolicy`1'1");
            feature.AddKnownType("Polly.Caching.ContextualTtl,Polly", "Polly.Caching.ContextualTtl");
            feature.AddKnownType("Polly.Caching.DefaultCacheKeyStrategy,Polly", "Polly.Caching.DefaultCacheKeyStrategy");
            feature.AddKnownType("Polly.Caching.GenericCacheProvider`1,Polly", "Polly.Caching.GenericCacheProvider`1'1");
            feature.AddKnownType("Polly.Caching.GenericTtlStrategy`1,Polly", "Polly.Caching.GenericTtlStrategy`1'1");
            feature.AddKnownType("Polly.Caching.IAsyncCacheProvider,Polly", "Polly.Caching.IAsyncCacheProvider");
            feature.AddKnownType("Polly.Caching.IAsyncCacheProvider`1,Polly", "Polly.Caching.IAsyncCacheProvider`1'1");
            feature.AddKnownType("Polly.Caching.ICacheItemSerializer`2,Polly", "Polly.Caching.ICacheItemSerializer`2'2");
            feature.AddKnownType("Polly.Caching.ICacheKeyStrategy,Polly", "Polly.Caching.ICacheKeyStrategy");
            feature.AddKnownType("Polly.Caching.ICachePolicy,Polly", "Polly.Caching.ICachePolicy");
            feature.AddKnownType("Polly.Caching.ICachePolicy`1,Polly", "Polly.Caching.ICachePolicy`1'1");
            feature.AddKnownType("Polly.Caching.ISyncCacheProvider,Polly", "Polly.Caching.ISyncCacheProvider");
            feature.AddKnownType("Polly.Caching.ISyncCacheProvider`1,Polly", "Polly.Caching.ISyncCacheProvider`1'1");
            feature.AddKnownType("Polly.Caching.ITtlStrategy,Polly", "Polly.Caching.ITtlStrategy");
            feature.AddKnownType("Polly.Caching.ITtlStrategy`1,Polly", "Polly.Caching.ITtlStrategy`1'1");
            feature.AddKnownType("Polly.Caching.NonSlidingTtl,Polly", "Polly.Caching.NonSlidingTtl");
            feature.AddKnownType("Polly.Caching.RelativeTtl,Polly", "Polly.Caching.RelativeTtl");
            feature.AddKnownType("Polly.Caching.ResultTtl`1,Polly", "Polly.Caching.ResultTtl`1'1");
            feature.AddKnownType("Polly.Caching.SerializingCacheProvider`1,Polly", "Polly.Caching.SerializingCacheProvider`1'1");
            feature.AddKnownType("Polly.Caching.SerializingCacheProvider`2,Polly", "Polly.Caching.SerializingCacheProvider`2'2");
            feature.AddKnownType("Polly.Caching.SlidingTtl,Polly", "Polly.Caching.SlidingTtl");
            feature.AddKnownType("Polly.Caching.Ttl,Polly", "Polly.Caching.Ttl");
            feature.AddKnownType("Polly.CircuitBreaker.AdvancedCircuitController`1,Polly", "Polly.CircuitBreaker.AdvancedCircuitController`1'1");
            feature.AddKnownType("Polly.CircuitBreaker.AsyncCircuitBreakerEngine,Polly", "Polly.CircuitBreaker.AsyncCircuitBreakerEngine");
            feature.AddKnownType("Polly.CircuitBreaker.AsyncCircuitBreakerPolicy,Polly", "Polly.CircuitBreaker.AsyncCircuitBreakerPolicy");
            feature.AddKnownType("Polly.CircuitBreaker.AsyncCircuitBreakerPolicy`1,Polly", "Polly.CircuitBreaker.AsyncCircuitBreakerPolicy`1'1");
            feature.AddKnownType("Polly.CircuitBreaker.BrokenCircuitException,Polly", "Polly.CircuitBreaker.BrokenCircuitException");
            feature.AddKnownType("Polly.CircuitBreaker.BrokenCircuitException`1,Polly", "Polly.CircuitBreaker.BrokenCircuitException`1'1");
            feature.AddKnownType("Polly.CircuitBreaker.CircuitBreakerEngine,Polly", "Polly.CircuitBreaker.CircuitBreakerEngine");
            feature.AddKnownType("Polly.CircuitBreaker.CircuitBreakerPolicy,Polly", "Polly.CircuitBreaker.CircuitBreakerPolicy");
            feature.AddKnownType("Polly.CircuitBreaker.CircuitBreakerPolicy`1,Polly", "Polly.CircuitBreaker.CircuitBreakerPolicy`1'1");
            feature.AddKnownType("Polly.CircuitBreaker.CircuitState,Polly", "Polly.CircuitBreaker.CircuitState");
            feature.AddKnownType("Polly.CircuitBreaker.CircuitStateController`1,Polly", "Polly.CircuitBreaker.CircuitStateController`1'1");
            feature.AddKnownType("Polly.CircuitBreaker.ConsecutiveCountCircuitController`1,Polly", "Polly.CircuitBreaker.ConsecutiveCountCircuitController`1'1");
            feature.AddKnownType("Polly.CircuitBreaker.HealthCount,Polly", "Polly.CircuitBreaker.HealthCount");
            feature.AddKnownType("Polly.CircuitBreaker.ICircuitBreakerPolicy,Polly", "Polly.CircuitBreaker.ICircuitBreakerPolicy");
            feature.AddKnownType("Polly.CircuitBreaker.ICircuitBreakerPolicy`1,Polly", "Polly.CircuitBreaker.ICircuitBreakerPolicy`1'1");
            feature.AddKnownType("Polly.CircuitBreaker.ICircuitController`1,Polly", "Polly.CircuitBreaker.ICircuitController`1'1");
            feature.AddKnownType("Polly.CircuitBreaker.IHealthMetrics,Polly", "Polly.CircuitBreaker.IHealthMetrics");
            feature.AddKnownType("Polly.CircuitBreaker.IsolatedCircuitException,Polly", "Polly.CircuitBreaker.IsolatedCircuitException");
            feature.AddKnownType("Polly.CircuitBreaker.RollingHealthMetrics,Polly", "Polly.CircuitBreaker.RollingHealthMetrics");
            feature.AddKnownType("Polly.CircuitBreaker.SingleHealthMetrics,Polly", "Polly.CircuitBreaker.SingleHealthMetrics");
            feature.AddKnownType("Polly.Fallback.AsyncFallbackEngine,Polly", "Polly.Fallback.AsyncFallbackEngine");
            feature.AddKnownType("Polly.Fallback.AsyncFallbackPolicy,Polly", "Polly.Fallback.AsyncFallbackPolicy");
            feature.AddKnownType("Polly.Fallback.AsyncFallbackPolicy`1,Polly", "Polly.Fallback.AsyncFallbackPolicy`1'1");
            feature.AddKnownType("Polly.Fallback.FallbackPolicy,Polly", "Polly.Fallback.FallbackPolicy");
            feature.AddKnownType("Polly.Fallback.FallbackPolicy`1,Polly", "Polly.Fallback.FallbackPolicy`1'1");
            feature.AddKnownType("Polly.Fallback.IFallbackPolicy,Polly", "Polly.Fallback.IFallbackPolicy");
            feature.AddKnownType("Polly.Fallback.IFallbackPolicy`1,Polly", "Polly.Fallback.IFallbackPolicy`1'1");
            feature.AddKnownType("Polly.NoOp.AsyncNoOpPolicy,Polly", "Polly.NoOp.AsyncNoOpPolicy");
            feature.AddKnownType("Polly.NoOp.AsyncNoOpPolicy`1,Polly", "Polly.NoOp.AsyncNoOpPolicy`1'1");
            feature.AddKnownType("Polly.NoOp.INoOpPolicy,Polly", "Polly.NoOp.INoOpPolicy");
            feature.AddKnownType("Polly.NoOp.INoOpPolicy`1,Polly", "Polly.NoOp.INoOpPolicy`1'1");
            feature.AddKnownType("Polly.NoOp.NoOpPolicy,Polly", "Polly.NoOp.NoOpPolicy");
            feature.AddKnownType("Polly.NoOp.NoOpPolicy`1,Polly", "Polly.NoOp.NoOpPolicy`1'1");
            feature.AddKnownType("Polly.RateLimit.AsyncRateLimitPolicy,Polly", "Polly.RateLimit.AsyncRateLimitPolicy");
            feature.AddKnownType("Polly.RateLimit.AsyncRateLimitPolicy`1,Polly", "Polly.RateLimit.AsyncRateLimitPolicy`1'1");
            feature.AddKnownType("Polly.RateLimit.IRateLimiter,Polly", "Polly.RateLimit.IRateLimiter");
            feature.AddKnownType("Polly.RateLimit.IRateLimitPolicy,Polly", "Polly.RateLimit.IRateLimitPolicy");
            feature.AddKnownType("Polly.RateLimit.IRateLimitPolicy`1,Polly", "Polly.RateLimit.IRateLimitPolicy`1'1");
            feature.AddKnownType("Polly.RateLimit.LockFreeTokenBucketRateLimiter,Polly", "Polly.RateLimit.LockFreeTokenBucketRateLimiter");
            feature.AddKnownType("Polly.RateLimit.RateLimitPolicy,Polly", "Polly.RateLimit.RateLimitPolicy");
            feature.AddKnownType("Polly.RateLimit.RateLimitPolicy`1,Polly", "Polly.RateLimit.RateLimitPolicy`1'1");
            feature.AddKnownType("Polly.RateLimit.RateLimitRejectedException,Polly", "Polly.RateLimit.RateLimitRejectedException");
            feature.AddKnownType("Polly.Registry.IConcurrentPolicyRegistry`1,Polly", "Polly.Registry.IConcurrentPolicyRegistry`1'1");
            feature.AddKnownType("Polly.Registry.IPolicyRegistry`1,Polly", "Polly.Registry.IPolicyRegistry`1'1");
            feature.AddKnownType("Polly.Registry.IReadOnlyPolicyRegistry`1,Polly", "Polly.Registry.IReadOnlyPolicyRegistry`1'1");
            feature.AddKnownType("Polly.Registry.PolicyRegistry,Polly", "Polly.Registry.PolicyRegistry");
            feature.AddKnownType("Polly.Retry.AsyncRetryPolicy,Polly", "Polly.Retry.AsyncRetryPolicy");
            feature.AddKnownType("Polly.Retry.AsyncRetryPolicy`1,Polly", "Polly.Retry.AsyncRetryPolicy`1'1");
            feature.AddKnownType("Polly.Retry.IRetryPolicy,Polly", "Polly.Retry.IRetryPolicy");
            feature.AddKnownType("Polly.Retry.IRetryPolicy`1,Polly", "Polly.Retry.IRetryPolicy`1'1");
            feature.AddKnownType("Polly.Retry.RetryPolicy,Polly", "Polly.Retry.RetryPolicy");
            feature.AddKnownType("Polly.Retry.RetryPolicy`1,Polly", "Polly.Retry.RetryPolicy`1'1");
            feature.AddKnownType("Polly.Timeout.AsyncTimeoutPolicy,Polly", "Polly.Timeout.AsyncTimeoutPolicy");
            feature.AddKnownType("Polly.Timeout.AsyncTimeoutPolicy`1,Polly", "Polly.Timeout.AsyncTimeoutPolicy`1'1");
            feature.AddKnownType("Polly.Timeout.ITimeoutPolicy,Polly", "Polly.Timeout.ITimeoutPolicy");
            feature.AddKnownType("Polly.Timeout.ITimeoutPolicy`1,Polly", "Polly.Timeout.ITimeoutPolicy`1'1");
            feature.AddKnownType("Polly.Timeout.TimeoutPolicy,Polly", "Polly.Timeout.TimeoutPolicy");
            feature.AddKnownType("Polly.Timeout.TimeoutPolicy`1,Polly", "Polly.Timeout.TimeoutPolicy`1'1");
            feature.AddKnownType("Polly.Timeout.TimeoutRejectedException,Polly", "Polly.Timeout.TimeoutRejectedException");
            feature.AddKnownType("Polly.Timeout.TimeoutStrategy,Polly", "Polly.Timeout.TimeoutStrategy");
            feature.AddKnownType("Polly.Utilities.EmptyStruct,Polly", "Polly.Utilities.EmptyStruct");
            feature.AddKnownType("Polly.Utilities.TimedLock,Polly", "Polly.Utilities.TimedLock");
            feature.AddKnownType("Polly.Utilities.LockTimeoutException,Polly", "Polly.Utilities.LockTimeoutException");
            feature.AddKnownType("Polly.Wrap.AsyncPolicyWrap,Polly", "Polly.Wrap.AsyncPolicyWrap");
            feature.AddKnownType("Polly.Wrap.AsyncPolicyWrap`1,Polly", "Polly.Wrap.AsyncPolicyWrap`1'1");
            feature.AddKnownType("Polly.Wrap.IPolicyWrap,Polly", "Polly.Wrap.IPolicyWrap");
            feature.AddKnownType("Polly.Wrap.IPolicyWrap`1,Polly", "Polly.Wrap.IPolicyWrap`1'1");
            feature.AddKnownType("Polly.Wrap.PolicyWrap,Polly", "Polly.Wrap.PolicyWrap");
            feature.AddKnownType("Polly.Wrap.PolicyWrap`1,Polly", "Polly.Wrap.PolicyWrap`1'1");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Scriban", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Scriban.LogMessageBag,Scriban", "Scriban.LogMessageBag");
            feature.AddKnownType("Scriban.Template,Scriban", "Scriban.Template");
            feature.AddKnownType("Scriban.TemplateContext,Scriban", "Scriban.TemplateContext");
            feature.AddKnownType("Scriban.TemplateContext+LoopType,Scriban", "Scriban.LoopType");
            feature.AddKnownType("Scriban.TemplateContext+VariableContext,Scriban", "Scriban.VariableContext");
            feature.AddKnownType("Scriban.TemplateContext+VariableScope,Scriban", "Scriban.VariableScope");
            feature.AddKnownType("Scriban.ScriptPrinter,Scriban", "Scriban.ScriptPrinter");
            feature.AddKnownType("Scriban.ScriptPrinterOptions,Scriban", "Scriban.ScriptPrinterOptions");
            feature.AddKnownType("Scriban.LiquidTemplateContext,Scriban", "Scriban.LiquidTemplateContext");
            feature.AddKnownType("Scriban.Functions.ArrayFunctions,Scriban", "Scriban.Functions.ArrayFunctions");
            feature.AddKnownType("Scriban.Functions.ArrayFunctions+CycleKey,Scriban", "Scriban.Functions.CycleKey");
            feature.AddKnownType("Scriban.Functions.BuiltinFunctions,Scriban", "Scriban.Functions.BuiltinFunctions");
            feature.AddKnownType("Scriban.Functions.BuiltinFunctions+DefaultBuiltins,Scriban", "Scriban.Functions.DefaultBuiltins");
            feature.AddKnownType("Scriban.Functions.DateTimeFunctions,Scriban", "Scriban.Functions.DateTimeFunctions");
            feature.AddKnownType("Scriban.Functions.HtmlFunctions,Scriban", "Scriban.Functions.HtmlFunctions");
            feature.AddKnownType("Scriban.Functions.IncludeFunction,Scriban", "Scriban.Functions.IncludeFunction");
            feature.AddKnownType("Scriban.Functions.LiquidBuiltinsFunctions,Scriban", "Scriban.Functions.LiquidBuiltinsFunctions");
            feature.AddKnownType("Scriban.Functions.LiquidBuiltinsFunctions+DefaultBuiltins,Scriban", "Scriban.Functions.DefaultBuiltins");
            feature.AddKnownType("Scriban.Functions.MathFunctions,Scriban", "Scriban.Functions.MathFunctions");
            feature.AddKnownType("Scriban.Functions.ObjectFunctions,Scriban", "Scriban.Functions.ObjectFunctions");
            feature.AddKnownType("Scriban.Functions.RegexFunctions,Scriban", "Scriban.Functions.RegexFunctions");
            feature.AddKnownType("Scriban.Functions.StringFunctions,Scriban", "Scriban.Functions.StringFunctions");
            feature.AddKnownType("Scriban.Functions.TimeSpanFunctions,Scriban", "Scriban.Functions.TimeSpanFunctions");
            feature.AddKnownType("Scriban.Helpers.CharHelper,Scriban", "Scriban.Helpers.CharHelper");
            feature.AddKnownType("Scriban.Helpers.FastStack`1,Scriban", "Scriban.Helpers.FastStack`1'1");
            feature.AddKnownType("Scriban.Helpers.InlineList`1,Scriban", "Scriban.Helpers.InlineList`1'1");
            feature.AddKnownType("Scriban.Helpers.InlineList`1+Enumerator,Scriban", "Scriban.Helpers.Scriban.Helpers.InlineList`1'1.Enumerator'1");
            feature.AddKnownType("Scriban.Helpers.InlineList`1+DebugListView,Scriban", "Scriban.Helpers.DebugListView'1");
            feature.AddKnownType("Scriban.Helpers.ExceptionArgument,Scriban", "Scriban.Helpers.ExceptionArgument");
            feature.AddKnownType("Scriban.Parsing.Lexer,Scriban", "Scriban.Parsing.Lexer");
            feature.AddKnownType("Scriban.Parsing.Lexer+BlockType,Scriban", "Scriban.Parsing.BlockType");
            feature.AddKnownType("Scriban.Parsing.Lexer+Enumerator,Scriban", "Scriban.Parsing.Scriban.Parsing.Lexer.Enumerator");
            feature.AddKnownType("Scriban.Parsing.LexerOptions,Scriban", "Scriban.Parsing.LexerOptions");
            feature.AddKnownType("Scriban.Parsing.LogMessage,Scriban", "Scriban.Parsing.LogMessage");
            feature.AddKnownType("Scriban.Parsing.ParserMessageType,Scriban", "Scriban.Parsing.ParserMessageType");
            feature.AddKnownType("Scriban.Parsing.Parser,Scriban", "Scriban.Parsing.Parser");
            feature.AddKnownType("Scriban.Parsing.Parser+ParseExpressionMode,Scriban", "Scriban.Parsing.ParseExpressionMode");
            feature.AddKnownType("Scriban.Parsing.Parser+ScriptExpressionAsStatement,Scriban", "Scriban.Parsing.ScriptExpressionAsStatement");
            feature.AddKnownType("Scriban.Parsing.ParserOptions,Scriban", "Scriban.Parsing.ParserOptions");
            feature.AddKnownType("Scriban.Parsing.ScriptLang,Scriban", "Scriban.Parsing.ScriptLang");
            feature.AddKnownType("Scriban.Parsing.ScriptMode,Scriban", "Scriban.Parsing.ScriptMode");
            feature.AddKnownType("Scriban.Parsing.SourceSpan,Scriban", "Scriban.Parsing.SourceSpan");
            feature.AddKnownType("Scriban.Parsing.TextPosition,Scriban", "Scriban.Parsing.TextPosition");
            feature.AddKnownType("Scriban.Parsing.Token,Scriban", "Scriban.Parsing.Token");
            feature.AddKnownType("Scriban.Parsing.TokenTextAttribute,Scriban", "Scriban.Parsing.TokenTextAttribute");
            feature.AddKnownType("Scriban.Parsing.TokenType,Scriban", "Scriban.Parsing.TokenType");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction,Scriban", "Scriban.Runtime.DynamicCustomFunction");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functionbool_IEnumerable_object,Scriban", "Scriban.Runtime.Functionbool_IEnumerable_object");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functionbool_object,Scriban", "Scriban.Runtime.Functionbool_object");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functionbool_string_string,Scriban", "Scriban.Runtime.Functionbool_string_string");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functionbool_string,Scriban", "Scriban.Runtime.Functionbool_string");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+FunctionDateTime,Scriban", "Scriban.Runtime.FunctionDateTime");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+FunctionDateTime_DateTime_double,Scriban", "Scriban.Runtime.FunctionDateTime_DateTime_double");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+FunctionDateTime_DateTime_int,Scriban", "Scriban.Runtime.FunctionDateTime_DateTime_int");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functiondouble_double_int___Opt,Scriban", "Scriban.Runtime.Functiondouble_double_int___Opt");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functiondouble_double,Scriban", "Scriban.Runtime.Functiondouble_double");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+FunctionIEnumerable_IEnumerable_IEnumerable,Scriban", "Scriban.Runtime.FunctionIEnumerable_IEnumerable_IEnumerable");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+FunctionIEnumerable_IEnumerable_int_object,Scriban", "Scriban.Runtime.FunctionIEnumerable_IEnumerable_int_object");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+FunctionIEnumerable_IEnumerable_int,Scriban", "Scriban.Runtime.FunctionIEnumerable_IEnumerable_int");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+FunctionIEnumerable_IEnumerable_object,Scriban", "Scriban.Runtime.FunctionIEnumerable_IEnumerable_object");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+FunctionIEnumerable_IEnumerable,Scriban", "Scriban.Runtime.FunctionIEnumerable_IEnumerable");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+FunctionIEnumerable_string_string,Scriban", "Scriban.Runtime.FunctionIEnumerable_string_string");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+FunctionIEnumerable_TemplateContext_SourceSpan_object_string___Opt,Scriban", "Scriban.Runtime.FunctionIEnumerable_TemplateContext_SourceSpan_object_string___Opt");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+FunctionIEnumerable_TemplateContext_SourceSpan_object_string,Scriban", "Scriban.Runtime.FunctionIEnumerable_TemplateContext_SourceSpan_object_string");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+FunctionIList_IList_int,Scriban", "Scriban.Runtime.FunctionIList_IList_int");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functionint_IEnumerable,Scriban", "Scriban.Runtime.Functionint_IEnumerable");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functionint_object,Scriban", "Scriban.Runtime.Functionint_object");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functionint_string,Scriban", "Scriban.Runtime.Functionint_string");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functionobject_IEnumerable,Scriban", "Scriban.Runtime.Functionobject_IEnumerable");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functionobject_object_object,Scriban", "Scriban.Runtime.Functionobject_object_object");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functionobject_TemplateContext_SourceSpan_double_object,Scriban", "Scriban.Runtime.Functionobject_TemplateContext_SourceSpan_double_object");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functionobject_TemplateContext_SourceSpan_IList_object___Opt,Scriban", "Scriban.Runtime.Functionobject_TemplateContext_SourceSpan_IList_object___Opt");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functionobject_TemplateContext_SourceSpan_int_int,Scriban", "Scriban.Runtime.Functionobject_TemplateContext_SourceSpan_int_int");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functionobject_TemplateContext_SourceSpan_object_object,Scriban", "Scriban.Runtime.Functionobject_TemplateContext_SourceSpan_object_object");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functionobject_TemplateContext_SourceSpan_object,Scriban", "Scriban.Runtime.Functionobject_TemplateContext_SourceSpan_object");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functionobject_TemplateContext_string,Scriban", "Scriban.Runtime.Functionobject_TemplateContext_string");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+FunctionScriptArray_TemplateContext_object,Scriban", "Scriban.Runtime.FunctionScriptArray_TemplateContext_object");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+FunctionScriptArray_TemplateContext_string_string_string___Opt,Scriban", "Scriban.Runtime.FunctionScriptArray_TemplateContext_string_string_string___Opt");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+FunctionScriptRange_TemplateContext_SourceSpan_IEnumerable_object,Scriban", "Scriban.Runtime.FunctionScriptRange_TemplateContext_SourceSpan_IEnumerable_object");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functionstring,Scriban", "Scriban.Runtime.Functionstring");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functionstring_int_string_string,Scriban", "Scriban.Runtime.Functionstring_int_string_string");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functionstring_object,Scriban", "Scriban.Runtime.Functionstring_object");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functionstring_string_int_int___Opt,Scriban", "Scriban.Runtime.Functionstring_string_int_int___Opt");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functionstring_string_int_string___Opt,Scriban", "Scriban.Runtime.Functionstring_string_int_string___Opt");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functionstring_string_int,Scriban", "Scriban.Runtime.Functionstring_string_int");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functionstring_string_string_string_bool___Opt,Scriban", "Scriban.Runtime.Functionstring_string_string_string_bool___Opt");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functionstring_string_string_string,Scriban", "Scriban.Runtime.Functionstring_string_string_string");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functionstring_string_string,Scriban", "Scriban.Runtime.Functionstring_string_string");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functionstring_string,Scriban", "Scriban.Runtime.Functionstring_string");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functionstring_TemplateContext_object,Scriban", "Scriban.Runtime.Functionstring_TemplateContext_object");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functionstring_TemplateContext_SourceSpan_IEnumerable_string_object___Opt,Scriban", "Scriban.Runtime.Functionstring_TemplateContext_SourceSpan_IEnumerable_string_object___Opt");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functionstring_TemplateContext_SourceSpan_object_string_string___Opt,Scriban", "Scriban.Runtime.Functionstring_TemplateContext_SourceSpan_object_string_string___Opt");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functionstring_TemplateContext_string_string_string_string___Opt,Scriban", "Scriban.Runtime.Functionstring_TemplateContext_string_string_string_string___Opt");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+Functionstring_TemplateContext_string,Scriban", "Scriban.Runtime.Functionstring_TemplateContext_string");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+FunctionTimeSpan_double,Scriban", "Scriban.Runtime.FunctionTimeSpan_double");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+FunctionTimeSpan_string,Scriban", "Scriban.Runtime.FunctionTimeSpan_string");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+ArgumentValue,Scriban", "Scriban.Runtime.ArgumentValue");
            feature.AddKnownType("Scriban.Runtime.DynamicCustomFunction+MethodComparer,Scriban", "Scriban.Runtime.MethodComparer");
            feature.AddKnownType("Scriban.Runtime.DelegateCustomFunction,Scriban", "Scriban.Runtime.DelegateCustomFunction");
            feature.AddKnownType("Scriban.Runtime.DelegateCustomFunction+InternalDelegateCustomFunction`1,Scriban", "Scriban.Runtime.InternalDelegateCustomFunction`1'1");
            feature.AddKnownType("Scriban.Runtime.DelegateCustomFunction+InternalDelegateCustomFunction`2,Scriban", "Scriban.Runtime.InternalDelegateCustomFunction`2'2");
            feature.AddKnownType("Scriban.Runtime.DelegateCustomFunction+DelegateCustomAction`1,Scriban", "Scriban.Runtime.DelegateCustomAction`1'1");
            feature.AddKnownType("Scriban.Runtime.DelegateCustomFunction+InternalDelegateCustomFunction`3,Scriban", "Scriban.Runtime.InternalDelegateCustomFunction`3'3");
            feature.AddKnownType("Scriban.Runtime.DelegateCustomFunction+DelegateCustomAction`2,Scriban", "Scriban.Runtime.DelegateCustomAction`2'2");
            feature.AddKnownType("Scriban.Runtime.DelegateCustomFunction+InternalDelegateCustomFunction`4,Scriban", "Scriban.Runtime.InternalDelegateCustomFunction`4'4");
            feature.AddKnownType("Scriban.Runtime.DelegateCustomFunction+DelegateCustomAction`3,Scriban", "Scriban.Runtime.DelegateCustomAction`3'3");
            feature.AddKnownType("Scriban.Runtime.DelegateCustomFunction+InternalDelegateCustomFunction`5,Scriban", "Scriban.Runtime.InternalDelegateCustomFunction`5'5");
            feature.AddKnownType("Scriban.Runtime.DelegateCustomFunction+DelegateCustomAction`4,Scriban", "Scriban.Runtime.DelegateCustomAction`4'4");
            feature.AddKnownType("Scriban.Runtime.DelegateCustomFunction+InternalDelegateCustomFunction`6,Scriban", "Scriban.Runtime.InternalDelegateCustomFunction`6'6");
            feature.AddKnownType("Scriban.Runtime.DelegateCustomFunction+DelegateCustomAction`5,Scriban", "Scriban.Runtime.DelegateCustomAction`5'5");
            feature.AddKnownType("Scriban.Runtime.DelegateCustomAction,Scriban", "Scriban.Runtime.DelegateCustomAction");
            feature.AddKnownType("Scriban.Runtime.EmptyScriptObject,Scriban", "Scriban.Runtime.EmptyScriptObject");
            feature.AddKnownType("Scriban.Runtime.IListAccessor,Scriban", "Scriban.Runtime.IListAccessor");
            feature.AddKnownType("Scriban.Runtime.IObjectAccessor,Scriban", "Scriban.Runtime.IObjectAccessor");
            feature.AddKnownType("Scriban.Runtime.IScriptCustomFunction,Scriban", "Scriban.Runtime.IScriptCustomFunction");
            feature.AddKnownType("Scriban.Runtime.ScriptVarParamKind,Scriban", "Scriban.Runtime.ScriptVarParamKind");
            feature.AddKnownType("Scriban.Runtime.IScriptFunctionInfo,Scriban", "Scriban.Runtime.IScriptFunctionInfo");
            feature.AddKnownType("Scriban.Runtime.ScriptParameterInfo,Scriban", "Scriban.Runtime.ScriptParameterInfo");
            feature.AddKnownType("Scriban.Runtime.IScriptObject,Scriban", "Scriban.Runtime.IScriptObject");
            feature.AddKnownType("Scriban.Runtime.IScriptOutput,Scriban", "Scriban.Runtime.IScriptOutput");
            feature.AddKnownType("Scriban.Runtime.IScriptTransformable,Scriban", "Scriban.Runtime.IScriptTransformable");
            feature.AddKnownType("Scriban.Runtime.ITemplateLoader,Scriban", "Scriban.Runtime.ITemplateLoader");
            feature.AddKnownType("Scriban.Runtime.ScriptArray`1,Scriban", "Scriban.Runtime.ScriptArray`1'1");
            feature.AddKnownType("Scriban.Runtime.ScriptArray`1+DebugListView,Scriban", "Scriban.Runtime.DebugListView'1");
            feature.AddKnownType("Scriban.Runtime.ScriptArray,Scriban", "Scriban.Runtime.ScriptArray");
            feature.AddKnownType("Scriban.Runtime.ScriptMemberIgnoreAttribute,Scriban", "Scriban.Runtime.ScriptMemberIgnoreAttribute");
            feature.AddKnownType("Scriban.Runtime.ScriptMemberImportFlags,Scriban", "Scriban.Runtime.ScriptMemberImportFlags");
            feature.AddKnownType("Scriban.Runtime.ScriptObject,Scriban", "Scriban.Runtime.ScriptObject");
            feature.AddKnownType("Scriban.Runtime.ScriptObject+InternalValue,Scriban", "Scriban.Runtime.InternalValue");
            feature.AddKnownType("Scriban.Runtime.ScriptPipeArguments,Scriban", "Scriban.Runtime.ScriptPipeArguments");
            feature.AddKnownType("Scriban.Runtime.ScriptRange,Scriban", "Scriban.Runtime.ScriptRange");
            feature.AddKnownType("Scriban.Runtime.StandardMemberRenamer,Scriban", "Scriban.Runtime.StandardMemberRenamer");
            feature.AddKnownType("Scriban.Runtime.StringBuilderOutput,Scriban", "Scriban.Runtime.StringBuilderOutput");
            feature.AddKnownType("Scriban.Runtime.TextWriterOutput,Scriban", "Scriban.Runtime.TextWriterOutput");
            feature.AddKnownType("Scriban.Runtime.Accessors.ArrayAccessor,Scriban", "Scriban.Runtime.Accessors.ArrayAccessor");
            feature.AddKnownType("Scriban.Runtime.Accessors.DictionaryAccessor,Scriban", "Scriban.Runtime.Accessors.DictionaryAccessor");
            feature.AddKnownType("Scriban.Runtime.Accessors.DictionaryStringObjectAccessor,Scriban", "Scriban.Runtime.Accessors.DictionaryStringObjectAccessor");
            feature.AddKnownType("Scriban.Runtime.Accessors.GenericDictionaryAccessor`2,Scriban", "Scriban.Runtime.Accessors.GenericDictionaryAccessor`2'2");
            feature.AddKnownType("Scriban.Runtime.Accessors.ListAccessor,Scriban", "Scriban.Runtime.Accessors.ListAccessor");
            feature.AddKnownType("Scriban.Runtime.Accessors.NullAccessor,Scriban", "Scriban.Runtime.Accessors.NullAccessor");
            feature.AddKnownType("Scriban.Runtime.Accessors.PrimitiveAccessor,Scriban", "Scriban.Runtime.Accessors.PrimitiveAccessor");
            feature.AddKnownType("Scriban.Runtime.Accessors.ScriptObjectAccessor,Scriban", "Scriban.Runtime.Accessors.ScriptObjectAccessor");
            feature.AddKnownType("Scriban.Runtime.Accessors.StringAccessor,Scriban", "Scriban.Runtime.Accessors.StringAccessor");
            feature.AddKnownType("Scriban.Runtime.Accessors.TypedObjectAccessor,Scriban", "Scriban.Runtime.Accessors.TypedObjectAccessor");
            feature.AddKnownType("Scriban.Syntax.ScientificFunctionCallRewriter,Scriban", "Scriban.Syntax.ScientificFunctionCallRewriter");
            feature.AddKnownType("Scriban.Syntax.ScientificFunctionCallRewriter+BinaryExpressionIterator,Scriban", "Scriban.Syntax.BinaryExpressionIterator");
            feature.AddKnownType("Scriban.Syntax.ScientificFunctionCallRewriter+BinaryExpressionOrOperator,Scriban", "Scriban.Syntax.BinaryExpressionOrOperator");
            feature.AddKnownType("Scriban.Syntax.ScientificFunctionCallRewriter+FunctionCallKind,Scriban", "Scriban.Syntax.FunctionCallKind");
            feature.AddKnownType("Scriban.Syntax.ScriptArrayInitializerExpression,Scriban", "Scriban.Syntax.ScriptArrayInitializerExpression");
            feature.AddKnownType("Scriban.Syntax.ScriptAssignExpression,Scriban", "Scriban.Syntax.ScriptAssignExpression");
            feature.AddKnownType("Scriban.Syntax.ScriptBinaryExpression,Scriban", "Scriban.Syntax.ScriptBinaryExpression");
            feature.AddKnownType("Scriban.Syntax.ScriptBlockStatement,Scriban", "Scriban.Syntax.ScriptBlockStatement");
            feature.AddKnownType("Scriban.Syntax.ScriptCaptureStatement,Scriban", "Scriban.Syntax.ScriptCaptureStatement");
            feature.AddKnownType("Scriban.Syntax.ScriptCaseStatement,Scriban", "Scriban.Syntax.ScriptCaseStatement");
            feature.AddKnownType("Scriban.Syntax.ScriptConditionalExpression,Scriban", "Scriban.Syntax.ScriptConditionalExpression");
            feature.AddKnownType("Scriban.Syntax.ScriptElseStatement,Scriban", "Scriban.Syntax.ScriptElseStatement");
            feature.AddKnownType("Scriban.Syntax.ScriptExpressionStatement,Scriban", "Scriban.Syntax.ScriptExpressionStatement");
            feature.AddKnownType("Scriban.Syntax.ScriptForStatement,Scriban", "Scriban.Syntax.ScriptForStatement");
            feature.AddKnownType("Scriban.Syntax.ScriptFrontMatter,Scriban", "Scriban.Syntax.ScriptFrontMatter");
            feature.AddKnownType("Scriban.Syntax.ScriptFunction,Scriban", "Scriban.Syntax.ScriptFunction");
            feature.AddKnownType("Scriban.Syntax.ScriptFunction+FindRetVisitor,Scriban", "Scriban.Syntax.FindRetVisitor");
            feature.AddKnownType("Scriban.Syntax.ScriptFunctionCall,Scriban", "Scriban.Syntax.ScriptFunctionCall");
            feature.AddKnownType("Scriban.Syntax.ScriptIfStatement,Scriban", "Scriban.Syntax.ScriptIfStatement");
            feature.AddKnownType("Scriban.Syntax.ScriptImportStatement,Scriban", "Scriban.Syntax.ScriptImportStatement");
            feature.AddKnownType("Scriban.Syntax.ScriptIncrementDecrementExpression,Scriban", "Scriban.Syntax.ScriptIncrementDecrementExpression");
            feature.AddKnownType("Scriban.Syntax.ScriptIndexerExpression,Scriban", "Scriban.Syntax.ScriptIndexerExpression");
            feature.AddKnownType("Scriban.Syntax.ScriptIsEmptyExpression,Scriban", "Scriban.Syntax.ScriptIsEmptyExpression");
            feature.AddKnownType("Scriban.Syntax.ScriptLoopStatementBase,Scriban", "Scriban.Syntax.ScriptLoopStatementBase");
            feature.AddKnownType("Scriban.Syntax.ScriptLoopStatementBase+LoopState,Scriban", "Scriban.Syntax.LoopState");
            feature.AddKnownType("Scriban.Syntax.ScriptMemberExpression,Scriban", "Scriban.Syntax.ScriptMemberExpression");
            feature.AddKnownType("Scriban.Syntax.ScriptNamedArgument,Scriban", "Scriban.Syntax.ScriptNamedArgument");
            feature.AddKnownType("Scriban.Syntax.ScriptNestedExpression,Scriban", "Scriban.Syntax.ScriptNestedExpression");
            feature.AddKnownType("Scriban.Syntax.ScriptObjectInitializerExpression,Scriban", "Scriban.Syntax.ScriptObjectInitializerExpression");
            feature.AddKnownType("Scriban.Syntax.ScriptObjectMember,Scriban", "Scriban.Syntax.ScriptObjectMember");
            feature.AddKnownType("Scriban.Syntax.ScriptPage,Scriban", "Scriban.Syntax.ScriptPage");
            feature.AddKnownType("Scriban.Syntax.ScriptPipeCall,Scriban", "Scriban.Syntax.ScriptPipeCall");
            feature.AddKnownType("Scriban.Syntax.ScriptRawStatement,Scriban", "Scriban.Syntax.ScriptRawStatement");
            feature.AddKnownType("Scriban.Syntax.ScriptReturnStatement,Scriban", "Scriban.Syntax.ScriptReturnStatement");
            feature.AddKnownType("Scriban.Syntax.ScriptTableRowStatement,Scriban", "Scriban.Syntax.ScriptTableRowStatement");
            feature.AddKnownType("Scriban.Syntax.ScriptTableRowStatement+TableRowLoopState,Scriban", "Scriban.Syntax.TableRowLoopState");
            feature.AddKnownType("Scriban.Syntax.ScriptThisExpression,Scriban", "Scriban.Syntax.ScriptThisExpression");
            feature.AddKnownType("Scriban.Syntax.ScriptUnaryExpression,Scriban", "Scriban.Syntax.ScriptUnaryExpression");
            feature.AddKnownType("Scriban.Syntax.ScriptVariable,Scriban", "Scriban.Syntax.ScriptVariable");
            feature.AddKnownType("Scriban.Syntax.ScriptVariableGlobal,Scriban", "Scriban.Syntax.ScriptVariableGlobal");
            feature.AddKnownType("Scriban.Syntax.ScriptWhenStatement,Scriban", "Scriban.Syntax.ScriptWhenStatement");
            feature.AddKnownType("Scriban.Syntax.ScriptWhileStatement,Scriban", "Scriban.Syntax.ScriptWhileStatement");
            feature.AddKnownType("Scriban.Syntax.ScriptWithStatement,Scriban", "Scriban.Syntax.ScriptWithStatement");
            feature.AddKnownType("Scriban.Syntax.ScriptWrapStatement,Scriban", "Scriban.Syntax.ScriptWrapStatement");
            feature.AddKnownType("Scriban.Syntax.ScriptAnonymousFunction,Scriban", "Scriban.Syntax.ScriptAnonymousFunction");
            feature.AddKnownType("Scriban.Syntax.ScriptArgumentBinary,Scriban", "Scriban.Syntax.ScriptArgumentBinary");
            feature.AddKnownType("Scriban.Syntax.ScriptBreakStatement,Scriban", "Scriban.Syntax.ScriptBreakStatement");
            feature.AddKnownType("Scriban.Syntax.ScriptContinueStatement,Scriban", "Scriban.Syntax.ScriptContinueStatement");
            feature.AddKnownType("Scriban.Syntax.ScriptEndStatement,Scriban", "Scriban.Syntax.ScriptEndStatement");
            feature.AddKnownType("Scriban.Syntax.ScriptEscapeStatement,Scriban", "Scriban.Syntax.ScriptEscapeStatement");
            feature.AddKnownType("Scriban.Syntax.ScriptIdentifier,Scriban", "Scriban.Syntax.ScriptIdentifier");
            feature.AddKnownType("Scriban.Syntax.ScriptKeyword,Scriban", "Scriban.Syntax.ScriptKeyword");
            feature.AddKnownType("Scriban.Syntax.ScriptLiteral,Scriban", "Scriban.Syntax.ScriptLiteral");
            feature.AddKnownType("Scriban.Syntax.ScriptNopStatement,Scriban", "Scriban.Syntax.ScriptNopStatement");
            feature.AddKnownType("Scriban.Syntax.ScriptParameter,Scriban", "Scriban.Syntax.ScriptParameter");
            feature.AddKnownType("Scriban.Syntax.ScriptReadOnlyStatement,Scriban", "Scriban.Syntax.ScriptReadOnlyStatement");
            feature.AddKnownType("Scriban.Syntax.ScriptToken,Scriban", "Scriban.Syntax.ScriptToken");
            feature.AddKnownType("Scriban.Syntax.ScriptVariableLocal,Scriban", "Scriban.Syntax.ScriptVariableLocal");
            feature.AddKnownType("Scriban.Syntax.ScriptRewriter,Scriban", "Scriban.Syntax.ScriptRewriter");
            feature.AddKnownType("Scriban.Syntax.ScriptVisitor,Scriban", "Scriban.Syntax.ScriptVisitor");
            feature.AddKnownType("Scriban.Syntax.ScriptVisitor`1,Scriban", "Scriban.Syntax.ScriptVisitor`1'1");
            feature.AddKnownType("Scriban.Syntax.IScriptTerminal,Scriban", "Scriban.Syntax.IScriptTerminal");
            feature.AddKnownType("Scriban.Syntax.ScriptBinaryOperator,Scriban", "Scriban.Syntax.ScriptBinaryOperator");
            feature.AddKnownType("Scriban.Syntax.ScriptExpression,Scriban", "Scriban.Syntax.ScriptExpression");
            feature.AddKnownType("Scriban.Syntax.ScriptLiteralStringQuoteType,Scriban", "Scriban.Syntax.ScriptLiteralStringQuoteType");
            feature.AddKnownType("Scriban.Syntax.ScriptUnaryOperator,Scriban", "Scriban.Syntax.ScriptUnaryOperator");
            feature.AddKnownType("Scriban.Syntax.ScriptVariableScope,Scriban", "Scriban.Syntax.ScriptVariableScope");
            feature.AddKnownType("Scriban.Syntax.IScriptConvertibleFrom,Scriban", "Scriban.Syntax.IScriptConvertibleFrom");
            feature.AddKnownType("Scriban.Syntax.IScriptConvertibleTo,Scriban", "Scriban.Syntax.IScriptConvertibleTo");
            feature.AddKnownType("Scriban.Syntax.IScriptCustomBinaryOperation,Scriban", "Scriban.Syntax.IScriptCustomBinaryOperation");
            feature.AddKnownType("Scriban.Syntax.IScriptCustomImplicitMultiplyPrecedence,Scriban", "Scriban.Syntax.IScriptCustomImplicitMultiplyPrecedence");
            feature.AddKnownType("Scriban.Syntax.IScriptCustomType,Scriban", "Scriban.Syntax.IScriptCustomType");
            feature.AddKnownType("Scriban.Syntax.IScriptCustomTypeInfo,Scriban", "Scriban.Syntax.IScriptCustomTypeInfo");
            feature.AddKnownType("Scriban.Syntax.IScriptCustomUnaryOperation,Scriban", "Scriban.Syntax.IScriptCustomUnaryOperation");
            feature.AddKnownType("Scriban.Syntax.IScriptNamedArgumentContainer,Scriban", "Scriban.Syntax.IScriptNamedArgumentContainer");
            feature.AddKnownType("Scriban.Syntax.IScriptVariablePath,Scriban", "Scriban.Syntax.IScriptVariablePath");
            feature.AddKnownType("Scriban.Syntax.IScriptVisitorContext,Scriban", "Scriban.Syntax.IScriptVisitorContext");
            feature.AddKnownType("Scriban.Syntax.ScriptArgumentException,Scriban", "Scriban.Syntax.ScriptArgumentException");
            feature.AddKnownType("Scriban.Syntax.ScriptCloner,Scriban", "Scriban.Syntax.ScriptCloner");
            feature.AddKnownType("Scriban.Syntax.ScriptFormatter,Scriban", "Scriban.Syntax.ScriptFormatter");
            feature.AddKnownType("Scriban.Syntax.ScriptFormatter+CompressWhitespacesVisitor,Scriban", "Scriban.Syntax.CompressWhitespacesVisitor");
            feature.AddKnownType("Scriban.Syntax.ScriptFormatterFlags,Scriban", "Scriban.Syntax.ScriptFormatterFlags");
            feature.AddKnownType("Scriban.Syntax.ScriptFormatterOptions,Scriban", "Scriban.Syntax.ScriptFormatterOptions");
            feature.AddKnownType("Scriban.Syntax.ScriptList,Scriban", "Scriban.Syntax.ScriptList");
            feature.AddKnownType("Scriban.Syntax.ScriptList+ScriptListDebug,Scriban", "Scriban.Syntax.ScriptListDebug");
            feature.AddKnownType("Scriban.Syntax.ScriptList`1,Scriban", "Scriban.Syntax.ScriptList`1'1");
            feature.AddKnownType("Scriban.Syntax.ScriptList`1+Enumerator,Scriban", "Scriban.Syntax.Scriban.Syntax.ScriptList`1'1.Enumerator'1");
            feature.AddKnownType("Scriban.Syntax.ScriptList`1+DebugListView,Scriban", "Scriban.Syntax.DebugListView'1");
            feature.AddKnownType("Scriban.Syntax.ScriptNode,Scriban", "Scriban.Syntax.ScriptNode");
            feature.AddKnownType("Scriban.Syntax.ScriptRuntimeException,Scriban", "Scriban.Syntax.ScriptRuntimeException");
            feature.AddKnownType("Scriban.Syntax.ScriptAbortException,Scriban", "Scriban.Syntax.ScriptAbortException");
            feature.AddKnownType("Scriban.Syntax.ScriptParserRuntimeException,Scriban", "Scriban.Syntax.ScriptParserRuntimeException");
            feature.AddKnownType("Scriban.Syntax.ScriptStringSlice,Scriban", "Scriban.Syntax.ScriptStringSlice");
            feature.AddKnownType("Scriban.Syntax.ScriptTypeNameAttribute,Scriban", "Scriban.Syntax.ScriptTypeNameAttribute");
            feature.AddKnownType("Scriban.Syntax.ScriptSyntaxAttribute,Scriban", "Scriban.Syntax.ScriptSyntaxAttribute");
            feature.AddKnownType("Scriban.Syntax.ScriptTrivia,Scriban", "Scriban.Syntax.ScriptTrivia");
            feature.AddKnownType("Scriban.Syntax.ScriptTrivias,Scriban", "Scriban.Syntax.ScriptTrivias");
            feature.AddKnownType("Scriban.Syntax.ScriptTriviaType,Scriban", "Scriban.Syntax.ScriptTriviaType");
            feature.AddKnownType("Scriban.Syntax.ScriptVerbatim,Scriban", "Scriban.Syntax.ScriptVerbatim");
            feature.AddKnownType("Scriban.Syntax.ScriptConditionStatement,Scriban", "Scriban.Syntax.ScriptConditionStatement");
            feature.AddKnownType("Scriban.Syntax.ScriptFlowState,Scriban", "Scriban.Syntax.ScriptFlowState");
            feature.AddKnownType("Scriban.Syntax.ScriptStatement,Scriban", "Scriban.Syntax.ScriptStatement");
            feature.AddKnownType("Scriban.Syntax.ScriptWhitespaceMode,Scriban", "Scriban.Syntax.ScriptWhitespaceMode");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("Serilog.ILogger,Serilog", "Serilog.ILogger");
            feature.AddKnownType("Serilog.LoggerConfiguration,Serilog", "Serilog.LoggerConfiguration");
            feature.AddKnownType("Serilog.Capturing.PropertyValueConverter,Serilog", "Serilog.Capturing.PropertyValueConverter");
            feature.AddKnownType("Serilog.Capturing.PropertyValueConverter+DepthLimiter,Serilog", "Serilog.Capturing.DepthLimiter");
            feature.AddKnownType("Serilog.Capturing.MessageTemplateProcessor,Serilog", "Serilog.Capturing.MessageTemplateProcessor");
            feature.AddKnownType("Serilog.Capturing.PropertyBinder,Serilog", "Serilog.Capturing.PropertyBinder");
            feature.AddKnownType("Serilog.Configuration.ILoggerSettings,Serilog", "Serilog.Configuration.ILoggerSettings");
            feature.AddKnownType("Serilog.Configuration.LoggerAuditSinkConfiguration,Serilog", "Serilog.Configuration.LoggerAuditSinkConfiguration");
            feature.AddKnownType("Serilog.Configuration.LoggerDestructuringConfiguration,Serilog", "Serilog.Configuration.LoggerDestructuringConfiguration");
            feature.AddKnownType("Serilog.Configuration.LoggerEnrichmentConfiguration,Serilog", "Serilog.Configuration.LoggerEnrichmentConfiguration");
            feature.AddKnownType("Serilog.Configuration.LoggerFilterConfiguration,Serilog", "Serilog.Configuration.LoggerFilterConfiguration");
            feature.AddKnownType("Serilog.Configuration.LoggerMinimumLevelConfiguration,Serilog", "Serilog.Configuration.LoggerMinimumLevelConfiguration");
            feature.AddKnownType("Serilog.Configuration.LoggerSettingsConfiguration,Serilog", "Serilog.Configuration.LoggerSettingsConfiguration");
            feature.AddKnownType("Serilog.Configuration.LoggerSinkConfiguration,Serilog", "Serilog.Configuration.LoggerSinkConfiguration");
            feature.AddKnownType("Serilog.Context.ImmutableStack`1,Serilog", "Serilog.Context.ImmutableStack`1'1");
            feature.AddKnownType("Serilog.Context.ImmutableStack`1+Enumerator,Serilog", "Serilog.Context.Enumerator'1");
            feature.AddKnownType("Serilog.Context.LogContext+ContextStackBookmark,Serilog", "Serilog.Context.ContextStackBookmark");
            feature.AddKnownType("Serilog.Context.LogContextEnricher,Serilog", "Serilog.Context.LogContextEnricher");
            feature.AddKnownType("Serilog.Core.CustomDefaultMethodImplementationAttribute,Serilog", "Serilog.Core.CustomDefaultMethodImplementationAttribute");
            feature.AddKnownType("Serilog.Core.IDestructuringPolicy,Serilog", "Serilog.Core.IDestructuringPolicy");
            feature.AddKnownType("Serilog.Core.ILogEventEnricher,Serilog", "Serilog.Core.ILogEventEnricher");
            feature.AddKnownType("Serilog.Core.ILogEventFilter,Serilog", "Serilog.Core.ILogEventFilter");
            feature.AddKnownType("Serilog.Core.ILogEventPropertyFactory,Serilog", "Serilog.Core.ILogEventPropertyFactory");
            feature.AddKnownType("Serilog.Core.ILogEventPropertyValueFactory,Serilog", "Serilog.Core.ILogEventPropertyValueFactory");
            feature.AddKnownType("Serilog.Core.ILogEventSink,Serilog", "Serilog.Core.ILogEventSink");
            feature.AddKnownType("Serilog.Core.IMessageTemplateParser,Serilog", "Serilog.Core.IMessageTemplateParser");
            feature.AddKnownType("Serilog.Core.IScalarConversionPolicy,Serilog", "Serilog.Core.IScalarConversionPolicy");
            feature.AddKnownType("Serilog.Core.LevelOverrideMap,Serilog", "Serilog.Core.LevelOverrideMap");
            feature.AddKnownType("Serilog.Core.LevelOverrideMap+LevelOverride,Serilog", "Serilog.Core.LevelOverride");
            feature.AddKnownType("Serilog.Core.Logger,Serilog", "Serilog.Core.Logger");
            feature.AddKnownType("Serilog.Core.LoggingLevelSwitch,Serilog", "Serilog.Core.LoggingLevelSwitch");
            feature.AddKnownType("Serilog.Core.MessageTemplateFormatMethodAttribute,Serilog", "Serilog.Core.MessageTemplateFormatMethodAttribute");
            feature.AddKnownType("Serilog.Core.Enrichers.ConditionalEnricher,Serilog", "Serilog.Core.Enrichers.ConditionalEnricher");
            feature.AddKnownType("Serilog.Core.Enrichers.EmptyEnricher,Serilog", "Serilog.Core.Enrichers.EmptyEnricher");
            feature.AddKnownType("Serilog.Core.Enrichers.FixedPropertyEnricher,Serilog", "Serilog.Core.Enrichers.FixedPropertyEnricher");
            feature.AddKnownType("Serilog.Core.Enrichers.PropertyEnricher,Serilog", "Serilog.Core.Enrichers.PropertyEnricher");
            feature.AddKnownType("Serilog.Core.Enrichers.SafeAggregateEnricher,Serilog", "Serilog.Core.Enrichers.SafeAggregateEnricher");
            feature.AddKnownType("Serilog.Core.Filters.DelegateFilter,Serilog", "Serilog.Core.Filters.DelegateFilter");
            feature.AddKnownType("Serilog.Core.Pipeline.MessageTemplateCache,Serilog", "Serilog.Core.Pipeline.MessageTemplateCache");
            feature.AddKnownType("Serilog.Core.Pipeline.SilentLogger,Serilog", "Serilog.Core.Pipeline.SilentLogger");
            feature.AddKnownType("Serilog.Core.Sinks.AggregateSink,Serilog", "Serilog.Core.Sinks.AggregateSink");
            feature.AddKnownType("Serilog.Core.Sinks.ConditionalSink,Serilog", "Serilog.Core.Sinks.ConditionalSink");
            feature.AddKnownType("Serilog.Core.Sinks.DisposeDelegatingSink,Serilog", "Serilog.Core.Sinks.DisposeDelegatingSink");
            feature.AddKnownType("Serilog.Core.Sinks.DisposingAggregateSink,Serilog", "Serilog.Core.Sinks.DisposingAggregateSink");
            feature.AddKnownType("Serilog.Core.Sinks.FilteringSink,Serilog", "Serilog.Core.Sinks.FilteringSink");
            feature.AddKnownType("Serilog.Core.Sinks.RestrictedSink,Serilog", "Serilog.Core.Sinks.RestrictedSink");
            feature.AddKnownType("Serilog.Core.Sinks.SafeAggregateSink,Serilog", "Serilog.Core.Sinks.SafeAggregateSink");
            feature.AddKnownType("Serilog.Core.Sinks.SecondaryLoggerSink,Serilog", "Serilog.Core.Sinks.SecondaryLoggerSink");
            feature.AddKnownType("Serilog.Data.LogEventPropertyValueRewriter`1,Serilog", "Serilog.Data.LogEventPropertyValueRewriter`1'1");
            feature.AddKnownType("Serilog.Data.LogEventPropertyValueVisitor`2,Serilog", "Serilog.Data.LogEventPropertyValueVisitor`2'2");
            feature.AddKnownType("Serilog.Debugging.LoggingFailedException,Serilog", "Serilog.Debugging.LoggingFailedException");
            feature.AddKnownType("Serilog.Events.DictionaryValue,Serilog", "Serilog.Events.DictionaryValue");
            feature.AddKnownType("Serilog.Events.EventProperty,Serilog", "Serilog.Events.EventProperty");
            feature.AddKnownType("Serilog.Events.LogEvent,Serilog", "Serilog.Events.LogEvent");
            feature.AddKnownType("Serilog.Events.LogEventLevel,Serilog", "Serilog.Events.LogEventLevel");
            feature.AddKnownType("Serilog.Events.LogEventProperty,Serilog", "Serilog.Events.LogEventProperty");
            feature.AddKnownType("Serilog.Events.LogEventPropertyValue,Serilog", "Serilog.Events.LogEventPropertyValue");
            feature.AddKnownType("Serilog.Events.MessageTemplate,Serilog", "Serilog.Events.MessageTemplate");
            feature.AddKnownType("Serilog.Events.ScalarValue,Serilog", "Serilog.Events.ScalarValue");
            feature.AddKnownType("Serilog.Events.SequenceValue,Serilog", "Serilog.Events.SequenceValue");
            feature.AddKnownType("Serilog.Events.StructureValue,Serilog", "Serilog.Events.StructureValue");
            feature.AddKnownType("Serilog.Formatting.ITextFormatter,Serilog", "Serilog.Formatting.ITextFormatter");
            feature.AddKnownType("Serilog.Formatting.Display.MessageTemplateTextFormatter,Serilog", "Serilog.Formatting.Display.MessageTemplateTextFormatter");
            feature.AddKnownType("Serilog.Formatting.Display.Obsolete.LiteralStringValue,Serilog", "Serilog.Formatting.Display.Obsolete.LiteralStringValue");
            feature.AddKnownType("Serilog.Formatting.Display.Obsolete.LogEventLevelValue,Serilog", "Serilog.Formatting.Display.Obsolete.LogEventLevelValue");
            feature.AddKnownType("Serilog.Formatting.Display.Obsolete.LogEventPropertiesValue,Serilog", "Serilog.Formatting.Display.Obsolete.LogEventPropertiesValue");
            feature.AddKnownType("Serilog.Formatting.Display.Obsolete.LogEventPropertyMessageValue,Serilog", "Serilog.Formatting.Display.Obsolete.LogEventPropertyMessageValue");
            feature.AddKnownType("Serilog.Formatting.Json.JsonFormatter,Serilog", "Serilog.Formatting.Json.JsonFormatter");
            feature.AddKnownType("Serilog.Formatting.Json.JsonValueFormatter,Serilog", "Serilog.Formatting.Json.JsonValueFormatter");
            feature.AddKnownType("Serilog.Formatting.Raw.RawFormatter,Serilog", "Serilog.Formatting.Raw.RawFormatter");
            feature.AddKnownType("Serilog.Parsing.Alignment,Serilog", "Serilog.Parsing.Alignment");
            feature.AddKnownType("Serilog.Parsing.AlignmentDirection,Serilog", "Serilog.Parsing.AlignmentDirection");
            feature.AddKnownType("Serilog.Parsing.Destructuring,Serilog", "Serilog.Parsing.Destructuring");
            feature.AddKnownType("Serilog.Parsing.MessageTemplateParser,Serilog", "Serilog.Parsing.MessageTemplateParser");
            feature.AddKnownType("Serilog.Parsing.MessageTemplateToken,Serilog", "Serilog.Parsing.MessageTemplateToken");
            feature.AddKnownType("Serilog.Parsing.PropertyToken,Serilog", "Serilog.Parsing.PropertyToken");
            feature.AddKnownType("Serilog.Parsing.TextToken,Serilog", "Serilog.Parsing.TextToken");
            feature.AddKnownType("Serilog.Policies.ByteArrayScalarConversionPolicy,Serilog", "Serilog.Policies.ByteArrayScalarConversionPolicy");
            feature.AddKnownType("Serilog.Policies.DelegateDestructuringPolicy,Serilog", "Serilog.Policies.DelegateDestructuringPolicy");
            feature.AddKnownType("Serilog.Policies.EnumScalarConversionPolicy,Serilog", "Serilog.Policies.EnumScalarConversionPolicy");
            feature.AddKnownType("Serilog.Policies.ProjectedDestructuringPolicy,Serilog", "Serilog.Policies.ProjectedDestructuringPolicy");
            feature.AddKnownType("Serilog.Policies.ReflectionTypesScalarDestructuringPolicy,Serilog", "Serilog.Policies.ReflectionTypesScalarDestructuringPolicy");
            feature.AddKnownType("Serilog.Policies.SimpleScalarConversionPolicy,Serilog", "Serilog.Policies.SimpleScalarConversionPolicy");
            feature.AddKnownType("Serilog.Settings.KeyValuePairs.KeyValuePairSettings,Serilog", "Serilog.Settings.KeyValuePairs.KeyValuePairSettings");
            feature.AddKnownType("Serilog.Settings.KeyValuePairs.KeyValuePairSettings+ConfigurationMethodCall,Serilog", "Serilog.Settings.KeyValuePairs.ConfigurationMethodCall");
            feature.AddKnownType("Serilog.Settings.KeyValuePairs.SettingValueConversions,Serilog", "Serilog.Settings.KeyValuePairs.SettingValueConversions");
            feature.AddKnownType("Serilog.IDiagnosticContext,Serilog.Extensions.Hosting", "Serilog.IDiagnosticContext");
            feature.AddKnownType("Serilog.SerilogHostBuilderExtensions+RegisteredLogger,Serilog.Extensions.Hosting", "Serilog.RegisteredLogger");
            feature.AddKnownType("Serilog.Extensions.Hosting.AmbientDiagnosticContextCollector,Serilog.Extensions.Hosting", "Serilog.Extensions.Hosting.AmbientDiagnosticContextCollector");
            feature.AddKnownType("Serilog.Extensions.Hosting.CachingReloadableLogger,Serilog.Extensions.Hosting", "Serilog.Extensions.Hosting.CachingReloadableLogger");
            feature.AddKnownType("Serilog.Extensions.Hosting.DiagnosticContext,Serilog.Extensions.Hosting", "Serilog.Extensions.Hosting.DiagnosticContext");
            feature.AddKnownType("Serilog.Extensions.Hosting.DiagnosticContextCollector,Serilog.Extensions.Hosting", "Serilog.Extensions.Hosting.DiagnosticContextCollector");
            feature.AddKnownType("Serilog.Extensions.Hosting.FixedPropertyEnricher,Serilog.Extensions.Hosting", "Serilog.Extensions.Hosting.FixedPropertyEnricher");
            feature.AddKnownType("Serilog.Extensions.Hosting.InjectedLoggerSettings,Serilog.Extensions.Hosting", "Serilog.Extensions.Hosting.InjectedLoggerSettings");
            feature.AddKnownType("Serilog.Extensions.Hosting.IReloadableLogger,Serilog.Extensions.Hosting", "Serilog.Extensions.Hosting.IReloadableLogger");
            feature.AddKnownType("Serilog.Extensions.Hosting.NullEnricher,Serilog.Extensions.Hosting", "Serilog.Extensions.Hosting.NullEnricher");
            feature.AddKnownType("Serilog.Extensions.Hosting.ReloadableLogger,Serilog.Extensions.Hosting", "Serilog.Extensions.Hosting.ReloadableLogger");
            feature.AddKnownType("Serilog.Hosting.SerilogLoggerFactory,Serilog.Extensions.Hosting", "Serilog.Hosting.SerilogLoggerFactory");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Serilog.Extensions.Logging", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Serilog.Extensions.Logging.CachingMessageTemplateParser,Serilog.Extensions.Logging", "Serilog.Extensions.Logging.CachingMessageTemplateParser");
            feature.AddKnownType("Serilog.Extensions.Logging.LoggerProviderCollection,Serilog.Extensions.Logging", "Serilog.Extensions.Logging.LoggerProviderCollection");
            feature.AddKnownType("Serilog.Extensions.Logging.LoggerProviderCollectionSink,Serilog.Extensions.Logging", "Serilog.Extensions.Logging.LoggerProviderCollectionSink");
            feature.AddKnownType("Serilog.Extensions.Logging.SerilogLogger,Serilog.Extensions.Logging", "Serilog.Extensions.Logging.SerilogLogger");
            feature.AddKnownType("Serilog.Extensions.Logging.SerilogLoggerFactory,Serilog.Extensions.Logging", "Serilog.Extensions.Logging.SerilogLoggerFactory");
            feature.AddKnownType("Serilog.Extensions.Logging.SerilogLoggerProvider,Serilog.Extensions.Logging", "Serilog.Extensions.Logging.SerilogLoggerProvider");
            feature.AddKnownType("Serilog.Extensions.Logging.SerilogLoggerScope,Serilog.Extensions.Logging", "Serilog.Extensions.Logging.SerilogLoggerScope");
            feature.AddKnownType("Serilog.Extensions.Logging.SerilogLogValues,Serilog.Extensions.Logging", "Serilog.Extensions.Logging.SerilogLogValues");
            feature.AddKnownType("System.Runtime.CompilerServices.IsReadOnlyAttribute", "IsReadOnlyAttribute");
            feature.AddKnownType("Serilog.Sinks.Async.BackgroundWorkerSink,Serilog.Sinks.Async", "Serilog.Sinks.Async.BackgroundWorkerSink");
            feature.AddKnownType("Serilog.Sinks.Async.IAsyncLogEventSinkInspector,Serilog.Sinks.Async", "Serilog.Sinks.Async.IAsyncLogEventSinkInspector");
            feature.AddKnownType("Serilog.Sinks.Async.IAsyncLogEventSinkMonitor,Serilog.Sinks.Async", "Serilog.Sinks.Async.IAsyncLogEventSinkMonitor");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Serilog.Sinks.Console", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.ConsoleSink,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.ConsoleSink");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Formatting.ThemedDisplayValueFormatter,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Formatting.ThemedDisplayValueFormatter");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Formatting.ThemedJsonValueFormatter,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Formatting.ThemedJsonValueFormatter");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Formatting.ThemedValueFormatter,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Formatting.ThemedValueFormatter");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Formatting.ThemedValueFormatterState,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Formatting.ThemedValueFormatterState");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Output.EventPropertyTokenRenderer,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Output.EventPropertyTokenRenderer");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Output.ExceptionTokenRenderer,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Output.ExceptionTokenRenderer");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Output.LevelTokenRenderer,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Output.LevelTokenRenderer");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Output.MessageTemplateOutputTokenRenderer,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Output.MessageTemplateOutputTokenRenderer");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Output.NewLineTokenRenderer,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Output.NewLineTokenRenderer");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Output.OutputTemplateRenderer,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Output.OutputTemplateRenderer");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Output.OutputTemplateTokenRenderer,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Output.OutputTemplateTokenRenderer");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Output.PropertiesTokenRenderer,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Output.PropertiesTokenRenderer");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Output.TextTokenRenderer,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Output.TextTokenRenderer");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Output.TimestampTokenRenderer,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Output.TimestampTokenRenderer");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Rendering.ThemedMessageTemplateRenderer,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Rendering.ThemedMessageTemplateRenderer");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Themes.AnsiConsoleTheme,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Themes.AnsiConsoleTheme");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Themes.ConsoleTheme,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Themes.ConsoleTheme");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Themes.ConsoleThemeStyle,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Themes.ConsoleThemeStyle");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Themes.EmptyConsoleTheme,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Themes.EmptyConsoleTheme");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Themes.StyleReset,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Themes.StyleReset");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Themes.SystemConsoleTheme,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Themes.SystemConsoleTheme");
            feature.AddKnownType("Serilog.Sinks.SystemConsole.Themes.SystemConsoleThemeStyle,Serilog.Sinks.Console", "Serilog.Sinks.SystemConsole.Themes.SystemConsoleThemeStyle");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Serilog.Sinks.File", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Serilog.RollingInterval,Serilog.Sinks.File", "Serilog.RollingInterval");
            feature.AddKnownType("Serilog.Sinks.File.FileLifeCycleHookChain,Serilog.Sinks.File", "Serilog.Sinks.File.FileLifeCycleHookChain");
            feature.AddKnownType("Serilog.Sinks.File.FileLifecycleHooks,Serilog.Sinks.File", "Serilog.Sinks.File.FileLifecycleHooks");
            feature.AddKnownType("Serilog.Sinks.File.FileSink,Serilog.Sinks.File", "Serilog.Sinks.File.FileSink");
            feature.AddKnownType("Serilog.Sinks.File.IFileSink,Serilog.Sinks.File", "Serilog.Sinks.File.IFileSink");
            feature.AddKnownType("Serilog.Sinks.File.IFlushableFileSink,Serilog.Sinks.File", "Serilog.Sinks.File.IFlushableFileSink");
            feature.AddKnownType("Serilog.Sinks.File.NullSink,Serilog.Sinks.File", "Serilog.Sinks.File.NullSink");
            feature.AddKnownType("Serilog.Sinks.File.PathRoller,Serilog.Sinks.File", "Serilog.Sinks.File.PathRoller");
            feature.AddKnownType("Serilog.Sinks.File.PeriodicFlushToDiskSink,Serilog.Sinks.File", "Serilog.Sinks.File.PeriodicFlushToDiskSink");
            feature.AddKnownType("Serilog.Sinks.File.RollingFileSink,Serilog.Sinks.File", "Serilog.Sinks.File.RollingFileSink");
            feature.AddKnownType("Serilog.Sinks.File.RollingLogFile,Serilog.Sinks.File", "Serilog.Sinks.File.RollingLogFile");
            feature.AddKnownType("Serilog.Sinks.File.SharedFileSink,Serilog.Sinks.File", "Serilog.Sinks.File.SharedFileSink");
            feature.AddKnownType("Serilog.Sinks.File.WriteCountingStream,Serilog.Sinks.File", "Serilog.Sinks.File.WriteCountingStream");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Diagnostics.EntryWrittenEventArgs", "EntryWrittenEventArgs");
            feature.AddKnownType("System.Diagnostics.EventInstance", "EventInstance");
            feature.AddKnownType("System.Diagnostics.EventLog", "EventLog");
            feature.AddKnownType("System.Diagnostics.EventLogEntry", "EventLogEntry");
            feature.AddKnownType("System.Diagnostics.EventLogEntryCollection", "EventLogEntryCollection");
            feature.AddKnownType("System.Diagnostics.EventLogEntryType", "EventLogEntryType");
            feature.AddKnownType("System.Diagnostics.EventLogTraceListener", "EventLogTraceListener");
            feature.AddKnownType("System.Diagnostics.EventSourceCreationData", "EventSourceCreationData");
            feature.AddKnownType("System.Diagnostics.OverflowAction", "OverflowAction");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventBookmark", "EventBookmark");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventKeyword", "EventKeyword");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLevel", "EventLevel");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogConfiguration", "EventLogConfiguration");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogException", "EventLogException");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogInformation", "EventLogInformation");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogInvalidDataException", "EventLogInvalidDataException");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogIsolation", "EventLogIsolation");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogLink", "EventLogLink");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogMode", "EventLogMode");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogNotFoundException", "EventLogNotFoundException");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogPropertySelector", "EventLogPropertySelector");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException", "EventLogProviderDisabledException");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogQuery", "EventLogQuery");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogReader", "EventLogReader");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogReadingException", "EventLogReadingException");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogRecord", "EventLogRecord");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogSession", "EventLogSession");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogStatus", "EventLogStatus");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogType", "EventLogType");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogWatcher", "EventLogWatcher");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventMetadata", "EventMetadata");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventOpcode", "EventOpcode");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventProperty", "EventProperty");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventRecord", "EventRecord");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs", "EventRecordWrittenEventArgs");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventTask", "EventTask");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.PathType", "PathType");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.ProviderMetadata", "ProviderMetadata");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.SessionAuthentication", "SessionAuthentication");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.StandardEventKeywords", "StandardEventKeywords");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.StandardEventLevel", "StandardEventLevel");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.StandardEventOpcode", "StandardEventOpcode");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.StandardEventTask", "StandardEventTask");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Reactive", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Reactive.AnonymousObservable`1", "AnonymousObservable`1'1");
            feature.AddKnownType("System.Reactive.AnonymousObserver`1", "AnonymousObserver`1'1");
            feature.AddKnownType("System.Reactive.AnonymousSafeObserver`1", "AnonymousSafeObserver`1'1");
            feature.AddKnownType("System.Reactive.EventPattern`1", "EventPattern`1'1");
            feature.AddKnownType("System.Reactive.EventPattern`2", "EventPattern`2'2");
            feature.AddKnownType("System.Reactive.EventPatternSource`1", "EventPatternSource`1'1");
            feature.AddKnownType("System.Reactive.EventPatternSourceBase`2", "EventPatternSourceBase`2'2");
            feature.AddKnownType("System.Reactive.EventPatternSourceBase`2+Observer", "Observer'2");
            feature.AddKnownType("System.Reactive.EventSource`1", "EventSource`1'1");
            feature.AddKnownType("System.Reactive.ExperimentalAttribute", "ExperimentalAttribute");
            feature.AddKnownType("System.Reactive.IEventPattern`2", "IEventPattern`2'2");
            feature.AddKnownType("System.Reactive.IEventPatternSource`1", "IEventPatternSource`1'1");
            feature.AddKnownType("System.Reactive.IEventSource`1", "IEventSource`1'1");
            feature.AddKnownType("System.Reactive.AnonymousEnumerable`1", "AnonymousEnumerable`1'1");
            feature.AddKnownType("System.Reactive.AsyncLockObserver`1", "AsyncLockObserver`1'1");
            feature.AddKnownType("System.Reactive.AutoDetachObserver`1", "AutoDetachObserver`1'1");
            feature.AddKnownType("System.Reactive.BinaryObserver`2", "BinaryObserver`2'2");
            feature.AddKnownType("System.Reactive.CheckedObserver`1", "CheckedObserver`1'1");
            feature.AddKnownType("System.Reactive.ConcatSink`1", "ConcatSink`1'1");
            feature.AddKnownType("System.Reactive.Either`2", "Either`2'2");
            feature.AddKnownType("System.Reactive.Either`2+Left", "Either`2'2.Left'2");
            feature.AddKnownType("System.Reactive.Either`2+Right", "Either`2'2.Right'2");
            feature.AddKnownType("System.Reactive.Grouping`2", "Grouping`2'2");
            feature.AddKnownType("System.Reactive.IConcatenatable`1", "IConcatenatable`1'1");
            feature.AddKnownType("System.Reactive.IdentitySink`1", "IdentitySink`1'1");
            feature.AddKnownType("System.Reactive.IEvaluatableObservable`1", "IEvaluatableObservable`1'1");
            feature.AddKnownType("System.Reactive.ImmutableList`1", "ImmutableList`1'1");
            feature.AddKnownType("System.Reactive.ISafeObserver`1", "ISafeObserver`1'1");
            feature.AddKnownType("System.Reactive.Lookup`2", "Lookup`2'2");
            feature.AddKnownType("System.Reactive.Lookup`2+Grouping", "Grouping'2");
            feature.AddKnownType("System.Reactive.Map`2", "Map`2'2");
            feature.AddKnownType("System.Reactive.NopObserver`1", "NopObserver`1'1");
            feature.AddKnownType("System.Reactive.PriorityQueue`1", "PriorityQueue`1'1");
            feature.AddKnownType("System.Reactive.PriorityQueue`1+IndexedItem", "IndexedItem'1");
            feature.AddKnownType("System.Reactive.IProducer`1", "IProducer`1'1");
            feature.AddKnownType("System.Reactive.BasicProducer`1", "BasicProducer`1'1");
            feature.AddKnownType("System.Reactive.Producer`2", "Producer`2'2");
            feature.AddKnownType("System.Reactive.SafeObserver`1", "SafeObserver`1'1");
            feature.AddKnownType("System.Reactive.SafeObserver`1+WrappingSafeObserver", "WrappingSafeObserver'1");
            feature.AddKnownType("System.Reactive.ScheduledObserver`1", "ScheduledObserver`1'1");
            feature.AddKnownType("System.Reactive.ScheduledObserver`1+SemaphoreSlimRelease", "SemaphoreSlimRelease'1");
            feature.AddKnownType("System.Reactive.ObserveOnObserver`1", "ObserveOnObserver`1'1");
            feature.AddKnownType("System.Reactive.IScheduledObserver`1", "IScheduledObserver`1'1");
            feature.AddKnownType("System.Reactive.ObserveOnObserverNew`1", "ObserveOnObserverNew`1'1");
            feature.AddKnownType("System.Reactive.ObserveOnObserverLongRunning`1", "ObserveOnObserverLongRunning`1'1");
            feature.AddKnownType("System.Reactive.ISink`1", "ISink`1'1");
            feature.AddKnownType("System.Reactive.Sink`1", "Sink`1'1");
            feature.AddKnownType("System.Reactive.Sink`2", "Sink`2'2");
            feature.AddKnownType("System.Reactive.Sink`2+_", "_'2");
            feature.AddKnownType("System.Reactive.SynchronizedObserver`1", "SynchronizedObserver`1'1");
            feature.AddKnownType("System.Reactive.TailRecursiveSink`1", "TailRecursiveSink`1'1");
            feature.AddKnownType("System.Reactive.ReadyToken+ReadyDisposable", "ReadyDisposable");
            feature.AddKnownType("System.Reactive.IObserver`2", "IObserver`2'2");
            feature.AddKnownType("System.Reactive.ListObservable`1", "ListObservable`1'1");
            feature.AddKnownType("System.Reactive.NamespaceDoc", "NamespaceDoc");
            feature.AddKnownType("System.Reactive.NotificationKind", "NotificationKind");
            feature.AddKnownType("System.Reactive.Notification`1", "Notification`1'1");
            feature.AddKnownType("System.Reactive.Notification`1+OnNextNotification", "OnNextNotification'1");
            feature.AddKnownType("System.Reactive.Notification`1+OnErrorNotification", "OnErrorNotification'1");
            feature.AddKnownType("System.Reactive.Notification`1+OnCompletedNotification", "OnCompletedNotification'1");
            feature.AddKnownType("System.Reactive.Notification`1+NotificationToObservable", "NotificationToObservable'1");
            feature.AddKnownType("System.Reactive.ObservableBase`1", "ObservableBase`1'1");
            feature.AddKnownType("System.Reactive.ObservableQueryProvider", "ObservableQueryProvider");
            feature.AddKnownType("System.Reactive.ObservableQuery", "ObservableQuery");
            feature.AddKnownType("System.Reactive.ObservableQuery`1", "ObservableQuery`1'1");
            feature.AddKnownType("System.Reactive.ObservableQuery`1+ObservableRewriter", "ObservableRewriter'1");
            feature.AddKnownType("System.Reactive.ObservableQuery`1+ObservableRewriter+Lazy`1", "Lazy`1'2");
            feature.AddKnownType("System.Reactive.Observer+AnonymousProgress`1", "AnonymousProgress`1'1");
            feature.AddKnownType("System.Reactive.ObserverBase`1", "ObserverBase`1'1");
            feature.AddKnownType("System.Reactive.Strings_Core", "Strings_Core");
            feature.AddKnownType("System.Reactive.Strings_Linq", "Strings_Linq");
            feature.AddKnownType("System.Reactive.Strings_PlatformServices", "Strings_PlatformServices");
            feature.AddKnownType("System.Reactive.Strings_Providers", "Strings_Providers");
            feature.AddKnownType("System.Reactive.ITaskObservable`1", "ITaskObservable`1'1");
            feature.AddKnownType("System.Reactive.ITaskObservableAwaiter`1", "ITaskObservableAwaiter`1'1");
            feature.AddKnownType("System.Reactive.TimeInterval`1", "TimeInterval`1'1");
            feature.AddKnownType("System.Reactive.Timestamped`1", "Timestamped`1'1");
            feature.AddKnownType("System.Reactive.Unit", "Unit");
            feature.AddKnownType("System.Reactive.Concurrency.AsyncLock", "AsyncLock");
            feature.AddKnownType("System.Reactive.Concurrency.CatchScheduler`1", "CatchScheduler`1'1");
            feature.AddKnownType("System.Reactive.Concurrency.CatchScheduler`1+CatchSchedulerLongRunning", "CatchSchedulerLongRunning'1");
            feature.AddKnownType("System.Reactive.Concurrency.CatchScheduler`1+CatchSchedulerPeriodic", "CatchSchedulerPeriodic'1");
            feature.AddKnownType("System.Reactive.Concurrency.CatchScheduler`1+CatchSchedulerPeriodic+PeriodicallyScheduledWorkItem`1", "PeriodicallyScheduledWorkItem`1'2");
            feature.AddKnownType("System.Reactive.Concurrency.IConcurrencyAbstractionLayer", "IConcurrencyAbstractionLayer");
            feature.AddKnownType("System.Reactive.Concurrency.ConcurrencyAbstractionLayerImpl", "ConcurrencyAbstractionLayerImpl");
            feature.AddKnownType("System.Reactive.Concurrency.ConcurrencyAbstractionLayerImpl+WorkItem", "WorkItem");
            feature.AddKnownType("System.Reactive.Concurrency.ConcurrencyAbstractionLayerImpl+Timer", "Timer");
            feature.AddKnownType("System.Reactive.Concurrency.ConcurrencyAbstractionLayerImpl+PeriodicTimer", "PeriodicTimer");
            feature.AddKnownType("System.Reactive.Concurrency.ConcurrencyAbstractionLayerImpl+FastPeriodicTimer", "FastPeriodicTimer");
            feature.AddKnownType("System.Reactive.Concurrency.CurrentThreadScheduler", "CurrentThreadScheduler");
            feature.AddKnownType("System.Reactive.Concurrency.DefaultScheduler", "DefaultScheduler");
            feature.AddKnownType("System.Reactive.Concurrency.DefaultScheduler+PeriodicallyScheduledWorkItem`1", "PeriodicallyScheduledWorkItem`1'1");
            feature.AddKnownType("System.Reactive.Concurrency.DefaultScheduler+LongRunning", "LongRunning");
            feature.AddKnownType("System.Reactive.Concurrency.DefaultScheduler+LongRunning+LongScheduledWorkItem`1", "LongScheduledWorkItem`1'1");
            feature.AddKnownType("System.Reactive.Concurrency.DisableOptimizationsScheduler", "DisableOptimizationsScheduler");
            feature.AddKnownType("System.Reactive.Concurrency.EventLoopScheduler", "EventLoopScheduler");
            feature.AddKnownType("System.Reactive.Concurrency.EventLoopScheduler+PeriodicallyScheduledWorkItem`1", "PeriodicallyScheduledWorkItem`1'1");
            feature.AddKnownType("System.Reactive.Concurrency.HistoricalSchedulerBase", "HistoricalSchedulerBase");
            feature.AddKnownType("System.Reactive.Concurrency.HistoricalScheduler", "HistoricalScheduler");
            feature.AddKnownType("System.Reactive.Concurrency.ImmediateScheduler", "ImmediateScheduler");
            feature.AddKnownType("System.Reactive.Concurrency.ImmediateScheduler+AsyncLockScheduler", "AsyncLockScheduler");
            feature.AddKnownType("System.Reactive.Concurrency.IScheduledItem`1", "IScheduledItem`1'1");
            feature.AddKnownType("System.Reactive.Concurrency.IScheduler", "IScheduler");
            feature.AddKnownType("System.Reactive.Concurrency.ISchedulerLongRunning", "ISchedulerLongRunning");
            feature.AddKnownType("System.Reactive.Concurrency.ISchedulerPeriodic", "ISchedulerPeriodic");
            feature.AddKnownType("System.Reactive.Concurrency.IStopwatch", "IStopwatch");
            feature.AddKnownType("System.Reactive.Concurrency.IStopwatchProvider", "IStopwatchProvider");
            feature.AddKnownType("System.Reactive.Concurrency.LocalScheduler", "LocalScheduler");
            feature.AddKnownType("System.Reactive.Concurrency.LocalScheduler+WorkItem", "WorkItem");
            feature.AddKnownType("System.Reactive.Concurrency.LocalScheduler+WorkItem`1", "WorkItem`1'1");
            feature.AddKnownType("System.Reactive.Concurrency.NewThreadScheduler", "NewThreadScheduler");
            feature.AddKnownType("System.Reactive.Concurrency.NewThreadScheduler+Periodic`1", "Periodic`1'1");
            feature.AddKnownType("System.Reactive.Concurrency.ScheduledItem`1", "ScheduledItem`1'1");
            feature.AddKnownType("System.Reactive.Concurrency.ScheduledItem`2", "ScheduledItem`2'2");
            feature.AddKnownType("System.Reactive.Concurrency.Scheduler+AsyncInvocation`1", "AsyncInvocation`1'1");
            feature.AddKnownType("System.Reactive.Concurrency.Scheduler+CancelableScheduler", "CancelableScheduler");
            feature.AddKnownType("System.Reactive.Concurrency.Scheduler+InvokeRecBaseState", "InvokeRecBaseState");
            feature.AddKnownType("System.Reactive.Concurrency.Scheduler+InvokeRec1State`1", "InvokeRec1State`1'1");
            feature.AddKnownType("System.Reactive.Concurrency.Scheduler+InvokeRec2State`1", "InvokeRec2State`1'1");
            feature.AddKnownType("System.Reactive.Concurrency.Scheduler+InvokeRec3State`1", "InvokeRec3State`1'1");
            feature.AddKnownType("System.Reactive.Concurrency.Scheduler+SchedulePeriodicStopwatch`1", "SchedulePeriodicStopwatch`1'1");
            feature.AddKnownType("System.Reactive.Concurrency.Scheduler+SchedulePeriodicRecursive`1", "SchedulePeriodicRecursive`1'1");
            feature.AddKnownType("System.Reactive.Concurrency.Scheduler+EmulatedStopwatch", "EmulatedStopwatch");
            feature.AddKnownType("System.Reactive.Concurrency.SchedulerOperation", "SchedulerOperation");
            feature.AddKnownType("System.Reactive.Concurrency.SchedulerOperationAwaiter", "SchedulerOperationAwaiter");
            feature.AddKnownType("System.Reactive.Concurrency.SchedulerQueue`1", "SchedulerQueue`1'1");
            feature.AddKnownType("System.Reactive.Concurrency.SchedulerWrapper", "SchedulerWrapper");
            feature.AddKnownType("System.Reactive.Concurrency.Synchronization+SubscribeOnObservable`1", "SubscribeOnObservable`1'1");
            feature.AddKnownType("System.Reactive.Concurrency.Synchronization+SubscribeOnObservable`1+Subscription", "Subscription'1");
            feature.AddKnownType("System.Reactive.Concurrency.Synchronization+SubscribeOnCtxObservable`1", "SubscribeOnCtxObservable`1'1");
            feature.AddKnownType("System.Reactive.Concurrency.Synchronization+SubscribeOnCtxObservable`1+Subscription", "Subscription'1");
            feature.AddKnownType("System.Reactive.Concurrency.ObserveOn`1+Scheduler", "Scheduler'1");
            feature.AddKnownType("System.Reactive.Concurrency.ObserveOn`1+SchedulerLongRunning", "SchedulerLongRunning'1");
            feature.AddKnownType("System.Reactive.Concurrency.ObserveOn`1+Context", "Context'1");
            feature.AddKnownType("System.Reactive.Concurrency.ObserveOn`1+Context+_", "_'1");
            feature.AddKnownType("System.Reactive.Concurrency.Synchronize`1", "Synchronize`1'1");
            feature.AddKnownType("System.Reactive.Concurrency.Synchronize`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Concurrency.SynchronizationContextScheduler", "SynchronizationContextScheduler");
            feature.AddKnownType("System.Reactive.Concurrency.TaskPoolScheduler", "TaskPoolScheduler");
            feature.AddKnownType("System.Reactive.Concurrency.TaskPoolScheduler+ScheduledWorkItem`1", "ScheduledWorkItem`1'1");
            feature.AddKnownType("System.Reactive.Concurrency.TaskPoolScheduler+SlowlyScheduledWorkItem`1", "SlowlyScheduledWorkItem`1'1");
            feature.AddKnownType("System.Reactive.Concurrency.TaskPoolScheduler+LongScheduledWorkItem`1", "LongScheduledWorkItem`1'1");
            feature.AddKnownType("System.Reactive.Concurrency.TaskPoolScheduler+PeriodicallyScheduledWorkItem`1", "PeriodicallyScheduledWorkItem`1'1");
            feature.AddKnownType("System.Reactive.Concurrency.ThreadPoolScheduler", "ThreadPoolScheduler");
            feature.AddKnownType("System.Reactive.Concurrency.ThreadPoolScheduler+FastPeriodicTimer`1", "FastPeriodicTimer`1'1");
            feature.AddKnownType("System.Reactive.Concurrency.ThreadPoolScheduler+PeriodicTimer`1", "PeriodicTimer`1'1");
            feature.AddKnownType("System.Reactive.Concurrency.UserWorkItem`1", "UserWorkItem`1'1");
            feature.AddKnownType("System.Reactive.Concurrency.VirtualTimeSchedulerBase`2", "VirtualTimeSchedulerBase`2'2");
            feature.AddKnownType("System.Reactive.Concurrency.VirtualTimeSchedulerBase`2+VirtualTimeStopwatch", "VirtualTimeStopwatch'2");
            feature.AddKnownType("System.Reactive.Concurrency.VirtualTimeScheduler`2", "VirtualTimeScheduler`2'2");
            feature.AddKnownType("System.Reactive.Concurrency.StopwatchImpl", "StopwatchImpl");
            feature.AddKnownType("System.Reactive.Concurrency.NamespaceDoc", "NamespaceDoc");
            feature.AddKnownType("System.Reactive.Disposables.AnonymousDisposable", "AnonymousDisposable");
            feature.AddKnownType("System.Reactive.Disposables.AnonymousDisposable`1", "AnonymousDisposable`1'1");
            feature.AddKnownType("System.Reactive.Disposables.BooleanDisposable", "BooleanDisposable");
            feature.AddKnownType("System.Reactive.Disposables.CancellationDisposable", "CancellationDisposable");
            feature.AddKnownType("System.Reactive.Disposables.CompositeDisposable", "CompositeDisposable");
            feature.AddKnownType("System.Reactive.Disposables.CompositeDisposable+CompositeEnumerator", "CompositeEnumerator");
            feature.AddKnownType("System.Reactive.Disposables.ContextDisposable", "ContextDisposable");
            feature.AddKnownType("System.Reactive.Disposables.Disposable+EmptyDisposable", "EmptyDisposable");
            feature.AddKnownType("System.Reactive.Disposables.TrySetSingleResult", "TrySetSingleResult");
            feature.AddKnownType("System.Reactive.Disposables.ICancelable", "ICancelable");
            feature.AddKnownType("System.Reactive.Disposables.MultipleAssignmentDisposable", "MultipleAssignmentDisposable");
            feature.AddKnownType("System.Reactive.Disposables.MultipleAssignmentDisposableValue", "MultipleAssignmentDisposableValue");
            feature.AddKnownType("System.Reactive.Disposables.RefCountDisposable", "RefCountDisposable");
            feature.AddKnownType("System.Reactive.Disposables.RefCountDisposable+InnerDisposable", "InnerDisposable");
            feature.AddKnownType("System.Reactive.Disposables.ScheduledDisposable", "ScheduledDisposable");
            feature.AddKnownType("System.Reactive.Disposables.SerialDisposable", "SerialDisposable");
            feature.AddKnownType("System.Reactive.Disposables.SerialDisposableValue", "SerialDisposableValue");
            feature.AddKnownType("System.Reactive.Disposables.SingleAssignmentDisposable", "SingleAssignmentDisposable");
            feature.AddKnownType("System.Reactive.Disposables.SingleAssignmentDisposableValue", "SingleAssignmentDisposableValue");
            feature.AddKnownType("System.Reactive.Disposables.StableCompositeDisposable", "StableCompositeDisposable");
            feature.AddKnownType("System.Reactive.Disposables.StableCompositeDisposable+Binary", "Binary");
            feature.AddKnownType("System.Reactive.Disposables.StableCompositeDisposable+NAryEnumerable", "NAryEnumerable");
            feature.AddKnownType("System.Reactive.Disposables.StableCompositeDisposable+NAryArray", "NAryArray");
            feature.AddKnownType("System.Reactive.Disposables.StableCompositeDisposable+NAryTrustedArray", "NAryTrustedArray");
            feature.AddKnownType("System.Reactive.Disposables.NamespaceDoc", "NamespaceDoc");
            feature.AddKnownType("System.Reactive.Joins.ActivePlan", "ActivePlan");
            feature.AddKnownType("System.Reactive.Joins.ActivePlan`1", "ActivePlan`1'1");
            feature.AddKnownType("System.Reactive.Joins.ActivePlan`2", "ActivePlan`2'2");
            feature.AddKnownType("System.Reactive.Joins.ActivePlan`3", "ActivePlan`3'3");
            feature.AddKnownType("System.Reactive.Joins.ActivePlan`4", "ActivePlan`4'4");
            feature.AddKnownType("System.Reactive.Joins.ActivePlan`5", "ActivePlan`5'5");
            feature.AddKnownType("System.Reactive.Joins.ActivePlan`6", "ActivePlan`6'6");
            feature.AddKnownType("System.Reactive.Joins.ActivePlan`7", "ActivePlan`7'7");
            feature.AddKnownType("System.Reactive.Joins.ActivePlan`8", "ActivePlan`8'8");
            feature.AddKnownType("System.Reactive.Joins.ActivePlan`9", "ActivePlan`9'9");
            feature.AddKnownType("System.Reactive.Joins.ActivePlan`10", "ActivePlan`10'10");
            feature.AddKnownType("System.Reactive.Joins.ActivePlan`11", "ActivePlan`11'11");
            feature.AddKnownType("System.Reactive.Joins.ActivePlan`12", "ActivePlan`12'12");
            feature.AddKnownType("System.Reactive.Joins.ActivePlan`13", "ActivePlan`13'13");
            feature.AddKnownType("System.Reactive.Joins.ActivePlan`14", "ActivePlan`14'14");
            feature.AddKnownType("System.Reactive.Joins.ActivePlan`15", "ActivePlan`15'15");
            feature.AddKnownType("System.Reactive.Joins.ActivePlan`16", "ActivePlan`16'16");
            feature.AddKnownType("System.Reactive.Joins.IJoinObserver", "IJoinObserver");
            feature.AddKnownType("System.Reactive.Joins.JoinObserver`1", "JoinObserver`1'1");
            feature.AddKnownType("System.Reactive.Joins.Pattern", "Pattern");
            feature.AddKnownType("System.Reactive.Joins.Pattern`1", "Pattern`1'1");
            feature.AddKnownType("System.Reactive.Joins.Pattern`2", "Pattern`2'2");
            feature.AddKnownType("System.Reactive.Joins.Pattern`3", "Pattern`3'3");
            feature.AddKnownType("System.Reactive.Joins.Pattern`4", "Pattern`4'4");
            feature.AddKnownType("System.Reactive.Joins.Pattern`5", "Pattern`5'5");
            feature.AddKnownType("System.Reactive.Joins.Pattern`6", "Pattern`6'6");
            feature.AddKnownType("System.Reactive.Joins.Pattern`7", "Pattern`7'7");
            feature.AddKnownType("System.Reactive.Joins.Pattern`8", "Pattern`8'8");
            feature.AddKnownType("System.Reactive.Joins.Pattern`9", "Pattern`9'9");
            feature.AddKnownType("System.Reactive.Joins.Pattern`10", "Pattern`10'10");
            feature.AddKnownType("System.Reactive.Joins.Pattern`11", "Pattern`11'11");
            feature.AddKnownType("System.Reactive.Joins.Pattern`12", "Pattern`12'12");
            feature.AddKnownType("System.Reactive.Joins.Pattern`13", "Pattern`13'13");
            feature.AddKnownType("System.Reactive.Joins.Pattern`14", "Pattern`14'14");
            feature.AddKnownType("System.Reactive.Joins.Pattern`15", "Pattern`15'15");
            feature.AddKnownType("System.Reactive.Joins.Pattern`16", "Pattern`16'16");
            feature.AddKnownType("System.Reactive.Joins.Plan`1", "Plan`1'1");
            feature.AddKnownType("System.Reactive.Joins.Plan`2", "Plan`2'2");
            feature.AddKnownType("System.Reactive.Joins.Plan`3", "Plan`3'3");
            feature.AddKnownType("System.Reactive.Joins.Plan`4", "Plan`4'4");
            feature.AddKnownType("System.Reactive.Joins.Plan`5", "Plan`5'5");
            feature.AddKnownType("System.Reactive.Joins.Plan`6", "Plan`6'6");
            feature.AddKnownType("System.Reactive.Joins.Plan`7", "Plan`7'7");
            feature.AddKnownType("System.Reactive.Joins.Plan`8", "Plan`8'8");
            feature.AddKnownType("System.Reactive.Joins.Plan`9", "Plan`9'9");
            feature.AddKnownType("System.Reactive.Joins.Plan`10", "Plan`10'10");
            feature.AddKnownType("System.Reactive.Joins.Plan`11", "Plan`11'11");
            feature.AddKnownType("System.Reactive.Joins.Plan`12", "Plan`12'12");
            feature.AddKnownType("System.Reactive.Joins.Plan`13", "Plan`13'13");
            feature.AddKnownType("System.Reactive.Joins.Plan`14", "Plan`14'14");
            feature.AddKnownType("System.Reactive.Joins.Plan`15", "Plan`15'15");
            feature.AddKnownType("System.Reactive.Joins.Plan`16", "Plan`16'16");
            feature.AddKnownType("System.Reactive.Joins.Plan`17", "Plan`17'17");
            feature.AddKnownType("System.Reactive.Joins.QueryablePattern", "QueryablePattern");
            feature.AddKnownType("System.Reactive.Joins.QueryablePattern`2", "QueryablePattern`2'2");
            feature.AddKnownType("System.Reactive.Joins.QueryablePattern`3", "QueryablePattern`3'3");
            feature.AddKnownType("System.Reactive.Joins.QueryablePattern`4", "QueryablePattern`4'4");
            feature.AddKnownType("System.Reactive.Joins.QueryablePattern`5", "QueryablePattern`5'5");
            feature.AddKnownType("System.Reactive.Joins.QueryablePattern`6", "QueryablePattern`6'6");
            feature.AddKnownType("System.Reactive.Joins.QueryablePattern`7", "QueryablePattern`7'7");
            feature.AddKnownType("System.Reactive.Joins.QueryablePattern`8", "QueryablePattern`8'8");
            feature.AddKnownType("System.Reactive.Joins.QueryablePattern`9", "QueryablePattern`9'9");
            feature.AddKnownType("System.Reactive.Joins.QueryablePattern`10", "QueryablePattern`10'10");
            feature.AddKnownType("System.Reactive.Joins.QueryablePattern`11", "QueryablePattern`11'11");
            feature.AddKnownType("System.Reactive.Joins.QueryablePattern`12", "QueryablePattern`12'12");
            feature.AddKnownType("System.Reactive.Joins.QueryablePattern`13", "QueryablePattern`13'13");
            feature.AddKnownType("System.Reactive.Joins.QueryablePattern`14", "QueryablePattern`14'14");
            feature.AddKnownType("System.Reactive.Joins.QueryablePattern`15", "QueryablePattern`15'15");
            feature.AddKnownType("System.Reactive.Joins.QueryablePattern`16", "QueryablePattern`16'16");
            feature.AddKnownType("System.Reactive.Joins.QueryablePlan`1", "QueryablePlan`1'1");
            feature.AddKnownType("System.Reactive.Joins.NamespaceDoc", "NamespaceDoc");
            feature.AddKnownType("System.Reactive.Linq.IQueryServices", "IQueryServices");
            feature.AddKnownType("System.Reactive.Linq.DefaultQueryServices", "DefaultQueryServices");
            feature.AddKnownType("System.Reactive.Linq.GroupedObservable`2", "GroupedObservable`2'2");
            feature.AddKnownType("System.Reactive.Linq.IGroupedObservable`2", "IGroupedObservable`2'2");
            feature.AddKnownType("System.Reactive.Linq.IQbservable`1", "IQbservable`1'1");
            feature.AddKnownType("System.Reactive.Linq.IQbservable", "IQbservable");
            feature.AddKnownType("System.Reactive.Linq.IQbservableProvider", "IQbservableProvider");
            feature.AddKnownType("System.Reactive.Linq.IQueryLanguage", "IQueryLanguage");
            feature.AddKnownType("System.Reactive.Linq.IQueryLanguageEx", "IQueryLanguageEx");
            feature.AddKnownType("System.Reactive.Linq.LocalQueryMethodImplementationTypeAttribute", "LocalQueryMethodImplementationTypeAttribute");
            feature.AddKnownType("System.Reactive.Linq.QueryDebugger", "QueryDebugger");
            feature.AddKnownType("System.Reactive.Linq.QueryLanguage", "QueryLanguage");
            feature.AddKnownType("System.Reactive.Linq.QueryLanguage+StartAsyncObservable`1", "StartAsyncObservable`1'1");
            feature.AddKnownType("System.Reactive.Linq.QueryLanguage+CreateWithDisposableObservable`1", "CreateWithDisposableObservable`1'1");
            feature.AddKnownType("System.Reactive.Linq.QueryLanguage+CreateWithActionDisposable`1", "CreateWithActionDisposable`1'1");
            feature.AddKnownType("System.Reactive.Linq.QueryLanguage+CreateWithTaskTokenObservable`1", "CreateWithTaskTokenObservable`1'1");
            feature.AddKnownType("System.Reactive.Linq.QueryLanguage+CreateWithTaskTokenObservable`1+Subscription", "Subscription'1");
            feature.AddKnownType("System.Reactive.Linq.QueryLanguage+CreateWithTaskTokenObservable`1+Subscription+TaskCompletionObserver", "TaskCompletionObserver'1");
            feature.AddKnownType("System.Reactive.Linq.QueryLanguage+CreateWithTaskDisposable`1", "CreateWithTaskDisposable`1'1");
            feature.AddKnownType("System.Reactive.Linq.QueryLanguage+CreateWithTaskDisposable`1+Subscription", "Subscription'1");
            feature.AddKnownType("System.Reactive.Linq.QueryLanguage+CreateWithTaskDisposable`1+Subscription+TaskDisposeCompletionObserver", "TaskDisposeCompletionObserver'1");
            feature.AddKnownType("System.Reactive.Linq.QueryLanguage+CreateWithTaskActionObservable`1", "CreateWithTaskActionObservable`1'1");
            feature.AddKnownType("System.Reactive.Linq.QueryLanguage+CreateWithTaskActionObservable`1+Subscription", "Subscription'1");
            feature.AddKnownType("System.Reactive.Linq.QueryLanguage+CreateWithTaskActionObservable`1+Subscription+TaskDisposeCompletionObserver", "TaskDisposeCompletionObserver'1");
            feature.AddKnownType("System.Reactive.Linq.QueryLanguage+WhenObservable`1", "WhenObservable`1'1");
            feature.AddKnownType("System.Reactive.Linq.QueryLanguage+WhenObservable`1+OutObserver", "OutObserver'1");
            feature.AddKnownType("System.Reactive.Linq.QueryLanguageEx", "QueryLanguageEx");
            feature.AddKnownType("System.Reactive.Linq.QueryLanguageEx+CreateWithEnumerableObservable`1", "CreateWithEnumerableObservable`1'1");
            feature.AddKnownType("System.Reactive.Linq.QueryLanguageEx+TerminalOnlyObserver`1", "TerminalOnlyObserver`1'1");
            feature.AddKnownType("System.Reactive.Linq.QueryLanguageEx+CreateWithOnlyEnumerableObservable`1", "CreateWithOnlyEnumerableObservable`1'1");
            feature.AddKnownType("System.Reactive.Linq.QueryLanguageEx+ExpandObservable`1", "ExpandObservable`1'1");
            feature.AddKnownType("System.Reactive.Linq.QueryLanguageEx+ForkJoinObservable`1", "ForkJoinObservable`1'1");
            feature.AddKnownType("System.Reactive.Linq.QueryLanguageEx+ChainObservable`1", "ChainObservable`1'1");
            feature.AddKnownType("System.Reactive.Linq.QueryLanguageEx+CombineObservable`3", "CombineObservable`3'3");
            feature.AddKnownType("System.Reactive.Linq.NamespaceDoc", "NamespaceDoc");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AddRef`1", "AddRef`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AddRef`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Aggregate`1", "Aggregate`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Aggregate`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Aggregate`2", "Aggregate`2'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Aggregate`2+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Aggregate`3", "Aggregate`3'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Aggregate`3+_", "_'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.All`1", "All`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.All`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Amb`1", "Amb`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Amb`1+AmbCoordinator", "AmbCoordinator'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Amb`1+AmbCoordinator+AmbObserver", "AmbObserver'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AmbManyArray`1", "AmbManyArray`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AmbManyEnumerable`1", "AmbManyEnumerable`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AmbCoordinator`1", "AmbCoordinator`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AmbCoordinator`1+InnerObserver", "InnerObserver'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Any`1+Count", "Count'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Any`1+Count+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Any`1+Predicate", "Predicate'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Any`1+Predicate+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AppendPrepend`1+IAppendPrepend", "IAppendPrepend'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AppendPrepend`1+SingleBase`1", "SingleBase`1'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AppendPrepend`1+SingleValue", "SingleValue'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AppendPrepend`1+SingleValue+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AppendPrepend`1+Recursive", "Recursive'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AppendPrepend`1+Recursive+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AppendPrepend`1+LongRunning", "LongRunning'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AppendPrepend`1+LongRunning+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AppendPrepend`1+Node`1", "Node`1'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AppendPrepend`1+SingleImmediate", "SingleImmediate'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AppendPrepend`1+SingleImmediate+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AsObservable`1", "AsObservable`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AsObservable`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AutoConnect`1", "AutoConnect`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AverageDouble", "AverageDouble");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AverageDouble+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AverageSingle", "AverageSingle");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AverageSingle+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AverageDecimal", "AverageDecimal");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AverageDecimal+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AverageInt32", "AverageInt32");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AverageInt32+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AverageInt64", "AverageInt64");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AverageInt64+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AverageDoubleNullable", "AverageDoubleNullable");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AverageDoubleNullable+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AverageSingleNullable", "AverageSingleNullable");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AverageSingleNullable+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AverageDecimalNullable", "AverageDecimalNullable");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AverageDecimalNullable+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AverageInt32Nullable", "AverageInt32Nullable");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AverageInt32Nullable+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AverageInt64Nullable", "AverageInt64Nullable");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.AverageInt64Nullable+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Buffer`1+CountExact", "CountExact'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Buffer`1+CountExact+ExactSink", "ExactSink'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Buffer`1+CountSkip", "CountSkip'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Buffer`1+CountSkip+SkipSink", "SkipSink'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Buffer`1+CountOverlap", "CountOverlap'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Buffer`1+CountOverlap+OverlapSink", "OverlapSink'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Buffer`1+TimeSliding", "TimeSliding'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Buffer`1+TimeSliding+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Buffer`1+TimeHopping", "TimeHopping'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Buffer`1+TimeHopping+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Buffer`1+Ferry", "Ferry'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Buffer`1+Ferry+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Buffer`2+Selector", "Selector'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Buffer`2+Selector+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Buffer`2+Selector+_+BufferClosingObserver", "BufferClosingObserver'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Buffer`2+Boundaries", "Boundaries'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Buffer`2+Boundaries+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Buffer`2+Boundaries+_+BufferClosingObserver", "BufferClosingObserver'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Case`2", "Case`2'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Case`2+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Cast`2", "Cast`2'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Cast`2+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Catch`1", "Catch`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Catch`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Catch`2", "Catch`2'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Catch`2+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Collect`2", "Collect`2'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Collect`2+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`3", "CombineLatest`3'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`3+_", "_'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`3+_+FirstObserver", "FirstObserver'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`3+_+SecondObserver", "SecondObserver'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`2", "CombineLatest`2'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`2+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`2+_+SourceObserver", "SourceObserver'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`4", "CombineLatest`4'4");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`4+_", "_'4");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`5", "CombineLatest`5'5");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`5+_", "_'5");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`6", "CombineLatest`6'6");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`6+_", "_'6");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`7", "CombineLatest`7'7");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`7+_", "_'7");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`8", "CombineLatest`8'8");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`8+_", "_'8");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`9", "CombineLatest`9'9");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`9+_", "_'9");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`10", "CombineLatest`10'10");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`10+_", "_'10");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`11", "CombineLatest`11'11");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`11+_", "_'11");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`12", "CombineLatest`12'12");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`12+_", "_'12");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`13", "CombineLatest`13'13");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`13+_", "_'13");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`14", "CombineLatest`14'14");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`14+_", "_'14");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`15", "CombineLatest`15'15");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`15+_", "_'15");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`16", "CombineLatest`16'16");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`16+_", "_'16");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`17", "CombineLatest`17'17");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatest`17+_", "_'17");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.ICombineLatest", "ICombineLatest");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatestSink`1", "CombineLatestSink`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.CombineLatestObserver`1", "CombineLatestObserver`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Concat`1", "Concat`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Concat`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.ConcatMany`1", "ConcatMany`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.ConcatMany`1+ConcatManyOuterObserver", "ConcatManyOuterObserver'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.ConcatMany`1+ConcatManyOuterObserver+InnerObserver", "InnerObserver'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Contains`1", "Contains`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Contains`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Count`1+All", "All'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Count`1+All+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Count`1+Predicate", "Predicate'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Count`1+Predicate+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.DefaultIfEmpty`1", "DefaultIfEmpty`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.DefaultIfEmpty`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Defer`1", "Defer`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Defer`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Delay`1+Base`1", "Base`1'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Delay`1+Base`1+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Delay`1+Base`1+S", "S'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Delay`1+Base`1+L", "L'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Delay`1+Absolute", "Absolute'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Delay`1+Absolute+S", "S'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Delay`1+Absolute+L", "L'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Delay`1+Relative", "Relative'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Delay`1+Relative+S", "S'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Delay`1+Relative+L", "L'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Delay`2+Base`1", "Base`1'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Delay`2+Base`1+_", "_'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Delay`2+Base`1+_+DelayObserver", "DelayObserver'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Delay`2+Selector", "Selector'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Delay`2+Selector+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Delay`2+SelectorWithSubscriptionDelay", "SelectorWithSubscriptionDelay'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Delay`2+SelectorWithSubscriptionDelay+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Delay`2+SelectorWithSubscriptionDelay+_+SubscriptionDelayObserver", "SubscriptionDelayObserver'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.DelaySubscription`1", "DelaySubscription`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.DelaySubscription`1+Relative", "Relative'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.DelaySubscription`1+Absolute", "Absolute'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.DelaySubscription`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Dematerialize`1", "Dematerialize`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Dematerialize`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Distinct`2", "Distinct`2'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Distinct`2+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.DistinctUntilChanged`2", "DistinctUntilChanged`2'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.DistinctUntilChanged`2+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Do`1+OnNext", "OnNext'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Do`1+OnNext+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Do`1+Observer", "Observer'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Do`1+Observer+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Do`1+Actions", "Actions'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Do`1+Actions+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.DoWhile`1", "DoWhile`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.DoWhile`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.ElementAt`1", "ElementAt`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.ElementAt`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.ElementAtOrDefault`1", "ElementAtOrDefault`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.ElementAtOrDefault`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Empty`1", "Empty`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Empty`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.EmptyDirect`1", "EmptyDirect`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Finally`1", "Finally`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Finally`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.FirstAsync`1+Sequence", "Sequence'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.FirstAsync`1+Sequence+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.FirstAsync`1+Predicate", "Predicate'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.FirstAsync`1+Predicate+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.BaseBlocking`1", "BaseBlocking`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.FirstBlocking`1", "FirstBlocking`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.LastBlocking`1", "LastBlocking`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SingleBlocking`1", "SingleBlocking`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.FirstOrDefaultAsync`1+Sequence", "Sequence'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.FirstOrDefaultAsync`1+Sequence+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.FirstOrDefaultAsync`1+Predicate", "Predicate'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.FirstOrDefaultAsync`1+Predicate+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.For`2", "For`2'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.For`2+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.ForEach`1", "ForEach`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.ForEach`1+ObserverBase", "ForEach`1'1.ObserverBase'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.ForEach`1+Observer", "ForEach`1'1.Observer'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.ForEach`1+ObserverIndexed", "ForEach`1'1.ObserverIndexed'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.FromEvent`2", "FromEvent`2'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.EventProducer`2", "EventProducer`2'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.EventProducer`2+Session", "Session'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.ClassicEventProducer`2", "ClassicEventProducer`2'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.FromEventPattern", "FromEventPattern");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.FromEventPattern+Impl`2", "FromEventPattern.Impl`2'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.FromEventPattern+Impl`3", "FromEventPattern.Impl`3'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.FromEventPattern+Handler`3", "FromEventPattern.Handler`3'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.FromEventPattern+Handler`3+RemoveHandlerDisposable", "RemoveHandlerDisposable'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Generate`2+NoTime", "NoTime'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Generate`2+NoTime+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Generate`2+Absolute", "Absolute'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Generate`2+Absolute+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Generate`2+Relative", "Relative'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Generate`2+Relative+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.GetEnumerator`1", "GetEnumerator`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.GroupBy`3", "GroupBy`3'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.GroupBy`3+_", "_'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.GroupByUntil`4", "GroupByUntil`4'4");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.GroupByUntil`4+_", "_'4");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.GroupByUntil`4+_+DurationObserver", "DurationObserver'4");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.GroupJoin`5", "GroupJoin`5'5");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.GroupJoin`5+_", "_'5");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.GroupJoin`5+_+LeftObserver", "LeftObserver'5");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.GroupJoin`5+_+LeftObserver+DurationObserver", "DurationObserver'5");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.GroupJoin`5+_+RightObserver", "RightObserver'5");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.GroupJoin`5+_+RightObserver+DurationObserver", "DurationObserver'5");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.If`1", "If`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.If`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.IgnoreElements`1", "IgnoreElements`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.IgnoreElements`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.IsEmpty`1", "IsEmpty`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.IsEmpty`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Join`5", "Join`5'5");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Join`5+_", "_'5");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Join`5+_+LeftObserver", "LeftObserver'5");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Join`5+_+LeftObserver+DurationObserver", "DurationObserver'5");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Join`5+_+RightObserver", "RightObserver'5");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Join`5+_+RightObserver+DurationObserver", "DurationObserver'5");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.LastAsync`1+Sequence", "Sequence'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.LastAsync`1+Sequence+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.LastAsync`1+Predicate", "Predicate'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.LastAsync`1+Predicate+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.LastOrDefaultAsync`1+Sequence", "Sequence'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.LastOrDefaultAsync`1+Sequence+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.LastOrDefaultAsync`1+Predicate", "Predicate'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.LastOrDefaultAsync`1+Predicate+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Latest`1", "Latest`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Latest`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.LongCount`1+All", "All'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.LongCount`1+All+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.LongCount`1+Predicate", "Predicate'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.LongCount`1+Predicate+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Materialize`1", "Materialize`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Materialize`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Max`1", "Max`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Max`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Max`1+NonNull", "NonNull'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Max`1+Null", "Null'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MaxDouble", "MaxDouble");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MaxDouble+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MaxSingle", "MaxSingle");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MaxSingle+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MaxDecimal", "MaxDecimal");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MaxDecimal+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MaxInt32", "MaxInt32");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MaxInt32+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MaxInt64", "MaxInt64");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MaxInt64+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MaxDoubleNullable", "MaxDoubleNullable");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MaxDoubleNullable+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MaxSingleNullable", "MaxSingleNullable");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MaxSingleNullable+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MaxDecimalNullable", "MaxDecimalNullable");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MaxDecimalNullable+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MaxInt32Nullable", "MaxInt32Nullable");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MaxInt32Nullable+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MaxInt64Nullable", "MaxInt64Nullable");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MaxInt64Nullable+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MaxBy`2", "MaxBy`2'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MaxBy`2+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Merge`1+ObservablesMaxConcurrency", "ObservablesMaxConcurrency'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Merge`1+ObservablesMaxConcurrency+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Merge`1+ObservablesMaxConcurrency+_+InnerObserver", "InnerObserver'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Merge`1+Observables", "Observables'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Merge`1+Observables+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Merge`1+Observables+_+InnerObserver", "InnerObserver'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Merge`1+Tasks", "Tasks'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Merge`1+Tasks+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Min`1", "Min`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Min`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Min`1+NonNull", "NonNull'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Min`1+Null", "Null'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MinDouble", "MinDouble");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MinDouble+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MinSingle", "MinSingle");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MinSingle+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MinDecimal", "MinDecimal");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MinDecimal+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MinInt32", "MinInt32");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MinInt32+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MinInt64", "MinInt64");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MinInt64+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MinDoubleNullable", "MinDoubleNullable");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MinDoubleNullable+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MinSingleNullable", "MinSingleNullable");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MinSingleNullable+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MinDecimalNullable", "MinDecimalNullable");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MinDecimalNullable+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MinInt32Nullable", "MinInt32Nullable");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MinInt32Nullable+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MinInt64Nullable", "MinInt64Nullable");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MinInt64Nullable+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MinBy`2", "MinBy`2'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MinBy`2+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MostRecent`1", "MostRecent`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.MostRecent`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Multicast`3", "Multicast`3'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Multicast`3+_", "_'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Never`1", "Never`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Next`1", "Next`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Next`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.OfType`2", "OfType`2'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.OfType`2+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.OnErrorResumeNext`1", "OnErrorResumeNext`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.OnErrorResumeNext`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.PushToPullAdapter`2", "PushToPullAdapter`2'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.PushToPullSink`2", "PushToPullSink`2'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.RangeRecursive", "RangeRecursive");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.RangeRecursive+RangeSink", "RangeSink");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.RangeLongRunning", "RangeLongRunning");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.RangeLongRunning+RangeSink", "RangeSink");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.RefCount`1+Eager", "Eager'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.RefCount`1+Eager+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.RefCount`1+Eager+RefConnection", "RefConnection'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.RefCount`1+Lazy", "Lazy'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.RefCount`1+Lazy+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Repeat`1+ForeverRecursive", "ForeverRecursive'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Repeat`1+ForeverRecursive+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Repeat`1+ForeverLongRunning", "ForeverLongRunning'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Repeat`1+ForeverLongRunning+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Repeat`1+CountRecursive", "CountRecursive'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Repeat`1+CountRecursive+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Repeat`1+CountLongRunning", "CountLongRunning'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Repeat`1+CountLongRunning+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.RepeatWhen`2", "RepeatWhen`2'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.RepeatWhen`2+MainObserver", "MainObserver'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.RepeatWhen`2+MainObserver+HandlerObserver", "HandlerObserver'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.RetryWhen`2", "RetryWhen`2'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.RetryWhen`2+MainObserver", "MainObserver'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.RetryWhen`2+MainObserver+HandlerObserver", "HandlerObserver'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.RedoSerializedObserver`1", "RedoSerializedObserver`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Return`1", "Return`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Return`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.ReturnImmediate`1", "ReturnImmediate`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Sample`2", "Sample`2'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Sample`2+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Sample`2+_+SampleObserver", "SampleObserver'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Sample`1", "Sample`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Sample`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Scan`2", "Scan`2'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Scan`2+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Scan`1", "Scan`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Scan`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Select`2+Selector", "Selector'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Select`2+Selector+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Select`2+SelectorIndexed", "SelectorIndexed'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Select`2+SelectorIndexed+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`3+ObservableSelector", "ObservableSelector'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`3+ObservableSelector+_", "_'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`3+ObservableSelector+_+InnerObserver", "InnerObserver'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`3+ObservableSelectorIndexed", "ObservableSelectorIndexed'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`3+ObservableSelectorIndexed+_", "_'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`3+ObservableSelectorIndexed+_+InnerObserver", "InnerObserver'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`3+EnumerableSelector", "EnumerableSelector'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`3+EnumerableSelector+_", "_'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`3+EnumerableSelectorIndexed", "EnumerableSelectorIndexed'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`3+EnumerableSelectorIndexed+_", "_'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`3+TaskSelector", "TaskSelector'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`3+TaskSelector+_", "_'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`3+TaskSelectorIndexed", "TaskSelectorIndexed'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`3+TaskSelectorIndexed+_", "_'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`2+ObservableSelector", "ObservableSelector'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`2+ObservableSelector+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`2+ObservableSelector+_+InnerObserver", "InnerObserver'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`2+ObservableSelectors", "ObservableSelectors'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`2+ObservableSelectors+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`2+ObservableSelectorIndexed", "ObservableSelectorIndexed'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`2+ObservableSelectorIndexed+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`2+ObservableSelectorIndexed+_+InnerObserver", "InnerObserver'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`2+ObservableSelectorsIndexed", "ObservableSelectorsIndexed'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`2+ObservableSelectorsIndexed+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`2+EnumerableSelector", "EnumerableSelector'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`2+EnumerableSelector+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`2+EnumerableSelectorIndexed", "EnumerableSelectorIndexed'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`2+EnumerableSelectorIndexed+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`2+TaskSelector", "TaskSelector'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`2+TaskSelector+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`2+TaskSelectorIndexed", "TaskSelectorIndexed'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SelectMany`2+TaskSelectorIndexed+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SequenceEqual`1+Observable", "Observable'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SequenceEqual`1+Observable+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SequenceEqual`1+Observable+_+FirstObserver", "FirstObserver'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SequenceEqual`1+Observable+_+SecondObserver", "SecondObserver'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SequenceEqual`1+Enumerable", "Enumerable'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SequenceEqual`1+Enumerable+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SingleAsync`1+Sequence", "Sequence'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SingleAsync`1+Sequence+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SingleAsync`1+Predicate", "Predicate'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SingleAsync`1+Predicate+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SingleOrDefaultAsync`1+Sequence", "Sequence'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SingleOrDefaultAsync`1+Sequence+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SingleOrDefaultAsync`1+Predicate", "Predicate'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SingleOrDefaultAsync`1+Predicate+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Skip`1+Count", "Count'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Skip`1+Count+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Skip`1+Time", "Time'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Skip`1+Time+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SkipLast`1+Count", "Count'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SkipLast`1+Count+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SkipLast`1+Time", "Time'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SkipLast`1+Time+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SkipUntil`2", "SkipUntil`2'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SkipUntil`2+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SkipUntil`2+_+OtherObserver", "OtherObserver'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SkipUntil`1", "SkipUntil`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SkipUntil`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SkipWhile`1+Predicate", "Predicate'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SkipWhile`1+Predicate+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SkipWhile`1+PredicateIndexed", "PredicateIndexed'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SkipWhile`1+PredicateIndexed+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SumDouble", "SumDouble");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SumDouble+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SumSingle", "SumSingle");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SumSingle+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SumDecimal", "SumDecimal");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SumDecimal+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SumInt32", "SumInt32");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SumInt32+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SumInt64", "SumInt64");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SumInt64+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SumDoubleNullable", "SumDoubleNullable");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SumDoubleNullable+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SumSingleNullable", "SumSingleNullable");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SumSingleNullable+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SumDecimalNullable", "SumDecimalNullable");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SumDecimalNullable+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SumInt32Nullable", "SumInt32Nullable");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SumInt32Nullable+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SumInt64Nullable", "SumInt64Nullable");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.SumInt64Nullable+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Switch`1", "Switch`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Switch`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Switch`1+_+InnerObserver", "InnerObserver'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Synchronize`1", "Synchronize`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Synchronize`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Take`1+Count", "Count'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Take`1+Count+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Take`1+Time", "Time'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Take`1+Time+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.TakeLast`1+Count", "Count'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.TakeLast`1+Count+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.TakeLast`1+Time", "Time'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.TakeLast`1+Time+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.TakeLastBuffer`1+Count", "Count'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.TakeLastBuffer`1+Count+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.TakeLastBuffer`1+Time", "Time'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.TakeLastBuffer`1+Time+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.TakeUntil`2", "TakeUntil`2'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.TakeUntil`2+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.TakeUntil`2+_+OtherObserver", "OtherObserver'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.TakeUntil`1", "TakeUntil`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.TakeUntil`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.TakeUntilPredicate`1", "TakeUntilPredicate`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.TakeUntilPredicate`1+TakeUntilPredicateObserver", "TakeUntilPredicateObserver'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.TakeWhile`1+Predicate", "Predicate'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.TakeWhile`1+Predicate+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.TakeWhile`1+PredicateIndexed", "PredicateIndexed'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.TakeWhile`1+PredicateIndexed+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Throttle`1", "Throttle`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Throttle`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Throttle`2", "Throttle`2'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Throttle`2+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Throttle`2+_+ThrottleObserver", "ThrottleObserver'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Throw`1", "Throw`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Throw`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.ThrowImmediate`1", "ThrowImmediate`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.TimeInterval`1", "TimeInterval`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.TimeInterval`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Timeout`1+Relative", "Relative'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Timeout`1+Relative+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Timeout`1+Absolute", "Absolute'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Timeout`1+Absolute+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Timeout`2", "Timeout`2'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Timeout`2+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Timeout`2+_+TimeoutObserver", "TimeoutObserver'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Timer+Single", "Single");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Timer+Single+Relative", "Relative");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Timer+Single+Absolute", "Absolute");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Timer+Single+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Timer+Periodic", "Periodic");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Timer+Periodic+Relative", "Relative");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Timer+Periodic+Absolute", "Absolute");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Timer+Periodic+_", "_");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Timestamp`1", "Timestamp`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Timestamp`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.ToArray`1", "ToArray`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.ToArray`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.ToDictionary`3", "ToDictionary`3'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.ToDictionary`3+_", "_'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.ToList`1", "ToList`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.ToList`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.ToLookup`3", "ToLookup`3'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.ToLookup`3+_", "_'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.ToObservableRecursive`1", "ToObservableRecursive`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.ToObservableRecursive`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.ToObservableLongRunning`1", "ToObservableLongRunning`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.ToObservableLongRunning`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Using`2", "Using`2'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Using`2+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Where`1+Predicate", "Predicate'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Where`1+Predicate+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Where`1+PredicateIndexed", "PredicateIndexed'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Where`1+PredicateIndexed+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.While`1", "While`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.While`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Window`1+Count", "Count'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Window`1+Count+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Window`1+TimeSliding", "TimeSliding'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Window`1+TimeSliding+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Window`1+TimeHopping", "TimeHopping'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Window`1+TimeHopping+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Window`1+Ferry", "Ferry'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Window`1+Ferry+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Window`2+Selector", "Selector'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Window`2+Selector+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Window`2+Selector+_+WindowClosingObserver", "WindowClosingObserver'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Window`2+Boundaries", "Boundaries'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Window`2+Boundaries+_", "_'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Window`2+Boundaries+_+WindowClosingObserver", "WindowClosingObserver'2");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.WindowObservable`1", "WindowObservable`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.WithLatestFrom`3", "WithLatestFrom`3'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.WithLatestFrom`3+_", "_'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.WithLatestFrom`3+_+FirstObserver", "FirstObserver'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.WithLatestFrom`3+_+SecondObserver", "SecondObserver'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`3+Observable", "Observable'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`3+Observable+_", "_'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`3+Observable+_+FirstObserver", "FirstObserver'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`3+Observable+_+SecondObserver", "SecondObserver'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`3+Enumerable", "Enumerable'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`3+Enumerable+_", "_'3");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`1", "Zip`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`1+_", "_'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`1+_+SourceObserver", "SourceObserver'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`4", "Zip`4'4");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`4+_", "_'4");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`5", "Zip`5'5");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`5+_", "_'5");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`6", "Zip`6'6");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`6+_", "_'6");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`7", "Zip`7'7");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`7+_", "_'7");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`8", "Zip`8'8");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`8+_", "_'8");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`9", "Zip`9'9");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`9+_", "_'9");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`10", "Zip`10'10");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`10+_", "_'10");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`11", "Zip`11'11");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`11+_", "_'11");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`12", "Zip`12'12");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`12+_", "_'12");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`13", "Zip`13'13");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`13+_", "_'13");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`14", "Zip`14'14");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`14+_", "_'14");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`15", "Zip`15'15");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`15+_", "_'15");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`16", "Zip`16'16");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`16+_", "_'16");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`17", "Zip`17'17");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.Zip`17+_", "_'17");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.IZip", "IZip");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.ZipSink`1", "ZipSink`1'1");
            feature.AddKnownType("System.Reactive.Linq.ObservableImpl.ZipObserver`1", "ZipObserver`1'1");
            feature.AddKnownType("System.Reactive.PlatformServices.CurrentPlatformEnlightenmentProvider", "CurrentPlatformEnlightenmentProvider");
            feature.AddKnownType("System.Reactive.PlatformServices.IExceptionServices", "IExceptionServices");
            feature.AddKnownType("System.Reactive.PlatformServices.DefaultExceptionServices", "DefaultExceptionServices");
            feature.AddKnownType("System.Reactive.PlatformServices.ExceptionServicesImpl", "ExceptionServicesImpl");
            feature.AddKnownType("System.Reactive.PlatformServices.IHostLifecycleNotifications", "IHostLifecycleNotifications");
            feature.AddKnownType("System.Reactive.PlatformServices.HostSuspendingEventArgs", "HostSuspendingEventArgs");
            feature.AddKnownType("System.Reactive.PlatformServices.HostResumingEventArgs", "HostResumingEventArgs");
            feature.AddKnownType("System.Reactive.PlatformServices.IPlatformEnlightenmentProvider", "IPlatformEnlightenmentProvider");
            feature.AddKnownType("System.Reactive.PlatformServices.ISystemClock", "ISystemClock");
            feature.AddKnownType("System.Reactive.PlatformServices.INotifySystemClockChanged", "INotifySystemClockChanged");
            feature.AddKnownType("System.Reactive.PlatformServices.SystemClockChangedEventArgs", "SystemClockChangedEventArgs");
            feature.AddKnownType("System.Reactive.PlatformServices.DefaultSystemClock", "DefaultSystemClock");
            feature.AddKnownType("System.Reactive.PlatformServices.DefaultSystemClockMonitor", "DefaultSystemClockMonitor");
            feature.AddKnownType("System.Reactive.PlatformServices.PeriodicTimerSystemClockMonitor", "PeriodicTimerSystemClockMonitor");
            feature.AddKnownType("System.Reactive.PlatformServices.NamespaceDoc", "NamespaceDoc");
            feature.AddKnownType("System.Reactive.Subjects.NamespaceDoc", "NamespaceDoc");
            feature.AddKnownType("System.Reactive.Subjects.AsyncSubject`1", "AsyncSubject`1'1");
            feature.AddKnownType("System.Reactive.Subjects.AsyncSubject`1+AsyncSubjectDisposable", "AsyncSubjectDisposable'1");
            feature.AddKnownType("System.Reactive.Subjects.AsyncSubject`1+AwaitObserver", "AwaitObserver'1");
            feature.AddKnownType("System.Reactive.Subjects.AsyncSubject`1+BlockingObserver", "BlockingObserver'1");
            feature.AddKnownType("System.Reactive.Subjects.BehaviorSubject`1", "BehaviorSubject`1'1");
            feature.AddKnownType("System.Reactive.Subjects.BehaviorSubject`1+Subscription", "Subscription'1");
            feature.AddKnownType("System.Reactive.Subjects.ConnectableObservable`2", "ConnectableObservable`2'2");
            feature.AddKnownType("System.Reactive.Subjects.ConnectableObservable`2+Connection", "Connection'2");
            feature.AddKnownType("System.Reactive.Subjects.IConnectableObservable`1", "IConnectableObservable`1'1");
            feature.AddKnownType("System.Reactive.Subjects.ISubject`1", "ISubject`1'1");
            feature.AddKnownType("System.Reactive.Subjects.ISubject`2", "ISubject`2'2");
            feature.AddKnownType("System.Reactive.Subjects.ReplaySubject`1", "ReplaySubject`1'1");
            feature.AddKnownType("System.Reactive.Subjects.ReplaySubject`1+ReplayBase", "ReplayBase'1");
            feature.AddKnownType("System.Reactive.Subjects.ReplaySubject`1+ReplayBase+Subscription", "Subscription'1");
            feature.AddKnownType("System.Reactive.Subjects.ReplaySubject`1+ReplayByTime", "ReplayByTime'1");
            feature.AddKnownType("System.Reactive.Subjects.ReplaySubject`1+ReplayOne", "ReplayOne'1");
            feature.AddKnownType("System.Reactive.Subjects.ReplaySubject`1+ReplayMany", "ReplayMany'1");
            feature.AddKnownType("System.Reactive.Subjects.ReplaySubject`1+ReplayAll", "ReplayAll'1");
            feature.AddKnownType("System.Reactive.Subjects.ReplaySubject`1+ReplayBufferBase", "ReplayBufferBase'1");
            feature.AddKnownType("System.Reactive.Subjects.ReplaySubject`1+ReplayManyBase", "ReplayManyBase'1");
            feature.AddKnownType("System.Reactive.Subjects.FastImmediateObserver`1", "FastImmediateObserver`1'1");
            feature.AddKnownType("System.Reactive.Subjects.Subject`1", "Subject`1'1");
            feature.AddKnownType("System.Reactive.Subjects.Subject`1+SubjectDisposable", "SubjectDisposable'1");
            feature.AddKnownType("System.Reactive.Subjects.Subject+AnonymousSubject`2", "AnonymousSubject`2'2");
            feature.AddKnownType("System.Reactive.Subjects.Subject+AnonymousSubject`1", "AnonymousSubject`1'1");
            feature.AddKnownType("System.Reactive.Subjects.SubjectBase`1", "SubjectBase`1'1");
            feature.AddKnownType("System.Reactive.Threading.Tasks.NamespaceDoc", "NamespaceDoc");
            feature.AddKnownType("System.Reactive.Threading.Tasks.TaskObservableExtensions+SlowTaskObservable", "SlowTaskObservable");
            feature.AddKnownType("System.Reactive.Threading.Tasks.TaskObservableExtensions+SlowTaskObservable`1", "SlowTaskObservable`1'1");
            feature.AddKnownType("System.Reactive.Threading.Tasks.TaskObservableExtensions+ToTaskObserver`1", "ToTaskObserver`1'1");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.TaskObservableMethodBuilder`1", "TaskObservableMethodBuilder`1'1");
            feature.AddKnownType("System.Runtime.CompilerServices.TaskObservableMethodBuilder`1+TaskObservable", "TaskObservable'1");
            feature.AddKnownType("VoloAbpAuditLoggingDomain_ProcessedByFody,Volo.Abp.AuditLogging.Domain", "<global namespace>.VoloAbpAuditLoggingDomain_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.AuditLogging.Domain", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.AuditLogging.AbpAuditLoggingDomainModule,Volo.Abp.AuditLogging.Domain", "Volo.Abp.AuditLogging.AbpAuditLoggingDomainModule");
            feature.AddKnownType("Volo.Abp.AuditLogging.AuditingStore,Volo.Abp.AuditLogging.Domain", "Volo.Abp.AuditLogging.AuditingStore");
            feature.AddKnownType("Volo.Abp.AuditLogging.AuditLog,Volo.Abp.AuditLogging.Domain", "Volo.Abp.AuditLogging.AuditLog");
            feature.AddKnownType("Volo.Abp.AuditLogging.AuditLogAction,Volo.Abp.AuditLogging.Domain", "Volo.Abp.AuditLogging.AuditLogAction");
            feature.AddKnownType("Volo.Abp.AuditLogging.AuditLogInfoToAuditLogConverter,Volo.Abp.AuditLogging.Domain", "Volo.Abp.AuditLogging.AuditLogInfoToAuditLogConverter");
            feature.AddKnownType("Volo.Abp.AuditLogging.EntityChange,Volo.Abp.AuditLogging.Domain", "Volo.Abp.AuditLogging.EntityChange");
            feature.AddKnownType("Volo.Abp.AuditLogging.EntityChangeWithUsername,Volo.Abp.AuditLogging.Domain", "Volo.Abp.AuditLogging.EntityChangeWithUsername");
            feature.AddKnownType("Volo.Abp.AuditLogging.EntityPropertyChange,Volo.Abp.AuditLogging.Domain", "Volo.Abp.AuditLogging.EntityPropertyChange");
            feature.AddKnownType("Volo.Abp.AuditLogging.IAuditLogInfoToAuditLogConverter,Volo.Abp.AuditLogging.Domain", "Volo.Abp.AuditLogging.IAuditLogInfoToAuditLogConverter");
            feature.AddKnownType("Volo.Abp.AuditLogging.IAuditLogRepository,Volo.Abp.AuditLogging.Domain", "Volo.Abp.AuditLogging.IAuditLogRepository");
            feature.AddKnownType("VoloAbpAutofac_ProcessedByFody,Volo.Abp.Autofac", "<global namespace>.VoloAbpAutofac_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Autofac", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Autofac.AbpAutofacModule,Volo.Abp.Autofac", "Volo.Abp.Autofac.AbpAutofacModule");
            feature.AddKnownType("Volo.Abp.Autofac.AbpAutofacServiceProviderFactory,Volo.Abp.Autofac", "Volo.Abp.Autofac.AbpAutofacServiceProviderFactory");
            feature.AddKnownType("Volo.Abp.Autofac.AbpPropertySelector,Volo.Abp.Autofac", "Volo.Abp.Autofac.AbpPropertySelector");
            feature.AddKnownType("VoloAbpAutoMapper_ProcessedByFody,Volo.Abp.AutoMapper", "<global namespace>.VoloAbpAutoMapper_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.AutoMapper", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.AutoMapper.AbpAutoMapperConfigurationContext,Volo.Abp.AutoMapper", "Volo.Abp.AutoMapper.AbpAutoMapperConfigurationContext");
            feature.AddKnownType("Volo.Abp.AutoMapper.AbpAutoMapperConventionalRegistrar,Volo.Abp.AutoMapper", "Volo.Abp.AutoMapper.AbpAutoMapperConventionalRegistrar");
            feature.AddKnownType("Volo.Abp.AutoMapper.AbpAutoMapperModule,Volo.Abp.AutoMapper", "Volo.Abp.AutoMapper.AbpAutoMapperModule");
            feature.AddKnownType("Volo.Abp.AutoMapper.AbpAutoMapperOptions,Volo.Abp.AutoMapper", "Volo.Abp.AutoMapper.AbpAutoMapperOptions");
            feature.AddKnownType("Volo.Abp.AutoMapper.AutoMapperAutoObjectMappingProvider`1,Volo.Abp.AutoMapper", "Volo.Abp.AutoMapper.AutoMapperAutoObjectMappingProvider`1'1");
            feature.AddKnownType("Volo.Abp.AutoMapper.AutoMapperAutoObjectMappingProvider,Volo.Abp.AutoMapper", "Volo.Abp.AutoMapper.AutoMapperAutoObjectMappingProvider");
            feature.AddKnownType("Volo.Abp.AutoMapper.IAbpAutoMapperConfigurationContext,Volo.Abp.AutoMapper", "Volo.Abp.AutoMapper.IAbpAutoMapperConfigurationContext");
            feature.AddKnownType("Volo.Abp.AutoMapper.IMapperAccessor,Volo.Abp.AutoMapper", "Volo.Abp.AutoMapper.IMapperAccessor");
            feature.AddKnownType("Volo.Abp.AutoMapper.MapperAccessor,Volo.Abp.AutoMapper", "Volo.Abp.AutoMapper.MapperAccessor");
            feature.AddKnownType("VoloAbpBackgroundJobsAbstractions_ProcessedByFody,Volo.Abp.BackgroundJobs.Abstractions", "<global namespace>.VoloAbpBackgroundJobsAbstractions_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.BackgroundJobs.Abstractions", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.AbpBackgroundJobOptions,Volo.Abp.BackgroundJobs.Abstractions", "Volo.Abp.BackgroundJobs.AbpBackgroundJobOptions");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.AbpBackgroundJobsAbstractionsModule,Volo.Abp.BackgroundJobs.Abstractions", "Volo.Abp.BackgroundJobs.AbpBackgroundJobsAbstractionsModule");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.AsyncBackgroundJob`1,Volo.Abp.BackgroundJobs.Abstractions", "Volo.Abp.BackgroundJobs.AsyncBackgroundJob`1'1");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.BackgroundJob`1,Volo.Abp.BackgroundJobs.Abstractions", "Volo.Abp.BackgroundJobs.BackgroundJob`1'1");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.BackgroundJobConfiguration,Volo.Abp.BackgroundJobs.Abstractions", "Volo.Abp.BackgroundJobs.BackgroundJobConfiguration");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.BackgroundJobExecuter,Volo.Abp.BackgroundJobs.Abstractions", "Volo.Abp.BackgroundJobs.BackgroundJobExecuter");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.BackgroundJobExecutionException,Volo.Abp.BackgroundJobs.Abstractions", "Volo.Abp.BackgroundJobs.BackgroundJobExecutionException");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.BackgroundJobNameAttribute,Volo.Abp.BackgroundJobs.Abstractions", "Volo.Abp.BackgroundJobs.BackgroundJobNameAttribute");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.BackgroundJobPriority,Volo.Abp.BackgroundJobs.Abstractions", "Volo.Abp.BackgroundJobs.BackgroundJobPriority");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.IAsyncBackgroundJob`1,Volo.Abp.BackgroundJobs.Abstractions", "Volo.Abp.BackgroundJobs.IAsyncBackgroundJob`1'1");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.IBackgroundJob`1,Volo.Abp.BackgroundJobs.Abstractions", "Volo.Abp.BackgroundJobs.IBackgroundJob`1'1");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.IBackgroundJobExecuter,Volo.Abp.BackgroundJobs.Abstractions", "Volo.Abp.BackgroundJobs.IBackgroundJobExecuter");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.IBackgroundJobManager,Volo.Abp.BackgroundJobs.Abstractions", "Volo.Abp.BackgroundJobs.IBackgroundJobManager");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.IBackgroundJobNameProvider,Volo.Abp.BackgroundJobs.Abstractions", "Volo.Abp.BackgroundJobs.IBackgroundJobNameProvider");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.JobExecutionContext,Volo.Abp.BackgroundJobs.Abstractions", "Volo.Abp.BackgroundJobs.JobExecutionContext");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.JobExecutionResult,Volo.Abp.BackgroundJobs.Abstractions", "Volo.Abp.BackgroundJobs.JobExecutionResult");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.NullBackgroundJobManager,Volo.Abp.BackgroundJobs.Abstractions", "Volo.Abp.BackgroundJobs.NullBackgroundJobManager");
            feature.AddKnownType("VoloAbpBackgroundJobs_ProcessedByFody,Volo.Abp.BackgroundJobs", "<global namespace>.VoloAbpBackgroundJobs_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.BackgroundJobs", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.AbpBackgroundJobsModule,Volo.Abp.BackgroundJobs", "Volo.Abp.BackgroundJobs.AbpBackgroundJobsModule");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.AbpBackgroundJobWorkerOptions,Volo.Abp.BackgroundJobs", "Volo.Abp.BackgroundJobs.AbpBackgroundJobWorkerOptions");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.BackgroundJobInfo,Volo.Abp.BackgroundJobs", "Volo.Abp.BackgroundJobs.BackgroundJobInfo");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.BackgroundJobWorker,Volo.Abp.BackgroundJobs", "Volo.Abp.BackgroundJobs.BackgroundJobWorker");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.DefaultBackgroundJobManager,Volo.Abp.BackgroundJobs", "Volo.Abp.BackgroundJobs.DefaultBackgroundJobManager");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.IBackgroundJobSerializer,Volo.Abp.BackgroundJobs", "Volo.Abp.BackgroundJobs.IBackgroundJobSerializer");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.IBackgroundJobStore,Volo.Abp.BackgroundJobs", "Volo.Abp.BackgroundJobs.IBackgroundJobStore");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.IBackgroundJobWorker,Volo.Abp.BackgroundJobs", "Volo.Abp.BackgroundJobs.IBackgroundJobWorker");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.InMemoryBackgroundJobStore,Volo.Abp.BackgroundJobs", "Volo.Abp.BackgroundJobs.InMemoryBackgroundJobStore");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.JsonBackgroundJobSerializer,Volo.Abp.BackgroundJobs", "Volo.Abp.BackgroundJobs.JsonBackgroundJobSerializer");
            feature.AddKnownType("VoloAbpBackgroundJobsDomain_ProcessedByFody,Volo.Abp.BackgroundJobs.Domain", "<global namespace>.VoloAbpBackgroundJobsDomain_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.BackgroundJobs.Domain", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.AbpBackgroundJobsDomainModule,Volo.Abp.BackgroundJobs.Domain", "Volo.Abp.BackgroundJobs.AbpBackgroundJobsDomainModule");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.BackgroundJobRecord,Volo.Abp.BackgroundJobs.Domain", "Volo.Abp.BackgroundJobs.BackgroundJobRecord");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.BackgroundJobsDomainAutoMapperProfile,Volo.Abp.BackgroundJobs.Domain", "Volo.Abp.BackgroundJobs.BackgroundJobsDomainAutoMapperProfile");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.BackgroundJobStore,Volo.Abp.BackgroundJobs.Domain", "Volo.Abp.BackgroundJobs.BackgroundJobStore");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.IBackgroundJobRepository,Volo.Abp.BackgroundJobs.Domain", "Volo.Abp.BackgroundJobs.IBackgroundJobRepository");
            feature.AddKnownType("VoloAbpCastleCore_ProcessedByFody,Volo.Abp.Castle.Core", "<global namespace>.VoloAbpCastleCore_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Castle.Core", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Castle.AbpCastleCoreModule,Volo.Abp.Castle.Core", "Volo.Abp.Castle.AbpCastleCoreModule");
            feature.AddKnownType("Volo.Abp.Castle.DynamicProxy.AbpAsyncDeterminationInterceptor`1,Volo.Abp.Castle.Core", "Volo.Abp.Castle.DynamicProxy.AbpAsyncDeterminationInterceptor`1'1");
            feature.AddKnownType("Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapter,Volo.Abp.Castle.Core", "Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapter");
            feature.AddKnownType("Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterBase,Volo.Abp.Castle.Core", "Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterBase");
            feature.AddKnownType("Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1,Volo.Abp.Castle.Core", "Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1'1");
            feature.AddKnownType("Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1,Volo.Abp.Castle.Core", "Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1'1");
            feature.AddKnownType("VoloAbpEmailing_ProcessedByFody,Volo.Abp.Emailing", "<global namespace>.VoloAbpEmailing_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Emailing", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Emailing.AbpEmailingModule,Volo.Abp.Emailing", "Volo.Abp.Emailing.AbpEmailingModule");
            feature.AddKnownType("Volo.Abp.Emailing.BackgroundEmailSendingJob,Volo.Abp.Emailing", "Volo.Abp.Emailing.BackgroundEmailSendingJob");
            feature.AddKnownType("Volo.Abp.Emailing.BackgroundEmailSendingJobArgs,Volo.Abp.Emailing", "Volo.Abp.Emailing.BackgroundEmailSendingJobArgs");
            feature.AddKnownType("Volo.Abp.Emailing.EmailSenderBase,Volo.Abp.Emailing", "Volo.Abp.Emailing.EmailSenderBase");
            feature.AddKnownType("Volo.Abp.Emailing.EmailSenderConfiguration,Volo.Abp.Emailing", "Volo.Abp.Emailing.EmailSenderConfiguration");
            feature.AddKnownType("Volo.Abp.Emailing.EmailSettingProvider,Volo.Abp.Emailing", "Volo.Abp.Emailing.EmailSettingProvider");
            feature.AddKnownType("Volo.Abp.Emailing.IEmailSender,Volo.Abp.Emailing", "Volo.Abp.Emailing.IEmailSender");
            feature.AddKnownType("Volo.Abp.Emailing.IEmailSenderConfiguration,Volo.Abp.Emailing", "Volo.Abp.Emailing.IEmailSenderConfiguration");
            feature.AddKnownType("Volo.Abp.Emailing.NullEmailSender,Volo.Abp.Emailing", "Volo.Abp.Emailing.NullEmailSender");
            feature.AddKnownType("Volo.Abp.Emailing.Localization.EmailingResource,Volo.Abp.Emailing", "Volo.Abp.Emailing.Localization.EmailingResource");
            feature.AddKnownType("Volo.Abp.Emailing.Smtp.ISmtpEmailSender,Volo.Abp.Emailing", "Volo.Abp.Emailing.Smtp.ISmtpEmailSender");
            feature.AddKnownType("Volo.Abp.Emailing.Smtp.ISmtpEmailSenderConfiguration,Volo.Abp.Emailing", "Volo.Abp.Emailing.Smtp.ISmtpEmailSenderConfiguration");
            feature.AddKnownType("Volo.Abp.Emailing.Smtp.SmtpEmailSender,Volo.Abp.Emailing", "Volo.Abp.Emailing.Smtp.SmtpEmailSender");
            feature.AddKnownType("Volo.Abp.Emailing.Smtp.SmtpEmailSenderConfiguration,Volo.Abp.Emailing", "Volo.Abp.Emailing.Smtp.SmtpEmailSenderConfiguration");
            feature.AddKnownType("Volo.Abp.Emailing.Templates.StandardEmailTemplateDefinitionProvider,Volo.Abp.Emailing", "Volo.Abp.Emailing.Templates.StandardEmailTemplateDefinitionProvider");
            feature.AddKnownType("VoloAbpFeatureManagementDomain_ProcessedByFody,Volo.Abp.FeatureManagement.Domain", "<global namespace>.VoloAbpFeatureManagementDomain_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.FeatureManagement.Domain", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.FeatureManagement.AbpFeatureManagementDomainModule,Volo.Abp.FeatureManagement.Domain", "Volo.Abp.FeatureManagement.AbpFeatureManagementDomainModule");
            feature.AddKnownType("Volo.Abp.FeatureManagement.DefaultValueFeatureManagementProvider,Volo.Abp.FeatureManagement.Domain", "Volo.Abp.FeatureManagement.DefaultValueFeatureManagementProvider");
            feature.AddKnownType("Volo.Abp.FeatureManagement.DynamicFeatureDefinitionStore,Volo.Abp.FeatureManagement.Domain", "Volo.Abp.FeatureManagement.DynamicFeatureDefinitionStore");
            feature.AddKnownType("Volo.Abp.FeatureManagement.DynamicFeatureDefinitionStoreInMemoryCache,Volo.Abp.FeatureManagement.Domain", "Volo.Abp.FeatureManagement.DynamicFeatureDefinitionStoreInMemoryCache");
            feature.AddKnownType("Volo.Abp.FeatureManagement.EditionFeatureManagementProvider,Volo.Abp.FeatureManagement.Domain", "Volo.Abp.FeatureManagement.EditionFeatureManagementProvider");
            feature.AddKnownType("Volo.Abp.FeatureManagement.FeatureDefinitionRecord,Volo.Abp.FeatureManagement.Domain", "Volo.Abp.FeatureManagement.FeatureDefinitionRecord");
            feature.AddKnownType("Volo.Abp.FeatureManagement.FeatureDefinitionSerializer,Volo.Abp.FeatureManagement.Domain", "Volo.Abp.FeatureManagement.FeatureDefinitionSerializer");
            feature.AddKnownType("Volo.Abp.FeatureManagement.FeatureGroupDefinitionRecord,Volo.Abp.FeatureManagement.Domain", "Volo.Abp.FeatureManagement.FeatureGroupDefinitionRecord");
            feature.AddKnownType("Volo.Abp.FeatureManagement.FeatureManagementOptions,Volo.Abp.FeatureManagement.Domain", "Volo.Abp.FeatureManagement.FeatureManagementOptions");
            feature.AddKnownType("Volo.Abp.FeatureManagement.FeatureManagementProvider,Volo.Abp.FeatureManagement.Domain", "Volo.Abp.FeatureManagement.FeatureManagementProvider");
            feature.AddKnownType("Volo.Abp.FeatureManagement.FeatureManagementStore,Volo.Abp.FeatureManagement.Domain", "Volo.Abp.FeatureManagement.FeatureManagementStore");
            feature.AddKnownType("Volo.Abp.FeatureManagement.FeatureManager,Volo.Abp.FeatureManagement.Domain", "Volo.Abp.FeatureManagement.FeatureManager");
            feature.AddKnownType("Volo.Abp.FeatureManagement.FeatureNameValue,Volo.Abp.FeatureManagement.Domain", "Volo.Abp.FeatureManagement.FeatureNameValue");
            feature.AddKnownType("Volo.Abp.FeatureManagement.FeatureNameValueWithGrantedProvider,Volo.Abp.FeatureManagement.Domain", "Volo.Abp.FeatureManagement.FeatureNameValueWithGrantedProvider");
            feature.AddKnownType("Volo.Abp.FeatureManagement.FeatureStore,Volo.Abp.FeatureManagement.Domain", "Volo.Abp.FeatureManagement.FeatureStore");
            feature.AddKnownType("Volo.Abp.FeatureManagement.FeatureValue,Volo.Abp.FeatureManagement.Domain", "Volo.Abp.FeatureManagement.FeatureValue");
            feature.AddKnownType("Volo.Abp.FeatureManagement.FeatureValueCacheItem,Volo.Abp.FeatureManagement.Domain", "Volo.Abp.FeatureManagement.FeatureValueCacheItem");
            feature.AddKnownType("Volo.Abp.FeatureManagement.FeatureValueCacheItemInvalidator,Volo.Abp.FeatureManagement.Domain", "Volo.Abp.FeatureManagement.FeatureValueCacheItemInvalidator");
            feature.AddKnownType("Volo.Abp.FeatureManagement.FeatureValueProviderInfo,Volo.Abp.FeatureManagement.Domain", "Volo.Abp.FeatureManagement.FeatureValueProviderInfo");
            feature.AddKnownType("Volo.Abp.FeatureManagement.IDynamicFeatureDefinitionStoreInMemoryCache,Volo.Abp.FeatureManagement.Domain", "Volo.Abp.FeatureManagement.IDynamicFeatureDefinitionStoreInMemoryCache");
            feature.AddKnownType("Volo.Abp.FeatureManagement.IFeatureDefinitionRecordRepository,Volo.Abp.FeatureManagement.Domain", "Volo.Abp.FeatureManagement.IFeatureDefinitionRecordRepository");
            feature.AddKnownType("Volo.Abp.FeatureManagement.IFeatureDefinitionSerializer,Volo.Abp.FeatureManagement.Domain", "Volo.Abp.FeatureManagement.IFeatureDefinitionSerializer");
            feature.AddKnownType("Volo.Abp.FeatureManagement.IFeatureGroupDefinitionRecordRepository,Volo.Abp.FeatureManagement.Domain", "Volo.Abp.FeatureManagement.IFeatureGroupDefinitionRecordRepository");
            feature.AddKnownType("Volo.Abp.FeatureManagement.IFeatureManagementProvider,Volo.Abp.FeatureManagement.Domain", "Volo.Abp.FeatureManagement.IFeatureManagementProvider");
            feature.AddKnownType("Volo.Abp.FeatureManagement.IFeatureManagementStore,Volo.Abp.FeatureManagement.Domain", "Volo.Abp.FeatureManagement.IFeatureManagementStore");
            feature.AddKnownType("Volo.Abp.FeatureManagement.IFeatureManager,Volo.Abp.FeatureManagement.Domain", "Volo.Abp.FeatureManagement.IFeatureManager");
            feature.AddKnownType("Volo.Abp.FeatureManagement.IFeatureValueRepository,Volo.Abp.FeatureManagement.Domain", "Volo.Abp.FeatureManagement.IFeatureValueRepository");
            feature.AddKnownType("Volo.Abp.FeatureManagement.IStaticFeatureSaver,Volo.Abp.FeatureManagement.Domain", "Volo.Abp.FeatureManagement.IStaticFeatureSaver");
            feature.AddKnownType("Volo.Abp.FeatureManagement.StaticFeatureSaver,Volo.Abp.FeatureManagement.Domain", "Volo.Abp.FeatureManagement.StaticFeatureSaver");
            feature.AddKnownType("Volo.Abp.FeatureManagement.StringValueTypeSerializer,Volo.Abp.FeatureManagement.Domain", "Volo.Abp.FeatureManagement.StringValueTypeSerializer");
            feature.AddKnownType("Volo.Abp.FeatureManagement.TenantFeatureManagementProvider,Volo.Abp.FeatureManagement.Domain", "Volo.Abp.FeatureManagement.TenantFeatureManagementProvider");
            feature.AddKnownType("VoloAbpIdentityDomain_ProcessedByFody,Volo.Abp.Identity.Domain", "<global namespace>.VoloAbpIdentityDomain_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Identity.Domain", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Identity.AbpIdentityDomainModule,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.AbpIdentityDomainModule");
            feature.AddKnownType("Volo.Abp.Identity.AbpIdentityOptions,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.AbpIdentityOptions");
            feature.AddKnownType("Volo.Abp.Identity.AbpIdentityOptionsManager,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.AbpIdentityOptionsManager");
            feature.AddKnownType("Volo.Abp.Identity.AbpIdentityResultException,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.AbpIdentityResultException");
            feature.AddKnownType("Volo.Abp.Identity.AbpIdentitySettingDefinitionProvider,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.AbpIdentitySettingDefinitionProvider");
            feature.AddKnownType("Volo.Abp.Identity.AbpUserClaimsPrincipalFactory,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.AbpUserClaimsPrincipalFactory");
            feature.AddKnownType("Volo.Abp.Identity.ExternalLoginProviderBase,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.ExternalLoginProviderBase");
            feature.AddKnownType("Volo.Abp.Identity.ExternalLoginProviderDictionary,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.ExternalLoginProviderDictionary");
            feature.AddKnownType("Volo.Abp.Identity.ExternalLoginProviderInfo,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.ExternalLoginProviderInfo");
            feature.AddKnownType("Volo.Abp.Identity.ExternalLoginProviderWithPasswordBase,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.ExternalLoginProviderWithPasswordBase");
            feature.AddKnownType("Volo.Abp.Identity.ExternalLoginUserInfo,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.ExternalLoginUserInfo");
            feature.AddKnownType("Volo.Abp.Identity.IdentityClaim,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IdentityClaim");
            feature.AddKnownType("Volo.Abp.Identity.IdentityClaimType,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IdentityClaimType");
            feature.AddKnownType("Volo.Abp.Identity.IdentityClaimTypeManager,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IdentityClaimTypeManager");
            feature.AddKnownType("Volo.Abp.Identity.IdentityDataSeedContributor,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IdentityDataSeedContributor");
            feature.AddKnownType("Volo.Abp.Identity.IdentityDataSeeder,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IdentityDataSeeder");
            feature.AddKnownType("Volo.Abp.Identity.IdentityDataSeedResult,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IdentityDataSeedResult");
            feature.AddKnownType("Volo.Abp.Identity.IdentityDomainMappingProfile,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IdentityDomainMappingProfile");
            feature.AddKnownType("Volo.Abp.Identity.IdentityLinkUser,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IdentityLinkUser");
            feature.AddKnownType("Volo.Abp.Identity.IdentityLinkUserInfo,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IdentityLinkUserInfo");
            feature.AddKnownType("Volo.Abp.Identity.IdentityLinkUserManager,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IdentityLinkUserManager");
            feature.AddKnownType("Volo.Abp.Identity.IdentityRole,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IdentityRole");
            feature.AddKnownType("Volo.Abp.Identity.IdentityRoleClaim,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IdentityRoleClaim");
            feature.AddKnownType("Volo.Abp.Identity.IdentityRoleManager,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IdentityRoleManager");
            feature.AddKnownType("Volo.Abp.Identity.IdentityRoleNameChangedEvent,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IdentityRoleNameChangedEvent");
            feature.AddKnownType("Volo.Abp.Identity.IdentityRoleStore,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IdentityRoleStore");
            feature.AddKnownType("Volo.Abp.Identity.IdentitySecurityLog,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IdentitySecurityLog");
            feature.AddKnownType("Volo.Abp.Identity.IdentitySecurityLogContext,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IdentitySecurityLogContext");
            feature.AddKnownType("Volo.Abp.Identity.IdentitySecurityLogManager,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IdentitySecurityLogManager");
            feature.AddKnownType("Volo.Abp.Identity.IdentitySecurityLogStore,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IdentitySecurityLogStore");
            feature.AddKnownType("Volo.Abp.Identity.IdentityUser,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IdentityUser");
            feature.AddKnownType("Volo.Abp.Identity.IdentityUserClaim,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IdentityUserClaim");
            feature.AddKnownType("Volo.Abp.Identity.IdentityUserLogin,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IdentityUserLogin");
            feature.AddKnownType("Volo.Abp.Identity.IdentityUserManager,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IdentityUserManager");
            feature.AddKnownType("Volo.Abp.Identity.IdentityUserOrganizationUnit,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IdentityUserOrganizationUnit");
            feature.AddKnownType("Volo.Abp.Identity.IdentityUserRepositoryExternalUserLookupServiceProvider,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IdentityUserRepositoryExternalUserLookupServiceProvider");
            feature.AddKnownType("Volo.Abp.Identity.IdentityUserRole,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IdentityUserRole");
            feature.AddKnownType("Volo.Abp.Identity.IdentityUserStore,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IdentityUserStore");
            feature.AddKnownType("Volo.Abp.Identity.IdentityUserToken,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IdentityUserToken");
            feature.AddKnownType("Volo.Abp.Identity.IExternalLoginProvider,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IExternalLoginProvider");
            feature.AddKnownType("Volo.Abp.Identity.IExternalLoginProviderWithPassword,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IExternalLoginProviderWithPassword");
            feature.AddKnownType("Volo.Abp.Identity.IIdentityClaimTypeRepository,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IIdentityClaimTypeRepository");
            feature.AddKnownType("Volo.Abp.Identity.IIdentityDataSeeder,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IIdentityDataSeeder");
            feature.AddKnownType("Volo.Abp.Identity.IIdentityLinkUserRepository,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IIdentityLinkUserRepository");
            feature.AddKnownType("Volo.Abp.Identity.IIdentityRoleRepository,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IIdentityRoleRepository");
            feature.AddKnownType("Volo.Abp.Identity.IIdentitySecurityLogRepository,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IIdentitySecurityLogRepository");
            feature.AddKnownType("Volo.Abp.Identity.IIdentityUserRepository,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IIdentityUserRepository");
            feature.AddKnownType("Volo.Abp.Identity.IOrganizationUnitRepository,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.IOrganizationUnitRepository");
            feature.AddKnownType("Volo.Abp.Identity.OrganizationUnit,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.OrganizationUnit");
            feature.AddKnownType("Volo.Abp.Identity.OrganizationUnitManager,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.OrganizationUnitManager");
            feature.AddKnownType("Volo.Abp.Identity.OrganizationUnitRole,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.OrganizationUnitRole");
            feature.AddKnownType("Volo.Abp.Identity.UserRoleFinder,Volo.Abp.Identity.Domain", "Volo.Abp.Identity.UserRoleFinder");
            feature.AddKnownType("VoloAbpOpenIddictDomain_ProcessedByFody,Volo.Abp.OpenIddict.Domain", "<global namespace>.VoloAbpOpenIddictDomain_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.OpenIddict.Domain", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.OpenIddict.AbpOpenIddictCacheBase`3,Volo.Abp.OpenIddict.Domain", "Volo.Abp.OpenIddict.AbpOpenIddictCacheBase`3'3");
            feature.AddKnownType("Volo.Abp.OpenIddict.AbpOpenIddictDomainModule,Volo.Abp.OpenIddict.Domain", "Volo.Abp.OpenIddict.AbpOpenIddictDomainModule");
            feature.AddKnownType("Volo.Abp.OpenIddict.AbpOpenIddictStoreBase`1,Volo.Abp.OpenIddict.Domain", "Volo.Abp.OpenIddict.AbpOpenIddictStoreBase`1'1");
            feature.AddKnownType("Volo.Abp.OpenIddict.Applications.AbpApplicationDescriptor,Volo.Abp.OpenIddict.Domain", "Volo.Abp.OpenIddict.Applications.AbpApplicationDescriptor");
            feature.AddKnownType("Volo.Abp.OpenIddict.Applications.AbpApplicationManager,Volo.Abp.OpenIddict.Domain", "Volo.Abp.OpenIddict.Applications.AbpApplicationManager");
            feature.AddKnownType("Volo.Abp.OpenIddict.Applications.AbpOpenIddictApplicationCache,Volo.Abp.OpenIddict.Domain", "Volo.Abp.OpenIddict.Applications.AbpOpenIddictApplicationCache");
            feature.AddKnownType("Volo.Abp.OpenIddict.Applications.AbpOpenIddictApplicationStore,Volo.Abp.OpenIddict.Domain", "Volo.Abp.OpenIddict.Applications.AbpOpenIddictApplicationStore");
            feature.AddKnownType("Volo.Abp.OpenIddict.Applications.IAbpApplicationManager,Volo.Abp.OpenIddict.Domain", "Volo.Abp.OpenIddict.Applications.IAbpApplicationManager");
            feature.AddKnownType("Volo.Abp.OpenIddict.Applications.IAbpOpenIdApplicationStore,Volo.Abp.OpenIddict.Domain", "Volo.Abp.OpenIddict.Applications.IAbpOpenIdApplicationStore");
            feature.AddKnownType("Volo.Abp.OpenIddict.Applications.IOpenIddictApplicationRepository,Volo.Abp.OpenIddict.Domain", "Volo.Abp.OpenIddict.Applications.IOpenIddictApplicationRepository");
            feature.AddKnownType("Volo.Abp.OpenIddict.Applications.OpenIddictApplication,Volo.Abp.OpenIddict.Domain", "Volo.Abp.OpenIddict.Applications.OpenIddictApplication");
            feature.AddKnownType("Volo.Abp.OpenIddict.Applications.OpenIddictApplicationModel,Volo.Abp.OpenIddict.Domain", "Volo.Abp.OpenIddict.Applications.OpenIddictApplicationModel");
            feature.AddKnownType("Volo.Abp.OpenIddict.Authorizations.AbpOpenIddictAuthorizationCache,Volo.Abp.OpenIddict.Domain", "Volo.Abp.OpenIddict.Authorizations.AbpOpenIddictAuthorizationCache");
            feature.AddKnownType("Volo.Abp.OpenIddict.Authorizations.AbpOpenIddictAuthorizationStore,Volo.Abp.OpenIddict.Domain", "Volo.Abp.OpenIddict.Authorizations.AbpOpenIddictAuthorizationStore");
            feature.AddKnownType("Volo.Abp.OpenIddict.Authorizations.IOpenIddictAuthorizationRepository,Volo.Abp.OpenIddict.Domain", "Volo.Abp.OpenIddict.Authorizations.IOpenIddictAuthorizationRepository");
            feature.AddKnownType("Volo.Abp.OpenIddict.Authorizations.OpenIddictAuthorization,Volo.Abp.OpenIddict.Domain", "Volo.Abp.OpenIddict.Authorizations.OpenIddictAuthorization");
            feature.AddKnownType("Volo.Abp.OpenIddict.Authorizations.OpenIddictAuthorizationModel,Volo.Abp.OpenIddict.Domain", "Volo.Abp.OpenIddict.Authorizations.OpenIddictAuthorizationModel");
            feature.AddKnownType("Volo.Abp.OpenIddict.Scopes.AbpOpenIddictScopeCache,Volo.Abp.OpenIddict.Domain", "Volo.Abp.OpenIddict.Scopes.AbpOpenIddictScopeCache");
            feature.AddKnownType("Volo.Abp.OpenIddict.Scopes.AbpOpenIddictScopeStore,Volo.Abp.OpenIddict.Domain", "Volo.Abp.OpenIddict.Scopes.AbpOpenIddictScopeStore");
            feature.AddKnownType("Volo.Abp.OpenIddict.Scopes.IOpenIddictScopeRepository,Volo.Abp.OpenIddict.Domain", "Volo.Abp.OpenIddict.Scopes.IOpenIddictScopeRepository");
            feature.AddKnownType("Volo.Abp.OpenIddict.Scopes.OpenIddictScope,Volo.Abp.OpenIddict.Domain", "Volo.Abp.OpenIddict.Scopes.OpenIddictScope");
            feature.AddKnownType("Volo.Abp.OpenIddict.Scopes.OpenIddictScopeModel,Volo.Abp.OpenIddict.Domain", "Volo.Abp.OpenIddict.Scopes.OpenIddictScopeModel");
            feature.AddKnownType("Volo.Abp.OpenIddict.Tokens.AbpOpenIddictTokenCache,Volo.Abp.OpenIddict.Domain", "Volo.Abp.OpenIddict.Tokens.AbpOpenIddictTokenCache");
            feature.AddKnownType("Volo.Abp.OpenIddict.Tokens.AbpOpenIddictTokenStore,Volo.Abp.OpenIddict.Domain", "Volo.Abp.OpenIddict.Tokens.AbpOpenIddictTokenStore");
            feature.AddKnownType("Volo.Abp.OpenIddict.Tokens.IOpenIddictTokenRepository,Volo.Abp.OpenIddict.Domain", "Volo.Abp.OpenIddict.Tokens.IOpenIddictTokenRepository");
            feature.AddKnownType("Volo.Abp.OpenIddict.Tokens.OpenIddictToken,Volo.Abp.OpenIddict.Domain", "Volo.Abp.OpenIddict.Tokens.OpenIddictToken");
            feature.AddKnownType("Volo.Abp.OpenIddict.Tokens.OpenIddictTokenModel,Volo.Abp.OpenIddict.Domain", "Volo.Abp.OpenIddict.Tokens.OpenIddictTokenModel");
            feature.AddKnownType("Volo.Abp.OpenIddict.Tokens.TokenCleanupBackgroundWorker,Volo.Abp.OpenIddict.Domain", "Volo.Abp.OpenIddict.Tokens.TokenCleanupBackgroundWorker");
            feature.AddKnownType("Volo.Abp.OpenIddict.Tokens.TokenCleanupOptions,Volo.Abp.OpenIddict.Domain", "Volo.Abp.OpenIddict.Tokens.TokenCleanupOptions");
            feature.AddKnownType("Volo.Abp.OpenIddict.Tokens.TokenCleanupService,Volo.Abp.OpenIddict.Domain", "Volo.Abp.OpenIddict.Tokens.TokenCleanupService");
            feature.AddKnownType("VoloAbpPermissionManagementDomain_ProcessedByFody,Volo.Abp.PermissionManagement.Domain", "<global namespace>.VoloAbpPermissionManagementDomain_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.PermissionManagement.Domain", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.PermissionManagement.AbpPermissionManagementDomainModule,Volo.Abp.PermissionManagement.Domain", "Volo.Abp.PermissionManagement.AbpPermissionManagementDomainModule");
            feature.AddKnownType("Volo.Abp.PermissionManagement.DynamicPermissionDefinitionStore,Volo.Abp.PermissionManagement.Domain", "Volo.Abp.PermissionManagement.DynamicPermissionDefinitionStore");
            feature.AddKnownType("Volo.Abp.PermissionManagement.DynamicPermissionDefinitionStoreInMemoryCache,Volo.Abp.PermissionManagement.Domain", "Volo.Abp.PermissionManagement.DynamicPermissionDefinitionStoreInMemoryCache");
            feature.AddKnownType("Volo.Abp.PermissionManagement.IDynamicPermissionDefinitionStoreInMemoryCache,Volo.Abp.PermissionManagement.Domain", "Volo.Abp.PermissionManagement.IDynamicPermissionDefinitionStoreInMemoryCache");
            feature.AddKnownType("Volo.Abp.PermissionManagement.IPermissionDataSeeder,Volo.Abp.PermissionManagement.Domain", "Volo.Abp.PermissionManagement.IPermissionDataSeeder");
            feature.AddKnownType("Volo.Abp.PermissionManagement.IPermissionDefinitionRecordRepository,Volo.Abp.PermissionManagement.Domain", "Volo.Abp.PermissionManagement.IPermissionDefinitionRecordRepository");
            feature.AddKnownType("Volo.Abp.PermissionManagement.IPermissionDefinitionSerializer,Volo.Abp.PermissionManagement.Domain", "Volo.Abp.PermissionManagement.IPermissionDefinitionSerializer");
            feature.AddKnownType("Volo.Abp.PermissionManagement.IPermissionGrantRepository,Volo.Abp.PermissionManagement.Domain", "Volo.Abp.PermissionManagement.IPermissionGrantRepository");
            feature.AddKnownType("Volo.Abp.PermissionManagement.IPermissionGroupDefinitionRecordRepository,Volo.Abp.PermissionManagement.Domain", "Volo.Abp.PermissionManagement.IPermissionGroupDefinitionRecordRepository");
            feature.AddKnownType("Volo.Abp.PermissionManagement.IPermissionManagementProvider,Volo.Abp.PermissionManagement.Domain", "Volo.Abp.PermissionManagement.IPermissionManagementProvider");
            feature.AddKnownType("Volo.Abp.PermissionManagement.IPermissionManager,Volo.Abp.PermissionManagement.Domain", "Volo.Abp.PermissionManagement.IPermissionManager");
            feature.AddKnownType("Volo.Abp.PermissionManagement.IStaticPermissionSaver,Volo.Abp.PermissionManagement.Domain", "Volo.Abp.PermissionManagement.IStaticPermissionSaver");
            feature.AddKnownType("Volo.Abp.PermissionManagement.MultiplePermissionValueProviderGrantInfo,Volo.Abp.PermissionManagement.Domain", "Volo.Abp.PermissionManagement.MultiplePermissionValueProviderGrantInfo");
            feature.AddKnownType("Volo.Abp.PermissionManagement.MultiplePermissionWithGrantedProviders,Volo.Abp.PermissionManagement.Domain", "Volo.Abp.PermissionManagement.MultiplePermissionWithGrantedProviders");
            feature.AddKnownType("Volo.Abp.PermissionManagement.PermissionDataSeedContributor,Volo.Abp.PermissionManagement.Domain", "Volo.Abp.PermissionManagement.PermissionDataSeedContributor");
            feature.AddKnownType("Volo.Abp.PermissionManagement.PermissionDataSeeder,Volo.Abp.PermissionManagement.Domain", "Volo.Abp.PermissionManagement.PermissionDataSeeder");
            feature.AddKnownType("Volo.Abp.PermissionManagement.PermissionDefinitionRecord,Volo.Abp.PermissionManagement.Domain", "Volo.Abp.PermissionManagement.PermissionDefinitionRecord");
            feature.AddKnownType("Volo.Abp.PermissionManagement.PermissionDefinitionSerializer,Volo.Abp.PermissionManagement.Domain", "Volo.Abp.PermissionManagement.PermissionDefinitionSerializer");
            feature.AddKnownType("Volo.Abp.PermissionManagement.PermissionGrant,Volo.Abp.PermissionManagement.Domain", "Volo.Abp.PermissionManagement.PermissionGrant");
            feature.AddKnownType("Volo.Abp.PermissionManagement.PermissionGrantCacheItem,Volo.Abp.PermissionManagement.Domain", "Volo.Abp.PermissionManagement.PermissionGrantCacheItem");
            feature.AddKnownType("Volo.Abp.PermissionManagement.PermissionGrantCacheItemInvalidator,Volo.Abp.PermissionManagement.Domain", "Volo.Abp.PermissionManagement.PermissionGrantCacheItemInvalidator");
            feature.AddKnownType("Volo.Abp.PermissionManagement.PermissionGroupDefinitionRecord,Volo.Abp.PermissionManagement.Domain", "Volo.Abp.PermissionManagement.PermissionGroupDefinitionRecord");
            feature.AddKnownType("Volo.Abp.PermissionManagement.PermissionManagementOptions,Volo.Abp.PermissionManagement.Domain", "Volo.Abp.PermissionManagement.PermissionManagementOptions");
            feature.AddKnownType("Volo.Abp.PermissionManagement.PermissionManagementProvider,Volo.Abp.PermissionManagement.Domain", "Volo.Abp.PermissionManagement.PermissionManagementProvider");
            feature.AddKnownType("Volo.Abp.PermissionManagement.PermissionManager,Volo.Abp.PermissionManagement.Domain", "Volo.Abp.PermissionManagement.PermissionManager");
            feature.AddKnownType("Volo.Abp.PermissionManagement.PermissionStore,Volo.Abp.PermissionManagement.Domain", "Volo.Abp.PermissionManagement.PermissionStore");
            feature.AddKnownType("Volo.Abp.PermissionManagement.PermissionValueProviderGrantInfo,Volo.Abp.PermissionManagement.Domain", "Volo.Abp.PermissionManagement.PermissionValueProviderGrantInfo");
            feature.AddKnownType("Volo.Abp.PermissionManagement.PermissionValueProviderInfo,Volo.Abp.PermissionManagement.Domain", "Volo.Abp.PermissionManagement.PermissionValueProviderInfo");
            feature.AddKnownType("Volo.Abp.PermissionManagement.PermissionWithGrantedProviders,Volo.Abp.PermissionManagement.Domain", "Volo.Abp.PermissionManagement.PermissionWithGrantedProviders");
            feature.AddKnownType("Volo.Abp.PermissionManagement.StaticPermissionSaver,Volo.Abp.PermissionManagement.Domain", "Volo.Abp.PermissionManagement.StaticPermissionSaver");
            feature.AddKnownType("VoloAbpPermissionManagementDomainIdentity_ProcessedByFody,Volo.Abp.PermissionManagement.Domain.Identity", "<global namespace>.VoloAbpPermissionManagementDomainIdentity_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.PermissionManagement.Domain.Identity", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.PermissionManagement.Identity.AbpPermissionManagementDomainIdentityModule,Volo.Abp.PermissionManagement.Domain.Identity", "Volo.Abp.PermissionManagement.Identity.AbpPermissionManagementDomainIdentityModule");
            feature.AddKnownType("Volo.Abp.PermissionManagement.Identity.RoleDeletedEventHandler,Volo.Abp.PermissionManagement.Domain.Identity", "Volo.Abp.PermissionManagement.Identity.RoleDeletedEventHandler");
            feature.AddKnownType("Volo.Abp.PermissionManagement.Identity.RolePermissionManagementProvider,Volo.Abp.PermissionManagement.Domain.Identity", "Volo.Abp.PermissionManagement.Identity.RolePermissionManagementProvider");
            feature.AddKnownType("Volo.Abp.PermissionManagement.Identity.RoleUpdateEventHandler,Volo.Abp.PermissionManagement.Domain.Identity", "Volo.Abp.PermissionManagement.Identity.RoleUpdateEventHandler");
            feature.AddKnownType("Volo.Abp.PermissionManagement.Identity.UserPermissionManagementProvider,Volo.Abp.PermissionManagement.Domain.Identity", "Volo.Abp.PermissionManagement.Identity.UserPermissionManagementProvider");
            feature.AddKnownType("VoloAbpPermissionManagementDomainOpenIddict_ProcessedByFody,Volo.Abp.PermissionManagement.Domain.OpenIddict", "<global namespace>.VoloAbpPermissionManagementDomainOpenIddict_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.PermissionManagement.Domain.OpenIddict", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.PermissionManagement.OpenIddict.AbpPermissionManagementDomainOpenIddictModule,Volo.Abp.PermissionManagement.Domain.OpenIddict", "Volo.Abp.PermissionManagement.OpenIddict.AbpPermissionManagementDomainOpenIddictModule");
            feature.AddKnownType("Volo.Abp.PermissionManagement.OpenIddict.ApplicationPermissionManagementProvider,Volo.Abp.PermissionManagement.Domain.OpenIddict", "Volo.Abp.PermissionManagement.OpenIddict.ApplicationPermissionManagementProvider");
            feature.AddKnownType("VoloAbpSettingManagementDomain_ProcessedByFody,Volo.Abp.SettingManagement.Domain", "<global namespace>.VoloAbpSettingManagementDomain_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.SettingManagement.Domain", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.SettingManagement.AbpSettingManagementDomainModule,Volo.Abp.SettingManagement.Domain", "Volo.Abp.SettingManagement.AbpSettingManagementDomainModule");
            feature.AddKnownType("Volo.Abp.SettingManagement.ConfigurationSettingManagementProvider,Volo.Abp.SettingManagement.Domain", "Volo.Abp.SettingManagement.ConfigurationSettingManagementProvider");
            feature.AddKnownType("Volo.Abp.SettingManagement.DefaultValueSettingManagementProvider,Volo.Abp.SettingManagement.Domain", "Volo.Abp.SettingManagement.DefaultValueSettingManagementProvider");
            feature.AddKnownType("Volo.Abp.SettingManagement.GlobalSettingManagementProvider,Volo.Abp.SettingManagement.Domain", "Volo.Abp.SettingManagement.GlobalSettingManagementProvider");
            feature.AddKnownType("Volo.Abp.SettingManagement.ISettingManagementProvider,Volo.Abp.SettingManagement.Domain", "Volo.Abp.SettingManagement.ISettingManagementProvider");
            feature.AddKnownType("Volo.Abp.SettingManagement.ISettingManagementStore,Volo.Abp.SettingManagement.Domain", "Volo.Abp.SettingManagement.ISettingManagementStore");
            feature.AddKnownType("Volo.Abp.SettingManagement.ISettingManager,Volo.Abp.SettingManagement.Domain", "Volo.Abp.SettingManagement.ISettingManager");
            feature.AddKnownType("Volo.Abp.SettingManagement.ISettingRepository,Volo.Abp.SettingManagement.Domain", "Volo.Abp.SettingManagement.ISettingRepository");
            feature.AddKnownType("Volo.Abp.SettingManagement.Setting,Volo.Abp.SettingManagement.Domain", "Volo.Abp.SettingManagement.Setting");
            feature.AddKnownType("Volo.Abp.SettingManagement.SettingCacheItem,Volo.Abp.SettingManagement.Domain", "Volo.Abp.SettingManagement.SettingCacheItem");
            feature.AddKnownType("Volo.Abp.SettingManagement.SettingCacheItemInvalidator,Volo.Abp.SettingManagement.Domain", "Volo.Abp.SettingManagement.SettingCacheItemInvalidator");
            feature.AddKnownType("Volo.Abp.SettingManagement.SettingManagementOptions,Volo.Abp.SettingManagement.Domain", "Volo.Abp.SettingManagement.SettingManagementOptions");
            feature.AddKnownType("Volo.Abp.SettingManagement.SettingManagementProvider,Volo.Abp.SettingManagement.Domain", "Volo.Abp.SettingManagement.SettingManagementProvider");
            feature.AddKnownType("Volo.Abp.SettingManagement.SettingManagementStore,Volo.Abp.SettingManagement.Domain", "Volo.Abp.SettingManagement.SettingManagementStore");
            feature.AddKnownType("Volo.Abp.SettingManagement.SettingManager,Volo.Abp.SettingManagement.Domain", "Volo.Abp.SettingManagement.SettingManager");
            feature.AddKnownType("Volo.Abp.SettingManagement.SettingStore,Volo.Abp.SettingManagement.Domain", "Volo.Abp.SettingManagement.SettingStore");
            feature.AddKnownType("Volo.Abp.SettingManagement.TenantSettingManagementProvider,Volo.Abp.SettingManagement.Domain", "Volo.Abp.SettingManagement.TenantSettingManagementProvider");
            feature.AddKnownType("Volo.Abp.SettingManagement.UserSettingManagementProvider,Volo.Abp.SettingManagement.Domain", "Volo.Abp.SettingManagement.UserSettingManagementProvider");
            feature.AddKnownType("VoloAbpTenantManagementDomain_ProcessedByFody,Volo.Abp.TenantManagement.Domain", "<global namespace>.VoloAbpTenantManagementDomain_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.TenantManagement.Domain", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.TenantManagement.AbpTenantManagementDomainMappingProfile,Volo.Abp.TenantManagement.Domain", "Volo.Abp.TenantManagement.AbpTenantManagementDomainMappingProfile");
            feature.AddKnownType("Volo.Abp.TenantManagement.AbpTenantManagementDomainModule,Volo.Abp.TenantManagement.Domain", "Volo.Abp.TenantManagement.AbpTenantManagementDomainModule");
            feature.AddKnownType("Volo.Abp.TenantManagement.ITenantManager,Volo.Abp.TenantManagement.Domain", "Volo.Abp.TenantManagement.ITenantManager");
            feature.AddKnownType("Volo.Abp.TenantManagement.ITenantRepository,Volo.Abp.TenantManagement.Domain", "Volo.Abp.TenantManagement.ITenantRepository");
            feature.AddKnownType("Volo.Abp.TenantManagement.Tenant,Volo.Abp.TenantManagement.Domain", "Volo.Abp.TenantManagement.Tenant");
            feature.AddKnownType("Volo.Abp.TenantManagement.TenantCacheItem,Volo.Abp.TenantManagement.Domain", "Volo.Abp.TenantManagement.TenantCacheItem");
            feature.AddKnownType("Volo.Abp.TenantManagement.TenantCacheItemInvalidator,Volo.Abp.TenantManagement.Domain", "Volo.Abp.TenantManagement.TenantCacheItemInvalidator");
            feature.AddKnownType("Volo.Abp.TenantManagement.TenantConnectionString,Volo.Abp.TenantManagement.Domain", "Volo.Abp.TenantManagement.TenantConnectionString");
            feature.AddKnownType("Volo.Abp.TenantManagement.TenantManager,Volo.Abp.TenantManagement.Domain", "Volo.Abp.TenantManagement.TenantManager");
            feature.AddKnownType("Volo.Abp.TenantManagement.TenantStore,Volo.Abp.TenantManagement.Domain", "Volo.Abp.TenantManagement.TenantStore");
            feature.AddKnownType("VoloAbpTextTemplatingCore_ProcessedByFody,Volo.Abp.TextTemplating.Core", "<global namespace>.VoloAbpTextTemplatingCore_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.TextTemplating.Core", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.TextTemplating.AbpTemplateRenderer,Volo.Abp.TextTemplating.Core", "Volo.Abp.TextTemplating.AbpTemplateRenderer");
            feature.AddKnownType("Volo.Abp.TextTemplating.AbpTextTemplatingCoreModule,Volo.Abp.TextTemplating.Core", "Volo.Abp.TextTemplating.AbpTextTemplatingCoreModule");
            feature.AddKnownType("Volo.Abp.TextTemplating.AbpTextTemplatingOptions,Volo.Abp.TextTemplating.Core", "Volo.Abp.TextTemplating.AbpTextTemplatingOptions");
            feature.AddKnownType("Volo.Abp.TextTemplating.ITemplateContentContributor,Volo.Abp.TextTemplating.Core", "Volo.Abp.TextTemplating.ITemplateContentContributor");
            feature.AddKnownType("Volo.Abp.TextTemplating.ITemplateContentProvider,Volo.Abp.TextTemplating.Core", "Volo.Abp.TextTemplating.ITemplateContentProvider");
            feature.AddKnownType("Volo.Abp.TextTemplating.ITemplateDefinitionContext,Volo.Abp.TextTemplating.Core", "Volo.Abp.TextTemplating.ITemplateDefinitionContext");
            feature.AddKnownType("Volo.Abp.TextTemplating.ITemplateDefinitionManager,Volo.Abp.TextTemplating.Core", "Volo.Abp.TextTemplating.ITemplateDefinitionManager");
            feature.AddKnownType("Volo.Abp.TextTemplating.ITemplateDefinitionProvider,Volo.Abp.TextTemplating.Core", "Volo.Abp.TextTemplating.ITemplateDefinitionProvider");
            feature.AddKnownType("Volo.Abp.TextTemplating.ITemplateRenderer,Volo.Abp.TextTemplating.Core", "Volo.Abp.TextTemplating.ITemplateRenderer");
            feature.AddKnownType("Volo.Abp.TextTemplating.ITemplateRenderingEngine,Volo.Abp.TextTemplating.Core", "Volo.Abp.TextTemplating.ITemplateRenderingEngine");
            feature.AddKnownType("Volo.Abp.TextTemplating.TemplateContentContributorContext,Volo.Abp.TextTemplating.Core", "Volo.Abp.TextTemplating.TemplateContentContributorContext");
            feature.AddKnownType("Volo.Abp.TextTemplating.TemplateContentProvider,Volo.Abp.TextTemplating.Core", "Volo.Abp.TextTemplating.TemplateContentProvider");
            feature.AddKnownType("Volo.Abp.TextTemplating.TemplateDefinition,Volo.Abp.TextTemplating.Core", "Volo.Abp.TextTemplating.TemplateDefinition");
            feature.AddKnownType("Volo.Abp.TextTemplating.TemplateDefinitionContext,Volo.Abp.TextTemplating.Core", "Volo.Abp.TextTemplating.TemplateDefinitionContext");
            feature.AddKnownType("Volo.Abp.TextTemplating.TemplateDefinitionManager,Volo.Abp.TextTemplating.Core", "Volo.Abp.TextTemplating.TemplateDefinitionManager");
            feature.AddKnownType("Volo.Abp.TextTemplating.TemplateDefinitionProvider,Volo.Abp.TextTemplating.Core", "Volo.Abp.TextTemplating.TemplateDefinitionProvider");
            feature.AddKnownType("Volo.Abp.TextTemplating.TemplateRenderingEngineBase,Volo.Abp.TextTemplating.Core", "Volo.Abp.TextTemplating.TemplateRenderingEngineBase");
            feature.AddKnownType("Volo.Abp.TextTemplating.VirtualFiles.FileInfoLocalizedTemplateContentReader,Volo.Abp.TextTemplating.Core", "Volo.Abp.TextTemplating.VirtualFiles.FileInfoLocalizedTemplateContentReader");
            feature.AddKnownType("Volo.Abp.TextTemplating.VirtualFiles.ILocalizedTemplateContentReader,Volo.Abp.TextTemplating.Core", "Volo.Abp.TextTemplating.VirtualFiles.ILocalizedTemplateContentReader");
            feature.AddKnownType("Volo.Abp.TextTemplating.VirtualFiles.ILocalizedTemplateContentReaderFactory,Volo.Abp.TextTemplating.Core", "Volo.Abp.TextTemplating.VirtualFiles.ILocalizedTemplateContentReaderFactory");
            feature.AddKnownType("Volo.Abp.TextTemplating.VirtualFiles.LocalizedTemplateContentReaderFactory,Volo.Abp.TextTemplating.Core", "Volo.Abp.TextTemplating.VirtualFiles.LocalizedTemplateContentReaderFactory");
            feature.AddKnownType("Volo.Abp.TextTemplating.VirtualFiles.NullLocalizedTemplateContentReader,Volo.Abp.TextTemplating.Core", "Volo.Abp.TextTemplating.VirtualFiles.NullLocalizedTemplateContentReader");
            feature.AddKnownType("Volo.Abp.TextTemplating.VirtualFiles.VirtualFileTemplateContentContributor,Volo.Abp.TextTemplating.Core", "Volo.Abp.TextTemplating.VirtualFiles.VirtualFileTemplateContentContributor");
            feature.AddKnownType("Volo.Abp.TextTemplating.VirtualFiles.VirtualFolderLocalizedTemplateContentReader,Volo.Abp.TextTemplating.Core", "Volo.Abp.TextTemplating.VirtualFiles.VirtualFolderLocalizedTemplateContentReader");
            feature.AddKnownType("VoloAbpTextTemplating_ProcessedByFody,Volo.Abp.TextTemplating", "<global namespace>.VoloAbpTextTemplating_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.TextTemplating", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.TextTemplating.AbpTextTemplatingModule,Volo.Abp.TextTemplating", "Volo.Abp.TextTemplating.AbpTextTemplatingModule");
            feature.AddKnownType("VoloAbpTextTemplatingScriban_ProcessedByFody,Volo.Abp.TextTemplating.Scriban", "<global namespace>.VoloAbpTextTemplatingScriban_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.TextTemplating.Scriban", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.TextTemplating.Scriban.AbpTextTemplatingScribanModule,Volo.Abp.TextTemplating.Scriban", "Volo.Abp.TextTemplating.Scriban.AbpTextTemplatingScribanModule");
            feature.AddKnownType("Volo.Abp.TextTemplating.Scriban.ScribanTemplateLocalizer,Volo.Abp.TextTemplating.Scriban", "Volo.Abp.TextTemplating.Scriban.ScribanTemplateLocalizer");
            feature.AddKnownType("Volo.Abp.TextTemplating.Scriban.ScribanTemplateRenderingEngine,Volo.Abp.TextTemplating.Scriban", "Volo.Abp.TextTemplating.Scriban.ScribanTemplateRenderingEngine");
            feature.AddKnownType("VoloAbpUsersDomain_ProcessedByFody,Volo.Abp.Users.Domain", "<global namespace>.VoloAbpUsersDomain_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Users.Domain", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Users.AbpUsersDomainModule,Volo.Abp.Users.Domain", "Volo.Abp.Users.AbpUsersDomainModule");
            feature.AddKnownType("Volo.Abp.Users.IUpdateUserData,Volo.Abp.Users.Domain", "Volo.Abp.Users.IUpdateUserData");
            feature.AddKnownType("Volo.Abp.Users.IUser,Volo.Abp.Users.Domain", "Volo.Abp.Users.IUser");
            feature.AddKnownType("Volo.Abp.Users.IUserLookupService`1,Volo.Abp.Users.Domain", "Volo.Abp.Users.IUserLookupService`1'1");
            feature.AddKnownType("Volo.Abp.Users.IUserRepository`1,Volo.Abp.Users.Domain", "Volo.Abp.Users.IUserRepository`1'1");
            feature.AddKnownType("Volo.Abp.Users.UserLookupService`2,Volo.Abp.Users.Domain", "Volo.Abp.Users.UserLookupService`2'2");
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 649
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
