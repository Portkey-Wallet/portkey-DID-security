// <auto-generated />
#if !EXCLUDE_GENERATED_CODE
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 414
#pragma warning disable 618
#pragma warning disable 649
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998
using global::Orleans;

[assembly: global::Orleans.Metadata.FeaturePopulatorAttribute(typeof(OrleansGeneratedCode.OrleansCodeGenCAServer_Application_ContractsFeaturePopulator))]
[assembly: global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("CAServer.Application.Contracts, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("AElf.Cryptography, Version=1.2.3.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("AElf.CSharp.Core, Version=1.2.3.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("AElf.Kernel.SmartContract.Shared, Version=1.2.3.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("AElf.Sdk.CSharp, Version=1.2.3.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("AElf.Types, Version=1.2.3.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("AutoMapper, Version=12.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010079dfef85ed6ba841717e154f13182c0a6029a40794a6ecd2886c7dc38825f6a4c05b0622723a01cd080f9879126708eef58f134accdc99627947425960ac2397162067507e3c627992aa6b92656ad3380999b30b5d5645ba46cc3fcc6a1de5de7afebcf896c65fb4f9547a6c0c6433045fceccb1fa15e960d519d0cd694b29a4"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("BouncyCastle.Crypto, Version=1.9.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010083a6a1d0d41b8a0fd3061c8dd2ba14da98f9bf53576ad386a4d021abd235ee41bc5416683314816908765fac4951301e159153cf02bf1b31bec8a2ce6c0110c30cc7bef54e514d530b703d37629078ab3ecce1afa5ed3f9d63f3b50398188a811ada59827b9e1a4eeeb87d05e4afe45befd69bf2cdfd37f38334b748c8cb7fbc"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("CAServer.Domain.Shared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("DnsClient, Version=1.6.1.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100676f9d5ff1e268c55fda5578e9f09f27b5fdfadc2b96eec28616532974ffdab2551ac7082ef0037690e3f859328da8425afc284333a808f01b5bbef674a615723b1085b6404b293e10dc8132d5636b692edab794ada3f53711175f0520d3d84e217fc9269de230ee8ca90415f919514776435bff5cb94cad1652a90ead386fc1"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Elasticsearch.Net, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010025d3a22bf3781ba85067374ad832dfcba3c4fa8dd89227e36121ba17b2c33ad6b6ce03e45e562050a031e2ff7fe12cff9060a50acbc6a0eef9ef32dc258d90f874b2e76b581938071ccc4b4d98204d1d6ca7a1988d7a211f9fc98efd808cf85f61675b11007d0eb0461dc86a968d6af8ebba7e6b540303b54f1c1f5325c252be"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Google.Protobuf, Version=3.19.4.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010025800fbcfc63a17c66b303aae80b03a6beaa176bb6bef883be436f2a1579edd80ce23edf151a1f4ced97af83abcd981207041fd5b2da3b498346fcfcd94910d52f25537c4a43ce3fbe17dc7d43e6cbdb4d8f1242dcb6bd9b5906be74da8daa7d7280f97130f318a16c07baf118839b156299a48522f9fae2371c9665c5ae9cb6"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("JetBrains.Annotations, Version=4242.42.42.42, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010087f63ba6a789c30e210e7ec987234ad9fe33baf7367993bab1b312d6f72ca296b91ed5c658964ffb9e7570eb184a527c68c6bdba41cfe67d8cfd3f888234206bf39205a3652d3af3445bb6f715fdac532e289fea41229bac37762b67eb16f58fee717d2465fca9ee17f08ed16772a1fc52c1c17022e1f0d9bdd004524a663aca"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.AspNetCore.Authorization, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.AspNetCore.Metadata, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Bcl.AsyncInterfaces, Version=7.0.0.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001004b86c4cb78549b34bab61a3b1800e23bfeb5b3ec390074041536a7e3cbd97f5f04cf0f857155a8928eaa29ebfd11cfbbad3ba70efea7bda3226c6a8d370a4cd303f714486b6ebc225985a638471e6ef571cc92a4613c00b8fa65d61ccee0cbe5f36330c9a01f4183559f1bef24cc2917c6d913e3a541333a1d05d9bed22b38cb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.CSharp, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Caching.Abstractions, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Caching.Memory, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Configuration.Abstractions, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Configuration.Binder, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Configuration.CommandLine, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Configuration, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Configuration.EnvironmentVariables, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Configuration.FileExtensions, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Configuration.Json, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Configuration.UserSecrets, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.DependencyInjection.Abstractions, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.DependencyInjection, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.FileProviders.Abstractions, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.FileProviders.Composite, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.FileProviders.Embedded, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.FileProviders.Physical, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.FileSystemGlobbing, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Hosting.Abstractions, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Localization.Abstractions, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Localization, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Logging.Abstractions, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Logging, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Options.ConfigurationExtensions, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Options, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Extensions.Primitives, Version=7.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.IdentityModel.Abstractions, Version=6.25.1.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.IdentityModel.Logging, Version=6.25.1.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.IdentityModel.Tokens, Version=6.25.1.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.VisualBasic.Core, Version=12.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Win32.Primitives, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.Win32.Registry, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("MongoDB.Bson, Version=2.17.1.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("MongoDB.Driver.Core, Version=2.17.1.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("MongoDB.Driver, Version=2.17.1.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("MongoDB.Libmongocrypt, Version=1.5.5.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Nest, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010025d3a22bf3781ba85067374ad832dfcba3c4fa8dd89227e36121ba17b2c33ad6b6ce03e45e562050a031e2ff7fe12cff9060a50acbc6a0eef9ef32dc258d90f874b2e76b581938071ccc4b4d98204d1d6ca7a1988d7a211f9fc98efd808cf85f61675b11007d0eb0461dc86a968d6af8ebba7e6b540303b54f1c1f5325c252be"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Nito.AsyncEx.Context, Version=5.1.2.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Nito.AsyncEx.Coordination, Version=5.1.2.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Nito.AsyncEx.Tasks, Version=5.1.2.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Nito.Collections.Deque, Version=1.1.1.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Nito.Disposables, Version=2.2.1.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("OpenIddict.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKey=0024000004800000140200000602000000240000525341310010000001000100613f2880fc9f71b5e8f968801c1a4923e1df760bd3f9d2d752f83c01cabc4853e7f32bba18e9e88ca1285d96655008148d60c43d28d82a292c6bf0c8a761fd5d345e45ec1c044b6eeca140593779e6c9e8b59eb1b1cc905dc81e559a9fdf24c77d333c53cc8c7f2d46a6df3a74c426e4afc97bab4117a87a882552c8f41e9f4757bb40a1255cf720f85ce50bac763a6104b03d6927ef05f5dcc316450eda528eae7f003af8c6463daa9505fae121d0c8294eb927995a4dd96b9397c16a479c865322af27c0f1b493a5dc03305bd5d46ac376de620cb050b40f9fb1cbb0a2004242ad30aff30e203fb68a104eed90d80def2e04f1c73e01937d9f1359108904d13d5226ac717880f51070066252ceb0b0acdb6705fb76515f3cebb2fc497572ab3c66718fbdb1306f39125a6cb6f40006db495a21a61b5273ddcbc83e983a2e59b04ebbcde41aad46ff4292080b1ede89878ac95b26d68227cd6077994b397255e91b09d25de64f0f7cf58cd3f96460561056eaf48ff1fb1d9f6faa3741bc756b930d761dfe0bde2d8d4c79351888688dd2d0c2939b8e0619a3f668816fbbab070c3139e3f3a5b2961f7d99f2af95fde9c52958644e575a3d0f2a1de8d5fef0b8c9766b415e7566eaba2ad0c775089c1f5148008509700fcebdd001f1b36a1db83be5b2b66c18342d3230e5f995f1283335dbee7388aa3584206fba97112775af"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Orleans.Providers.MongoDB, Version=3.8.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Pipelines.Sockets.Unofficial, Version=1.0.0.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001004d8891d82193e8bd0b50154069ae06c5984af46c017a452d238d7a0b4fa0bec892cbfbc103b3757a35d4cc7f048e42df8c50b82e024b4c452bb953b74980c84b4fd00f1bc7f5a98883ed8bc9db43005491f71067fbaf5623b29a845ef828e79a8991b022e88030c3c9b5610e5045683d0e404746c82344209b498eab408164e7"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Secp256k1.Net, Version=0.1.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("SharpCompress, Version=0.30.1.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010059acfa17d26c447a4d03f16eaa72c9187c04f16e6569dd168b080e39a6f5c9fd00f28c768cd8e9a089d5a0e1b34ccd971488e7afe030ce5ce8df2053cf12ec89f6d38065c434c09ee6af3ee284c5dc08f44774b679bf39298e57efe30d4b00aecf9e4f6f8448b2cb0146d8956dfcab606cc64a0ac38c60a7d78b0d65d3b98dc0"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("StackExchange.Redis, Version=2.0.0.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001007791a689e9d8950b44a9a8886baad2ea180e7a8a854f158c9b98345ca5009cdd2362c84f368f1c3658c132b3c0f74e44ff16aeb2e5b353b6e0fe02f923a050470caeac2bde47a2238a9c7125ed7dab14f486a5a64558df96640933b9f2b6db188fc4a820f96dce963b662fa8864adbff38e5b4542343f162ecdc6dad16912fff"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.AppContext, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Buffers, Version=7.0.0.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001004b86c4cb78549b34bab61a3b1800e23bfeb5b3ec390074041536a7e3cbd97f5f04cf0f857155a8928eaa29ebfd11cfbbad3ba70efea7bda3226c6a8d370a4cd303f714486b6ebc225985a638471e6ef571cc92a4613c00b8fa65d61ccee0cbe5f36330c9a01f4183559f1bef24cc2917c6d913e3a541333a1d05d9bed22b38cb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Collections.Concurrent, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Collections, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Collections.Immutable, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Collections.NonGeneric, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Collections.Specialized, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.ComponentModel.Annotations, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.ComponentModel, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.ComponentModel.EventBasedAsync, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.ComponentModel.Primitives, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.ComponentModel.TypeConverter, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Console, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Data.Common, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Diagnostics.Contracts, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Diagnostics.Debug, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Diagnostics.DiagnosticSource, Version=7.0.0.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001004b86c4cb78549b34bab61a3b1800e23bfeb5b3ec390074041536a7e3cbd97f5f04cf0f857155a8928eaa29ebfd11cfbbad3ba70efea7bda3226c6a8d370a4cd303f714486b6ebc225985a638471e6ef571cc92a4613c00b8fa65d61ccee0cbe5f36330c9a01f4183559f1bef24cc2917c6d913e3a541333a1d05d9bed22b38cb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Diagnostics.FileVersionInfo, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Diagnostics.PerformanceCounter, Version=5.0.0.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001004b86c4cb78549b34bab61a3b1800e23bfeb5b3ec390074041536a7e3cbd97f5f04cf0f857155a8928eaa29ebfd11cfbbad3ba70efea7bda3226c6a8d370a4cd303f714486b6ebc225985a638471e6ef571cc92a4613c00b8fa65d61ccee0cbe5f36330c9a01f4183559f1bef24cc2917c6d913e3a541333a1d05d9bed22b38cb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Diagnostics.Process, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Diagnostics.StackTrace, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Diagnostics.TextWriterTraceListener, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Diagnostics.Tools, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Diagnostics.TraceSource, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Diagnostics.Tracing, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Drawing.Primitives, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Dynamic.Runtime, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Formats.Asn1, Version=7.0.0.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001004b86c4cb78549b34bab61a3b1800e23bfeb5b3ec390074041536a7e3cbd97f5f04cf0f857155a8928eaa29ebfd11cfbbad3ba70efea7bda3226c6a8d370a4cd303f714486b6ebc225985a638471e6ef571cc92a4613c00b8fa65d61ccee0cbe5f36330c9a01f4183559f1bef24cc2917c6d913e3a541333a1d05d9bed22b38cb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Formats.Tar, Version=7.0.0.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001004b86c4cb78549b34bab61a3b1800e23bfeb5b3ec390074041536a7e3cbd97f5f04cf0f857155a8928eaa29ebfd11cfbbad3ba70efea7bda3226c6a8d370a4cd303f714486b6ebc225985a638471e6ef571cc92a4613c00b8fa65d61ccee0cbe5f36330c9a01f4183559f1bef24cc2917c6d913e3a541333a1d05d9bed22b38cb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Globalization.Calendars, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Globalization, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Globalization.Extensions, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.IO.Compression.Brotli, Version=7.0.0.0, Culture=neutral, PublicKey=00000000000000000400000000000000"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.IO.Compression, Version=7.0.0.0, Culture=neutral, PublicKey=00000000000000000400000000000000"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.IO.Compression.ZipFile, Version=7.0.0.0, Culture=neutral, PublicKey=00000000000000000400000000000000"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.IO, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.IO.FileSystem.AccessControl, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.IO.FileSystem, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.IO.FileSystem.DriveInfo, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.IO.FileSystem.Primitives, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.IO.FileSystem.Watcher, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.IO.IsolatedStorage, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.IO.MemoryMappedFiles, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.IO.Pipes.AccessControl, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.IO.Pipes, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.IO.UnmanagedMemoryStream, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Linq, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Linq.Dynamic.Core, Version=1.2.18.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001003daf4f4b7d160b1033de9a4a3275f4667a4558144296c3bb593aa0fd213dadf0ea4df5aa69e21763d409ada2a8f8925081bc2e81362be7916e22c624344309eba764edc4f8f84237ae053d2687ab3b888c9f4f3ff8a804bb5fee61e1ceadec97b08994580ef2df6bd7e077df4ad205c6d2bde479c512ab9be6ecc23c10694597"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Linq.Expressions, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Linq.Parallel, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Linq.Queryable, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Memory, Version=7.0.0.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001004b86c4cb78549b34bab61a3b1800e23bfeb5b3ec390074041536a7e3cbd97f5f04cf0f857155a8928eaa29ebfd11cfbbad3ba70efea7bda3226c6a8d370a4cd303f714486b6ebc225985a638471e6ef571cc92a4613c00b8fa65d61ccee0cbe5f36330c9a01f4183559f1bef24cc2917c6d913e3a541333a1d05d9bed22b38cb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Net.Http, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Net.Http.Json, Version=7.0.0.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001004b86c4cb78549b34bab61a3b1800e23bfeb5b3ec390074041536a7e3cbd97f5f04cf0f857155a8928eaa29ebfd11cfbbad3ba70efea7bda3226c6a8d370a4cd303f714486b6ebc225985a638471e6ef571cc92a4613c00b8fa65d61ccee0cbe5f36330c9a01f4183559f1bef24cc2917c6d913e3a541333a1d05d9bed22b38cb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Net.HttpListener, Version=7.0.0.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001004b86c4cb78549b34bab61a3b1800e23bfeb5b3ec390074041536a7e3cbd97f5f04cf0f857155a8928eaa29ebfd11cfbbad3ba70efea7bda3226c6a8d370a4cd303f714486b6ebc225985a638471e6ef571cc92a4613c00b8fa65d61ccee0cbe5f36330c9a01f4183559f1bef24cc2917c6d913e3a541333a1d05d9bed22b38cb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Net.Mail, Version=7.0.0.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001004b86c4cb78549b34bab61a3b1800e23bfeb5b3ec390074041536a7e3cbd97f5f04cf0f857155a8928eaa29ebfd11cfbbad3ba70efea7bda3226c6a8d370a4cd303f714486b6ebc225985a638471e6ef571cc92a4613c00b8fa65d61ccee0cbe5f36330c9a01f4183559f1bef24cc2917c6d913e3a541333a1d05d9bed22b38cb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Net.NameResolution, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Net.NetworkInformation, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Net.Ping, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Net.Primitives, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Net.Quic, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Net.Requests, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Net.Security, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Net.ServicePoint, Version=7.0.0.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001004b86c4cb78549b34bab61a3b1800e23bfeb5b3ec390074041536a7e3cbd97f5f04cf0f857155a8928eaa29ebfd11cfbbad3ba70efea7bda3226c6a8d370a4cd303f714486b6ebc225985a638471e6ef571cc92a4613c00b8fa65d61ccee0cbe5f36330c9a01f4183559f1bef24cc2917c6d913e3a541333a1d05d9bed22b38cb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Net.Sockets, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Net.WebClient, Version=7.0.0.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001004b86c4cb78549b34bab61a3b1800e23bfeb5b3ec390074041536a7e3cbd97f5f04cf0f857155a8928eaa29ebfd11cfbbad3ba70efea7bda3226c6a8d370a4cd303f714486b6ebc225985a638471e6ef571cc92a4613c00b8fa65d61ccee0cbe5f36330c9a01f4183559f1bef24cc2917c6d913e3a541333a1d05d9bed22b38cb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Net.WebHeaderCollection, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Net.WebProxy, Version=7.0.0.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001004b86c4cb78549b34bab61a3b1800e23bfeb5b3ec390074041536a7e3cbd97f5f04cf0f857155a8928eaa29ebfd11cfbbad3ba70efea7bda3226c6a8d370a4cd303f714486b6ebc225985a638471e6ef571cc92a4613c00b8fa65d61ccee0cbe5f36330c9a01f4183559f1bef24cc2917c6d913e3a541333a1d05d9bed22b38cb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Net.WebSockets.Client, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Net.WebSockets, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Numerics.Vectors, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.ObjectModel, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Reflection.DispatchProxy, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Reflection, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Reflection.Emit, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Reflection.Emit.ILGeneration, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Reflection.Emit.Lightweight, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Reflection.Extensions, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Reflection.Metadata, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Reflection.Primitives, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Reflection.TypeExtensions, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Resources.Reader, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Resources.ResourceManager, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Resources.Writer, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime.CompilerServices.Unsafe, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime.CompilerServices.VisualC, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime.Extensions, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime.Handles, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime.InteropServices, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime.InteropServices.JavaScript, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime.InteropServices.RuntimeInformation, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime.Intrinsics, Version=7.0.0.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001004b86c4cb78549b34bab61a3b1800e23bfeb5b3ec390074041536a7e3cbd97f5f04cf0f857155a8928eaa29ebfd11cfbbad3ba70efea7bda3226c6a8d370a4cd303f714486b6ebc225985a638471e6ef571cc92a4613c00b8fa65d61ccee0cbe5f36330c9a01f4183559f1bef24cc2917c6d913e3a541333a1d05d9bed22b38cb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime.Loader, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime.Numerics, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime.Serialization.Formatters, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime.Serialization.Json, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime.Serialization.Primitives, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime.Serialization.Xml, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Security.AccessControl, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Security.Claims, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Security.Cryptography.Algorithms, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Security.Cryptography.Cng, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Security.Cryptography.Csp, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Security.Cryptography, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Security.Cryptography.Encoding, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Security.Cryptography.OpenSsl, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Security.Cryptography.Primitives, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Security.Cryptography.X509Certificates, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Security.Principal, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Security.Principal.Windows, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Security.SecureString, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKey=00000000000000000400000000000000"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Text.Encoding.CodePages, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Text.Encoding, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Text.Encoding.Extensions, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Text.Encodings.Web, Version=7.0.0.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001004b86c4cb78549b34bab61a3b1800e23bfeb5b3ec390074041536a7e3cbd97f5f04cf0f857155a8928eaa29ebfd11cfbbad3ba70efea7bda3226c6a8d370a4cd303f714486b6ebc225985a638471e6ef571cc92a4613c00b8fa65d61ccee0cbe5f36330c9a01f4183559f1bef24cc2917c6d913e3a541333a1d05d9bed22b38cb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Text.Json, Version=7.0.0.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001004b86c4cb78549b34bab61a3b1800e23bfeb5b3ec390074041536a7e3cbd97f5f04cf0f857155a8928eaa29ebfd11cfbbad3ba70efea7bda3226c6a8d370a4cd303f714486b6ebc225985a638471e6ef571cc92a4613c00b8fa65d61ccee0cbe5f36330c9a01f4183559f1bef24cc2917c6d913e3a541333a1d05d9bed22b38cb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Text.RegularExpressions, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Threading.Channels, Version=7.0.0.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001004b86c4cb78549b34bab61a3b1800e23bfeb5b3ec390074041536a7e3cbd97f5f04cf0f857155a8928eaa29ebfd11cfbbad3ba70efea7bda3226c6a8d370a4cd303f714486b6ebc225985a638471e6ef571cc92a4613c00b8fa65d61ccee0cbe5f36330c9a01f4183559f1bef24cc2917c6d913e3a541333a1d05d9bed22b38cb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Threading, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Threading.Overlapped, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Threading.Tasks.Dataflow, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Threading.Tasks, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Threading.Tasks.Extensions, Version=7.0.0.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001004b86c4cb78549b34bab61a3b1800e23bfeb5b3ec390074041536a7e3cbd97f5f04cf0f857155a8928eaa29ebfd11cfbbad3ba70efea7bda3226c6a8d370a4cd303f714486b6ebc225985a638471e6ef571cc92a4613c00b8fa65d61ccee0cbe5f36330c9a01f4183559f1bef24cc2917c6d913e3a541333a1d05d9bed22b38cb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Threading.Tasks.Parallel, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Threading.Thread, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Threading.ThreadPool, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Threading.Timer, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Transactions.Local, Version=7.0.0.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001004b86c4cb78549b34bab61a3b1800e23bfeb5b3ec390074041536a7e3cbd97f5f04cf0f857155a8928eaa29ebfd11cfbbad3ba70efea7bda3226c6a8d370a4cd303f714486b6ebc225985a638471e6ef571cc92a4613c00b8fa65d61ccee0cbe5f36330c9a01f4183559f1bef24cc2917c6d913e3a541333a1d05d9bed22b38cb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Web.HttpUtility, Version=7.0.0.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001004b86c4cb78549b34bab61a3b1800e23bfeb5b3ec390074041536a7e3cbd97f5f04cf0f857155a8928eaa29ebfd11cfbbad3ba70efea7bda3226c6a8d370a4cd303f714486b6ebc225985a638471e6ef571cc92a4613c00b8fa65d61ccee0cbe5f36330c9a01f4183559f1bef24cc2917c6d913e3a541333a1d05d9bed22b38cb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Xml.ReaderWriter, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Xml.XDocument, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Xml.XmlDocument, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Xml.XmlSerializer, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Xml.XPath, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Xml.XPath.XDocument, Version=7.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("TimeZoneConverter, Version=5.0.0.0, Culture=neutral, PublicKey=0024000004800000940000000602000000240000525341310004000001000100b1dae8576c79f6aa981231315a688ebf26ae1acd5bf2806c272c21b59dba8a9f6432d4d00e56b3e474a4574bb730126b76a3b8dd4f97ea020df7718f8090bc12cbb24a08dc8ca987b91fd24ce1c24e85e930fd01268405ec64fe08ab52a7de9f1806e1f3c5886422d73780f5a69ff7015701f3d2c31094af1065ef722a86179a"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Virgil.Crypto, Version=2.4.6.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Virgil.CryptoImpl, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("VirgilCryptoAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Account.Application.Contracts, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Auditing.Contracts, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Auditing, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.AuditLogging.Domain.Shared, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Authorization.Abstractions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Authorization, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.BackgroundJobs.Domain.Shared, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.BackgroundWorkers, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Caching, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Core, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Data, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Ddd.Application.Contracts, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Ddd.Domain, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.DistributedLocking.Abstractions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.EventBus.Abstractions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.EventBus, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.ExceptionHandling, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.FeatureManagement.Application.Contracts, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.FeatureManagement.Domain.Shared, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Features, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Guids, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Identity.Application.Contracts, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Identity.Domain.Shared, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Json.Abstractions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Json, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Json.SystemTextJson, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Localization.Abstractions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Localization, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.MultiTenancy, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.ObjectExtending, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.ObjectMapping, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.OpenIddict.Domain.Shared, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.PermissionManagement.Application.Contracts, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.PermissionManagement.Domain.Shared, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Security, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Serialization, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.SettingManagement.Application.Contracts, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.SettingManagement.Domain.Shared, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Settings, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Specifications, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.TenantManagement.Application.Contracts, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.TenantManagement.Domain.Shared, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Threading, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Timing, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Uow, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Users.Abstractions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Users.Domain.Shared, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Validation.Abstractions, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.Validation, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Volo.Abp.VirtualFileSystem, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null")]
namespace OrleansGeneratedCode
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0")]
    internal sealed class OrleansCodeGenCAServer_Application_ContractsFeaturePopulator : global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Metadata.GrainInterfaceFeature>, global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Metadata.GrainClassFeature>, global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Serialization.SerializerFeature>
    {
        public void Populate(global::Orleans.Metadata.GrainInterfaceFeature feature)
        {
        }

        public void Populate(global::Orleans.Metadata.GrainClassFeature feature)
        {
        }

        public void Populate(global::Orleans.Serialization.SerializerFeature feature)
        {
            feature.AddKnownType("CAServer.AccountValidator.EmailValidator,CAServer.Application.Contracts", "CAServer.AccountValidator.EmailValidator");
            feature.AddKnownType("CAServer.AccountValidator.IAccountValidator,CAServer.Application.Contracts", "CAServer.AccountValidator.IAccountValidator");
            feature.AddKnownType("CAServer.AccountValidator.PhoneValidator,CAServer.Application.Contracts", "CAServer.AccountValidator.PhoneValidator");
            feature.AddKnownType("CAServer.AppleAuth.AppleAuthOptions,CAServer.Application.Contracts", "CAServer.AppleAuth.AppleAuthOptions");
            feature.AddKnownType("CAServer.AppleAuth.ExtensionConfig,CAServer.Application.Contracts", "CAServer.AppleAuth.ExtensionConfig");
            feature.AddKnownType("CAServer.AppleAuth.Dtos.AppleAuthDto,CAServer.Application.Contracts", "CAServer.AppleAuth.Dtos.AppleAuthDto");
            feature.AddKnownType("CAServer.AppleAuth.Dtos.AppleExtraInfo,CAServer.Application.Contracts", "CAServer.AppleAuth.Dtos.AppleExtraInfo");
            feature.AddKnownType("CAServer.AppleAuth.Dtos.AppleNameInfo,CAServer.Application.Contracts", "CAServer.AppleAuth.Dtos.AppleNameInfo");
            feature.AddKnownType("CAServer.AppleAuth.Dtos.AppleTokenDto,CAServer.Application.Contracts", "CAServer.AppleAuth.Dtos.AppleTokenDto");
            feature.AddKnownType("CAServer.AppleAuth.IAppleAuthAppService,CAServer.Application.Contracts", "CAServer.AppleAuth.IAppleAuthAppService");
            feature.AddKnownType("CAServer.Account.AccountOperationStatus,CAServer.Application.Contracts", "CAServer.Account.AccountOperationStatus");
            feature.AddKnownType("CAServer.Account.AccountCompletedMessageBase,CAServer.Application.Contracts", "CAServer.Account.AccountCompletedMessageBase");
            feature.AddKnownType("CAServer.Account.CAAccountBase,CAServer.Application.Contracts", "CAServer.Account.CAAccountBase");
            feature.AddKnownType("CAServer.Dtos.AccountResultDto,CAServer.Application.Contracts", "CAServer.Dtos.AccountResultDto");
            feature.AddKnownType("CAServer.Dtos.ActivityHeader,CAServer.Application.Contracts", "CAServer.Dtos.ActivityHeader");
            feature.AddKnownType("CAServer.Dtos.CAHolderDto,CAServer.Application.Contracts", "CAServer.Dtos.CAHolderDto");
            feature.AddKnownType("CAServer.Dtos.CAHolderResultDto,CAServer.Application.Contracts", "CAServer.Dtos.CAHolderResultDto");
            feature.AddKnownType("CAServer.Dtos.GuardianAccountInfoDto,CAServer.Application.Contracts", "CAServer.Dtos.GuardianAccountInfoDto");
            feature.AddKnownType("CAServer.Dtos.VerificationInfoDto,CAServer.Application.Contracts", "CAServer.Dtos.VerificationInfoDto");
            feature.AddKnownType("CAServer.Dtos.HubRequestContextDto,CAServer.Application.Contracts", "CAServer.Dtos.HubRequestContextDto");
            feature.AddKnownType("CAServer.Dtos.RecoveryDto,CAServer.Application.Contracts", "CAServer.Dtos.RecoveryDto");
            feature.AddKnownType("CAServer.Dtos.RecoveryRequestDto,CAServer.Application.Contracts", "CAServer.Dtos.RecoveryRequestDto");
            feature.AddKnownType("CAServer.Dtos.RecoveryGuardian,CAServer.Application.Contracts", "CAServer.Dtos.RecoveryGuardian");
            feature.AddKnownType("CAServer.Dtos.RegisterCompletedMessageDto,CAServer.Application.Contracts", "CAServer.Dtos.RegisterCompletedMessageDto");
            feature.AddKnownType("CAServer.Dtos.RegisterDto,CAServer.Application.Contracts", "CAServer.Dtos.RegisterDto");
            feature.AddKnownType("CAServer.Dtos.RegisterRequestDto,CAServer.Application.Contracts", "CAServer.Dtos.RegisterRequestDto");
            feature.AddKnownType("CAServer.Dtos.UpdateNickNameDto,CAServer.Application.Contracts", "CAServer.Dtos.UpdateNickNameDto");
            feature.AddKnownType("CAServer.Dtos.ValidManagerAttribute,CAServer.Application.Contracts", "CAServer.Dtos.ValidManagerAttribute");
            feature.AddKnownType("CAServer.Dtos.VerifierServerResponse,CAServer.Application.Contracts", "CAServer.Dtos.VerifierServerResponse");
            feature.AddKnownType("CAServer.CAAccount.Dtos.GuardianIdentifierType,CAServer.Application.Contracts", "CAServer.CAAccount.Dtos.GuardianIdentifierType");
            feature.AddKnownType("CAServer.CAAccount.Dtos.RecoveryCompletedMessageDto,CAServer.Application.Contracts", "CAServer.CAAccount.Dtos.RecoveryCompletedMessageDto");
            feature.AddKnownType("CAServer.CAAccount.Dtos.RegisterInfoDto,CAServer.Application.Contracts", "CAServer.CAAccount.Dtos.RegisterInfoDto");
            feature.AddKnownType("CAServer.CAAccount.Dtos.RegisterInfoResultDto,CAServer.Application.Contracts", "CAServer.CAAccount.Dtos.RegisterInfoResultDto");
            feature.AddKnownType("CAServer.CAAccount.ICAAccountAppService,CAServer.Application.Contracts", "CAServer.CAAccount.ICAAccountAppService");
            feature.AddKnownType("CAServer.CAAccount.INickNameAppService,CAServer.Application.Contracts", "CAServer.CAAccount.INickNameAppService");
            feature.AddKnownType("CAServer.Etos.AccountRecoverCompletedEto,CAServer.Application.Contracts", "CAServer.Etos.AccountRecoverCompletedEto");
            feature.AddKnownType("CAServer.Etos.AccountRecoverCreateEto,CAServer.Application.Contracts", "CAServer.Etos.AccountRecoverCreateEto");
            feature.AddKnownType("CAServer.Etos.AccountRegisterCompletedEto,CAServer.Application.Contracts", "CAServer.Etos.AccountRegisterCompletedEto");
            feature.AddKnownType("CAServer.Etos.AccountRegisterCreateEto,CAServer.Application.Contracts", "CAServer.Etos.AccountRegisterCreateEto");
            feature.AddKnownType("CAServer.Etos.CAAccountEto,CAServer.Application.Contracts", "CAServer.Etos.CAAccountEto");
            feature.AddKnownType("CAServer.Etos.CAAccountRecoveryEto,CAServer.Application.Contracts", "CAServer.Etos.CAAccountRecoveryEto");
            feature.AddKnownType("CAServer.Etos.Chain.ChainCreateEto,CAServer.Application.Contracts", "CAServer.Etos.Chain.ChainCreateEto");
            feature.AddKnownType("CAServer.Etos.Chain.ChainDeleteEto,CAServer.Application.Contracts", "CAServer.Etos.Chain.ChainDeleteEto");
            feature.AddKnownType("CAServer.Etos.Chain.ChainUpdateEto,CAServer.Application.Contracts", "CAServer.Etos.Chain.ChainUpdateEto");
            feature.AddKnownType("CAServer.Etos.ContactAddressEto,CAServer.Application.Contracts", "CAServer.Etos.ContactAddressEto");
            feature.AddKnownType("CAServer.Etos.ContactCreateEto,CAServer.Application.Contracts", "CAServer.Etos.ContactCreateEto");
            feature.AddKnownType("CAServer.Etos.ContactDeleteEto,CAServer.Application.Contracts", "CAServer.Etos.ContactDeleteEto");
            feature.AddKnownType("CAServer.Etos.ContactUpdateEto,CAServer.Application.Contracts", "CAServer.Etos.ContactUpdateEto");
            feature.AddKnownType("CAServer.Etos.CreateCAHolderEto,CAServer.Application.Contracts", "CAServer.Etos.CreateCAHolderEto");
            feature.AddKnownType("CAServer.Etos.CreateUserEto,CAServer.Application.Contracts", "CAServer.Etos.CreateUserEto");
            feature.AddKnownType("CAServer.Etos.UpdateCAHolderEto,CAServer.Application.Contracts", "CAServer.Etos.UpdateCAHolderEto");
            feature.AddKnownType("CAServer.CAActivity.Dtos.ActivityBase,CAServer.Application.Contracts", "CAServer.CAActivity.Dtos.ActivityBase");
            feature.AddKnownType("CAServer.CAActivity.Dtos.TransactionFee,CAServer.Application.Contracts", "CAServer.CAActivity.Dtos.TransactionFee");
            feature.AddKnownType("CAServer.CAActivity.Dtos.GetActivitiesRequestDto,CAServer.Application.Contracts", "CAServer.CAActivity.Dtos.GetActivitiesRequestDto");
            feature.AddKnownType("CAServer.CAActivity.Dtos.GetTwoCaTransactionRequestDto,CAServer.Application.Contracts", "CAServer.CAActivity.Dtos.GetTwoCaTransactionRequestDto");
            feature.AddKnownType("CAServer.CAActivity.Dto.GetActivitiesDto,CAServer.Application.Contracts", "CAServer.CAActivity.Dto.GetActivitiesDto");
            feature.AddKnownType("CAServer.CAActivity.Dto.GetActivityDto,CAServer.Application.Contracts", "CAServer.CAActivity.Dto.GetActivityDto");
            feature.AddKnownType("CAServer.CAActivity.Dto.NftDetail,CAServer.Application.Contracts", "CAServer.CAActivity.Dto.NftDetail");
            feature.AddKnownType("CAServer.CAActivity.Dto.GetActivityRequestDto,CAServer.Application.Contracts", "CAServer.CAActivity.Dto.GetActivityRequestDto");
            feature.AddKnownType("CAServer.CAActivity.Dto.TokenDto,CAServer.Application.Contracts", "CAServer.CAActivity.Dto.TokenDto");
            feature.AddKnownType("CAServer.CAActivity.Dto.TransactionType,CAServer.Application.Contracts", "CAServer.CAActivity.Dto.TransactionType");
            feature.AddKnownType("CAServer.CAActivity.Provider.IndexerTransactions,CAServer.Application.Contracts", "CAServer.CAActivity.Provider.IndexerTransactions");
            feature.AddKnownType("CAServer.CAActivity.Provider.TransactionsDto,CAServer.Application.Contracts", "CAServer.CAActivity.Provider.TransactionsDto");
            feature.AddKnownType("CAServer.CAActivity.Provider.CaHolderTransaction,CAServer.Application.Contracts", "CAServer.CAActivity.Provider.CaHolderTransaction");
            feature.AddKnownType("CAServer.CAActivity.Provider.IndexerTransaction,CAServer.Application.Contracts", "CAServer.CAActivity.Provider.IndexerTransaction");
            feature.AddKnownType("CAServer.CAActivity.Provider.TransferInfo,CAServer.Application.Contracts", "CAServer.CAActivity.Provider.TransferInfo");
            feature.AddKnownType("CAServer.CAActivity.Provider.IndexerTransactionFee,CAServer.Application.Contracts", "CAServer.CAActivity.Provider.IndexerTransactionFee");
            feature.AddKnownType("CAServer.CAActivity.Provider.IndexerSymbols,CAServer.Application.Contracts", "CAServer.CAActivity.Provider.IndexerSymbols");
            feature.AddKnownType("CAServer.CAActivity.Provider.SymbolInfo,CAServer.Application.Contracts", "CAServer.CAActivity.Provider.SymbolInfo");
            feature.AddKnownType("CAServer.CAActivity.Provider.CaHolderTransactionInfos,CAServer.Application.Contracts", "CAServer.CAActivity.Provider.CaHolderTransactionInfos");
            feature.AddKnownType("CAServer.CAActivity.IUserActivityAppService,CAServer.Application.Contracts", "CAServer.CAActivity.IUserActivityAppService");
            feature.AddKnownType("CAServer.Cache.ICacheProvider,CAServer.Application.Contracts", "CAServer.Cache.ICacheProvider");
            feature.AddKnownType("CAServer.CAServerApplicationConsts,CAServer.Application.Contracts", "CAServer.CAServerApplicationConsts");
            feature.AddKnownType("CAServer.CAServerApplicationContractsModule,CAServer.Application.Contracts", "CAServer.CAServerApplicationContractsModule");
            feature.AddKnownType("CAServer.Chain.ChainDto,CAServer.Application.Contracts", "CAServer.Chain.ChainDto");
            feature.AddKnownType("CAServer.Chain.DefaultToken,CAServer.Application.Contracts", "CAServer.Chain.DefaultToken");
            feature.AddKnownType("CAServer.Chain.ChainResultDto,CAServer.Application.Contracts", "CAServer.Chain.ChainResultDto");
            feature.AddKnownType("CAServer.Chain.CreateUpdateChainDto,CAServer.Application.Contracts", "CAServer.Chain.CreateUpdateChainDto");
            feature.AddKnownType("CAServer.Chain.IChainAppService,CAServer.Application.Contracts", "CAServer.Chain.IChainAppService");
            feature.AddKnownType("CAServer.ClaimToken.Dtos.ClaimTokenRequestDto,CAServer.Application.Contracts", "CAServer.ClaimToken.Dtos.ClaimTokenRequestDto");
            feature.AddKnownType("CAServer.ClaimToken.Dtos.ClaimTokenResponseDto,CAServer.Application.Contracts", "CAServer.ClaimToken.Dtos.ClaimTokenResponseDto");
            feature.AddKnownType("CAServer.ClaimToken.IClaimTokenAppService,CAServer.Application.Contracts", "CAServer.ClaimToken.IClaimTokenAppService");
            feature.AddKnownType("CAServer.Contacts.ContactAddressDto,CAServer.Application.Contracts", "CAServer.Contacts.ContactAddressDto");
            feature.AddKnownType("CAServer.Contacts.ContactDto,CAServer.Application.Contracts", "CAServer.Contacts.ContactDto");
            feature.AddKnownType("CAServer.Contacts.ContactResultDto,CAServer.Application.Contracts", "CAServer.Contacts.ContactResultDto");
            feature.AddKnownType("CAServer.Contacts.ContractExistDto,CAServer.Application.Contracts", "CAServer.Contacts.ContractExistDto");
            feature.AddKnownType("CAServer.Contacts.CreateUpdateContactDto,CAServer.Application.Contracts", "CAServer.Contacts.CreateUpdateContactDto");
            feature.AddKnownType("CAServer.Contacts.ValidAddressesAttribute,CAServer.Application.Contracts", "CAServer.Contacts.ValidAddressesAttribute");
            feature.AddKnownType("CAServer.Contacts.IContactAppService,CAServer.Application.Contracts", "CAServer.Contacts.IContactAppService");
            feature.AddKnownType("CAServer.ContractEventHandler.ContractServiceEto,CAServer.Application.Contracts", "CAServer.ContractEventHandler.ContractServiceEto");
            feature.AddKnownType("CAServer.ContractEventHandler.CreateHolderEto,CAServer.Application.Contracts", "CAServer.ContractEventHandler.CreateHolderEto");
            feature.AddKnownType("CAServer.ContractEventHandler.SocialRecoveryEto,CAServer.Application.Contracts", "CAServer.ContractEventHandler.SocialRecoveryEto");
            feature.AddKnownType("CAServer.Device.Dtos.DeviceServiceDto,CAServer.Application.Contracts", "CAServer.Device.Dtos.DeviceServiceDto");
            feature.AddKnownType("CAServer.Device.Dtos.DeviceServiceResultDto,CAServer.Application.Contracts", "CAServer.Device.Dtos.DeviceServiceResultDto");
            feature.AddKnownType("CAServer.Device.IDeviceAppService,CAServer.Application.Contracts", "CAServer.Device.IDeviceAppService");
            feature.AddKnownType("CAServer.Google.IGoogleAppService,CAServer.Application.Contracts", "CAServer.Google.IGoogleAppService");
            feature.AddKnownType("CAServer.Guardian.GuardianBase,CAServer.Application.Contracts", "CAServer.Guardian.GuardianBase");
            feature.AddKnownType("CAServer.Guardian.GuardianBaseListDto,CAServer.Application.Contracts", "CAServer.Guardian.GuardianBaseListDto");
            feature.AddKnownType("CAServer.Guardian.ManagerInfoDBase,CAServer.Application.Contracts", "CAServer.Guardian.ManagerInfoDBase");
            feature.AddKnownType("CAServer.Guardian.GuardianInfoBase,CAServer.Application.Contracts", "CAServer.Guardian.GuardianInfoBase");
            feature.AddKnownType("CAServer.Guardian.GuardianEto,CAServer.Application.Contracts", "CAServer.Guardian.GuardianEto");
            feature.AddKnownType("CAServer.Guardian.GuardianIdentifierDto,CAServer.Application.Contracts", "CAServer.Guardian.GuardianIdentifierDto");
            feature.AddKnownType("CAServer.Guardian.GuardianMessageCode,CAServer.Application.Contracts", "CAServer.Guardian.GuardianMessageCode");
            feature.AddKnownType("CAServer.Guardian.GuardianResultDto,CAServer.Application.Contracts", "CAServer.Guardian.GuardianResultDto");
            feature.AddKnownType("CAServer.Guardian.GuardianListDto,CAServer.Application.Contracts", "CAServer.Guardian.GuardianListDto");
            feature.AddKnownType("CAServer.Guardian.ManagerInfoDto,CAServer.Application.Contracts", "CAServer.Guardian.ManagerInfoDto");
            feature.AddKnownType("CAServer.Guardian.GuardianDto,CAServer.Application.Contracts", "CAServer.Guardian.GuardianDto");
            feature.AddKnownType("CAServer.Guardian.IGuardianAppService,CAServer.Application.Contracts", "CAServer.Guardian.IGuardianAppService");
            feature.AddKnownType("CAServer.Hubs.GetHubRequestDto,CAServer.Application.Contracts", "CAServer.Hubs.GetHubRequestDto");
            feature.AddKnownType("CAServer.Hubs.HubPingRequestDto,CAServer.Application.Contracts", "CAServer.Hubs.HubPingRequestDto");
            feature.AddKnownType("CAServer.Hubs.HubRequestBase,CAServer.Application.Contracts", "CAServer.Hubs.HubRequestBase");
            feature.AddKnownType("CAServer.Hubs.HubRequestContext,CAServer.Application.Contracts", "CAServer.Hubs.HubRequestContext");
            feature.AddKnownType("CAServer.Hubs.HubResponse`1,CAServer.Application.Contracts", "CAServer.Hubs.HubResponse`1'1");
            feature.AddKnownType("CAServer.Hubs.HubResponseBase`1,CAServer.Application.Contracts", "CAServer.Hubs.HubResponseBase`1'1");
            feature.AddKnownType("CAServer.Hubs.IHubProvider,CAServer.Application.Contracts", "CAServer.Hubs.IHubProvider");
            feature.AddKnownType("CAServer.Hubs.IHubService,CAServer.Application.Contracts", "CAServer.Hubs.IHubService");
            feature.AddKnownType("CAServer.IpInfo.IIpInfoAppService,CAServer.Application.Contracts", "CAServer.IpInfo.IIpInfoAppService");
            feature.AddKnownType("CAServer.IpInfo.IpInfoDto,CAServer.Application.Contracts", "CAServer.IpInfo.IpInfoDto");
            feature.AddKnownType("CAServer.IpInfo.LocationInfo,CAServer.Application.Contracts", "CAServer.IpInfo.LocationInfo");
            feature.AddKnownType("CAServer.IpInfo.LanguageInfo,CAServer.Application.Contracts", "CAServer.IpInfo.LanguageInfo");
            feature.AddKnownType("CAServer.IpInfo.IpInfoResultDto,CAServer.Application.Contracts", "CAServer.IpInfo.IpInfoResultDto");
            feature.AddKnownType("CAServer.Message.Dtos.ScanLoginDto,CAServer.Application.Contracts", "CAServer.Message.Dtos.ScanLoginDto");
            feature.AddKnownType("CAServer.Message.Etos.ScanLoginEto,CAServer.Application.Contracts", "CAServer.Message.Etos.ScanLoginEto");
            feature.AddKnownType("CAServer.Message.IMessageAppService,CAServer.Application.Contracts", "CAServer.Message.IMessageAppService");
            feature.AddKnownType("CAServer.Message.MessageBase`1,CAServer.Application.Contracts", "CAServer.Message.MessageBase`1'1");
            feature.AddKnownType("CAServer.Notify.Dtos.CmsNotifyDto,CAServer.Application.Contracts", "CAServer.Notify.Dtos.CmsNotifyDto");
            feature.AddKnownType("CAServer.Notify.Dtos.CmsNotify,CAServer.Application.Contracts", "CAServer.Notify.Dtos.CmsNotify");
            feature.AddKnownType("CAServer.Notify.Dtos.CmsAppVersion,CAServer.Application.Contracts", "CAServer.Notify.Dtos.CmsAppVersion");
            feature.AddKnownType("CAServer.Notify.Dtos.CmsCountry,CAServer.Application.Contracts", "CAServer.Notify.Dtos.CmsCountry");
            feature.AddKnownType("CAServer.Notify.Dtos.CmsDeviceBrand,CAServer.Application.Contracts", "CAServer.Notify.Dtos.CmsDeviceBrand");
            feature.AddKnownType("CAServer.Notify.Dtos.CmsDeviceType,CAServer.Application.Contracts", "CAServer.Notify.Dtos.CmsDeviceType");
            feature.AddKnownType("CAServer.Notify.Dtos.CmsTargetVersion,CAServer.Application.Contracts", "CAServer.Notify.Dtos.CmsTargetVersion");
            feature.AddKnownType("CAServer.Notify.Dtos.CmsStyleType,CAServer.Application.Contracts", "CAServer.Notify.Dtos.CmsStyleType");
            feature.AddKnownType("CAServer.Notify.Dtos.CmsOperatingSystemVersion,CAServer.Application.Contracts", "CAServer.Notify.Dtos.CmsOperatingSystemVersion");
            feature.AddKnownType("CAServer.Notify.Dtos.CmsValue`1,CAServer.Application.Contracts", "CAServer.Notify.Dtos.CmsValue`1'1");
            feature.AddKnownType("CAServer.Notify.Dtos.CreateNotifyDto,CAServer.Application.Contracts", "CAServer.Notify.Dtos.CreateNotifyDto");
            feature.AddKnownType("CAServer.Notify.Dtos.NotifyBaseDto,CAServer.Application.Contracts", "CAServer.Notify.Dtos.NotifyBaseDto");
            feature.AddKnownType("CAServer.Notify.Dtos.NotifyResultDto,CAServer.Application.Contracts", "CAServer.Notify.Dtos.NotifyResultDto");
            feature.AddKnownType("CAServer.Notify.Dtos.PullNotifyDto,CAServer.Application.Contracts", "CAServer.Notify.Dtos.PullNotifyDto");
            feature.AddKnownType("CAServer.Notify.Dtos.PullNotifyResultDto,CAServer.Application.Contracts", "CAServer.Notify.Dtos.PullNotifyResultDto");
            feature.AddKnownType("CAServer.Notify.Dtos.UpdateNotifyDto,CAServer.Application.Contracts", "CAServer.Notify.Dtos.UpdateNotifyDto");
            feature.AddKnownType("CAServer.Notify.Etos.DeleteNotifyEto,CAServer.Application.Contracts", "CAServer.Notify.Etos.DeleteNotifyEto");
            feature.AddKnownType("CAServer.Notify.Etos.NotifyEto,CAServer.Application.Contracts", "CAServer.Notify.Etos.NotifyEto");
            feature.AddKnownType("CAServer.Notify.INotifyAppService,CAServer.Application.Contracts", "CAServer.Notify.INotifyAppService");
            feature.AddKnownType("CAServer.Notify.NotifyBase,CAServer.Application.Contracts", "CAServer.Notify.NotifyBase");
            feature.AddKnownType("CAServer.Notify.NotifyRulesBase,CAServer.Application.Contracts", "CAServer.Notify.NotifyRulesBase");
            feature.AddKnownType("CAServer.Permissions.CAServerPermissionDefinitionProvider,CAServer.Application.Contracts", "CAServer.Permissions.CAServerPermissionDefinitionProvider");
            feature.AddKnownType("CAServer.Phone.Dtos.PhoneInfoListDto,CAServer.Application.Contracts", "CAServer.Phone.Dtos.PhoneInfoListDto");
            feature.AddKnownType("CAServer.Phone.Dtos.PhoneServiceResultDto,CAServer.Application.Contracts", "CAServer.Phone.Dtos.PhoneServiceResultDto");
            feature.AddKnownType("CAServer.Phone.IPhoneAppService,CAServer.Application.Contracts", "CAServer.Phone.IPhoneAppService");
            feature.AddKnownType("CAServer.Search.GetListInput,CAServer.Application.Contracts", "CAServer.Search.GetListInput");
            feature.AddKnownType("CAServer.Search.SortType,CAServer.Application.Contracts", "CAServer.Search.SortType");
            feature.AddKnownType("CAServer.Search.ISearchAppService,CAServer.Application.Contracts", "CAServer.Search.ISearchAppService");
            feature.AddKnownType("CAServer.security.SecurityRequestDto,CAServer.Application.Contracts", "CAServer.security.SecurityRequestDto");
            feature.AddKnownType("CAServer.Switch.Dtos.SwitchDto,CAServer.Application.Contracts", "CAServer.Switch.Dtos.SwitchDto");
            feature.AddKnownType("CAServer.Switch.ISwitchAppService,CAServer.Application.Contracts", "CAServer.Switch.ISwitchAppService");
            feature.AddKnownType("CAServer.ThirdPart.Dtos.GetAlchemyFreeLoginTokenDto,CAServer.Application.Contracts", "CAServer.ThirdPart.Dtos.GetAlchemyFreeLoginTokenDto");
            feature.AddKnownType("CAServer.ThirdPart.Dtos.GetAlchemyCryptoListDto,CAServer.Application.Contracts", "CAServer.ThirdPart.Dtos.GetAlchemyCryptoListDto");
            feature.AddKnownType("CAServer.ThirdPart.Dtos.GetAlchemyOrderQuoteDto,CAServer.Application.Contracts", "CAServer.ThirdPart.Dtos.GetAlchemyOrderQuoteDto");
            feature.AddKnownType("CAServer.ThirdPart.Dtos.GetAlchemySignatureDto,CAServer.Application.Contracts", "CAServer.ThirdPart.Dtos.GetAlchemySignatureDto");
            feature.AddKnownType("CAServer.ThirdPart.Dtos.AlchemyOrderUpdateDto,CAServer.Application.Contracts", "CAServer.ThirdPart.Dtos.AlchemyOrderUpdateDto");
            feature.AddKnownType("CAServer.ThirdPart.Dtos.AlchemyBaseResponseDto,CAServer.Application.Contracts", "CAServer.ThirdPart.Dtos.AlchemyBaseResponseDto");
            feature.AddKnownType("CAServer.ThirdPart.Dtos.AlchemyTokenDto,CAServer.Application.Contracts", "CAServer.ThirdPart.Dtos.AlchemyTokenDto");
            feature.AddKnownType("CAServer.ThirdPart.Dtos.AlchemyTokenDataDto,CAServer.Application.Contracts", "CAServer.ThirdPart.Dtos.AlchemyTokenDataDto");
            feature.AddKnownType("CAServer.ThirdPart.Dtos.AlchemyFiatListDto,CAServer.Application.Contracts", "CAServer.ThirdPart.Dtos.AlchemyFiatListDto");
            feature.AddKnownType("CAServer.ThirdPart.Dtos.AlchemyFiatDto,CAServer.Application.Contracts", "CAServer.ThirdPart.Dtos.AlchemyFiatDto");
            feature.AddKnownType("CAServer.ThirdPart.Dtos.AlchemyCryptoListDto,CAServer.Application.Contracts", "CAServer.ThirdPart.Dtos.AlchemyCryptoListDto");
            feature.AddKnownType("CAServer.ThirdPart.Dtos.AlchemyCryptoDto,CAServer.Application.Contracts", "CAServer.ThirdPart.Dtos.AlchemyCryptoDto");
            feature.AddKnownType("CAServer.ThirdPart.Dtos.AlchemyOrderQuoteResultDto,CAServer.Application.Contracts", "CAServer.ThirdPart.Dtos.AlchemyOrderQuoteResultDto");
            feature.AddKnownType("CAServer.ThirdPart.Dtos.AlchemyOrderQuoteDataDto,CAServer.Application.Contracts", "CAServer.ThirdPart.Dtos.AlchemyOrderQuoteDataDto");
            feature.AddKnownType("CAServer.ThirdPart.Dtos.AlchemySignatureResultDto,CAServer.Application.Contracts", "CAServer.ThirdPart.Dtos.AlchemySignatureResultDto");
            feature.AddKnownType("CAServer.ThirdPart.Dtos.MerchantNameType,CAServer.Application.Contracts", "CAServer.ThirdPart.Dtos.MerchantNameType");
            feature.AddKnownType("CAServer.ThirdPart.Dtos.TransferDirectionType,CAServer.Application.Contracts", "CAServer.ThirdPart.Dtos.TransferDirectionType");
            feature.AddKnownType("CAServer.ThirdPart.Dtos.OrderStatusType,CAServer.Application.Contracts", "CAServer.ThirdPart.Dtos.OrderStatusType");
            feature.AddKnownType("CAServer.ThirdPart.Dtos.CreateUserOrderDto,CAServer.Application.Contracts", "CAServer.ThirdPart.Dtos.CreateUserOrderDto");
            feature.AddKnownType("CAServer.ThirdPart.Dtos.GetUserOrdersDto,CAServer.Application.Contracts", "CAServer.ThirdPart.Dtos.GetUserOrdersDto");
            feature.AddKnownType("CAServer.ThirdPart.Dtos.BasicOrderResult,CAServer.Application.Contracts", "CAServer.ThirdPart.Dtos.BasicOrderResult");
            feature.AddKnownType("CAServer.ThirdPart.Dtos.OrderCreatedDto,CAServer.Application.Contracts", "CAServer.ThirdPart.Dtos.OrderCreatedDto");
            feature.AddKnownType("CAServer.ThirdPart.Dtos.OrdersDto,CAServer.Application.Contracts", "CAServer.ThirdPart.Dtos.OrdersDto");
            feature.AddKnownType("CAServer.ThirdPart.Dtos.OrderDto,CAServer.Application.Contracts", "CAServer.ThirdPart.Dtos.OrderDto");
            feature.AddKnownType("CAServer.ThirdPart.Etos.OrderEto,CAServer.Application.Contracts", "CAServer.ThirdPart.Etos.OrderEto");
            feature.AddKnownType("CAServer.ThirdPart.IAlchemyOrderAppService,CAServer.Application.Contracts", "CAServer.ThirdPart.IAlchemyOrderAppService");
            feature.AddKnownType("CAServer.ThirdPart.IAlchemyServiceAppService,CAServer.Application.Contracts", "CAServer.ThirdPart.IAlchemyServiceAppService");
            feature.AddKnownType("CAServer.ThirdPart.IThirdPartOrderAppService,CAServer.Application.Contracts", "CAServer.ThirdPart.IThirdPartOrderAppService");
            feature.AddKnownType("CAServer.Tokens.Dtos.AddUserTokenInput,CAServer.Application.Contracts", "CAServer.Tokens.Dtos.AddUserTokenInput");
            feature.AddKnownType("CAServer.Tokens.Dtos.ContractAddressDto,CAServer.Application.Contracts", "CAServer.Tokens.Dtos.ContractAddressDto");
            feature.AddKnownType("CAServer.Tokens.Dtos.GetTokenHistoryPriceInput,CAServer.Application.Contracts", "CAServer.Tokens.Dtos.GetTokenHistoryPriceInput");
            feature.AddKnownType("CAServer.Tokens.Dtos.GetUserTokenListInput,CAServer.Application.Contracts", "CAServer.Tokens.Dtos.GetUserTokenListInput");
            feature.AddKnownType("CAServer.Tokens.Dtos.TokenPriceDataDto,CAServer.Application.Contracts", "CAServer.Tokens.Dtos.TokenPriceDataDto");
            feature.AddKnownType("CAServer.Tokens.Dtos.UserTokenDto,CAServer.Application.Contracts", "CAServer.Tokens.Dtos.UserTokenDto");
            feature.AddKnownType("CAServer.Tokens.Dtos.Token,CAServer.Application.Contracts", "CAServer.Tokens.Dtos.Token");
            feature.AddKnownType("CAServer.Tokens.Etos.UserTokenEto,CAServer.Application.Contracts", "CAServer.Tokens.Etos.UserTokenEto");
            feature.AddKnownType("CAServer.Tokens.ITokenAppService,CAServer.Application.Contracts", "CAServer.Tokens.ITokenAppService");
            feature.AddKnownType("CAServer.Tokens.IUserTokenAppService,CAServer.Application.Contracts", "CAServer.Tokens.IUserTokenAppService");
            feature.AddKnownType("CAServer.UserAssets.Dtos.GetNftItemsDto,CAServer.Application.Contracts", "CAServer.UserAssets.Dtos.GetNftItemsDto");
            feature.AddKnownType("CAServer.UserAssets.Dtos.NftItem,CAServer.Application.Contracts", "CAServer.UserAssets.Dtos.NftItem");
            feature.AddKnownType("CAServer.UserAssets.Dtos.GetNftCollectionsDto,CAServer.Application.Contracts", "CAServer.UserAssets.Dtos.GetNftCollectionsDto");
            feature.AddKnownType("CAServer.UserAssets.Dtos.NftCollection,CAServer.Application.Contracts", "CAServer.UserAssets.Dtos.NftCollection");
            feature.AddKnownType("CAServer.UserAssets.Dtos.GetRecentTransactionUsersDto,CAServer.Application.Contracts", "CAServer.UserAssets.Dtos.GetRecentTransactionUsersDto");
            feature.AddKnownType("CAServer.UserAssets.Dtos.RecentTransactionUser,CAServer.Application.Contracts", "CAServer.UserAssets.Dtos.RecentTransactionUser");
            feature.AddKnownType("CAServer.UserAssets.Dtos.UserContactAddressDto,CAServer.Application.Contracts", "CAServer.UserAssets.Dtos.UserContactAddressDto");
            feature.AddKnownType("CAServer.UserAssets.Dtos.GetTokenDto,CAServer.Application.Contracts", "CAServer.UserAssets.Dtos.GetTokenDto");
            feature.AddKnownType("CAServer.UserAssets.Dtos.Token,CAServer.Application.Contracts", "CAServer.UserAssets.Dtos.Token");
            feature.AddKnownType("CAServer.UserAssets.Dtos.IndexerChainIds,CAServer.Application.Contracts", "CAServer.UserAssets.Dtos.IndexerChainIds");
            feature.AddKnownType("CAServer.UserAssets.Dtos.UserChainInfo,CAServer.Application.Contracts", "CAServer.UserAssets.Dtos.UserChainInfo");
            feature.AddKnownType("CAServer.UserAssets.Dtos.SearchUserAssetsDto,CAServer.Application.Contracts", "CAServer.UserAssets.Dtos.SearchUserAssetsDto");
            feature.AddKnownType("CAServer.UserAssets.Dtos.UserAsset,CAServer.Application.Contracts", "CAServer.UserAssets.Dtos.UserAsset");
            feature.AddKnownType("CAServer.UserAssets.Dtos.TokenInfoDto,CAServer.Application.Contracts", "CAServer.UserAssets.Dtos.TokenInfoDto");
            feature.AddKnownType("CAServer.UserAssets.Dtos.NftInfoDto,CAServer.Application.Contracts", "CAServer.UserAssets.Dtos.NftInfoDto");
            feature.AddKnownType("CAServer.UserAssets.Dtos.SymbolImagesDto,CAServer.Application.Contracts", "CAServer.UserAssets.Dtos.SymbolImagesDto");
            feature.AddKnownType("CAServer.UserAssets.Provider.IndexerNftInfos,CAServer.Application.Contracts", "CAServer.UserAssets.Provider.IndexerNftInfos");
            feature.AddKnownType("CAServer.UserAssets.Provider.CaHolderNFTBalanceInfo,CAServer.Application.Contracts", "CAServer.UserAssets.Provider.CaHolderNFTBalanceInfo");
            feature.AddKnownType("CAServer.UserAssets.Provider.IndexerNftInfo,CAServer.Application.Contracts", "CAServer.UserAssets.Provider.IndexerNftInfo");
            feature.AddKnownType("CAServer.UserAssets.Provider.NftInfo,CAServer.Application.Contracts", "CAServer.UserAssets.Provider.NftInfo");
            feature.AddKnownType("CAServer.UserAssets.Provider.IndexerTokenInfos,CAServer.Application.Contracts", "CAServer.UserAssets.Provider.IndexerTokenInfos");
            feature.AddKnownType("CAServer.UserAssets.Provider.CaHolderTokenBalanceInfo,CAServer.Application.Contracts", "CAServer.UserAssets.Provider.CaHolderTokenBalanceInfo");
            feature.AddKnownType("CAServer.UserAssets.Provider.IndexerTokenInfo,CAServer.Application.Contracts", "CAServer.UserAssets.Provider.IndexerTokenInfo");
            feature.AddKnownType("CAServer.UserAssets.Provider.TokenInfo,CAServer.Application.Contracts", "CAServer.UserAssets.Provider.TokenInfo");
            feature.AddKnownType("CAServer.UserAssets.GetAssetsBase,CAServer.Application.Contracts", "CAServer.UserAssets.GetAssetsBase");
            feature.AddKnownType("CAServer.UserAssets.CAAddressInfo,CAServer.Application.Contracts", "CAServer.UserAssets.CAAddressInfo");
            feature.AddKnownType("CAServer.UserAssets.GetNftItemsRequestDto,CAServer.Application.Contracts", "CAServer.UserAssets.GetNftItemsRequestDto");
            feature.AddKnownType("CAServer.UserAssets.GetNftCollectionsRequestDto,CAServer.Application.Contracts", "CAServer.UserAssets.GetNftCollectionsRequestDto");
            feature.AddKnownType("CAServer.UserAssets.GetRecentTransactionUsersRequestDto,CAServer.Application.Contracts", "CAServer.UserAssets.GetRecentTransactionUsersRequestDto");
            feature.AddKnownType("CAServer.UserAssets.GetTokenRequestDto,CAServer.Application.Contracts", "CAServer.UserAssets.GetTokenRequestDto");
            feature.AddKnownType("CAServer.UserAssets.IUserAssetsAppService,CAServer.Application.Contracts", "CAServer.UserAssets.IUserAssetsAppService");
            feature.AddKnownType("CAServer.UserAssets.SearchUserAssetsRequestDto,CAServer.Application.Contracts", "CAServer.UserAssets.SearchUserAssetsRequestDto");
            feature.AddKnownType("CAServer.UserExtraInfo.Dtos.AddAppleUserExtraInfoDto,CAServer.Application.Contracts", "CAServer.UserExtraInfo.Dtos.AddAppleUserExtraInfoDto");
            feature.AddKnownType("CAServer.UserExtraInfo.Dtos.AppleUserInfoDto,CAServer.Application.Contracts", "CAServer.UserExtraInfo.Dtos.AppleUserInfoDto");
            feature.AddKnownType("CAServer.UserExtraInfo.Dtos.AppleUserName,CAServer.Application.Contracts", "CAServer.UserExtraInfo.Dtos.AppleUserName");
            feature.AddKnownType("CAServer.UserExtraInfo.Dtos.AddAppleUserExtraInfoResultDto,CAServer.Application.Contracts", "CAServer.UserExtraInfo.Dtos.AddAppleUserExtraInfoResultDto");
            feature.AddKnownType("CAServer.UserExtraInfo.Dtos.UserExtraInfoResultDto,CAServer.Application.Contracts", "CAServer.UserExtraInfo.Dtos.UserExtraInfoResultDto");
            feature.AddKnownType("CAServer.UserExtraInfo.IUserExtraInfoAppService,CAServer.Application.Contracts", "CAServer.UserExtraInfo.IUserExtraInfoAppService");
            feature.AddKnownType("CAServer.Verifier.Dtos.GoogleUserInfoDto,CAServer.Application.Contracts", "CAServer.Verifier.Dtos.GoogleUserInfoDto");
            feature.AddKnownType("CAServer.Verifier.Dtos.UserExtraInfo,CAServer.Application.Contracts", "CAServer.Verifier.Dtos.UserExtraInfo");
            feature.AddKnownType("CAServer.Verifier.Dtos.VerifierCodeRequestDto,CAServer.Application.Contracts", "CAServer.Verifier.Dtos.VerifierCodeRequestDto");
            feature.AddKnownType("CAServer.Verifier.Dtos.VerifyAppleTokenDto,CAServer.Application.Contracts", "CAServer.Verifier.Dtos.VerifyAppleTokenDto");
            feature.AddKnownType("CAServer.Verifier.Dtos.AppleUserExtraInfo,CAServer.Application.Contracts", "CAServer.Verifier.Dtos.AppleUserExtraInfo");
            feature.AddKnownType("CAServer.Verifier.Dtos.VerifyGoogleTokenDto,CAServer.Application.Contracts", "CAServer.Verifier.Dtos.VerifyGoogleTokenDto");
            feature.AddKnownType("CAServer.Verifier.Dtos.GoogleUserExtraInfo,CAServer.Application.Contracts", "CAServer.Verifier.Dtos.GoogleUserExtraInfo");
            feature.AddKnownType("CAServer.Verifier.Dtos.HashInfo,CAServer.Application.Contracts", "CAServer.Verifier.Dtos.HashInfo");
            feature.AddKnownType("CAServer.Verifier.Dtos.VerifyTokenRequestDto,CAServer.Application.Contracts", "CAServer.Verifier.Dtos.VerifyTokenRequestDto");
            feature.AddKnownType("CAServer.Verifier.Etos.UserExtraInfoEto,CAServer.Application.Contracts", "CAServer.Verifier.Etos.UserExtraInfoEto");
            feature.AddKnownType("CAServer.Verifier.Etos.VerifierCodeEto,CAServer.Application.Contracts", "CAServer.Verifier.Etos.VerifierCodeEto");
            feature.AddKnownType("CAServer.Verifier.GuardianVerifierServer,CAServer.Application.Contracts", "CAServer.Verifier.GuardianVerifierServer");
            feature.AddKnownType("CAServer.Verifier.GuardianVerifierServerCacheItem,CAServer.Application.Contracts", "CAServer.Verifier.GuardianVerifierServerCacheItem");
            feature.AddKnownType("CAServer.Verifier.IVerifierAppService,CAServer.Application.Contracts", "CAServer.Verifier.IVerifierAppService");
            feature.AddKnownType("CAServer.Verifier.OperationType,CAServer.Application.Contracts", "CAServer.Verifier.OperationType");
            feature.AddKnownType("CAServer.Verifier.ResponseResultDto`1,CAServer.Application.Contracts", "CAServer.Verifier.ResponseResultDto`1'1");
            feature.AddKnownType("CAServer.Verifier.SendVerificationRequestInput,CAServer.Application.Contracts", "CAServer.Verifier.SendVerificationRequestInput");
            feature.AddKnownType("CAServer.Verifier.VerificationCodeResponse,CAServer.Application.Contracts", "CAServer.Verifier.VerificationCodeResponse");
            feature.AddKnownType("CAServer.Verifier.VerificationSignatureRequestDto,CAServer.Application.Contracts", "CAServer.Verifier.VerificationSignatureRequestDto");
            feature.AddKnownType("CAServer.Verifier.VerifierServerBase,CAServer.Application.Contracts", "CAServer.Verifier.VerifierServerBase");
            feature.AddKnownType("CAServer.Verifier.VerifierServerInfo,CAServer.Application.Contracts", "CAServer.Verifier.VerifierServerInfo");
            feature.AddKnownType("CAServer.Verifier.VerifierServerInput,CAServer.Application.Contracts", "CAServer.Verifier.VerifierServerInput");
            feature.AddKnownType("CAServer.Verifier.VierifierCodeRequestInput,CAServer.Application.Contracts", "CAServer.Verifier.VierifierCodeRequestInput");
            feature.AddKnownType("AElf.Standards.ACS0.ContractProposed,CAServer.Application.Contracts", "AElf.Standards.ACS0.ContractProposed");
            feature.AddKnownType("AElf.Standards.ACS0.ContractDeployed,CAServer.Application.Contracts", "AElf.Standards.ACS0.ContractDeployed");
            feature.AddKnownType("AElf.Standards.ACS0.CodeCheckRequired,CAServer.Application.Contracts", "AElf.Standards.ACS0.CodeCheckRequired");
            feature.AddKnownType("AElf.Standards.ACS0.CodeUpdated,CAServer.Application.Contracts", "AElf.Standards.ACS0.CodeUpdated");
            feature.AddKnownType("AElf.Standards.ACS0.ACS0Container+ACS0ReferenceState,CAServer.Application.Contracts", "AElf.Standards.ACS0.AElf.Standards.ACS0.ACS0Container.ACS0ReferenceState");
            feature.AddKnownType("AElf.Standards.ACS0.ContractInfo,CAServer.Application.Contracts", "AElf.Standards.ACS0.ContractInfo");
            feature.AddKnownType("AElf.Standards.ACS0.ContractDeploymentInput,CAServer.Application.Contracts", "AElf.Standards.ACS0.ContractDeploymentInput");
            feature.AddKnownType("AElf.Standards.ACS0.SystemContractDeploymentInput,CAServer.Application.Contracts", "AElf.Standards.ACS0.SystemContractDeploymentInput");
            feature.AddKnownType("AElf.Standards.ACS0.SystemContractDeploymentInput+Types+SystemTransactionMethodCall,CAServer.Application.Contracts", "AElf.Standards.ACS0.SystemTransactionMethodCall");
            feature.AddKnownType("AElf.Standards.ACS0.SystemContractDeploymentInput+Types+SystemTransactionMethodCallList,CAServer.Application.Contracts", "AElf.Standards.ACS0.SystemTransactionMethodCallList");
            feature.AddKnownType("AElf.Standards.ACS0.ContractUpdateInput,CAServer.Application.Contracts", "AElf.Standards.ACS0.ContractUpdateInput");
            feature.AddKnownType("AElf.Standards.ACS0.ContractCodeCheckInput,CAServer.Application.Contracts", "AElf.Standards.ACS0.ContractCodeCheckInput");
            feature.AddKnownType("AElf.Standards.ACS0.ValidateSystemContractAddressInput,CAServer.Application.Contracts", "AElf.Standards.ACS0.ValidateSystemContractAddressInput");
            feature.AddKnownType("AElf.Standards.ACS0.ReleaseContractInput,CAServer.Application.Contracts", "AElf.Standards.ACS0.ReleaseContractInput");
            feature.AddKnownType("AElf.Standards.ACS0.ContractCodeHashList,CAServer.Application.Contracts", "AElf.Standards.ACS0.ContractCodeHashList");
            feature.AddKnownType("AElf.Standards.ACS0.ContractCodeHashMap,CAServer.Application.Contracts", "AElf.Standards.ACS0.ContractCodeHashMap");
            feature.AddKnownType("AElf.Standards.ACS1.MethodFees,CAServer.Application.Contracts", "AElf.Standards.ACS1.MethodFees");
            feature.AddKnownType("AElf.Standards.ACS1.MethodFee,CAServer.Application.Contracts", "AElf.Standards.ACS1.MethodFee");
            feature.AddKnownType("AElf.Standards.ACS11.CrossChainInteractionContractContainer+CrossChainInteractionContractReferenceState,CAServer.Application.Contracts", "AElf.Standards.ACS11.AElf.Standards.ACS11.CrossChainInteractionContractContainer.CrossChainInteractionContractReferenceState");
            feature.AddKnownType("AElf.Standards.ACS3.ProposalCreated,CAServer.Application.Contracts", "AElf.Standards.ACS3.ProposalCreated");
            feature.AddKnownType("AElf.Standards.ACS3.ProposalReleased,CAServer.Application.Contracts", "AElf.Standards.ACS3.ProposalReleased");
            feature.AddKnownType("AElf.Standards.ACS3.OrganizationCreated,CAServer.Application.Contracts", "AElf.Standards.ACS3.OrganizationCreated");
            feature.AddKnownType("AElf.Standards.ACS3.ReceiptCreated,CAServer.Application.Contracts", "AElf.Standards.ACS3.ReceiptCreated");
            feature.AddKnownType("AElf.Standards.ACS3.OrganizationWhiteListChanged,CAServer.Application.Contracts", "AElf.Standards.ACS3.OrganizationWhiteListChanged");
            feature.AddKnownType("AElf.Standards.ACS3.OrganizationThresholdChanged,CAServer.Application.Contracts", "AElf.Standards.ACS3.OrganizationThresholdChanged");
            feature.AddKnownType("AElf.Standards.ACS3.AuthorizationContractContainer+AuthorizationContractReferenceState,CAServer.Application.Contracts", "AElf.Standards.ACS3.AElf.Standards.ACS3.AuthorizationContractContainer.AuthorizationContractReferenceState");
            feature.AddKnownType("AElf.Standards.ACS3.CreateProposalInput,CAServer.Application.Contracts", "AElf.Standards.ACS3.CreateProposalInput");
            feature.AddKnownType("AElf.Standards.ACS3.ProposalOutput,CAServer.Application.Contracts", "AElf.Standards.ACS3.ProposalOutput");
            feature.AddKnownType("AElf.Standards.ACS3.ProposalReleaseThreshold,CAServer.Application.Contracts", "AElf.Standards.ACS3.ProposalReleaseThreshold");
            feature.AddKnownType("AElf.Standards.ACS3.ProposerWhiteList,CAServer.Application.Contracts", "AElf.Standards.ACS3.ProposerWhiteList");
            feature.AddKnownType("AElf.Standards.ACS3.OrganizationHashAddressPair,CAServer.Application.Contracts", "AElf.Standards.ACS3.OrganizationHashAddressPair");
            feature.AddKnownType("AElf.Standards.ACS3.CreateProposalBySystemContractInput,CAServer.Application.Contracts", "AElf.Standards.ACS3.CreateProposalBySystemContractInput");
            feature.AddKnownType("AElf.Standards.ACS3.ValidateProposerInWhiteListInput,CAServer.Application.Contracts", "AElf.Standards.ACS3.ValidateProposerInWhiteListInput");
            feature.AddKnownType("AElf.Standards.ACS7.SideChainBlockDataIndexed,CAServer.Application.Contracts", "AElf.Standards.ACS7.SideChainBlockDataIndexed");
            feature.AddKnownType("AElf.Standards.ACS7.CrossChainIndexingDataProposedEvent,CAServer.Application.Contracts", "AElf.Standards.ACS7.CrossChainIndexingDataProposedEvent");
            feature.AddKnownType("AElf.Standards.ACS7.SideChainBlockData,CAServer.Application.Contracts", "AElf.Standards.ACS7.SideChainBlockData");
            feature.AddKnownType("AElf.Standards.ACS7.RechargeInput,CAServer.Application.Contracts", "AElf.Standards.ACS7.RechargeInput");
            feature.AddKnownType("AElf.Standards.ACS7.ParentChainBlockData,CAServer.Application.Contracts", "AElf.Standards.ACS7.ParentChainBlockData");
            feature.AddKnownType("AElf.Standards.ACS7.CrossChainExtraData,CAServer.Application.Contracts", "AElf.Standards.ACS7.CrossChainExtraData");
            feature.AddKnownType("AElf.Standards.ACS7.ChainIdAndHeightDict,CAServer.Application.Contracts", "AElf.Standards.ACS7.ChainIdAndHeightDict");
            feature.AddKnownType("AElf.Standards.ACS7.SideChainIndexingInformationList,CAServer.Application.Contracts", "AElf.Standards.ACS7.SideChainIndexingInformationList");
            feature.AddKnownType("AElf.Standards.ACS7.SideChainIndexingInformation,CAServer.Application.Contracts", "AElf.Standards.ACS7.SideChainIndexingInformation");
            feature.AddKnownType("AElf.Standards.ACS7.CrossChainBlockData,CAServer.Application.Contracts", "AElf.Standards.ACS7.CrossChainBlockData");
            feature.AddKnownType("AElf.Standards.ACS7.CrossChainMerkleProofContext,CAServer.Application.Contracts", "AElf.Standards.ACS7.CrossChainMerkleProofContext");
            feature.AddKnownType("AElf.Standards.ACS7.ChainInitializationData,CAServer.Application.Contracts", "AElf.Standards.ACS7.ChainInitializationData");
            feature.AddKnownType("AElf.Standards.ACS7.ResourceTokenInfo,CAServer.Application.Contracts", "AElf.Standards.ACS7.ResourceTokenInfo");
            feature.AddKnownType("AElf.Standards.ACS7.ChainPrimaryTokenInfo,CAServer.Application.Contracts", "AElf.Standards.ACS7.ChainPrimaryTokenInfo");
            feature.AddKnownType("AElf.Standards.ACS7.ChainInitializationConsensusInfo,CAServer.Application.Contracts", "AElf.Standards.ACS7.ChainInitializationConsensusInfo");
            feature.AddKnownType("AElf.Standards.ACS7.SideChainCreationRequest,CAServer.Application.Contracts", "AElf.Standards.ACS7.SideChainCreationRequest");
            feature.AddKnownType("AElf.Standards.ACS7.SideChainTokenCreationRequest,CAServer.Application.Contracts", "AElf.Standards.ACS7.SideChainTokenCreationRequest");
            feature.AddKnownType("AElf.Standards.ACS7.SideChainTokenInitialIssue,CAServer.Application.Contracts", "AElf.Standards.ACS7.SideChainTokenInitialIssue");
            feature.AddKnownType("AElf.Standards.ACS7.IndexedParentChainBlockData,CAServer.Application.Contracts", "AElf.Standards.ACS7.IndexedParentChainBlockData");
            feature.AddKnownType("AElf.Standards.ACS7.IndexedSideChainBlockData,CAServer.Application.Contracts", "AElf.Standards.ACS7.IndexedSideChainBlockData");
            feature.AddKnownType("AElf.Standards.ACS7.ReleaseCrossChainIndexingProposalInput,CAServer.Application.Contracts", "AElf.Standards.ACS7.ReleaseCrossChainIndexingProposalInput");
            feature.AddKnownType("AElf.Standards.ACS7.CreateSideChainInput,CAServer.Application.Contracts", "AElf.Standards.ACS7.CreateSideChainInput");
            feature.AddKnownType("AElf.Standards.ACS7.ReleaseSideChainCreationInput,CAServer.Application.Contracts", "AElf.Standards.ACS7.ReleaseSideChainCreationInput");
            feature.AddKnownType("AElf.Standards.ACS7.AdjustIndexingFeeInput,CAServer.Application.Contracts", "AElf.Standards.ACS7.AdjustIndexingFeeInput");
            feature.AddKnownType("AElf.Standards.ACS7.VerifyTransactionInput,CAServer.Application.Contracts", "AElf.Standards.ACS7.VerifyTransactionInput");
            feature.AddKnownType("AElf.Contracts.CrossChain.SideChainCreatedEvent,CAServer.Application.Contracts", "AElf.Contracts.CrossChain.SideChainCreatedEvent");
            feature.AddKnownType("AElf.Contracts.CrossChain.Disposed,CAServer.Application.Contracts", "AElf.Contracts.CrossChain.Disposed");
            feature.AddKnownType("AElf.Contracts.CrossChain.SideChainLifetimeControllerChanged,CAServer.Application.Contracts", "AElf.Contracts.CrossChain.SideChainLifetimeControllerChanged");
            feature.AddKnownType("AElf.Contracts.CrossChain.CrossChainIndexingControllerChanged,CAServer.Application.Contracts", "AElf.Contracts.CrossChain.CrossChainIndexingControllerChanged");
            feature.AddKnownType("AElf.Contracts.CrossChain.SideChainIndexingFeeControllerChanged,CAServer.Application.Contracts", "AElf.Contracts.CrossChain.SideChainIndexingFeeControllerChanged");
            feature.AddKnownType("AElf.Contracts.CrossChain.SideChainIndexed,CAServer.Application.Contracts", "AElf.Contracts.CrossChain.SideChainIndexed");
            feature.AddKnownType("AElf.Contracts.CrossChain.ParentChainIndexed,CAServer.Application.Contracts", "AElf.Contracts.CrossChain.ParentChainIndexed");
            feature.AddKnownType("AElf.Contracts.CrossChain.CrossChainIndexingProposalStatus,CAServer.Application.Contracts", "AElf.Contracts.CrossChain.CrossChainIndexingProposalStatus");
            feature.AddKnownType("AElf.Contracts.CrossChain.SideChainStatus,CAServer.Application.Contracts", "AElf.Contracts.CrossChain.SideChainStatus");
            feature.AddKnownType("AElf.Contracts.CrossChain.InitializeInput,CAServer.Application.Contracts", "AElf.Contracts.CrossChain.InitializeInput");
            feature.AddKnownType("AElf.Contracts.CrossChain.ProposedCrossChainIndexing,CAServer.Application.Contracts", "AElf.Contracts.CrossChain.ProposedCrossChainIndexing");
            feature.AddKnownType("AElf.Contracts.CrossChain.ChainIndexingProposal,CAServer.Application.Contracts", "AElf.Contracts.CrossChain.ChainIndexingProposal");
            feature.AddKnownType("AElf.Contracts.CrossChain.GetIndexingProposalStatusOutput,CAServer.Application.Contracts", "AElf.Contracts.CrossChain.GetIndexingProposalStatusOutput");
            feature.AddKnownType("AElf.Contracts.CrossChain.PendingChainIndexingProposalStatus,CAServer.Application.Contracts", "AElf.Contracts.CrossChain.PendingChainIndexingProposalStatus");
            feature.AddKnownType("AElf.Contracts.CrossChain.GetPendingCrossChainIndexingProposalOutput,CAServer.Application.Contracts", "AElf.Contracts.CrossChain.GetPendingCrossChainIndexingProposalOutput");
            feature.AddKnownType("AElf.Contracts.CrossChain.SideChainInfo,CAServer.Application.Contracts", "AElf.Contracts.CrossChain.SideChainInfo");
            feature.AddKnownType("AElf.Contracts.CrossChain.GetChainStatusOutput,CAServer.Application.Contracts", "AElf.Contracts.CrossChain.GetChainStatusOutput");
            feature.AddKnownType("AElf.Contracts.CrossChain.SideChainCreationRequestState,CAServer.Application.Contracts", "AElf.Contracts.CrossChain.SideChainCreationRequestState");
            feature.AddKnownType("AElf.Contracts.CrossChain.ChangeSideChainIndexingFeeControllerInput,CAServer.Application.Contracts", "AElf.Contracts.CrossChain.ChangeSideChainIndexingFeeControllerInput");
            feature.AddKnownType("AElf.Contracts.CrossChain.AcceptCrossChainIndexingProposalInput,CAServer.Application.Contracts", "AElf.Contracts.CrossChain.AcceptCrossChainIndexingProposalInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.ExtraTokenListModified,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.ExtraTokenListModified");
            feature.AddKnownType("AElf.Contracts.MultiToken.Transferred,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.Transferred");
            feature.AddKnownType("AElf.Contracts.MultiToken.Approved,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.Approved");
            feature.AddKnownType("AElf.Contracts.MultiToken.UnApproved,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.UnApproved");
            feature.AddKnownType("AElf.Contracts.MultiToken.Burned,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.Burned");
            feature.AddKnownType("AElf.Contracts.MultiToken.ChainPrimaryTokenSymbolSet,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.ChainPrimaryTokenSymbolSet");
            feature.AddKnownType("AElf.Contracts.MultiToken.CalculateFeeAlgorithmUpdated,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.CalculateFeeAlgorithmUpdated");
            feature.AddKnownType("AElf.Contracts.MultiToken.RentalCharged,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.RentalCharged");
            feature.AddKnownType("AElf.Contracts.MultiToken.RentalAccountBalanceInsufficient,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.RentalAccountBalanceInsufficient");
            feature.AddKnownType("AElf.Contracts.MultiToken.TokenCreated,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.TokenCreated");
            feature.AddKnownType("AElf.Contracts.MultiToken.Issued,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.Issued");
            feature.AddKnownType("AElf.Contracts.MultiToken.CrossChainTransferred,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.CrossChainTransferred");
            feature.AddKnownType("AElf.Contracts.MultiToken.CrossChainReceived,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.CrossChainReceived");
            feature.AddKnownType("AElf.Contracts.MultiToken.ExternalInfoChanged,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.ExternalInfoChanged");
            feature.AddKnownType("AElf.Contracts.MultiToken.FeeTypeEnum,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.FeeTypeEnum");
            feature.AddKnownType("AElf.Contracts.MultiToken.TokenInfo,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.TokenInfo");
            feature.AddKnownType("AElf.Contracts.MultiToken.ExternalInfo,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.ExternalInfo");
            feature.AddKnownType("AElf.Contracts.MultiToken.CreateInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.CreateInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.SetPrimaryTokenSymbolInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.SetPrimaryTokenSymbolInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.IssueInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.IssueInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.TransferInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.TransferInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.LockInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.LockInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.UnlockInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.UnlockInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.TransferFromInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.TransferFromInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.ApproveInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.ApproveInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.UnApproveInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.UnApproveInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.BurnInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.BurnInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.ChargeResourceTokenInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.ChargeResourceTokenInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.TransactionFeeBill,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.TransactionFeeBill");
            feature.AddKnownType("AElf.Contracts.MultiToken.CheckThresholdInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.CheckThresholdInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.GetTokenInfoInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.GetTokenInfoInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.GetBalanceInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.GetBalanceInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.GetBalanceOutput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.GetBalanceOutput");
            feature.AddKnownType("AElf.Contracts.MultiToken.GetAllowanceInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.GetAllowanceInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.GetAllowanceOutput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.GetAllowanceOutput");
            feature.AddKnownType("AElf.Contracts.MultiToken.CrossChainTransferInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.CrossChainTransferInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.CrossChainReceiveTokenInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.CrossChainReceiveTokenInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.IsInWhiteListInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.IsInWhiteListInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.SymbolToPayTxSizeFee,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.SymbolToPayTxSizeFee");
            feature.AddKnownType("AElf.Contracts.MultiToken.SymbolListToPayTxSizeFee,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.SymbolListToPayTxSizeFee");
            feature.AddKnownType("AElf.Contracts.MultiToken.ChargeTransactionFeesInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.ChargeTransactionFeesInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.ChargeTransactionFeesOutput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.ChargeTransactionFeesOutput");
            feature.AddKnownType("AElf.Contracts.MultiToken.CallbackInfo,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.CallbackInfo");
            feature.AddKnownType("AElf.Contracts.MultiToken.GetLockedAmountInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.GetLockedAmountInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.GetLockedAmountOutput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.GetLockedAmountOutput");
            feature.AddKnownType("AElf.Contracts.MultiToken.TokenInfoList,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.TokenInfoList");
            feature.AddKnownType("AElf.Contracts.MultiToken.GetCrossChainTransferTokenContractAddressInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.GetCrossChainTransferTokenContractAddressInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.CrossChainCreateTokenInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.CrossChainCreateTokenInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.InitializeFromParentChainInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.InitializeFromParentChainInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.UpdateCoefficientsInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.UpdateCoefficientsInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.CalculateFeePieceCoefficients,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.CalculateFeePieceCoefficients");
            feature.AddKnownType("AElf.Contracts.MultiToken.CalculateFeeCoefficients,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.CalculateFeeCoefficients");
            feature.AddKnownType("AElf.Contracts.MultiToken.AllCalculateFeeCoefficients,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.AllCalculateFeeCoefficients");
            feature.AddKnownType("AElf.Contracts.MultiToken.TotalTransactionFeesMap,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.TotalTransactionFeesMap");
            feature.AddKnownType("AElf.Contracts.MultiToken.TotalResourceTokensMaps,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.TotalResourceTokensMaps");
            feature.AddKnownType("AElf.Contracts.MultiToken.ContractTotalResourceTokens,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.ContractTotalResourceTokens");
            feature.AddKnownType("AElf.Contracts.MultiToken.TotalResourceTokensMap,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.TotalResourceTokensMap");
            feature.AddKnownType("AElf.Contracts.MultiToken.ChangeTokenIssuerInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.ChangeTokenIssuerInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.ResetExternalInfoInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.ResetExternalInfoInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.StringList,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.StringList");
            feature.AddKnownType("AElf.Contracts.MultiToken.AdvanceResourceTokenInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.AdvanceResourceTokenInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.TakeResourceTokenBackInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.TakeResourceTokenBackInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.RegisterCrossChainTokenContractAddressInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.RegisterCrossChainTokenContractAddressInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.ValidateTokenInfoExistsInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.ValidateTokenInfoExistsInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.UpdateRentalInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.UpdateRentalInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.UpdateRentedResourcesInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.UpdateRentedResourcesInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.ResourceUsage,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.ResourceUsage");
            feature.AddKnownType("AElf.Contracts.MultiToken.GetVirtualAddressForLockingInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.GetVirtualAddressForLockingInput");
            feature.AddKnownType("AElf.Contracts.MultiToken.OwningRental,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.OwningRental");
            feature.AddKnownType("AElf.Contracts.MultiToken.OwningRentalUnitValue,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.OwningRentalUnitValue");
            feature.AddKnownType("AElf.Contracts.MultiToken.TransferToContractInput,CAServer.Application.Contracts", "AElf.Contracts.MultiToken.TransferToContractInput");
            feature.AddKnownType("AuthorityInfo,CAServer.Application.Contracts", "<global namespace>.AuthorityInfo");
            feature.AddKnownType("Portkey.Contracts.CA.GuardianType,CAServer.Application.Contracts", "Portkey.Contracts.CA.GuardianType");
            feature.AddKnownType("Portkey.Contracts.CA.StrategyValueType,CAServer.Application.Contracts", "Portkey.Contracts.CA.StrategyValueType");
            feature.AddKnownType("Portkey.Contracts.CA.StrategyName,CAServer.Application.Contracts", "Portkey.Contracts.CA.StrategyName");
            feature.AddKnownType("Portkey.Contracts.CA.HolderInfo,CAServer.Application.Contracts", "Portkey.Contracts.CA.HolderInfo");
            feature.AddKnownType("Portkey.Contracts.CA.ManagerInfo,CAServer.Application.Contracts", "Portkey.Contracts.CA.ManagerInfo");
            feature.AddKnownType("Portkey.Contracts.CA.GuardianList,CAServer.Application.Contracts", "Portkey.Contracts.CA.GuardianList");
            feature.AddKnownType("Portkey.Contracts.CA.Guardian,CAServer.Application.Contracts", "Portkey.Contracts.CA.Guardian");
            feature.AddKnownType("Portkey.Contracts.CA.VerifierServer,CAServer.Application.Contracts", "Portkey.Contracts.CA.VerifierServer");
            feature.AddKnownType("Portkey.Contracts.CA.CAServer,CAServer.Application.Contracts", "Portkey.Contracts.CA.CAServer");
            feature.AddKnownType("Portkey.Contracts.CA.VerifierServerList,CAServer.Application.Contracts", "Portkey.Contracts.CA.VerifierServerList");
            feature.AddKnownType("Portkey.Contracts.CA.CAServerList,CAServer.Application.Contracts", "Portkey.Contracts.CA.CAServerList");
            feature.AddKnownType("Portkey.Contracts.CA.ControllerList,CAServer.Application.Contracts", "Portkey.Contracts.CA.ControllerList");
            feature.AddKnownType("Portkey.Contracts.CA.ManagerInfoList,CAServer.Application.Contracts", "Portkey.Contracts.CA.ManagerInfoList");
            feature.AddKnownType("Portkey.Contracts.CA.LoginGuardianList,CAServer.Application.Contracts", "Portkey.Contracts.CA.LoginGuardianList");
            feature.AddKnownType("Portkey.Contracts.CA.InitializeInput,CAServer.Application.Contracts", "Portkey.Contracts.CA.InitializeInput");
            feature.AddKnownType("Portkey.Contracts.CA.CreateCAHolderInput,CAServer.Application.Contracts", "Portkey.Contracts.CA.CreateCAHolderInput");
            feature.AddKnownType("Portkey.Contracts.CA.GuardianInfo,CAServer.Application.Contracts", "Portkey.Contracts.CA.GuardianInfo");
            feature.AddKnownType("Portkey.Contracts.CA.VerificationInfo,CAServer.Application.Contracts", "Portkey.Contracts.CA.VerificationInfo");
            feature.AddKnownType("Portkey.Contracts.CA.StrategyNode,CAServer.Application.Contracts", "Portkey.Contracts.CA.StrategyNode");
            feature.AddKnownType("Portkey.Contracts.CA.StrategyLongWrapper,CAServer.Application.Contracts", "Portkey.Contracts.CA.StrategyLongWrapper");
            feature.AddKnownType("Portkey.Contracts.CA.StrategyStringWrapper,CAServer.Application.Contracts", "Portkey.Contracts.CA.StrategyStringWrapper");
            feature.AddKnownType("Portkey.Contracts.CA.ContractDelegationFee,CAServer.Application.Contracts", "Portkey.Contracts.CA.ContractDelegationFee");
            feature.AddKnownType("Portkey.Contracts.CA.SetContractDelegationFeeInput,CAServer.Application.Contracts", "Portkey.Contracts.CA.SetContractDelegationFeeInput");
            feature.AddKnownType("Portkey.Contracts.CA.GetContractDelegationFeeOutput,CAServer.Application.Contracts", "Portkey.Contracts.CA.GetContractDelegationFeeOutput");
            feature.AddKnownType("Portkey.Contracts.CA.AddGuardianInput,CAServer.Application.Contracts", "Portkey.Contracts.CA.AddGuardianInput");
            feature.AddKnownType("Portkey.Contracts.CA.RemoveGuardianInput,CAServer.Application.Contracts", "Portkey.Contracts.CA.RemoveGuardianInput");
            feature.AddKnownType("Portkey.Contracts.CA.UpdateGuardianInput,CAServer.Application.Contracts", "Portkey.Contracts.CA.UpdateGuardianInput");
            feature.AddKnownType("Portkey.Contracts.CA.SetGuardianForLoginInput,CAServer.Application.Contracts", "Portkey.Contracts.CA.SetGuardianForLoginInput");
            feature.AddKnownType("Portkey.Contracts.CA.UnsetGuardianForLoginInput,CAServer.Application.Contracts", "Portkey.Contracts.CA.UnsetGuardianForLoginInput");
            feature.AddKnownType("Portkey.Contracts.CA.ManagerForwardCallInput,CAServer.Application.Contracts", "Portkey.Contracts.CA.ManagerForwardCallInput");
            feature.AddKnownType("Portkey.Contracts.CA.ManagerTransferInput,CAServer.Application.Contracts", "Portkey.Contracts.CA.ManagerTransferInput");
            feature.AddKnownType("Portkey.Contracts.CA.ManagerTransferFromInput,CAServer.Application.Contracts", "Portkey.Contracts.CA.ManagerTransferFromInput");
            feature.AddKnownType("Portkey.Contracts.CA.GetHolderInfoInput,CAServer.Application.Contracts", "Portkey.Contracts.CA.GetHolderInfoInput");
            feature.AddKnownType("Portkey.Contracts.CA.GetHolderInfoOutput,CAServer.Application.Contracts", "Portkey.Contracts.CA.GetHolderInfoOutput");
            feature.AddKnownType("Portkey.Contracts.CA.SocialRecoveryInput,CAServer.Application.Contracts", "Portkey.Contracts.CA.SocialRecoveryInput");
            feature.AddKnownType("Portkey.Contracts.CA.AddManagerInfoInput,CAServer.Application.Contracts", "Portkey.Contracts.CA.AddManagerInfoInput");
            feature.AddKnownType("Portkey.Contracts.CA.RemoveManagerInfoInput,CAServer.Application.Contracts", "Portkey.Contracts.CA.RemoveManagerInfoInput");
            feature.AddKnownType("Portkey.Contracts.CA.RemoveOtherManagerInfoInput,CAServer.Application.Contracts", "Portkey.Contracts.CA.RemoveOtherManagerInfoInput");
            feature.AddKnownType("Portkey.Contracts.CA.UpdateManagerInfosInput,CAServer.Application.Contracts", "Portkey.Contracts.CA.UpdateManagerInfosInput");
            feature.AddKnownType("Portkey.Contracts.CA.AddVerifierServerEndPointsInput,CAServer.Application.Contracts", "Portkey.Contracts.CA.AddVerifierServerEndPointsInput");
            feature.AddKnownType("Portkey.Contracts.CA.RemoveVerifierServerInput,CAServer.Application.Contracts", "Portkey.Contracts.CA.RemoveVerifierServerInput");
            feature.AddKnownType("Portkey.Contracts.CA.RemoveVerifierServerEndPointsInput,CAServer.Application.Contracts", "Portkey.Contracts.CA.RemoveVerifierServerEndPointsInput");
            feature.AddKnownType("Portkey.Contracts.CA.AddCAServerInput,CAServer.Application.Contracts", "Portkey.Contracts.CA.AddCAServerInput");
            feature.AddKnownType("Portkey.Contracts.CA.RemoveCAServerInput,CAServer.Application.Contracts", "Portkey.Contracts.CA.RemoveCAServerInput");
            feature.AddKnownType("Portkey.Contracts.CA.GetVerifierServersOutput,CAServer.Application.Contracts", "Portkey.Contracts.CA.GetVerifierServersOutput");
            feature.AddKnownType("Portkey.Contracts.CA.GetCAServersOutput,CAServer.Application.Contracts", "Portkey.Contracts.CA.GetCAServersOutput");
            feature.AddKnownType("Portkey.Contracts.CA.ValidateCAHolderInfoWithManagerInfosExistsInput,CAServer.Application.Contracts", "Portkey.Contracts.CA.ValidateCAHolderInfoWithManagerInfosExistsInput");
            feature.AddKnownType("Portkey.Contracts.CA.VerificationTransactionInfo,CAServer.Application.Contracts", "Portkey.Contracts.CA.VerificationTransactionInfo");
            feature.AddKnownType("Portkey.Contracts.CA.SyncHolderInfoInput,CAServer.Application.Contracts", "Portkey.Contracts.CA.SyncHolderInfoInput");
            feature.AddKnownType("Portkey.Contracts.CA.ValidateStrategyInput,CAServer.Application.Contracts", "Portkey.Contracts.CA.ValidateStrategyInput");
            feature.AddKnownType("Portkey.Contracts.CA.ValidateStrategyOutput,CAServer.Application.Contracts", "Portkey.Contracts.CA.ValidateStrategyOutput");
            feature.AddKnownType("Portkey.Contracts.CA.CAHolderCreated,CAServer.Application.Contracts", "Portkey.Contracts.CA.CAHolderCreated");
            feature.AddKnownType("Portkey.Contracts.CA.GuardianAdded,CAServer.Application.Contracts", "Portkey.Contracts.CA.GuardianAdded");
            feature.AddKnownType("Portkey.Contracts.CA.GuardianRemoved,CAServer.Application.Contracts", "Portkey.Contracts.CA.GuardianRemoved");
            feature.AddKnownType("Portkey.Contracts.CA.GuardianUpdated,CAServer.Application.Contracts", "Portkey.Contracts.CA.GuardianUpdated");
            feature.AddKnownType("Portkey.Contracts.CA.LoginGuardianAdded,CAServer.Application.Contracts", "Portkey.Contracts.CA.LoginGuardianAdded");
            feature.AddKnownType("Portkey.Contracts.CA.ManagerInfoSocialRecovered,CAServer.Application.Contracts", "Portkey.Contracts.CA.ManagerInfoSocialRecovered");
            feature.AddKnownType("Portkey.Contracts.CA.ManagerInfoAdded,CAServer.Application.Contracts", "Portkey.Contracts.CA.ManagerInfoAdded");
            feature.AddKnownType("Portkey.Contracts.CA.ManagerInfoRemoved,CAServer.Application.Contracts", "Portkey.Contracts.CA.ManagerInfoRemoved");
            feature.AddKnownType("Portkey.Contracts.CA.ManagerInfoUpdated,CAServer.Application.Contracts", "Portkey.Contracts.CA.ManagerInfoUpdated");
            feature.AddKnownType("Portkey.Contracts.CA.LoginGuardianUnbound,CAServer.Application.Contracts", "Portkey.Contracts.CA.LoginGuardianUnbound");
            feature.AddKnownType("Portkey.Contracts.CA.LoginGuardianRemoved,CAServer.Application.Contracts", "Portkey.Contracts.CA.LoginGuardianRemoved");
            feature.AddKnownType("Portkey.Contracts.CA.VerifierServerEndPointsAdded,CAServer.Application.Contracts", "Portkey.Contracts.CA.VerifierServerEndPointsAdded");
            feature.AddKnownType("Portkey.Contracts.CA.VerifierServerEndPointsRemoved,CAServer.Application.Contracts", "Portkey.Contracts.CA.VerifierServerEndPointsRemoved");
            feature.AddKnownType("Portkey.Contracts.CA.VerifierServerRemoved,CAServer.Application.Contracts", "Portkey.Contracts.CA.VerifierServerRemoved");
            feature.AddKnownType("Portkey.Contracts.CA.CAServerAdded,CAServer.Application.Contracts", "Portkey.Contracts.CA.CAServerAdded");
            feature.AddKnownType("Portkey.Contracts.CA.CAServerRemoved,CAServer.Application.Contracts", "Portkey.Contracts.CA.CAServerRemoved");
            feature.AddKnownType("Portkey.Contracts.CA.CAHolderSynced,CAServer.Application.Contracts", "Portkey.Contracts.CA.CAHolderSynced");
            feature.AddKnownType("Portkey.Contracts.TokenClaim.TokenClaimed,CAServer.Application.Contracts", "Portkey.Contracts.TokenClaim.TokenClaimed");
            feature.AddKnownType("Portkey.Contracts.TokenClaim.InitializeInput,CAServer.Application.Contracts", "Portkey.Contracts.TokenClaim.InitializeInput");
            feature.AddKnownType("Portkey.Contracts.TokenClaim.ClaimTokenInput,CAServer.Application.Contracts", "Portkey.Contracts.TokenClaim.ClaimTokenInput");
            feature.AddKnownType("CAVerifierServer.IpWhiteList.AddUserIpToWhiteListRequestDto,CAServer.Application.Contracts", "CAVerifierServer.IpWhiteList.AddUserIpToWhiteListRequestDto");
            feature.AddKnownType("CAVerifierServer.IpWhiteList.IpCheckResultDtos,CAServer.Application.Contracts", "CAVerifierServer.IpWhiteList.IpCheckResultDtos");
            feature.AddKnownType("CAVerifierServer.Account.CheckUserIpRequestDto,CAServer.Application.Contracts", "CAVerifierServer.Account.CheckUserIpRequestDto");
            feature.AddKnownType("CAVerifierServer.Account.ResponseResultDto`1,CAServer.Application.Contracts", "CAVerifierServer.Account.ResponseResultDto`1'1");
            feature.AddKnownType("CAVerifierServer.ISecurityAppService,CAServer.Application.Contracts", "CAVerifierServer.ISecurityAppService");
            feature.AddKnownType("AElf.Cryptography.IAElfAsymmetricCipherKeyPair,AElf.Cryptography", "AElf.Cryptography.IAElfAsymmetricCipherKeyPair");
            feature.AddKnownType("AElf.Cryptography.ECDSA.ECKeyPair,AElf.Cryptography", "AElf.Cryptography.ECDSA.ECKeyPair");
            feature.AddKnownType("AElf.Cryptography.Exceptions.EcdhOperationException,AElf.Cryptography", "AElf.Cryptography.Exceptions.EcdhOperationException");
            feature.AddKnownType("AElf.Cryptography.Exceptions.InvalidKeyPairException,AElf.Cryptography", "AElf.Cryptography.Exceptions.InvalidKeyPairException");
            feature.AddKnownType("AElf.Cryptography.Exceptions.InvalidPasswordException,AElf.Cryptography", "AElf.Cryptography.Exceptions.InvalidPasswordException");
            feature.AddKnownType("AElf.Cryptography.Exceptions.InvalidPrivateKeyException,AElf.Cryptography", "AElf.Cryptography.Exceptions.InvalidPrivateKeyException");
            feature.AddKnownType("AElf.Cryptography.Exceptions.KeyStoreNotFoundException,AElf.Cryptography", "AElf.Cryptography.Exceptions.KeyStoreNotFoundException");
            feature.AddKnownType("AElf.Cryptography.Exceptions.PublicKeyOperationException,AElf.Cryptography", "AElf.Cryptography.Exceptions.PublicKeyOperationException");
            feature.AddKnownType("AElf.Cryptography.Exceptions.SignatureOperationException,AElf.Cryptography", "AElf.Cryptography.Exceptions.SignatureOperationException");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,AElf.Cryptography", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("AElf.CSharp.Core.ContractStubBase,AElf.CSharp.Core", "AElf.CSharp.Core.ContractStubBase");
            feature.AddKnownType("AElf.CSharp.Core.IEvent`1,AElf.CSharp.Core", "AElf.CSharp.Core.IEvent`1'1");
            feature.AddKnownType("AElf.CSharp.Core.IExecutionTask,AElf.CSharp.Core", "AElf.CSharp.Core.IExecutionTask");
            feature.AddKnownType("AElf.CSharp.Core.IExecutionResult`1,AElf.CSharp.Core", "AElf.CSharp.Core.IExecutionResult`1'1");
            feature.AddKnownType("AElf.CSharp.Core.ExecutionTask,AElf.CSharp.Core", "AElf.CSharp.Core.ExecutionTask");
            feature.AddKnownType("AElf.CSharp.Core.ExecutionResult`1,AElf.CSharp.Core", "AElf.CSharp.Core.ExecutionResult`1'1");
            feature.AddKnownType("AElf.CSharp.Core.IMethodStub`2,AElf.CSharp.Core", "AElf.CSharp.Core.IMethodStub`2'2");
            feature.AddKnownType("AElf.CSharp.Core.MethodStub`2,AElf.CSharp.Core", "AElf.CSharp.Core.MethodStub`2'2");
            feature.AddKnownType("AElf.CSharp.Core.IMethodStubFactory,AElf.CSharp.Core", "AElf.CSharp.Core.IMethodStubFactory");
            feature.AddKnownType("AElf.CSharp.Core.Marshaller`1,AElf.CSharp.Core", "AElf.CSharp.Core.Marshaller`1'1");
            feature.AddKnownType("AElf.CSharp.Core.MethodType,AElf.CSharp.Core", "AElf.CSharp.Core.MethodType");
            feature.AddKnownType("AElf.CSharp.Core.IMethod,AElf.CSharp.Core", "AElf.CSharp.Core.IMethod");
            feature.AddKnownType("AElf.CSharp.Core.Method`2,AElf.CSharp.Core", "AElf.CSharp.Core.Method`2'2");
            feature.AddKnownType("AElf.CSharp.Core.ServerServiceDefinition,AElf.CSharp.Core", "AElf.CSharp.Core.ServerServiceDefinition");
            feature.AddKnownType("AElf.CSharp.Core.ServerServiceDefinition+Builder,AElf.CSharp.Core", "AElf.CSharp.Core.AElf.CSharp.Core.ServerServiceDefinition.Builder");
            feature.AddKnownType("AElf.CSharp.Core.ServiceBinderBase,AElf.CSharp.Core", "AElf.CSharp.Core.ServiceBinderBase");
            feature.AddKnownType("AElf.CSharp.Core.Utils.EncodingHelper,AElf.CSharp.Core", "AElf.CSharp.Core.Utils.EncodingHelper");
            feature.AddKnownType("AElf.CSharp.Core.Utils.Preconditions,AElf.CSharp.Core", "AElf.CSharp.Core.Utils.Preconditions");
            feature.AddKnownType("AElf.Kernel.SmartContract.ContextVariableDictionary,AElf.Kernel.SmartContract.Shared", "AElf.Kernel.SmartContract.ContextVariableDictionary");
            feature.AddKnownType("AElf.Kernel.SmartContract.IExecutionObserver,AElf.Kernel.SmartContract.Shared", "AElf.Kernel.SmartContract.IExecutionObserver");
            feature.AddKnownType("AElf.Kernel.SmartContract.ISmartContractBridgeContext,AElf.Kernel.SmartContract.Shared", "AElf.Kernel.SmartContract.ISmartContractBridgeContext");
            feature.AddKnownType("AElf.Kernel.SmartContract.SmartContractBridgeException,AElf.Kernel.SmartContract.Shared", "AElf.Kernel.SmartContract.SmartContractBridgeException");
            feature.AddKnownType("AElf.Kernel.SmartContract.NoPermissionException,AElf.Kernel.SmartContract.Shared", "AElf.Kernel.SmartContract.NoPermissionException");
            feature.AddKnownType("AElf.Kernel.SmartContract.ContractCallException,AElf.Kernel.SmartContract.Shared", "AElf.Kernel.SmartContract.ContractCallException");
            feature.AddKnownType("AElf.Kernel.SmartContract.StateOverSizeException,AElf.Kernel.SmartContract.Shared", "AElf.Kernel.SmartContract.StateOverSizeException");
            feature.AddKnownType("AElf.Kernel.SmartContract.IStateProvider,AElf.Kernel.SmartContract.Shared", "AElf.Kernel.SmartContract.IStateProvider");
            feature.AddKnownType("AElf.Sdk.CSharp.AElfString,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.AElfString");
            feature.AddKnownType("AElf.Sdk.CSharp.CSharpSmartContract,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.CSharpSmartContract");
            feature.AddKnownType("AElf.Sdk.CSharp.CSharpSmartContract`1,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.CSharpSmartContract`1'1");
            feature.AddKnownType("AElf.Sdk.CSharp.CSharpSmartContractAbstract,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.CSharpSmartContractAbstract");
            feature.AddKnownType("AElf.Sdk.CSharp.CSharpSmartContractContext,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.CSharpSmartContractContext");
            feature.AddKnownType("AElf.Sdk.CSharp.BaseAElfException,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.BaseAElfException");
            feature.AddKnownType("AElf.Sdk.CSharp.AssertionException,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.AssertionException");
            feature.AddKnownType("AElf.Sdk.CSharp.RuntimeCallThresholdExceededException,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.RuntimeCallThresholdExceededException");
            feature.AddKnownType("AElf.Sdk.CSharp.RuntimeBranchThresholdExceededException,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.RuntimeBranchThresholdExceededException");
            feature.AddKnownType("AElf.Sdk.CSharp.ExecutionObserver,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.ExecutionObserver");
            feature.AddKnownType("AElf.Sdk.CSharp.ViewAttribute,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.ViewAttribute");
            feature.AddKnownType("AElf.Sdk.CSharp.State.ContractReferenceState,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.State.ContractReferenceState");
            feature.AddKnownType("AElf.Sdk.CSharp.State.ContractState,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.State.ContractState");
            feature.AddKnownType("AElf.Sdk.CSharp.State.MappedState,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.State.MappedState");
            feature.AddKnownType("AElf.Sdk.CSharp.State.MappedState`2,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.State.MappedState`2'2");
            feature.AddKnownType("AElf.Sdk.CSharp.State.MappedState`2+ValuePair,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.State.ValuePair'2");
            feature.AddKnownType("AElf.Sdk.CSharp.State.MappedState`3,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.State.MappedState`3'3");
            feature.AddKnownType("AElf.Sdk.CSharp.State.MappedState`4,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.State.MappedState`4'4");
            feature.AddKnownType("AElf.Sdk.CSharp.State.MappedState`5,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.State.MappedState`5'5");
            feature.AddKnownType("AElf.Sdk.CSharp.State.MethodReference`2,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.State.MethodReference`2'2");
            feature.AddKnownType("AElf.Sdk.CSharp.State.ReadonlyState,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.State.ReadonlyState");
            feature.AddKnownType("AElf.Sdk.CSharp.State.ReadonlyState`1,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.State.ReadonlyState`1'1");
            feature.AddKnownType("AElf.Sdk.CSharp.State.SingletonState,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.State.SingletonState");
            feature.AddKnownType("AElf.Sdk.CSharp.State.SingletonState`1,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.State.SingletonState`1'1");
            feature.AddKnownType("AElf.Sdk.CSharp.State.BoolState,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.State.BoolState");
            feature.AddKnownType("AElf.Sdk.CSharp.State.Int32State,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.State.Int32State");
            feature.AddKnownType("AElf.Sdk.CSharp.State.UInt32State,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.State.UInt32State");
            feature.AddKnownType("AElf.Sdk.CSharp.State.Int64State,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.State.Int64State");
            feature.AddKnownType("AElf.Sdk.CSharp.State.UInt64State,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.State.UInt64State");
            feature.AddKnownType("AElf.Sdk.CSharp.State.StringState,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.State.StringState");
            feature.AddKnownType("AElf.Sdk.CSharp.State.BytesState,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.State.BytesState");
            feature.AddKnownType("AElf.Sdk.CSharp.State.ProtobufState`1,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.State.ProtobufState`1'1");
            feature.AddKnownType("AElf.Sdk.CSharp.State.StateBase,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.State.StateBase");
            feature.AddKnownType("AElf.Sdk.CSharp.State.StructuredState,AElf.Sdk.CSharp", "AElf.Sdk.CSharp.State.StructuredState");
            feature.AddKnownType("AElf.HashHelper,AElf.Types", "AElf.HashHelper");
            feature.AddKnownType("AElf.IBlockBase,AElf.Types", "AElf.IBlockBase");
            feature.AddKnownType("AElf.IHashProvider,AElf.Types", "AElf.IHashProvider");
            feature.AddKnownType("AElf.ISmartContract,AElf.Types", "AElf.ISmartContract");
            feature.AddKnownType("AElf.Types.Address,AElf.Types", "AElf.Types.Address");
            feature.AddKnownType("AElf.Types.ChainAddress,AElf.Types", "AElf.Types.ChainAddress");
            feature.AddKnownType("AElf.Types.BigIntValue,AElf.Types", "AElf.Types.BigIntValue");
            feature.AddKnownType("AElf.Types.BinaryMerkleTree,AElf.Types", "AElf.Types.BinaryMerkleTree");
            feature.AddKnownType("AElf.Types.Hash,AElf.Types", "AElf.Types.Hash");
            feature.AddKnownType("AElf.Types.Transaction,AElf.Types", "AElf.Types.Transaction");
            feature.AddKnownType("AElf.Types.TransactionResultStatus,AElf.Types", "AElf.Types.TransactionResultStatus");
            feature.AddKnownType("AElf.Types.StatePath,AElf.Types", "AElf.Types.StatePath");
            feature.AddKnownType("AElf.Types.ScopedStatePath,AElf.Types", "AElf.Types.ScopedStatePath");
            feature.AddKnownType("AElf.Types.TransactionResult,AElf.Types", "AElf.Types.TransactionResult");
            feature.AddKnownType("AElf.Types.LogEvent,AElf.Types", "AElf.Types.LogEvent");
            feature.AddKnownType("AElf.Types.SmartContractRegistration,AElf.Types", "AElf.Types.SmartContractRegistration");
            feature.AddKnownType("AElf.Types.TransactionExecutingStateSet,AElf.Types", "AElf.Types.TransactionExecutingStateSet");
            feature.AddKnownType("AElf.Types.SInt32Value,AElf.Types", "AElf.Types.SInt32Value");
            feature.AddKnownType("AElf.Types.SInt64Value,AElf.Types", "AElf.Types.SInt64Value");
            feature.AddKnownType("AElf.Types.MerklePath,AElf.Types", "AElf.Types.MerklePath");
            feature.AddKnownType("AElf.Types.MerklePathNode,AElf.Types", "AElf.Types.MerklePathNode");
            feature.AddKnownType("AutoMapper.AutoMapperMappingException,AutoMapper", "AutoMapper.AutoMapperMappingException");
            feature.AddKnownType("AutoMapper.DuplicateTypeMapConfigurationException,AutoMapper", "AutoMapper.DuplicateTypeMapConfigurationException");
            feature.AddKnownType("AutoMapper.DuplicateTypeMapConfigurationException+TypeMapConfigErrors,AutoMapper", "AutoMapper.AutoMapper.DuplicateTypeMapConfigurationException.TypeMapConfigErrors");
            feature.AddKnownType("AutoMapper.AutoMapperConfigurationException,AutoMapper", "AutoMapper.AutoMapperConfigurationException");
            feature.AddKnownType("AutoMapper.AutoMapperConfigurationException+TypeMapConfigErrors,AutoMapper", "AutoMapper.AutoMapper.AutoMapperConfigurationException.TypeMapConfigErrors");
            feature.AddKnownType("AutoMapper.AutoMapAttribute,AutoMapper", "AutoMapper.AutoMapAttribute");
            feature.AddKnownType("AutoMapper.IMappingExpression,AutoMapper", "AutoMapper.IMappingExpression");
            feature.AddKnownType("AutoMapper.IMappingExpression`2,AutoMapper", "AutoMapper.IMappingExpression`2'2");
            feature.AddKnownType("AutoMapper.IProjectionExpression`3,AutoMapper", "AutoMapper.IProjectionExpression`3'3");
            feature.AddKnownType("AutoMapper.IProjectionExpression`2,AutoMapper", "AutoMapper.IProjectionExpression`2'2");
            feature.AddKnownType("AutoMapper.IProjectionExpressionBase`3,AutoMapper", "AutoMapper.IProjectionExpressionBase`3'3");
            feature.AddKnownType("AutoMapper.IMappingExpressionBase`3,AutoMapper", "AutoMapper.IMappingExpressionBase`3'3");
            feature.AddKnownType("AutoMapper.IMappingAction`2,AutoMapper", "AutoMapper.IMappingAction`2'2");
            feature.AddKnownType("AutoMapper.ITypeConverter`2,AutoMapper", "AutoMapper.ITypeConverter`2'2");
            feature.AddKnownType("AutoMapper.IMappingOperationOptions,AutoMapper", "AutoMapper.IMappingOperationOptions");
            feature.AddKnownType("AutoMapper.IMappingOperationOptions`2,AutoMapper", "AutoMapper.IMappingOperationOptions`2'2");
            feature.AddKnownType("AutoMapper.MappingOperationOptions`2,AutoMapper", "AutoMapper.MappingOperationOptions`2'2");
            feature.AddKnownType("AutoMapper.IMemberConfigurationExpression`3,AutoMapper", "AutoMapper.IMemberConfigurationExpression`3'3");
            feature.AddKnownType("AutoMapper.IMemberConfigurationExpression,AutoMapper", "AutoMapper.IMemberConfigurationExpression");
            feature.AddKnownType("AutoMapper.IProjectionMemberConfiguration`3,AutoMapper", "AutoMapper.IProjectionMemberConfiguration`3'3");
            feature.AddKnownType("AutoMapper.IValueConverter`2,AutoMapper", "AutoMapper.IValueConverter`2'2");
            feature.AddKnownType("AutoMapper.IValueResolver`3,AutoMapper", "AutoMapper.IValueResolver`3'3");
            feature.AddKnownType("AutoMapper.IMemberValueResolver`4,AutoMapper", "AutoMapper.IMemberValueResolver`4'4");
            feature.AddKnownType("AutoMapper.INamingConvention,AutoMapper", "AutoMapper.INamingConvention");
            feature.AddKnownType("AutoMapper.ExactMatchNamingConvention,AutoMapper", "AutoMapper.ExactMatchNamingConvention");
            feature.AddKnownType("AutoMapper.PascalCaseNamingConvention,AutoMapper", "AutoMapper.PascalCaseNamingConvention");
            feature.AddKnownType("AutoMapper.LowerUnderscoreNamingConvention,AutoMapper", "AutoMapper.LowerUnderscoreNamingConvention");
            feature.AddKnownType("AutoMapper.IProfileExpression,AutoMapper", "AutoMapper.IProfileExpression");
            feature.AddKnownType("AutoMapper.MemberList,AutoMapper", "AutoMapper.MemberList");
            feature.AddKnownType("AutoMapper.IConfigurationProvider,AutoMapper", "AutoMapper.IConfigurationProvider");
            feature.AddKnownType("AutoMapper.MapperConfiguration,AutoMapper", "AutoMapper.MapperConfiguration");
            feature.AddKnownType("AutoMapper.LazyValue`1,AutoMapper", "AutoMapper.LazyValue`1'1");
            feature.AddKnownType("AutoMapper.IMapperConfigurationExpression,AutoMapper", "AutoMapper.IMapperConfigurationExpression");
            feature.AddKnownType("AutoMapper.MapperConfigurationExpression,AutoMapper", "AutoMapper.MapperConfigurationExpression");
            feature.AddKnownType("AutoMapper.IProfileConfiguration,AutoMapper", "AutoMapper.IProfileConfiguration");
            feature.AddKnownType("AutoMapper.Profile,AutoMapper", "AutoMapper.Profile");
            feature.AddKnownType("AutoMapper.ConstructorMap,AutoMapper", "AutoMapper.ConstructorMap");
            feature.AddKnownType("AutoMapper.ConstructorParameterMap,AutoMapper", "AutoMapper.ConstructorParameterMap");
            feature.AddKnownType("AutoMapper.IMapperBase,AutoMapper", "AutoMapper.IMapperBase");
            feature.AddKnownType("AutoMapper.IMapper,AutoMapper", "AutoMapper.IMapper");
            feature.AddKnownType("AutoMapper.IRuntimeMapper,AutoMapper", "AutoMapper.IRuntimeMapper");
            feature.AddKnownType("AutoMapper.IInternalRuntimeMapper,AutoMapper", "AutoMapper.IInternalRuntimeMapper");
            feature.AddKnownType("AutoMapper.Mapper,AutoMapper", "AutoMapper.Mapper");
            feature.AddKnownType("AutoMapper.MemberMap,AutoMapper", "AutoMapper.MemberMap");
            feature.AddKnownType("AutoMapper.ValueTransformerConfiguration,AutoMapper", "AutoMapper.ValueTransformerConfiguration");
            feature.AddKnownType("AutoMapper.PathMap,AutoMapper", "AutoMapper.PathMap");
            feature.AddKnownType("AutoMapper.ProfileMap,AutoMapper", "AutoMapper.ProfileMap");
            feature.AddKnownType("AutoMapper.IncludedMember,AutoMapper", "AutoMapper.IncludedMember");
            feature.AddKnownType("AutoMapper.PropertyMap,AutoMapper", "AutoMapper.PropertyMap");
            feature.AddKnownType("AutoMapper.PropertyMap+MemberMapDetails,AutoMapper", "AutoMapper.MemberMapDetails");
            feature.AddKnownType("AutoMapper.ResolutionContext,AutoMapper", "AutoMapper.ResolutionContext");
            feature.AddKnownType("AutoMapper.ContextCacheKey,AutoMapper", "AutoMapper.ContextCacheKey");
            feature.AddKnownType("AutoMapper.TypeMap,AutoMapper", "AutoMapper.TypeMap");
            feature.AddKnownType("AutoMapper.TypeMap+TypeMapDetails,AutoMapper", "AutoMapper.TypeMapDetails");
            feature.AddKnownType("AutoMapper.Configuration.ConfigurationValidator,AutoMapper", "AutoMapper.Configuration.ConfigurationValidator");
            feature.AddKnownType("AutoMapper.Configuration.ValidationContext,AutoMapper", "AutoMapper.Configuration.ValidationContext");
            feature.AddKnownType("AutoMapper.Configuration.ICtorParamConfigurationExpression,AutoMapper", "AutoMapper.Configuration.ICtorParamConfigurationExpression");
            feature.AddKnownType("AutoMapper.Configuration.ICtorParamConfigurationExpression`1,AutoMapper", "AutoMapper.Configuration.ICtorParamConfigurationExpression`1'1");
            feature.AddKnownType("AutoMapper.Configuration.ICtorParameterConfiguration,AutoMapper", "AutoMapper.Configuration.ICtorParameterConfiguration");
            feature.AddKnownType("AutoMapper.Configuration.CtorParamConfigurationExpression`2,AutoMapper", "AutoMapper.Configuration.CtorParamConfigurationExpression`2'2");
            feature.AddKnownType("AutoMapper.Configuration.IMemberConfigurationProvider,AutoMapper", "AutoMapper.Configuration.IMemberConfigurationProvider");
            feature.AddKnownType("AutoMapper.Configuration.MappingExpression,AutoMapper", "AutoMapper.Configuration.MappingExpression");
            feature.AddKnownType("AutoMapper.Configuration.MappingExpression`2,AutoMapper", "AutoMapper.Configuration.MappingExpression`2'2");
            feature.AddKnownType("AutoMapper.Configuration.IPropertyMapConfiguration,AutoMapper", "AutoMapper.Configuration.IPropertyMapConfiguration");
            feature.AddKnownType("AutoMapper.Configuration.MemberConfigurationExpression`3,AutoMapper", "AutoMapper.Configuration.MemberConfigurationExpression`3'3");
            feature.AddKnownType("AutoMapper.Configuration.MemberConfigurationExpression,AutoMapper", "AutoMapper.Configuration.MemberConfigurationExpression");
            feature.AddKnownType("AutoMapper.Configuration.IPathConfigurationExpression`3,AutoMapper", "AutoMapper.Configuration.IPathConfigurationExpression`3'3");
            feature.AddKnownType("AutoMapper.Configuration.ConditionParameters`3,AutoMapper", "AutoMapper.Configuration.ConditionParameters`3'3");
            feature.AddKnownType("AutoMapper.Configuration.PathConfigurationExpression`3,AutoMapper", "AutoMapper.Configuration.PathConfigurationExpression`3'3");
            feature.AddKnownType("AutoMapper.Configuration.ISourceMemberConfiguration,AutoMapper", "AutoMapper.Configuration.ISourceMemberConfiguration");
            feature.AddKnownType("AutoMapper.Configuration.ISourceMemberConfigurationExpression,AutoMapper", "AutoMapper.Configuration.ISourceMemberConfigurationExpression");
            feature.AddKnownType("AutoMapper.Configuration.SourceMappingExpression,AutoMapper", "AutoMapper.Configuration.SourceMappingExpression");
            feature.AddKnownType("AutoMapper.Configuration.SourceMemberConfig,AutoMapper", "AutoMapper.Configuration.SourceMemberConfig");
            feature.AddKnownType("AutoMapper.Configuration.TypeMapConfiguration,AutoMapper", "AutoMapper.Configuration.TypeMapConfiguration");
            feature.AddKnownType("AutoMapper.Configuration.MappingExpressionBase`3,AutoMapper", "AutoMapper.Configuration.MappingExpressionBase`3'3");
            feature.AddKnownType("AutoMapper.Configuration.Annotations.IgnoreAttribute,AutoMapper", "AutoMapper.Configuration.Annotations.IgnoreAttribute");
            feature.AddKnownType("AutoMapper.Configuration.Annotations.MapAtRuntimeAttribute,AutoMapper", "AutoMapper.Configuration.Annotations.MapAtRuntimeAttribute");
            feature.AddKnownType("AutoMapper.Configuration.Annotations.MappingOrderAttribute,AutoMapper", "AutoMapper.Configuration.Annotations.MappingOrderAttribute");
            feature.AddKnownType("AutoMapper.Configuration.Annotations.NullSubstituteAttribute,AutoMapper", "AutoMapper.Configuration.Annotations.NullSubstituteAttribute");
            feature.AddKnownType("AutoMapper.Configuration.Annotations.SourceMemberAttribute,AutoMapper", "AutoMapper.Configuration.Annotations.SourceMemberAttribute");
            feature.AddKnownType("AutoMapper.Configuration.Annotations.UseExistingValueAttribute,AutoMapper", "AutoMapper.Configuration.Annotations.UseExistingValueAttribute");
            feature.AddKnownType("AutoMapper.Configuration.Annotations.ValueConverterAttribute,AutoMapper", "AutoMapper.Configuration.Annotations.ValueConverterAttribute");
            feature.AddKnownType("AutoMapper.Configuration.Annotations.ValueResolverAttribute,AutoMapper", "AutoMapper.Configuration.Annotations.ValueResolverAttribute");
            feature.AddKnownType("AutoMapper.Configuration.Conventions.ISourceToDestinationNameMapper,AutoMapper", "AutoMapper.Configuration.Conventions.ISourceToDestinationNameMapper");
            feature.AddKnownType("AutoMapper.Configuration.Conventions.MemberConfiguration,AutoMapper", "AutoMapper.Configuration.Conventions.MemberConfiguration");
            feature.AddKnownType("AutoMapper.Configuration.Conventions.PrePostfixName,AutoMapper", "AutoMapper.Configuration.Conventions.PrePostfixName");
            feature.AddKnownType("AutoMapper.Configuration.Conventions.ReplaceName,AutoMapper", "AutoMapper.Configuration.Conventions.ReplaceName");
            feature.AddKnownType("AutoMapper.Configuration.Conventions.MemberNameReplacer,AutoMapper", "AutoMapper.Configuration.Conventions.MemberNameReplacer");
            feature.AddKnownType("AutoMapper.Configuration.Conventions.NameSplitMember,AutoMapper", "AutoMapper.Configuration.Conventions.NameSplitMember");
            feature.AddKnownType("AutoMapper.Configuration.Conventions.DefaultNameSplitMember,AutoMapper", "AutoMapper.Configuration.Conventions.DefaultNameSplitMember");
            feature.AddKnownType("AutoMapper.Configuration.Conventions.ConventionsNameSplitMember,AutoMapper", "AutoMapper.Configuration.Conventions.ConventionsNameSplitMember");
            feature.AddKnownType("AutoMapper.Execution.Member,AutoMapper", "AutoMapper.Execution.Member");
            feature.AddKnownType("AutoMapper.Execution.ReplaceVisitorBase,AutoMapper", "AutoMapper.Execution.ReplaceVisitorBase");
            feature.AddKnownType("AutoMapper.Execution.ReplaceVisitor,AutoMapper", "AutoMapper.Execution.ReplaceVisitor");
            feature.AddKnownType("AutoMapper.Execution.ParameterReplaceVisitor,AutoMapper", "AutoMapper.Execution.ParameterReplaceVisitor");
            feature.AddKnownType("AutoMapper.Execution.ConvertParameterReplaceVisitor,AutoMapper", "AutoMapper.Execution.ConvertParameterReplaceVisitor");
            feature.AddKnownType("AutoMapper.Execution.ProxyGenerator+PropertyEmitter,AutoMapper", "AutoMapper.Execution.PropertyEmitter");
            feature.AddKnownType("AutoMapper.Execution.ProxyBase,AutoMapper", "AutoMapper.Execution.ProxyBase");
            feature.AddKnownType("AutoMapper.Execution.TypeDescription,AutoMapper", "AutoMapper.Execution.TypeDescription");
            feature.AddKnownType("AutoMapper.Execution.PropertyDescription,AutoMapper", "AutoMapper.Execution.PropertyDescription");
            feature.AddKnownType("AutoMapper.Execution.TypeMapPlanBuilder,AutoMapper", "AutoMapper.Execution.TypeMapPlanBuilder");
            feature.AddKnownType("AutoMapper.Execution.IValueResolver,AutoMapper", "AutoMapper.Execution.IValueResolver");
            feature.AddKnownType("AutoMapper.Execution.MemberPathResolver,AutoMapper", "AutoMapper.Execution.MemberPathResolver");
            feature.AddKnownType("AutoMapper.Execution.LambdaValueResolver,AutoMapper", "AutoMapper.Execution.LambdaValueResolver");
            feature.AddKnownType("AutoMapper.Execution.FuncResolver,AutoMapper", "AutoMapper.Execution.FuncResolver");
            feature.AddKnownType("AutoMapper.Execution.ExpressionResolver,AutoMapper", "AutoMapper.Execution.ExpressionResolver");
            feature.AddKnownType("AutoMapper.Execution.ValueResolverConfig,AutoMapper", "AutoMapper.Execution.ValueResolverConfig");
            feature.AddKnownType("AutoMapper.Execution.ValueConverter,AutoMapper", "AutoMapper.Execution.ValueConverter");
            feature.AddKnownType("AutoMapper.Execution.ClassValueResolver,AutoMapper", "AutoMapper.Execution.ClassValueResolver");
            feature.AddKnownType("AutoMapper.Execution.TypeConverter,AutoMapper", "AutoMapper.Execution.TypeConverter");
            feature.AddKnownType("AutoMapper.Execution.LambdaTypeConverter,AutoMapper", "AutoMapper.Execution.LambdaTypeConverter");
            feature.AddKnownType("AutoMapper.Execution.ExpressionTypeConverter,AutoMapper", "AutoMapper.Execution.ExpressionTypeConverter");
            feature.AddKnownType("AutoMapper.Execution.ClassTypeConverter,AutoMapper", "AutoMapper.Execution.ClassTypeConverter");
            feature.AddKnownType("AutoMapper.Features.IGlobalFeature,AutoMapper", "AutoMapper.Features.IGlobalFeature");
            feature.AddKnownType("AutoMapper.Features.IMappingFeature,AutoMapper", "AutoMapper.Features.IMappingFeature");
            feature.AddKnownType("AutoMapper.Features.IRuntimeFeature,AutoMapper", "AutoMapper.Features.IRuntimeFeature");
            feature.AddKnownType("AutoMapper.Features.Features`1,AutoMapper", "AutoMapper.Features.Features`1'1");
            feature.AddKnownType("AutoMapper.Internal.IGlobalConfigurationExpression,AutoMapper", "AutoMapper.Internal.IGlobalConfigurationExpression");
            feature.AddKnownType("AutoMapper.Internal.IGlobalConfiguration,AutoMapper", "AutoMapper.Internal.IGlobalConfiguration");
            feature.AddKnownType("AutoMapper.Internal.IProfileExpressionInternal,AutoMapper", "AutoMapper.Internal.IProfileExpressionInternal");
            feature.AddKnownType("AutoMapper.Internal.LockingConcurrentDictionary`2,AutoMapper", "AutoMapper.Internal.LockingConcurrentDictionary`2'2");
            feature.AddKnownType("AutoMapper.Internal.MemberPath,AutoMapper", "AutoMapper.Internal.MemberPath");
            feature.AddKnownType("AutoMapper.Internal.TypeDetails,AutoMapper", "AutoMapper.Internal.TypeDetails");
            feature.AddKnownType("AutoMapper.Internal.TypeDetails+GenericMethod,AutoMapper", "AutoMapper.Internal.GenericMethod");
            feature.AddKnownType("AutoMapper.Internal.ConstructorParameters,AutoMapper", "AutoMapper.Internal.ConstructorParameters");
            feature.AddKnownType("AutoMapper.Internal.MapRequest,AutoMapper", "AutoMapper.Internal.MapRequest");
            feature.AddKnownType("AutoMapper.Internal.TypePair,AutoMapper", "AutoMapper.Internal.TypePair");
            feature.AddKnownType("AutoMapper.Internal.Mappers.AssignableMapper,AutoMapper", "AutoMapper.Internal.Mappers.AssignableMapper");
            feature.AddKnownType("AutoMapper.Internal.Mappers.CollectionMapper,AutoMapper", "AutoMapper.Internal.Mappers.CollectionMapper");
            feature.AddKnownType("AutoMapper.Internal.Mappers.MultidimensionalArrayFiller,AutoMapper", "AutoMapper.Internal.Mappers.MultidimensionalArrayFiller");
            feature.AddKnownType("AutoMapper.Internal.Mappers.ConstructorMapper,AutoMapper", "AutoMapper.Internal.Mappers.ConstructorMapper");
            feature.AddKnownType("AutoMapper.Internal.Mappers.ConversionOperatorMapper,AutoMapper", "AutoMapper.Internal.Mappers.ConversionOperatorMapper");
            feature.AddKnownType("AutoMapper.Internal.Mappers.ConvertMapper,AutoMapper", "AutoMapper.Internal.Mappers.ConvertMapper");
            feature.AddKnownType("AutoMapper.Internal.Mappers.EnumToEnumMapper,AutoMapper", "AutoMapper.Internal.Mappers.EnumToEnumMapper");
            feature.AddKnownType("AutoMapper.Internal.Mappers.FromDynamicMapper,AutoMapper", "AutoMapper.Internal.Mappers.FromDynamicMapper");
            feature.AddKnownType("AutoMapper.Internal.Mappers.FromStringDictionaryMapper,AutoMapper", "AutoMapper.Internal.Mappers.FromStringDictionaryMapper");
            feature.AddKnownType("AutoMapper.Internal.Mappers.IObjectMapper,AutoMapper", "AutoMapper.Internal.Mappers.IObjectMapper");
            feature.AddKnownType("AutoMapper.Internal.Mappers.ObjectMapper`2,AutoMapper", "AutoMapper.Internal.Mappers.ObjectMapper`2'2");
            feature.AddKnownType("AutoMapper.Internal.Mappers.KeyValueMapper,AutoMapper", "AutoMapper.Internal.Mappers.KeyValueMapper");
            feature.AddKnownType("AutoMapper.Internal.Mappers.NullableDestinationMapper,AutoMapper", "AutoMapper.Internal.Mappers.NullableDestinationMapper");
            feature.AddKnownType("AutoMapper.Internal.Mappers.NullableSourceMapper,AutoMapper", "AutoMapper.Internal.Mappers.NullableSourceMapper");
            feature.AddKnownType("AutoMapper.Internal.Mappers.ParseStringMapper,AutoMapper", "AutoMapper.Internal.Mappers.ParseStringMapper");
            feature.AddKnownType("AutoMapper.Internal.Mappers.StringToEnumMapper,AutoMapper", "AutoMapper.Internal.Mappers.StringToEnumMapper");
            feature.AddKnownType("AutoMapper.Internal.Mappers.ToDynamicMapper,AutoMapper", "AutoMapper.Internal.Mappers.ToDynamicMapper");
            feature.AddKnownType("AutoMapper.Internal.Mappers.ToStringDictionaryMapper,AutoMapper", "AutoMapper.Internal.Mappers.ToStringDictionaryMapper");
            feature.AddKnownType("AutoMapper.Internal.Mappers.ToStringMapper,AutoMapper", "AutoMapper.Internal.Mappers.ToStringMapper");
            feature.AddKnownType("AutoMapper.Internal.Mappers.UnderlyingTypeEnumMapper,AutoMapper", "AutoMapper.Internal.Mappers.UnderlyingTypeEnumMapper");
            feature.AddKnownType("AutoMapper.QueryableExtensions.MemberVisitor,AutoMapper", "AutoMapper.QueryableExtensions.MemberVisitor");
            feature.AddKnownType("AutoMapper.QueryableExtensions.NullsafeQueryRewriter,AutoMapper", "AutoMapper.QueryableExtensions.NullsafeQueryRewriter");
            feature.AddKnownType("AutoMapper.QueryableExtensions.Impl.IProjectionBuilder,AutoMapper", "AutoMapper.QueryableExtensions.Impl.IProjectionBuilder");
            feature.AddKnownType("AutoMapper.QueryableExtensions.Impl.IProjectionMapper,AutoMapper", "AutoMapper.QueryableExtensions.Impl.IProjectionMapper");
            feature.AddKnownType("AutoMapper.QueryableExtensions.Impl.ProjectionBuilder,AutoMapper", "AutoMapper.QueryableExtensions.Impl.ProjectionBuilder");
            feature.AddKnownType("AutoMapper.QueryableExtensions.Impl.ProjectionBuilder+FirstPassLetPropertyMaps,AutoMapper", "AutoMapper.QueryableExtensions.Impl.FirstPassLetPropertyMaps");
            feature.AddKnownType("AutoMapper.QueryableExtensions.Impl.ProjectionBuilder+FirstPassLetPropertyMaps+SubQueryPath,AutoMapper", "AutoMapper.QueryableExtensions.Impl.SubQueryPath");
            feature.AddKnownType("AutoMapper.QueryableExtensions.Impl.ProjectionBuilder+FirstPassLetPropertyMaps+GePropertiesVisitor,AutoMapper", "AutoMapper.QueryableExtensions.Impl.GePropertiesVisitor");
            feature.AddKnownType("AutoMapper.QueryableExtensions.Impl.ProjectionBuilder+FirstPassLetPropertyMaps+ReplaceMemberAccessesVisitor,AutoMapper", "AutoMapper.QueryableExtensions.Impl.ReplaceMemberAccessesVisitor");
            feature.AddKnownType("AutoMapper.QueryableExtensions.Impl.LetPropertyMaps,AutoMapper", "AutoMapper.QueryableExtensions.Impl.LetPropertyMaps");
            feature.AddKnownType("AutoMapper.QueryableExtensions.Impl.QueryExpressions,AutoMapper", "AutoMapper.QueryableExtensions.Impl.QueryExpressions");
            feature.AddKnownType("AutoMapper.QueryableExtensions.Impl.MemberProjection,AutoMapper", "AutoMapper.QueryableExtensions.Impl.MemberProjection");
            feature.AddKnownType("AutoMapper.QueryableExtensions.Impl.ParameterExpressionVisitor,AutoMapper", "AutoMapper.QueryableExtensions.Impl.ParameterExpressionVisitor");
            feature.AddKnownType("AutoMapper.QueryableExtensions.Impl.ParameterExpressionVisitor+ObjectParameterExpressionReplacementVisitor,AutoMapper", "AutoMapper.QueryableExtensions.Impl.ObjectParameterExpressionReplacementVisitor");
            feature.AddKnownType("AutoMapper.QueryableExtensions.Impl.ParameterExpressionVisitor+ConstantExpressionReplacementVisitor,AutoMapper", "AutoMapper.QueryableExtensions.Impl.ConstantExpressionReplacementVisitor");
            feature.AddKnownType("AutoMapper.QueryableExtensions.Impl.ProjectionRequest,AutoMapper", "AutoMapper.QueryableExtensions.Impl.ProjectionRequest");
            feature.AddKnownType("AutoMapper.QueryableExtensions.Impl.AssignableProjectionMapper,AutoMapper", "AutoMapper.QueryableExtensions.Impl.AssignableProjectionMapper");
            feature.AddKnownType("AutoMapper.QueryableExtensions.Impl.EnumerableProjectionMapper,AutoMapper", "AutoMapper.QueryableExtensions.Impl.EnumerableProjectionMapper");
            feature.AddKnownType("AutoMapper.QueryableExtensions.Impl.EnumProjectionMapper,AutoMapper", "AutoMapper.QueryableExtensions.Impl.EnumProjectionMapper");
            feature.AddKnownType("AutoMapper.QueryableExtensions.Impl.NullableSourceProjectionMapper,AutoMapper", "AutoMapper.QueryableExtensions.Impl.NullableSourceProjectionMapper");
            feature.AddKnownType("AutoMapper.QueryableExtensions.Impl.StringProjectionMapper,AutoMapper", "AutoMapper.QueryableExtensions.Impl.StringProjectionMapper");
            feature.AddKnownType("AssemblyInfo,BouncyCastle.Crypto", "<global namespace>.AssemblyInfo");
            feature.AddKnownType("Org.BouncyCastle.Apache.Bzip2.BZip2Constants,BouncyCastle.Crypto", "Org.BouncyCastle.Apache.Bzip2.BZip2Constants");
            feature.AddKnownType("Org.BouncyCastle.Apache.Bzip2.CBZip2InputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Apache.Bzip2.CBZip2InputStream");
            feature.AddKnownType("Org.BouncyCastle.Apache.Bzip2.CBZip2OutputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Apache.Bzip2.CBZip2OutputStream");
            feature.AddKnownType("Org.BouncyCastle.Apache.Bzip2.CBZip2OutputStream+StackElem,BouncyCastle.Crypto", "Org.BouncyCastle.Apache.Bzip2.StackElem");
            feature.AddKnownType("Org.BouncyCastle.Apache.Bzip2.CRC,BouncyCastle.Crypto", "Org.BouncyCastle.Apache.Bzip2.CRC");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Asn1Encodable,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Asn1Encodable");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Asn1EncodableVector,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Asn1EncodableVector");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Asn1Exception,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Asn1Exception");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Asn1Generator,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Asn1Generator");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Asn1InputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Asn1InputStream");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Asn1Null,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Asn1Null");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Asn1Object,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Asn1Object");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Asn1OctetString,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Asn1OctetString");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Asn1OctetStringParser,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Asn1OctetStringParser");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Asn1OutputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Asn1OutputStream");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Asn1ParsingException,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Asn1ParsingException");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Asn1Sequence,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Asn1Sequence");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Asn1Sequence+Asn1SequenceParserImpl,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Asn1SequenceParserImpl");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Asn1SequenceParser,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Asn1SequenceParser");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Asn1Set,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Asn1Set");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Asn1Set+Asn1SetParserImpl,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Asn1SetParserImpl");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Asn1Set+DerComparer,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerComparer");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Asn1SetParser,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Asn1SetParser");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Asn1StreamParser,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Asn1StreamParser");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Asn1TaggedObject,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Asn1TaggedObject");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Asn1TaggedObjectParser,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Asn1TaggedObjectParser");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Asn1Tags,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Asn1Tags");
            feature.AddKnownType("Org.BouncyCastle.Asn1.BerApplicationSpecific,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.BerApplicationSpecific");
            feature.AddKnownType("Org.BouncyCastle.Asn1.BerApplicationSpecificParser,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.BerApplicationSpecificParser");
            feature.AddKnownType("Org.BouncyCastle.Asn1.BerBitString,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.BerBitString");
            feature.AddKnownType("Org.BouncyCastle.Asn1.BerGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.BerGenerator");
            feature.AddKnownType("Org.BouncyCastle.Asn1.BerNull,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.BerNull");
            feature.AddKnownType("Org.BouncyCastle.Asn1.BerOctetString,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.BerOctetString");
            feature.AddKnownType("Org.BouncyCastle.Asn1.BerOctetString+ChunkEnumerator,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.ChunkEnumerator");
            feature.AddKnownType("Org.BouncyCastle.Asn1.BerOctetStringGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.BerOctetStringGenerator");
            feature.AddKnownType("Org.BouncyCastle.Asn1.BerOctetStringGenerator+BufferedBerOctetStream,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.BufferedBerOctetStream");
            feature.AddKnownType("Org.BouncyCastle.Asn1.BerOctetStringParser,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.BerOctetStringParser");
            feature.AddKnownType("Org.BouncyCastle.Asn1.BerOutputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.BerOutputStream");
            feature.AddKnownType("Org.BouncyCastle.Asn1.BerSequence,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.BerSequence");
            feature.AddKnownType("Org.BouncyCastle.Asn1.BerSequenceGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.BerSequenceGenerator");
            feature.AddKnownType("Org.BouncyCastle.Asn1.BerSequenceParser,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.BerSequenceParser");
            feature.AddKnownType("Org.BouncyCastle.Asn1.BerSet,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.BerSet");
            feature.AddKnownType("Org.BouncyCastle.Asn1.BerSetGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.BerSetGenerator");
            feature.AddKnownType("Org.BouncyCastle.Asn1.BerSetParser,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.BerSetParser");
            feature.AddKnownType("Org.BouncyCastle.Asn1.BerTaggedObject,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.BerTaggedObject");
            feature.AddKnownType("Org.BouncyCastle.Asn1.BerTaggedObjectParser,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.BerTaggedObjectParser");
            feature.AddKnownType("Org.BouncyCastle.Asn1.ConstructedOctetStream,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.ConstructedOctetStream");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DefiniteLengthInputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DefiniteLengthInputStream");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerApplicationSpecific,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerApplicationSpecific");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerBitString,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerBitString");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerBmpString,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerBmpString");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerBoolean,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerBoolean");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerEnumerated,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerEnumerated");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerExternal,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerExternal");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerExternalParser,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerExternalParser");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerGeneralizedTime,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerGeneralizedTime");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerGeneralString,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerGeneralString");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerGenerator");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerGraphicString,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerGraphicString");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerIA5String,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerIA5String");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerInteger,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerInteger");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerNull,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerNull");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerNumericString,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerNumericString");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerObjectIdentifier,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerObjectIdentifier");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerOctetString,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerOctetString");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerOctetStringParser,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerOctetStringParser");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerOutputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerOutputStream");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerOutputStreamNew,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerOutputStreamNew");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerPrintableString,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerPrintableString");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerSequence,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerSequence");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerSequenceGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerSequenceGenerator");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerSequenceParser,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerSequenceParser");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerSet,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerSet");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerSetGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerSetGenerator");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerSetParser,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerSetParser");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerStringBase,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerStringBase");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerT61String,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerT61String");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerTaggedObject,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerTaggedObject");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerUniversalString,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerUniversalString");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerUtcTime,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerUtcTime");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerUtf8String,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerUtf8String");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerVideotexString,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerVideotexString");
            feature.AddKnownType("Org.BouncyCastle.Asn1.DerVisibleString,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.DerVisibleString");
            feature.AddKnownType("Org.BouncyCastle.Asn1.IAsn1ApplicationSpecificParser,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.IAsn1ApplicationSpecificParser");
            feature.AddKnownType("Org.BouncyCastle.Asn1.IAsn1Choice,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.IAsn1Choice");
            feature.AddKnownType("Org.BouncyCastle.Asn1.IAsn1Convertible,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.IAsn1Convertible");
            feature.AddKnownType("Org.BouncyCastle.Asn1.IAsn1String,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.IAsn1String");
            feature.AddKnownType("Org.BouncyCastle.Asn1.IndefiniteLengthInputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.IndefiniteLengthInputStream");
            feature.AddKnownType("Org.BouncyCastle.Asn1.LazyAsn1InputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.LazyAsn1InputStream");
            feature.AddKnownType("Org.BouncyCastle.Asn1.LazyDerSequence,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.LazyDerSequence");
            feature.AddKnownType("Org.BouncyCastle.Asn1.LazyDerSet,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.LazyDerSet");
            feature.AddKnownType("Org.BouncyCastle.Asn1.LimitedInputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.LimitedInputStream");
            feature.AddKnownType("Org.BouncyCastle.Asn1.OidTokenizer,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.OidTokenizer");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Anssi.AnssiNamedCurves,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Anssi.AnssiNamedCurves");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Anssi.AnssiNamedCurves+Frp256v1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Anssi.Frp256v1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Anssi.AnssiObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Anssi.AnssiObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Asn1.BC.BCObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.BC.BCObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Asn1.BC.LinkedCertificate,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.BC.LinkedCertificate");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Bsi.BsiObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Bsi.BsiObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.CAKeyUpdAnnContent,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.CAKeyUpdAnnContent");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.CertConfirmContent,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.CertConfirmContent");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.CertifiedKeyPair,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.CertifiedKeyPair");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.CertOrEncCert,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.CertOrEncCert");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.CertRepMessage,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.CertRepMessage");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.CertResponse,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.CertResponse");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.CertStatus,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.CertStatus");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.Challenge,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.Challenge");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.CmpCertificate,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.CmpCertificate");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.CmpObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.CmpObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.CrlAnnContent,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.CrlAnnContent");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.ErrorMsgContent,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.ErrorMsgContent");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.GenMsgContent,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.GenMsgContent");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.GenRepContent,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.GenRepContent");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.InfoTypeAndValue,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.InfoTypeAndValue");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.KeyRecRepContent,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.KeyRecRepContent");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.OobCertHash,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.OobCertHash");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.PbmParameter,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.PbmParameter");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.PkiBody,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.PkiBody");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.PkiConfirmContent,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.PkiConfirmContent");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.PkiFailureInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.PkiFailureInfo");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.PkiFreeText,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.PkiFreeText");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.PkiHeader,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.PkiHeader");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.PkiHeaderBuilder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.PkiHeaderBuilder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.PkiMessage,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.PkiMessage");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.PkiMessages,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.PkiMessages");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.PkiStatus,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.PkiStatus");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.PkiStatusEncodable,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.PkiStatusEncodable");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.PkiStatusInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.PkiStatusInfo");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.PollRepContent,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.PollRepContent");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.PollReqContent,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.PollReqContent");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.PopoDecKeyChallContent,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.PopoDecKeyChallContent");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.PopoDecKeyRespContent,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.PopoDecKeyRespContent");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.ProtectedPart,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.ProtectedPart");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.RevAnnContent,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.RevAnnContent");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.RevDetails,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.RevDetails");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.RevRepContent,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.RevRepContent");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.RevRepContentBuilder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.RevRepContentBuilder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cmp.RevReqContent,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cmp.RevReqContent");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.Attribute,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.Attribute");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.Attributes,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.Attributes");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.AttributeTable,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.AttributeTable");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.AuthenticatedData,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.AuthenticatedData");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.AuthenticatedDataParser,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.AuthenticatedDataParser");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.AuthEnvelopedData,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.AuthEnvelopedData");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.AuthEnvelopedDataParser,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.AuthEnvelopedDataParser");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.CmsAttributes,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.CmsAttributes");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.CmsObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.CmsObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.CompressedData,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.CompressedData");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.CompressedDataParser,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.CompressedDataParser");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.ContentInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.ContentInfo");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.ContentInfoParser,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.ContentInfoParser");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.EncryptedContentInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.EncryptedContentInfo");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.EncryptedContentInfoParser,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.EncryptedContentInfoParser");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.EncryptedData,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.EncryptedData");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.EnvelopedData,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.EnvelopedData");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.EnvelopedDataParser,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.EnvelopedDataParser");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.Evidence,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.Evidence");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.IssuerAndSerialNumber,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.IssuerAndSerialNumber");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.KekIdentifier,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.KekIdentifier");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.KekRecipientInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.KekRecipientInfo");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.KeyAgreeRecipientIdentifier,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.KeyAgreeRecipientIdentifier");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.KeyAgreeRecipientInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.KeyAgreeRecipientInfo");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.KeyTransRecipientInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.KeyTransRecipientInfo");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.MetaData,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.MetaData");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.OriginatorIdentifierOrKey,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.OriginatorIdentifierOrKey");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.OriginatorInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.OriginatorInfo");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.OriginatorPublicKey,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.OriginatorPublicKey");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.OtherKeyAttribute,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.OtherKeyAttribute");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.OtherRecipientInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.OtherRecipientInfo");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.OtherRevocationInfoFormat,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.OtherRevocationInfoFormat");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.PasswordRecipientInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.PasswordRecipientInfo");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.RecipientEncryptedKey,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.RecipientEncryptedKey");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.RecipientIdentifier,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.RecipientIdentifier");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.RecipientInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.RecipientInfo");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.RecipientKeyIdentifier,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.RecipientKeyIdentifier");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.ScvpReqRes,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.ScvpReqRes");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.SignedData,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.SignedData");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.SignedDataParser,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.SignedDataParser");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.SignerIdentifier,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.SignerIdentifier");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.SignerInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.SignerInfo");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.Time,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.Time");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.TimeStampAndCrl,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.TimeStampAndCrl");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.TimeStampedData,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.TimeStampedData");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.TimeStampedDataParser,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.TimeStampedDataParser");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.TimeStampTokenEvidence,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.TimeStampTokenEvidence");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Cms.Ecc.MQVuserKeyingMaterial,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Cms.Ecc.MQVuserKeyingMaterial");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Crmf.AttributeTypeAndValue,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Crmf.AttributeTypeAndValue");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Crmf.CertId,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Crmf.CertId");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Crmf.CertReqMessages,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Crmf.CertReqMessages");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Crmf.CertReqMsg,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Crmf.CertReqMsg");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Crmf.CertRequest,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Crmf.CertRequest");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Crmf.CertTemplate,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Crmf.CertTemplate");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Crmf.CertTemplateBuilder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Crmf.CertTemplateBuilder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Crmf.Controls,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Crmf.Controls");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Crmf.CrmfObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Crmf.CrmfObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Crmf.EncKeyWithID,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Crmf.EncKeyWithID");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Crmf.EncryptedKey,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Crmf.EncryptedKey");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Crmf.EncryptedValue,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Crmf.EncryptedValue");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Crmf.OptionalValidity,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Crmf.OptionalValidity");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Crmf.PkiArchiveOptions,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Crmf.PkiArchiveOptions");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Crmf.PkiPublicationInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Crmf.PkiPublicationInfo");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Crmf.PKMacValue,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Crmf.PKMacValue");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Crmf.PopoPrivKey,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Crmf.PopoPrivKey");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Crmf.PopoSigningKey,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Crmf.PopoSigningKey");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Crmf.PopoSigningKeyInput,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Crmf.PopoSigningKeyInput");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Crmf.ProofOfPossession,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Crmf.ProofOfPossession");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Crmf.SinglePubInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Crmf.SinglePubInfo");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Crmf.SubsequentMessage,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Crmf.SubsequentMessage");
            feature.AddKnownType("Org.BouncyCastle.Asn1.CryptoPro.CryptoProObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.CryptoPro.CryptoProObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Asn1.CryptoPro.ECGost3410NamedCurves,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.CryptoPro.ECGost3410NamedCurves");
            feature.AddKnownType("Org.BouncyCastle.Asn1.CryptoPro.ECGost3410ParamSetParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.CryptoPro.ECGost3410ParamSetParameters");
            feature.AddKnownType("Org.BouncyCastle.Asn1.CryptoPro.Gost28147Parameters,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.CryptoPro.Gost28147Parameters");
            feature.AddKnownType("Org.BouncyCastle.Asn1.CryptoPro.Gost3410NamedParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.CryptoPro.Gost3410NamedParameters");
            feature.AddKnownType("Org.BouncyCastle.Asn1.CryptoPro.Gost3410ParamSetParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.CryptoPro.Gost3410ParamSetParameters");
            feature.AddKnownType("Org.BouncyCastle.Asn1.CryptoPro.Gost3410PublicKeyAlgParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.CryptoPro.Gost3410PublicKeyAlgParameters");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Eac.EacObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Eac.EacObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Asn1.EdEC.EdECObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.EdEC.EdECObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Esf.CertificateValues,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Esf.CertificateValues");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Esf.CommitmentTypeIdentifier,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Esf.CommitmentTypeIdentifier");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Esf.CommitmentTypeIndication,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Esf.CommitmentTypeIndication");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Esf.CommitmentTypeQualifier,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Esf.CommitmentTypeQualifier");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Esf.CompleteCertificateRefs,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Esf.CompleteCertificateRefs");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Esf.CompleteRevocationRefs,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Esf.CompleteRevocationRefs");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Esf.CrlIdentifier,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Esf.CrlIdentifier");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Esf.CrlListID,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Esf.CrlListID");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Esf.CrlOcspRef,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Esf.CrlOcspRef");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Esf.CrlValidatedID,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Esf.CrlValidatedID");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Esf.EsfAttributes,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Esf.EsfAttributes");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Esf.OcspIdentifier,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Esf.OcspIdentifier");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Esf.OcspListID,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Esf.OcspListID");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Esf.OcspResponsesID,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Esf.OcspResponsesID");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Esf.OtherCertID,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Esf.OtherCertID");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Esf.OtherHash,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Esf.OtherHash");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Esf.OtherHashAlgAndValue,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Esf.OtherHashAlgAndValue");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Esf.OtherRevRefs,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Esf.OtherRevRefs");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Esf.OtherRevVals,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Esf.OtherRevVals");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Esf.OtherSigningCertificate,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Esf.OtherSigningCertificate");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Esf.RevocationValues,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Esf.RevocationValues");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Esf.SignaturePolicyId,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Esf.SignaturePolicyId");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Esf.SignaturePolicyIdentifier,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Esf.SignaturePolicyIdentifier");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Esf.SignerAttribute,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Esf.SignerAttribute");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Esf.SignerLocation,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Esf.SignerLocation");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Esf.SigPolicyQualifierInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Esf.SigPolicyQualifierInfo");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Ess.ContentHints,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Ess.ContentHints");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Ess.ContentIdentifier,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Ess.ContentIdentifier");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Ess.EssCertID,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Ess.EssCertID");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Ess.EssCertIDv2,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Ess.EssCertIDv2");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Ess.OtherCertID,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Ess.OtherCertID");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Ess.OtherSigningCertificate,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Ess.OtherSigningCertificate");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Ess.SigningCertificate,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Ess.SigningCertificate");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Ess.SigningCertificateV2,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Ess.SigningCertificateV2");
            feature.AddKnownType("Org.BouncyCastle.Asn1.GM.GMNamedCurves,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.GM.GMNamedCurves");
            feature.AddKnownType("Org.BouncyCastle.Asn1.GM.GMNamedCurves+SM2P256V1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.GM.SM2P256V1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.GM.GMNamedCurves+WapiP192V1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.GM.WapiP192V1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.GM.GMObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.GM.GMObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Gnu.GnuObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Gnu.GnuObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Iana.IanaObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Iana.IanaObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Icao.CscaMasterList,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Icao.CscaMasterList");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Icao.DataGroupHash,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Icao.DataGroupHash");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Icao.IcaoObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Icao.IcaoObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Icao.LdsSecurityObject,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Icao.LdsSecurityObject");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Icao.LdsVersionInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Icao.LdsVersionInfo");
            feature.AddKnownType("Org.BouncyCastle.Asn1.IsisMtt.IsisMttObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.IsisMtt.IsisMttObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Asn1.IsisMtt.Ocsp.CertHash,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.IsisMtt.Ocsp.CertHash");
            feature.AddKnownType("Org.BouncyCastle.Asn1.IsisMtt.Ocsp.RequestedCertificate,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.IsisMtt.Ocsp.RequestedCertificate");
            feature.AddKnownType("Org.BouncyCastle.Asn1.IsisMtt.Ocsp.RequestedCertificate+Choice,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.IsisMtt.Ocsp.Org.BouncyCastle.Asn1.IsisMtt.Ocsp.RequestedCertificate.Choice");
            feature.AddKnownType("Org.BouncyCastle.Asn1.IsisMtt.X509.AdditionalInformationSyntax,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.IsisMtt.X509.AdditionalInformationSyntax");
            feature.AddKnownType("Org.BouncyCastle.Asn1.IsisMtt.X509.Admissions,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.IsisMtt.X509.Admissions");
            feature.AddKnownType("Org.BouncyCastle.Asn1.IsisMtt.X509.AdmissionSyntax,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.IsisMtt.X509.AdmissionSyntax");
            feature.AddKnownType("Org.BouncyCastle.Asn1.IsisMtt.X509.DeclarationOfMajority,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.IsisMtt.X509.DeclarationOfMajority");
            feature.AddKnownType("Org.BouncyCastle.Asn1.IsisMtt.X509.DeclarationOfMajority+Choice,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.IsisMtt.X509.Org.BouncyCastle.Asn1.IsisMtt.X509.DeclarationOfMajority.Choice");
            feature.AddKnownType("Org.BouncyCastle.Asn1.IsisMtt.X509.MonetaryLimit,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.IsisMtt.X509.MonetaryLimit");
            feature.AddKnownType("Org.BouncyCastle.Asn1.IsisMtt.X509.NamingAuthority,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.IsisMtt.X509.NamingAuthority");
            feature.AddKnownType("Org.BouncyCastle.Asn1.IsisMtt.X509.ProcurationSyntax,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.IsisMtt.X509.ProcurationSyntax");
            feature.AddKnownType("Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo");
            feature.AddKnownType("Org.BouncyCastle.Asn1.IsisMtt.X509.Restriction,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.IsisMtt.X509.Restriction");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Kisa.KisaObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Kisa.KisaObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Microsoft.MicrosoftObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Microsoft.MicrosoftObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Misc.Cast5CbcParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Misc.Cast5CbcParameters");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Misc.IdeaCbcPar,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Misc.IdeaCbcPar");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Misc.MiscObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Misc.MiscObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Misc.NetscapeCertType,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Misc.NetscapeCertType");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Misc.NetscapeRevocationUrl,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Misc.NetscapeRevocationUrl");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Misc.VerisignCzagExtension,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Misc.VerisignCzagExtension");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Mozilla.PublicKeyAndChallenge,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Mozilla.PublicKeyAndChallenge");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Nist.KMacWithShake128Params,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Nist.KMacWithShake128Params");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Nist.KMacWithShake256Params,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Nist.KMacWithShake256Params");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Nist.NistNamedCurves,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Nist.NistNamedCurves");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Nist.NistObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Nist.NistObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Nsri.NsriObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Nsri.NsriObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Ntt.NttObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Ntt.NttObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Ocsp.BasicOcspResponse,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Ocsp.BasicOcspResponse");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Ocsp.CertID,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Ocsp.CertID");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Ocsp.CertStatus,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Ocsp.CertStatus");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Ocsp.CrlID,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Ocsp.CrlID");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Ocsp.OcspObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Ocsp.OcspObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Ocsp.OcspRequest,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Ocsp.OcspRequest");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Ocsp.OcspResponse,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Ocsp.OcspResponse");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Ocsp.OcspResponseStatus,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Ocsp.OcspResponseStatus");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Ocsp.Request,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Ocsp.Request");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Ocsp.ResponderID,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Ocsp.ResponderID");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Ocsp.ResponseBytes,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Ocsp.ResponseBytes");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Ocsp.ResponseData,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Ocsp.ResponseData");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Ocsp.RevokedInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Ocsp.RevokedInfo");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Ocsp.ServiceLocator,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Ocsp.ServiceLocator");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Ocsp.Signature,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Ocsp.Signature");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Ocsp.SingleResponse,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Ocsp.SingleResponse");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Ocsp.TbsRequest,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Ocsp.TbsRequest");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Oiw.ElGamalParameter,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Oiw.ElGamalParameter");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Oiw.OiwObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Oiw.OiwObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Pkcs.AttributePkcs,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Pkcs.AttributePkcs");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Pkcs.AuthenticatedSafe,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Pkcs.AuthenticatedSafe");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Pkcs.CertBag,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Pkcs.CertBag");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Pkcs.CertificationRequest,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Pkcs.CertificationRequest");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Pkcs.CertificationRequestInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Pkcs.CertificationRequestInfo");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Pkcs.ContentInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Pkcs.ContentInfo");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Pkcs.DHParameter,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Pkcs.DHParameter");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Pkcs.EncryptedData,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Pkcs.EncryptedData");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Pkcs.EncryptedPrivateKeyInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Pkcs.EncryptedPrivateKeyInfo");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Pkcs.EncryptionScheme,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Pkcs.EncryptionScheme");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Pkcs.IssuerAndSerialNumber,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Pkcs.IssuerAndSerialNumber");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Pkcs.KeyDerivationFunc,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Pkcs.KeyDerivationFunc");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Pkcs.MacData,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Pkcs.MacData");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Pkcs.PbeParameter,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Pkcs.PbeParameter");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Pkcs.PbeS2Parameters,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Pkcs.PbeS2Parameters");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Pkcs.Pbkdf2Params,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Pkcs.Pbkdf2Params");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Pkcs.Pfx,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Pkcs.Pfx");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Pkcs.Pkcs12PbeParams,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Pkcs.Pkcs12PbeParams");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Pkcs.PkcsObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Pkcs.PkcsObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Pkcs.PrivateKeyInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Pkcs.PrivateKeyInfo");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Pkcs.RC2CbcParameter,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Pkcs.RC2CbcParameter");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Pkcs.RsaesOaepParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Pkcs.RsaesOaepParameters");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Pkcs.RsaPrivateKeyStructure,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Pkcs.RsaPrivateKeyStructure");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Pkcs.RsassaPssParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Pkcs.RsassaPssParameters");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Pkcs.SafeBag,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Pkcs.SafeBag");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Pkcs.SignedData,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Pkcs.SignedData");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Pkcs.SignerInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Pkcs.SignerInfo");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Rosstandart.RosstandartObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Rosstandart.RosstandartObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.ECPrivateKeyStructure,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.ECPrivateKeyStructure");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.SecNamedCurves");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Secp112r1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Secp112r1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Secp112r2Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Secp112r2Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Secp128r1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Secp128r1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Secp128r2Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Secp128r2Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Secp160k1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Secp160k1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Secp160r1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Secp160r1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Secp160r2Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Secp160r2Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Secp192k1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Secp192k1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Secp192r1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Secp192r1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Secp224k1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Secp224k1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Secp224r1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Secp224r1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Secp256k1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Secp256k1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Secp256r1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Secp256r1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Secp384r1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Secp384r1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Secp521r1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Secp521r1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect113r1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Sect113r1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect113r2Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Sect113r2Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect131r1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Sect131r1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect131r2Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Sect131r2Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect163k1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Sect163k1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect163r1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Sect163r1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect163r2Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Sect163r2Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect193r1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Sect193r1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect193r2Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Sect193r2Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect233k1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Sect233k1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect233r1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Sect233r1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect239k1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Sect239k1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect283k1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Sect283k1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect283r1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Sect283r1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect409k1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Sect409k1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect409r1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Sect409r1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect571k1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Sect571k1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecNamedCurves+Sect571r1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.Sect571r1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Sec.SecObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Sec.SecObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Smime.SmimeAttributes,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Smime.SmimeAttributes");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Smime.SmimeCapabilities,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Smime.SmimeCapabilities");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Smime.SmimeCapabilitiesAttribute,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Smime.SmimeCapabilitiesAttribute");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Smime.SmimeCapability,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Smime.SmimeCapability");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Smime.SmimeCapabilityVector,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Smime.SmimeCapabilityVector");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Smime.SmimeEncryptionKeyPreferenceAttribute,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Smime.SmimeEncryptionKeyPreferenceAttribute");
            feature.AddKnownType("Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves");
            feature.AddKnownType("Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves+BrainpoolP160r1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.TeleTrust.BrainpoolP160r1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves+BrainpoolP160t1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.TeleTrust.BrainpoolP160t1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves+BrainpoolP192r1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.TeleTrust.BrainpoolP192r1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves+BrainpoolP192t1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.TeleTrust.BrainpoolP192t1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves+BrainpoolP224r1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.TeleTrust.BrainpoolP224r1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves+BrainpoolP224t1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.TeleTrust.BrainpoolP224t1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves+BrainpoolP256r1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.TeleTrust.BrainpoolP256r1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves+BrainpoolP256t1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.TeleTrust.BrainpoolP256t1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves+BrainpoolP320r1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.TeleTrust.BrainpoolP320r1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves+BrainpoolP320t1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.TeleTrust.BrainpoolP320t1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves+BrainpoolP384r1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.TeleTrust.BrainpoolP384r1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves+BrainpoolP384t1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.TeleTrust.BrainpoolP384t1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves+BrainpoolP512r1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.TeleTrust.BrainpoolP512r1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves+BrainpoolP512t1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.TeleTrust.BrainpoolP512t1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Tsp.Accuracy,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Tsp.Accuracy");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Tsp.MessageImprint,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Tsp.MessageImprint");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Tsp.TimeStampReq,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Tsp.TimeStampReq");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Tsp.TimeStampResp,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Tsp.TimeStampResp");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Tsp.TstInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Tsp.TstInfo");
            feature.AddKnownType("Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Utilities.Asn1Dump,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Utilities.Asn1Dump");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Utilities.Dump,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Utilities.Dump");
            feature.AddKnownType("Org.BouncyCastle.Asn1.Utilities.FilterStream,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.Utilities.FilterStream");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X500.AttributeTypeAndValue,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X500.AttributeTypeAndValue");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X500.DirectoryString,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X500.DirectoryString");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X500.Rdn,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X500.Rdn");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X500.Style.IetfUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X500.Style.IetfUtilities");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.AccessDescription,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.AccessDescription");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.AttCertIssuer,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.AttCertIssuer");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.AttCertValidityPeriod,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.AttCertValidityPeriod");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.AttributeX509,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.AttributeX509");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.AttributeCertificate,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.AttributeCertificate");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.AttributeCertificateInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.AttributeCertificateInfo");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.AttributeTable,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.AttributeTable");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.AuthorityInformationAccess,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.AuthorityInformationAccess");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.AuthorityKeyIdentifier,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.AuthorityKeyIdentifier");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.BasicConstraints,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.BasicConstraints");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.CertificateList,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.CertificateList");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.CertificatePair,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.CertificatePair");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.CertificatePolicies,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.CertificatePolicies");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.CertPolicyID,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.CertPolicyID");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.CrlDistPoint,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.CrlDistPoint");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.CrlNumber,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.CrlNumber");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.CrlReason,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.CrlReason");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.DigestInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.DigestInfo");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.DisplayText,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.DisplayText");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.DistributionPoint,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.DistributionPoint");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.DistributionPointName,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.DistributionPointName");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.DsaParameter,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.DsaParameter");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.ExtendedKeyUsage,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.ExtendedKeyUsage");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.GeneralName,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.GeneralName");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.GeneralNames,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.GeneralNames");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.GeneralSubtree,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.GeneralSubtree");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.IetfAttrSyntax,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.IetfAttrSyntax");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.IssuerSerial,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.IssuerSerial");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.IssuingDistributionPoint,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.IssuingDistributionPoint");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.KeyPurposeID,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.KeyPurposeID");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.KeyUsage,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.KeyUsage");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.NameConstraints,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.NameConstraints");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.NoticeReference,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.NoticeReference");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.ObjectDigestInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.ObjectDigestInfo");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.OtherName,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.OtherName");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.PolicyInformation,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.PolicyInformation");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.PolicyMappings,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.PolicyMappings");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.PolicyQualifierID,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.PolicyQualifierID");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.PolicyQualifierInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.PolicyQualifierInfo");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.PrivateKeyUsagePeriod,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.PrivateKeyUsagePeriod");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.ReasonFlags,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.ReasonFlags");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.RoleSyntax,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.RoleSyntax");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.RsaPublicKeyStructure,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.RsaPublicKeyStructure");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.SubjectDirectoryAttributes,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.SubjectDirectoryAttributes");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.SubjectKeyIdentifier,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.SubjectKeyIdentifier");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.Target,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.Target");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.Target+Choice,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.Org.BouncyCastle.Asn1.X509.Target.Choice");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.TargetInformation,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.TargetInformation");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.Targets,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.Targets");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.TbsCertificateStructure,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.TbsCertificateStructure");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.CrlEntry,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.CrlEntry");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.TbsCertificateList,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.TbsCertificateList");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.TbsCertificateList+RevokedCertificatesEnumeration,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.RevokedCertificatesEnumeration");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.TbsCertificateList+RevokedCertificatesEnumeration+RevokedCertificatesEnumerator,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.RevokedCertificatesEnumerator");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.Time,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.Time");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.UserNotice,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.UserNotice");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.V1TbsCertificateGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.V1TbsCertificateGenerator");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.V2AttributeCertificateInfoGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.V2AttributeCertificateInfoGenerator");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.V2Form,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.V2Form");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.V2TbsCertListGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.V2TbsCertListGenerator");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.V3TbsCertificateGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.V3TbsCertificateGenerator");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.X509Attributes,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.X509Attributes");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.X509CertificateStructure,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.X509CertificateStructure");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.X509DefaultEntryConverter,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.X509DefaultEntryConverter");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.X509Extension,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.X509Extension");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.X509Extensions,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.X509Extensions");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.X509ExtensionsGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.X509ExtensionsGenerator");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.X509Name,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.X509Name");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.X509NameEntryConverter,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.X509NameEntryConverter");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.X509NameTokenizer,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.X509NameTokenizer");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.X509ObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.X509ObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.Qualified.BiometricData,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.Qualified.BiometricData");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.Qualified.EtsiQCObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.Qualified.EtsiQCObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.Qualified.Iso4217CurrencyCode,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.Qualified.Iso4217CurrencyCode");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.Qualified.MonetaryValue,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.Qualified.MonetaryValue");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.Qualified.QCStatement,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.Qualified.QCStatement");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.Qualified.Rfc3739QCObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.Qualified.Rfc3739QCObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.Qualified.SemanticsInformation,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.Qualified.SemanticsInformation");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.Qualified.TypeOfBiometricData,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.Qualified.TypeOfBiometricData");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.SigI.NameOrPseudonym,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.SigI.NameOrPseudonym");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.SigI.PersonalData,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.SigI.PersonalData");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X509.SigI.SigIObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X509.SigI.SigIObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.DHDomainParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.DHDomainParameters");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.DHPublicKey,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.DHPublicKey");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.DHValidationParms,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.DHValidationParms");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.ECNamedCurveTable,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.ECNamedCurveTable");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.KeySpecificInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.KeySpecificInfo");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.OtherInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.OtherInfo");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X962NamedCurves,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.X962NamedCurves");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X962NamedCurves+Prime192v1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.Prime192v1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X962NamedCurves+Prime192v2Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.Prime192v2Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X962NamedCurves+Prime192v3Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.Prime192v3Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X962NamedCurves+Prime239v1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.Prime239v1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X962NamedCurves+Prime239v2Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.Prime239v2Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X962NamedCurves+Prime239v3Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.Prime239v3Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X962NamedCurves+Prime256v1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.Prime256v1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2pnb163v1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.C2pnb163v1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2pnb163v2Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.C2pnb163v2Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2pnb163v3Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.C2pnb163v3Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2pnb176w1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.C2pnb176w1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2tnb191v1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.C2tnb191v1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2tnb191v2Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.C2tnb191v2Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2tnb191v3Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.C2tnb191v3Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2pnb208w1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.C2pnb208w1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2tnb239v1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.C2tnb239v1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2tnb239v2Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.C2tnb239v2Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2tnb239v3Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.C2tnb239v3Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2pnb272w1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.C2pnb272w1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2pnb304w1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.C2pnb304w1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2tnb359v1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.C2tnb359v1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2pnb368w1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.C2pnb368w1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X962NamedCurves+C2tnb431r1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.C2tnb431r1Holder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X962Parameters,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.X962Parameters");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X9Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.X9Curve");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X9ECParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.X9ECParameters");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X9ECParametersHolder,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.X9ECParametersHolder");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X9ECPoint,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.X9ECPoint");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X9FieldElement,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.X9FieldElement");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X9FieldID,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.X9FieldID");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X9IntegerConverter,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.X9IntegerConverter");
            feature.AddKnownType("Org.BouncyCastle.Asn1.X9.X9ObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Asn1.X9.X9ObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.ArmoredInputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.ArmoredInputStream");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.ArmoredOutputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.ArmoredOutputStream");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.BcpgInputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.BcpgInputStream");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.BcpgInputStream+PartialInputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.PartialInputStream");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.BcpgObject,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.BcpgObject");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.BcpgOutputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.BcpgOutputStream");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.CompressedDataPacket,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.CompressedDataPacket");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.CompressionAlgorithmTag,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.CompressionAlgorithmTag");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.ContainedPacket,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.ContainedPacket");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.Crc24,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.Crc24");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.DsaPublicBcpgKey,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.DsaPublicBcpgKey");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.DsaSecretBcpgKey,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.DsaSecretBcpgKey");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.ECDHPublicBcpgKey,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.ECDHPublicBcpgKey");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.ECDsaPublicBcpgKey,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.ECDsaPublicBcpgKey");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.ECPublicBcpgKey,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.ECPublicBcpgKey");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.ECSecretBcpgKey,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.ECSecretBcpgKey");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.ElGamalPublicBcpgKey,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.ElGamalPublicBcpgKey");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.ElGamalSecretBcpgKey,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.ElGamalSecretBcpgKey");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.ExperimentalPacket,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.ExperimentalPacket");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.HashAlgorithmTag,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.HashAlgorithmTag");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.IBcpgKey,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.IBcpgKey");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.InputStreamPacket,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.InputStreamPacket");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.LiteralDataPacket,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.LiteralDataPacket");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.MarkerPacket,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.MarkerPacket");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.ModDetectionCodePacket,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.ModDetectionCodePacket");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.MPInteger,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.MPInteger");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OnePassSignaturePacket,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OnePassSignaturePacket");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OutputStreamPacket,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OutputStreamPacket");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.Packet,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.Packet");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.PacketTag,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.PacketTag");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.PublicKeyEncSessionPacket,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.PublicKeyEncSessionPacket");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.PublicKeyPacket,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.PublicKeyPacket");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.PublicSubkeyPacket,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.PublicSubkeyPacket");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.RsaPublicBcpgKey,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.RsaPublicBcpgKey");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.RsaSecretBcpgKey,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.RsaSecretBcpgKey");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.S2k,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.S2k");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.SecretKeyPacket,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.SecretKeyPacket");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.SecretSubkeyPacket,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.SecretSubkeyPacket");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.SignaturePacket,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.SignaturePacket");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.SignatureSubpacket,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.SignatureSubpacket");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.SignatureSubpacketsParser,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.SignatureSubpacketsParser");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.SignatureSubpacketTag,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.SignatureSubpacketTag");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.RevocationKey,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.RevocationKey");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.RevocationKeyTag,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.RevocationKeyTag");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.RevocationReason,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.RevocationReason");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.RevocationReasonTag,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.RevocationReasonTag");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.SymmetricEncDataPacket,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.SymmetricEncDataPacket");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.SymmetricEncIntegrityPacket,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.SymmetricEncIntegrityPacket");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.SymmetricKeyAlgorithmTag");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.SymmetricKeyEncSessionPacket,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.SymmetricKeyEncSessionPacket");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.TrustPacket,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.TrustPacket");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.UnsupportedPacketVersionException,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.UnsupportedPacketVersionException");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.UserAttributePacket,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.UserAttributePacket");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.UserAttributeSubpacket,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.UserAttributeSubpacket");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.UserAttributeSubpacketsParser,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.UserAttributeSubpacketsParser");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.UserAttributeSubpacketTag,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.UserAttributeSubpacketTag");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.UserIdPacket,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.UserIdPacket");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.Attr.ImageAttrib,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.Attr.ImageAttrib");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.Attr.ImageAttrib+Format,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.Attr.Org.BouncyCastle.Bcpg.Attr.ImageAttrib.Format");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.IStreamGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.IStreamGenerator");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpCompressedData,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpCompressedData");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpCompressedDataGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpCompressedDataGenerator");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpCompressedDataGenerator+SafeCBZip2OutputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.SafeCBZip2OutputStream");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpCompressedDataGenerator+SafeZOutputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.SafeZOutputStream");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpDataValidationException,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpDataValidationException");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpEncryptedData,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpEncryptedData");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpEncryptedData+TruncatedStream,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.TruncatedStream");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpEncryptedDataGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpEncryptedDataGenerator");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpEncryptedDataGenerator+EncMethod,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.EncMethod");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpEncryptedDataGenerator+PbeMethod,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PbeMethod");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpEncryptedDataGenerator+PubMethod,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PubMethod");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpEncryptedDataList,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpEncryptedDataList");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpException,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpException");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpExperimental,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpExperimental");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpKeyFlags,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpKeyFlags");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpKeyPair,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpKeyPair");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpKeyRing,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpKeyRing");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpKeyRingGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpKeyRingGenerator");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpKeyValidationException,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpKeyValidationException");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpLiteralData,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpLiteralData");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpLiteralDataGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpLiteralDataGenerator");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpMarker,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpMarker");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpObject,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpObject");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpObjectFactory,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpObjectFactory");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpOnePassSignature,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpOnePassSignature");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpOnePassSignatureList,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpOnePassSignatureList");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpPad,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpPad");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpPbeEncryptedData,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpPbeEncryptedData");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpPrivateKey,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpPrivateKey");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKey,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKey");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKeyEncryptedData,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKeyEncryptedData");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKeyRing,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKeyRing");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKeyRingBundle,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpPublicKeyRingBundle");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKey,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKey");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKeyRing,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKeyRing");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKeyRingBundle,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpSecretKeyRingBundle");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpSignature,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpSignature");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpSignatureGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpSignatureGenerator");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpSignatureList,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpSignatureList");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpSignatureSubpacketGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpSignatureSubpacketGenerator");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpSignatureSubpacketVector,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpSignatureSubpacketVector");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpUserAttributeSubpacketVector,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpUserAttributeSubpacketVector");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpUserAttributeSubpacketVectorGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpUserAttributeSubpacketVectorGenerator");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpUtilities");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.PgpV3SignatureGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.PgpV3SignatureGenerator");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.Rfc6637Utilities,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.Rfc6637Utilities");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.SXprUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.SXprUtilities");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.SXprUtilities+MyS2k,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.MyS2k");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.OpenPgp.WrappedGeneratorStream,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.OpenPgp.WrappedGeneratorStream");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.Sig.EmbeddedSignature,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.Sig.EmbeddedSignature");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.Sig.Exportable,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.Sig.Exportable");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.Sig.Features,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.Sig.Features");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.Sig.IssuerKeyId,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.Sig.IssuerKeyId");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.Sig.KeyExpirationTime,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.Sig.KeyExpirationTime");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.Sig.KeyFlags,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.Sig.KeyFlags");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.Sig.NotationData,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.Sig.NotationData");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.Sig.PreferredAlgorithms,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.Sig.PreferredAlgorithms");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.Sig.PrimaryUserId,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.Sig.PrimaryUserId");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.Sig.Revocable,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.Sig.Revocable");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.Sig.SignatureCreationTime,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.Sig.SignatureCreationTime");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.Sig.SignatureExpirationTime,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.Sig.SignatureExpirationTime");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.Sig.SignerUserId,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.Sig.SignerUserId");
            feature.AddKnownType("Org.BouncyCastle.Bcpg.Sig.TrustSignature,BouncyCastle.Crypto", "Org.BouncyCastle.Bcpg.Sig.TrustSignature");
            feature.AddKnownType("Org.BouncyCastle.Cmp.CertificateConfirmationContent,BouncyCastle.Crypto", "Org.BouncyCastle.Cmp.CertificateConfirmationContent");
            feature.AddKnownType("Org.BouncyCastle.Cmp.CertificateConfirmationContentBuilder,BouncyCastle.Crypto", "Org.BouncyCastle.Cmp.CertificateConfirmationContentBuilder");
            feature.AddKnownType("Org.BouncyCastle.Cmp.CertificateStatus,BouncyCastle.Crypto", "Org.BouncyCastle.Cmp.CertificateStatus");
            feature.AddKnownType("Org.BouncyCastle.Cmp.CmpException,BouncyCastle.Crypto", "Org.BouncyCastle.Cmp.CmpException");
            feature.AddKnownType("Org.BouncyCastle.Cmp.GeneralPkiMessage,BouncyCastle.Crypto", "Org.BouncyCastle.Cmp.GeneralPkiMessage");
            feature.AddKnownType("Org.BouncyCastle.Cmp.ProtectedPkiMessage,BouncyCastle.Crypto", "Org.BouncyCastle.Cmp.ProtectedPkiMessage");
            feature.AddKnownType("Org.BouncyCastle.Cmp.ProtectedPkiMessageBuilder,BouncyCastle.Crypto", "Org.BouncyCastle.Cmp.ProtectedPkiMessageBuilder");
            feature.AddKnownType("Org.BouncyCastle.Cmp.RevocationDetails,BouncyCastle.Crypto", "Org.BouncyCastle.Cmp.RevocationDetails");
            feature.AddKnownType("Org.BouncyCastle.Cmp.RevocationDetailsBuilder,BouncyCastle.Crypto", "Org.BouncyCastle.Cmp.RevocationDetailsBuilder");
            feature.AddKnownType("Org.BouncyCastle.Cms.BaseDigestCalculator,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.BaseDigestCalculator");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsAttributeTableGenerationException,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsAttributeTableGenerationException");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsAttributeTableParameter,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsAttributeTableParameter");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsAttributeTableGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsAttributeTableGenerator");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsAuthenticatedData,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsAuthenticatedData");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsAuthenticatedDataGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsAuthenticatedDataGenerator");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsAuthenticatedDataParser,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsAuthenticatedDataParser");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsAuthenticatedDataStreamGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsAuthenticatedDataStreamGenerator");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsAuthenticatedDataStreamGenerator+CmsAuthenticatedDataOutputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsAuthenticatedDataOutputStream");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsAuthenticatedGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsAuthenticatedGenerator");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsAuthEnvelopedData,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsAuthEnvelopedData");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsAuthEnvelopedData+AuthEnvelopedSecureReadable,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.AuthEnvelopedSecureReadable");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsAuthEnvelopedGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsAuthEnvelopedGenerator");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsCompressedData,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsCompressedData");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsCompressedDataGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsCompressedDataGenerator");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsCompressedDataParser,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsCompressedDataParser");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsCompressedDataStreamGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsCompressedDataStreamGenerator");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsCompressedDataStreamGenerator+CmsCompressedOutputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsCompressedOutputStream");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsContentInfoParser,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsContentInfoParser");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsEnvelopedData,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsEnvelopedData");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsEnvelopedDataGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsEnvelopedDataGenerator");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsEnvelopedDataParser,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsEnvelopedDataParser");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsEnvelopedDataStreamGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsEnvelopedDataStreamGenerator");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsEnvelopedDataStreamGenerator+CmsEnvelopedDataOutputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsEnvelopedDataOutputStream");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsEnvelopedGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsEnvelopedGenerator");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsEnvelopedHelper,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsEnvelopedHelper");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsEnvelopedHelper+CmsAuthenticatedSecureReadable,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsAuthenticatedSecureReadable");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsEnvelopedHelper+CmsEnvelopedSecureReadable,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsEnvelopedSecureReadable");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsException,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsException");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsPbeKey,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsPbeKey");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsProcessable,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsProcessable");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsProcessableByteArray,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsProcessableByteArray");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsProcessableFile,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsProcessableFile");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsProcessableInputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsProcessableInputStream");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsReadable,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsReadable");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsSecureReadable,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsSecureReadable");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsSignedData,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsSignedData");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsSignedDataGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsSignedDataGenerator");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsSignedDataGenerator+SignerInf,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.SignerInf");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsSignedDataParser,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsSignedDataParser");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsSignedDataStreamGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsSignedDataStreamGenerator");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsSignedDataStreamGenerator+DigestAndSignerInfoGeneratorHolder,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.DigestAndSignerInfoGeneratorHolder");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsSignedDataStreamGenerator+SignerInfoGeneratorImpl,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.SignerInfoGeneratorImpl");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsSignedDataStreamGenerator+CmsSignedDataOutputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsSignedDataOutputStream");
            feature.AddKnownType("Org.BouncyCastle.Cms.DefaultSignatureAlgorithmIdentifierFinder,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.DefaultSignatureAlgorithmIdentifierFinder");
            feature.AddKnownType("Org.BouncyCastle.Cms.DefaultDigestAlgorithmIdentifierFinder,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.DefaultDigestAlgorithmIdentifierFinder");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsSignedGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsSignedGenerator");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsSignedHelper,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsSignedHelper");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsStreamException,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsStreamException");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsTypedStream,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsTypedStream");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsTypedStream+FullReaderStream,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.FullReaderStream");
            feature.AddKnownType("Org.BouncyCastle.Cms.CmsUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CmsUtilities");
            feature.AddKnownType("Org.BouncyCastle.Cms.CounterSignatureDigestCalculator,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.CounterSignatureDigestCalculator");
            feature.AddKnownType("Org.BouncyCastle.Cms.DefaultAuthenticatedAttributeTableGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.DefaultAuthenticatedAttributeTableGenerator");
            feature.AddKnownType("Org.BouncyCastle.Cms.DefaultSignedAttributeTableGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.DefaultSignedAttributeTableGenerator");
            feature.AddKnownType("Org.BouncyCastle.Cms.EnvelopedDataHelper,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.EnvelopedDataHelper");
            feature.AddKnownType("Org.BouncyCastle.Cms.IDigestCalculator,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.IDigestCalculator");
            feature.AddKnownType("Org.BouncyCastle.Cms.KekRecipientInfoGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.KekRecipientInfoGenerator");
            feature.AddKnownType("Org.BouncyCastle.Cms.KekRecipientInformation,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.KekRecipientInformation");
            feature.AddKnownType("Org.BouncyCastle.Cms.KeyAgreeRecipientInfoGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.KeyAgreeRecipientInfoGenerator");
            feature.AddKnownType("Org.BouncyCastle.Cms.KeyAgreeRecipientInformation,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.KeyAgreeRecipientInformation");
            feature.AddKnownType("Org.BouncyCastle.Cms.KeyTransRecipientInfoGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.KeyTransRecipientInfoGenerator");
            feature.AddKnownType("Org.BouncyCastle.Cms.KeyTransRecipientInformation,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.KeyTransRecipientInformation");
            feature.AddKnownType("Org.BouncyCastle.Cms.OriginatorID,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.OriginatorID");
            feature.AddKnownType("Org.BouncyCastle.Cms.OriginatorInfoGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.OriginatorInfoGenerator");
            feature.AddKnownType("Org.BouncyCastle.Cms.OriginatorInformation,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.OriginatorInformation");
            feature.AddKnownType("Org.BouncyCastle.Cms.PasswordRecipientInfoGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.PasswordRecipientInfoGenerator");
            feature.AddKnownType("Org.BouncyCastle.Cms.PasswordRecipientInformation,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.PasswordRecipientInformation");
            feature.AddKnownType("Org.BouncyCastle.Cms.Pkcs5Scheme2PbeKey,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.Pkcs5Scheme2PbeKey");
            feature.AddKnownType("Org.BouncyCastle.Cms.Pkcs5Scheme2Utf8PbeKey,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.Pkcs5Scheme2Utf8PbeKey");
            feature.AddKnownType("Org.BouncyCastle.Cms.RecipientID,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.RecipientID");
            feature.AddKnownType("Org.BouncyCastle.Cms.RecipientInfoGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.RecipientInfoGenerator");
            feature.AddKnownType("Org.BouncyCastle.Cms.RecipientInformation,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.RecipientInformation");
            feature.AddKnownType("Org.BouncyCastle.Cms.RecipientInformationStore,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.RecipientInformationStore");
            feature.AddKnownType("Org.BouncyCastle.Cms.SignerID,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.SignerID");
            feature.AddKnownType("Org.BouncyCastle.Cms.ISignerInfoGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.ISignerInfoGenerator");
            feature.AddKnownType("Org.BouncyCastle.Cms.SignerInfoGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.SignerInfoGenerator");
            feature.AddKnownType("Org.BouncyCastle.Cms.SignerInfoGeneratorBuilder,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.SignerInfoGeneratorBuilder");
            feature.AddKnownType("Org.BouncyCastle.Cms.SignerInformation,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.SignerInformation");
            feature.AddKnownType("Org.BouncyCastle.Cms.SignerInformationStore,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.SignerInformationStore");
            feature.AddKnownType("Org.BouncyCastle.Cms.SimpleAttributeTableGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Cms.SimpleAttributeTableGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crmf.AuthenticatorControl,BouncyCastle.Crypto", "Org.BouncyCastle.Crmf.AuthenticatorControl");
            feature.AddKnownType("Org.BouncyCastle.Crmf.CertificateRequestMessage,BouncyCastle.Crypto", "Org.BouncyCastle.Crmf.CertificateRequestMessage");
            feature.AddKnownType("Org.BouncyCastle.Crmf.CertificateRequestMessageBuilder,BouncyCastle.Crypto", "Org.BouncyCastle.Crmf.CertificateRequestMessageBuilder");
            feature.AddKnownType("Org.BouncyCastle.Crmf.CrmfException,BouncyCastle.Crypto", "Org.BouncyCastle.Crmf.CrmfException");
            feature.AddKnownType("Org.BouncyCastle.Crmf.DefaultPKMacPrimitivesProvider,BouncyCastle.Crypto", "Org.BouncyCastle.Crmf.DefaultPKMacPrimitivesProvider");
            feature.AddKnownType("Org.BouncyCastle.Crmf.EncryptedValueBuilder,BouncyCastle.Crypto", "Org.BouncyCastle.Crmf.EncryptedValueBuilder");
            feature.AddKnownType("Org.BouncyCastle.Crmf.IControl,BouncyCastle.Crypto", "Org.BouncyCastle.Crmf.IControl");
            feature.AddKnownType("Org.BouncyCastle.Crmf.IEncryptedValuePadder,BouncyCastle.Crypto", "Org.BouncyCastle.Crmf.IEncryptedValuePadder");
            feature.AddKnownType("Org.BouncyCastle.Crmf.IPKMacPrimitivesProvider,BouncyCastle.Crypto", "Org.BouncyCastle.Crmf.IPKMacPrimitivesProvider");
            feature.AddKnownType("Org.BouncyCastle.Crmf.PkiArchiveControl,BouncyCastle.Crypto", "Org.BouncyCastle.Crmf.PkiArchiveControl");
            feature.AddKnownType("Org.BouncyCastle.Crmf.PkiArchiveControlBuilder,BouncyCastle.Crypto", "Org.BouncyCastle.Crmf.PkiArchiveControlBuilder");
            feature.AddKnownType("Org.BouncyCastle.Crmf.PKMacStreamCalculator,BouncyCastle.Crypto", "Org.BouncyCastle.Crmf.PKMacStreamCalculator");
            feature.AddKnownType("Org.BouncyCastle.Crmf.PKMacFactory,BouncyCastle.Crypto", "Org.BouncyCastle.Crmf.PKMacFactory");
            feature.AddKnownType("Org.BouncyCastle.Crmf.DefaultPKMacResult,BouncyCastle.Crypto", "Org.BouncyCastle.Crmf.DefaultPKMacResult");
            feature.AddKnownType("Org.BouncyCastle.Crmf.PKMacBuilder,BouncyCastle.Crypto", "Org.BouncyCastle.Crmf.PKMacBuilder");
            feature.AddKnownType("Org.BouncyCastle.Crmf.ProofOfPossessionSigningKeyBuilder,BouncyCastle.Crypto", "Org.BouncyCastle.Crmf.ProofOfPossessionSigningKeyBuilder");
            feature.AddKnownType("Org.BouncyCastle.Crmf.RegTokenControl,BouncyCastle.Crypto", "Org.BouncyCastle.Crmf.RegTokenControl");
            feature.AddKnownType("Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair");
            feature.AddKnownType("Org.BouncyCastle.Crypto.AsymmetricKeyParameter,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.AsymmetricKeyParameter");
            feature.AddKnownType("Org.BouncyCastle.Crypto.BufferedAeadBlockCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.BufferedAeadBlockCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.BufferedAeadCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.BufferedAeadCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.BufferedAsymmetricBlockCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.BufferedAsymmetricBlockCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.BufferedBlockCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.BufferedBlockCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.BufferedCipherBase,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.BufferedCipherBase");
            feature.AddKnownType("Org.BouncyCastle.Crypto.BufferedIesCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.BufferedIesCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.BufferedStreamCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.BufferedStreamCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Check,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Check");
            feature.AddKnownType("Org.BouncyCastle.Crypto.CipherKeyGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.CipherKeyGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.CryptoException,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.CryptoException");
            feature.AddKnownType("Org.BouncyCastle.Crypto.DataLengthException,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.DataLengthException");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IAlphabetMapper,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IAlphabetMapper");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IAsymmetricBlockCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IBasicAgreement,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IBasicAgreement");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IBlockCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IBlockCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IBlockResult,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IBlockResult");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IBufferedCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IBufferedCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.ICipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.ICipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.ICipherBuilder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.ICipherBuilder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.ICipherBuilderWithKey,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.ICipherBuilderWithKey");
            feature.AddKnownType("Org.BouncyCastle.Crypto.ICipherParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.ICipherParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IDecryptorBuilderProvider,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IDecryptorBuilderProvider");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IDerivationFunction,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IDerivationFunction");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IDerivationParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IDerivationParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IDigest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IDigest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IDigestFactory,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IDigestFactory");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IDsa,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IDsa");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IDsaExt,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IDsaExt");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IEntropySource,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IEntropySource");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IEntropySourceProvider,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IEntropySourceProvider");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IKeyUnwrapper,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IKeyUnwrapper");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IKeyWrapper,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IKeyWrapper");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IMac,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IMac");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IMacDerivationFunction,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IMacDerivationFunction");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IMacFactory,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IMacFactory");
            feature.AddKnownType("Org.BouncyCastle.Crypto.InvalidCipherTextException,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.InvalidCipherTextException");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IRawAgreement,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IRawAgreement");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IRsa,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IRsa");
            feature.AddKnownType("Org.BouncyCastle.Crypto.ISignatureFactory,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.ISignatureFactory");
            feature.AddKnownType("Org.BouncyCastle.Crypto.ISigner,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.ISigner");
            feature.AddKnownType("Org.BouncyCastle.Crypto.ISignerWithRecovery,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.ISignerWithRecovery");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IStreamCalculator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IStreamCalculator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IStreamCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IStreamCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IVerifier,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IVerifier");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IVerifierFactory,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IVerifierFactory");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IVerifierFactoryProvider,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IVerifierFactoryProvider");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IWrapper,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IWrapper");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IXof,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IXof");
            feature.AddKnownType("Org.BouncyCastle.Crypto.KeyGenerationParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.KeyGenerationParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.MaxBytesExceededException,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.MaxBytesExceededException");
            feature.AddKnownType("Org.BouncyCastle.Crypto.OutputLengthException,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.OutputLengthException");
            feature.AddKnownType("Org.BouncyCastle.Crypto.PbeParametersGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.PbeParametersGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.SimpleBlockResult,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.SimpleBlockResult");
            feature.AddKnownType("Org.BouncyCastle.Crypto.StreamBlockCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.StreamBlockCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Agreement.DHAgreement,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Agreement.DHAgreement");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Agreement.DHBasicAgreement,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Agreement.DHBasicAgreement");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Agreement.DHStandardGroups,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Agreement.DHStandardGroups");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Agreement.ECDHCBasicAgreement,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Agreement.ECDHCBasicAgreement");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Agreement.ECDHWithKdfBasicAgreement,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Agreement.ECDHWithKdfBasicAgreement");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Agreement.ECMqvBasicAgreement,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Agreement.ECMqvBasicAgreement");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Agreement.ECMqvWithKdfBasicAgreement,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Agreement.ECMqvWithKdfBasicAgreement");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Agreement.SM2KeyExchange,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Agreement.SM2KeyExchange");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Agreement.X25519Agreement,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Agreement.X25519Agreement");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Agreement.X448Agreement,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Agreement.X448Agreement");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Agreement.JPake.JPakeParticipant,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Agreement.JPake.JPakeParticipant");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Agreement.JPake.JPakePrimeOrderGroup,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Agreement.JPake.JPakePrimeOrderGroup");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Agreement.JPake.JPakePrimeOrderGroups,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Agreement.JPake.JPakePrimeOrderGroups");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Agreement.JPake.JPakeRound1Payload,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Agreement.JPake.JPakeRound1Payload");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Agreement.JPake.JPakeRound2Payload,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Agreement.JPake.JPakeRound2Payload");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Agreement.JPake.JPakeRound3Payload,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Agreement.JPake.JPakeRound3Payload");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Agreement.JPake.JPakeUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Agreement.JPake.JPakeUtilities");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Agreement.Kdf.ConcatenationKdfGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Agreement.Kdf.ConcatenationKdfGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Agreement.Kdf.DHKdfParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Agreement.Kdf.DHKdfParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Agreement.Kdf.DHKekGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Agreement.Kdf.DHKekGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Agreement.Kdf.ECDHKekGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Agreement.Kdf.ECDHKekGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Agreement.Srp.Srp6Client,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Agreement.Srp.Srp6Client");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Agreement.Srp.Srp6Server,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Agreement.Srp.Srp6Server");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Agreement.Srp.Srp6StandardGroups,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Agreement.Srp.Srp6StandardGroups");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Agreement.Srp.Srp6Utilities,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Agreement.Srp.Srp6Utilities");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Agreement.Srp.Srp6VerifierGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Agreement.Srp.Srp6VerifierGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.Blake2bDigest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.Blake2bDigest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.Blake2sDigest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.Blake2sDigest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.CShakeDigest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.CShakeDigest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.Dstu7564Digest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.Dstu7564Digest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.GeneralDigest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.GeneralDigest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.Gost3411Digest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.Gost3411Digest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.Gost3411_2012Digest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.Gost3411_2012Digest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.Gost3411_2012_256Digest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.Gost3411_2012_256Digest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.Gost3411_2012_512Digest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.Gost3411_2012_512Digest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.KeccakDigest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.KeccakDigest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.LongDigest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.LongDigest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.MD2Digest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.MD2Digest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.MD4Digest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.MD4Digest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.MD5Digest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.MD5Digest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.NonMemoableDigest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.NonMemoableDigest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.NullDigest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.NullDigest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.ParallelHash,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.ParallelHash");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.RipeMD128Digest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.RipeMD128Digest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.RipeMD160Digest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.RipeMD160Digest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.RipeMD256Digest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.RipeMD256Digest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.RipeMD320Digest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.RipeMD320Digest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.Sha1Digest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.Sha1Digest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.Sha224Digest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.Sha224Digest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.Sha256Digest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.Sha256Digest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.Sha384Digest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.Sha384Digest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.Sha3Digest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.Sha3Digest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.Sha512Digest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.Sha512Digest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.Sha512tDigest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.Sha512tDigest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.ShakeDigest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.ShakeDigest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.ShortenedDigest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.ShortenedDigest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.SkeinDigest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.SkeinDigest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.SkeinEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.SkeinEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.SkeinEngine+Configuration,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.Configuration");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.SkeinEngine+Parameter,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.Org.BouncyCastle.Crypto.Digests.SkeinEngine.Parameter");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.SkeinEngine+UbiTweak,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.UbiTweak");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.SkeinEngine+UBI,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.UBI");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.SM3Digest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.SM3Digest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.TigerDigest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.TigerDigest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.TupleHash,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.TupleHash");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.WhirlpoolDigest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.WhirlpoolDigest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Digests.XofUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Digests.XofUtilities");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.CustomNamedCurves");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+Curve25519Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.Curve25519Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+SecP128R1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.SecP128R1Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+SecP160K1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.SecP160K1Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+SecP160R1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.SecP160R1Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+SecP160R2Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.SecP160R2Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+SecP192K1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.SecP192K1Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+SecP192R1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.SecP192R1Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+SecP224K1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.SecP224K1Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+SecP224R1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.SecP224R1Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+SecP256K1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.SecP256K1Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+SecP256R1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.SecP256R1Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+SecP384R1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.SecP384R1Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+SecP521R1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.SecP521R1Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+SecT113R1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.SecT113R1Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+SecT113R2Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.SecT113R2Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+SecT131R1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.SecT131R1Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+SecT131R2Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.SecT131R2Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+SecT163K1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.SecT163K1Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+SecT163R1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.SecT163R1Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+SecT163R2Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.SecT163R2Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+SecT193R1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.SecT193R1Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+SecT193R2Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.SecT193R2Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+SecT233K1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.SecT233K1Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+SecT233R1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.SecT233R1Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+SecT239K1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.SecT239K1Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+SecT283K1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.SecT283K1Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+SecT283R1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.SecT283R1Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+SecT409K1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.SecT409K1Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+SecT409R1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.SecT409R1Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+SecT571K1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.SecT571K1Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+SecT571R1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.SecT571R1Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.EC.CustomNamedCurves+SM2P256V1Holder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.EC.SM2P256V1Holder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Encodings.ISO9796d1Encoding,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Encodings.ISO9796d1Encoding");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Encodings.OaepEncoding,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Encodings.OaepEncoding");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Encodings.Pkcs1Encoding,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Encodings.Pkcs1Encoding");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.AesEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.AesEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.AesFastEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.AesFastEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.AesLightEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.AesLightEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.AesWrapEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.AesWrapEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.AriaEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.AriaEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.BlowfishEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.BlowfishEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.CamelliaEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.CamelliaEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.CamelliaLightEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.CamelliaLightEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.CamelliaWrapEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.CamelliaWrapEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.Cast5Engine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.Cast5Engine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.Cast6Engine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.Cast6Engine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.ChaCha7539Engine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.ChaCha7539Engine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.ChaChaEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.ChaChaEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.DesEdeEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.DesEdeEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.DesEdeWrapEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.DesEdeWrapEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.DesEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.DesEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.Dstu7624Engine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.Dstu7624Engine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.Dstu7624WrapEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.Dstu7624WrapEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.ElGamalEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.ElGamalEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.Gost28147Engine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.Gost28147Engine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.HC128Engine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.HC128Engine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.HC256Engine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.HC256Engine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.IdeaEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.IdeaEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.IesEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.IesEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.IsaacEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.IsaacEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.NaccacheSternEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.NaccacheSternEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.NoekeonEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.NoekeonEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.NullEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.NullEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.RC2Engine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.RC2Engine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.RC2WrapEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.RC2WrapEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.RC4Engine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.RC4Engine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.RC532Engine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.RC532Engine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.RC564Engine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.RC564Engine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.RC6Engine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.RC6Engine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.Rfc3211WrapEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.Rfc3211WrapEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.Rfc3394WrapEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.Rfc3394WrapEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.RijndaelEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.RijndaelEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.RsaBlindedEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.RsaBlindedEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.RsaBlindingEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.RsaBlindingEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.RsaCoreEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.RsaCoreEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.RsaEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.RsaEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.Salsa20Engine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.Salsa20Engine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.SeedEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.SeedEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.SeedWrapEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.SeedWrapEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.SerpentEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.SerpentEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.SerpentEngineBase,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.SerpentEngineBase");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.SkipjackEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.SkipjackEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.SM2Engine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.SM2Engine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.SM4Engine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.SM4Engine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.TeaEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.TeaEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.ThreefishEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.ThreefishEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.ThreefishEngine+ThreefishCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.ThreefishCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.ThreefishEngine+Threefish256Cipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.Threefish256Cipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.ThreefishEngine+Threefish512Cipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.Threefish512Cipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.ThreefishEngine+Threefish1024Cipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.Threefish1024Cipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.TnepresEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.TnepresEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.TwofishEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.TwofishEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.VmpcEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.VmpcEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.VmpcKsa3Engine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.VmpcKsa3Engine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.XSalsa20Engine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.XSalsa20Engine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Engines.XteaEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Engines.XteaEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Fpe.FpeEngine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Fpe.FpeEngine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Fpe.FpeFf1Engine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Fpe.FpeFf1Engine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Fpe.FpeFf3_1Engine,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Fpe.FpeFf3_1Engine");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Fpe.SP80038G,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Fpe.SP80038G");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.BaseKdfBytesGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.BaseKdfBytesGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.BCrypt,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.BCrypt");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.DesEdeKeyGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.DesEdeKeyGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.DesKeyGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.DesKeyGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.DHBasicKeyPairGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.DHBasicKeyPairGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.DHKeyGeneratorHelper,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.DHKeyGeneratorHelper");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.DHKeyPairGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.DHKeyPairGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.DHParametersGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.DHParametersGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.DHParametersHelper,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.DHParametersHelper");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.DsaKeyPairGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.DsaKeyPairGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.DsaParametersGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.DsaParametersGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.ECKeyPairGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.ECKeyPairGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.Ed25519KeyPairGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.Ed25519KeyPairGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.Ed448KeyPairGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.Ed448KeyPairGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.ElGamalKeyPairGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.ElGamalKeyPairGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.ElGamalParametersGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.ElGamalParametersGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.Gost3410KeyPairGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.Gost3410KeyPairGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.Gost3410ParametersGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.Gost3410ParametersGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.HkdfBytesGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.HkdfBytesGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.Kdf1BytesGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.Kdf1BytesGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.Kdf2BytesGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.Kdf2BytesGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.KdfCounterBytesGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.KdfCounterBytesGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.KdfDoublePipelineIterationBytesGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.KdfDoublePipelineIterationBytesGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.KdfFeedbackBytesGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.KdfFeedbackBytesGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.Mgf1BytesGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.Mgf1BytesGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.NaccacheSternKeyPairGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.NaccacheSternKeyPairGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.OpenBsdBCrypt,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.OpenBsdBCrypt");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.OpenSslPbeParametersGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.OpenSslPbeParametersGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.Pkcs12ParametersGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.Pkcs12ParametersGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.Pkcs5S1ParametersGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.Pkcs5S1ParametersGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.Pkcs5S2ParametersGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.Pkcs5S2ParametersGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.Poly1305KeyGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.Poly1305KeyGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.RsaBlindingFactorGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.RsaBlindingFactorGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.SCrypt,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.SCrypt");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.X25519KeyPairGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.X25519KeyPairGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Generators.X448KeyPairGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Generators.X448KeyPairGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IO.CipherStream,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IO.CipherStream");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IO.DigestSink,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IO.DigestSink");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IO.DigestStream,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IO.DigestStream");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IO.MacSink,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IO.MacSink");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IO.MacStream,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IO.MacStream");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IO.SignerSink,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IO.SignerSink");
            feature.AddKnownType("Org.BouncyCastle.Crypto.IO.SignerStream,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.IO.SignerStream");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Macs.CbcBlockCipherMac,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Macs.CbcBlockCipherMac");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Macs.MacCFBBlockCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Macs.MacCFBBlockCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Macs.CfbBlockCipherMac,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Macs.CfbBlockCipherMac");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Macs.CMac,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Macs.CMac");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Macs.Dstu7564Mac,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Macs.Dstu7564Mac");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Macs.Dstu7624Mac,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Macs.Dstu7624Mac");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Macs.GMac,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Macs.GMac");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Macs.Gost28147Mac,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Macs.Gost28147Mac");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Macs.HMac,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Macs.HMac");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Macs.ISO9797Alg3Mac,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Macs.ISO9797Alg3Mac");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Macs.KMac,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Macs.KMac");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Macs.Poly1305,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Macs.Poly1305");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Macs.SipHash,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Macs.SipHash");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Macs.SkeinMac,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Macs.SkeinMac");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Macs.VmpcMac,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Macs.VmpcMac");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Modes.CbcBlockCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Modes.CbcBlockCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Modes.CcmBlockCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Modes.CcmBlockCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Modes.CfbBlockCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Modes.CfbBlockCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Modes.ChaCha20Poly1305,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Modes.ChaCha20Poly1305");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Modes.ChaCha20Poly1305+State,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Modes.State");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Modes.CtsBlockCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Modes.CtsBlockCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Modes.EaxBlockCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Modes.EaxBlockCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Modes.EaxBlockCipher+Tag,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Modes.Tag");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Modes.GcmBlockCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Modes.GcmBlockCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Modes.GcmSivBlockCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Modes.GcmSivBlockCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Modes.GcmSivBlockCipher+GcmSivCache,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Modes.GcmSivCache");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Modes.GcmSivBlockCipher+GcmSivHasher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Modes.GcmSivHasher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Modes.GOfbBlockCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Modes.GOfbBlockCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Modes.IAeadCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Modes.IAeadCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Modes.KCcmBlockCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Modes.KCcmBlockCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Modes.KCtrBlockCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Modes.KCtrBlockCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Modes.OcbBlockCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Modes.OcbBlockCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Modes.OfbBlockCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Modes.OfbBlockCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Modes.OpenPgpCfbBlockCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Modes.OpenPgpCfbBlockCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Modes.SicBlockCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Modes.SicBlockCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Modes.Gcm.BasicGcmExponentiator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Modes.Gcm.BasicGcmExponentiator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Modes.Gcm.BasicGcmMultiplier,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Modes.Gcm.BasicGcmMultiplier");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Modes.Gcm.GcmUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Modes.Gcm.GcmUtilities");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Modes.Gcm.IGcmExponentiator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Modes.Gcm.IGcmExponentiator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Modes.Gcm.IGcmMultiplier,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Modes.Gcm.IGcmMultiplier");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Modes.Gcm.Tables1kGcmExponentiator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Modes.Gcm.Tables1kGcmExponentiator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Modes.Gcm.Tables4kGcmMultiplier,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Modes.Gcm.Tables4kGcmMultiplier");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Modes.Gcm.Tables64kGcmMultiplier,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Modes.Gcm.Tables64kGcmMultiplier");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Modes.Gcm.Tables8kGcmMultiplier,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Modes.Gcm.Tables8kGcmMultiplier");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Operators.Asn1CipherBuilderWithKey,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Operators.Asn1CipherBuilderWithKey");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Operators.BufferedCipherWrapper,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Operators.BufferedCipherWrapper");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Operators.Asn1DigestFactory,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Operators.Asn1DigestFactory");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Operators.DfDigestStream,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Operators.DfDigestStream");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Operators.Asn1KeyWrapper,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Operators.Asn1KeyWrapper");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Operators.Asn1KeyUnwrapper,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Operators.Asn1KeyUnwrapper");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Operators.KeyWrapperUtil,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Operators.KeyWrapperUtil");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Operators.WrapperProvider,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Operators.WrapperProvider");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Operators.RsaPkcs1Wrapper,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Operators.RsaPkcs1Wrapper");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Operators.RsaPkcs1WrapperProvider,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Operators.RsaPkcs1WrapperProvider");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Operators.RsaOaepWrapper,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Operators.RsaOaepWrapper");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Operators.RsaOaepWrapperProvider,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Operators.RsaOaepWrapperProvider");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Operators.X509Utilities,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Operators.X509Utilities");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Operators.Asn1SignatureFactory,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Operators.Asn1SignatureFactory");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Operators.Asn1VerifierFactory,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Operators.Asn1VerifierFactory");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Operators.Asn1VerifierFactoryProvider,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Operators.Asn1VerifierFactoryProvider");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Operators.DefaultSignatureCalculator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Operators.DefaultSignatureCalculator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Operators.DefaultSignatureResult,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Operators.DefaultSignatureResult");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Operators.DefaultVerifierCalculator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Operators.DefaultVerifierCalculator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Operators.DefaultVerifierResult,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Operators.DefaultVerifierResult");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Operators.GenericKey,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Operators.GenericKey");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Paddings.ISO10126d2Padding,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Paddings.ISO10126d2Padding");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Paddings.ISO7816d4Padding,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Paddings.ISO7816d4Padding");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Paddings.PaddedBufferedBlockCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Paddings.PaddedBufferedBlockCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Paddings.Pkcs7Padding,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Paddings.Pkcs7Padding");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Paddings.TbcPadding,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Paddings.TbcPadding");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Paddings.X923Padding,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Paddings.X923Padding");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Paddings.ZeroBytePadding,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Paddings.ZeroBytePadding");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.AeadParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.AeadParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.CcmParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.CcmParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.DesEdeParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.DesEdeParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.DesParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.DesParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.DHKeyGenerationParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.DHKeyGenerationParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.DHKeyParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.DHKeyParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.DHParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.DHParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.DHPrivateKeyParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.DHPrivateKeyParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.DHPublicKeyParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.DHPublicKeyParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.DHValidationParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.DHValidationParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.DsaKeyGenerationParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.DsaKeyGenerationParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.DsaKeyParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.DsaKeyParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.DsaParameterGenerationParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.DsaParameterGenerationParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.DsaParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.DsaParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.DsaPrivateKeyParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.DsaPrivateKeyParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.DsaPublicKeyParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.DsaPublicKeyParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.DsaValidationParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.DsaValidationParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.ECDomainParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.ECDomainParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.ECGost3410Parameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.ECGost3410Parameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.ECKeyGenerationParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.ECKeyGenerationParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.ECKeyParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.ECKeyParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.ECNamedDomainParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.ECNamedDomainParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.ECPrivateKeyParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.ECPrivateKeyParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.ECPublicKeyParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.ECPublicKeyParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.Ed25519KeyGenerationParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.Ed25519KeyGenerationParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.Ed25519PrivateKeyParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.Ed25519PrivateKeyParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.Ed25519PublicKeyParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.Ed25519PublicKeyParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.Ed448KeyGenerationParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.Ed448KeyGenerationParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.Ed448PrivateKeyParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.Ed448PrivateKeyParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.Ed448PublicKeyParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.Ed448PublicKeyParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.ElGamalKeyGenerationParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.ElGamalKeyGenerationParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.ElGamalKeyParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.ElGamalKeyParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.ElGamalParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.ElGamalParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.ElGamalPrivateKeyParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.ElGamalPrivateKeyParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.ElGamalPublicKeyParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.ElGamalPublicKeyParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.FpeParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.FpeParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.Gost3410KeyGenerationParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.Gost3410KeyGenerationParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.Gost3410KeyParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.Gost3410KeyParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.Gost3410Parameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.Gost3410Parameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.Gost3410PrivateKeyParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.Gost3410PrivateKeyParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.Gost3410PublicKeyParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.Gost3410PublicKeyParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.Gost3410ValidationParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.Gost3410ValidationParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.HkdfParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.HkdfParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.IesParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.IesParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.IesWithCipherParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.IesWithCipherParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.Iso18033KdfParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.Iso18033KdfParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.KdfCounterParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.KdfCounterParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.KdfDoublePipelineIterationParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.KdfDoublePipelineIterationParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.KdfFeedbackParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.KdfFeedbackParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.KdfParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.KdfParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.KeyParameter,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.KeyParameter");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.MgfParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.MgfParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.MqvPrivateParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.MqvPrivateParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.MqvPublicParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.MqvPublicParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.NaccacheSternKeyGenerationParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.NaccacheSternKeyGenerationParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.NaccacheSternKeyParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.NaccacheSternKeyParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.NaccacheSternPrivateKeyParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.NaccacheSternPrivateKeyParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.ParametersWithID,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.ParametersWithID");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.ParametersWithIV,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.ParametersWithIV");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.ParametersWithRandom,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.ParametersWithRandom");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.ParametersWithSalt,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.ParametersWithSalt");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.ParametersWithSBox,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.ParametersWithSBox");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.RC2Parameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.RC2Parameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.RC5Parameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.RC5Parameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.RsaBlindingParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.RsaBlindingParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.RsaKeyGenerationParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.RsaKeyGenerationParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.RsaKeyParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.RsaKeyParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.RsaPrivateCrtKeyParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.RsaPrivateCrtKeyParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.SkeinParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.SkeinParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.SkeinParameters+Builder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.Org.BouncyCastle.Crypto.Parameters.SkeinParameters.Builder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.SM2KeyExchangePrivateParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.SM2KeyExchangePrivateParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.SM2KeyExchangePublicParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.SM2KeyExchangePublicParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.Srp6GroupParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.Srp6GroupParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.TweakableBlockCipherParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.TweakableBlockCipherParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.X25519KeyGenerationParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.X25519KeyGenerationParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.X25519PrivateKeyParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.X25519PrivateKeyParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.X25519PublicKeyParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.X25519PublicKeyParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.X448KeyGenerationParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.X448KeyGenerationParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.X448PrivateKeyParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.X448PrivateKeyParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Parameters.X448PublicKeyParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Parameters.X448PublicKeyParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Prng.BasicEntropySourceProvider,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Prng.BasicEntropySourceProvider");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Prng.BasicEntropySourceProvider+BasicEntropySource,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Prng.BasicEntropySource");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Prng.CryptoApiEntropySourceProvider,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Prng.CryptoApiEntropySourceProvider");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Prng.CryptoApiEntropySourceProvider+CryptoApiEntropySource,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Prng.CryptoApiEntropySource");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Prng.CryptoApiRandomGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Prng.CryptoApiRandomGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Prng.DigestRandomGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Prng.DigestRandomGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Prng.EntropyUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Prng.EntropyUtilities");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Prng.IDrbgProvider,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Prng.IDrbgProvider");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Prng.IRandomGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Prng.IRandomGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Prng.ReversedWindowGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Prng.ReversedWindowGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Prng.SP800SecureRandom,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Prng.SP800SecureRandom");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Prng.SP800SecureRandomBuilder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Prng.SP800SecureRandomBuilder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Prng.SP800SecureRandomBuilder+HashDrbgProvider,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Prng.HashDrbgProvider");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Prng.SP800SecureRandomBuilder+HMacDrbgProvider,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Prng.HMacDrbgProvider");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Prng.SP800SecureRandomBuilder+CtrDrbgProvider,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Prng.CtrDrbgProvider");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Prng.ThreadedSeedGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Prng.ThreadedSeedGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Prng.ThreadedSeedGenerator+SeedGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Prng.SeedGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Prng.VmpcRandomGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Prng.VmpcRandomGenerator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Prng.X931Rng,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Prng.X931Rng");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Prng.X931SecureRandom,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Prng.X931SecureRandom");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Prng.X931SecureRandomBuilder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Prng.X931SecureRandomBuilder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Prng.Drbg.CtrSP800Drbg,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Prng.Drbg.CtrSP800Drbg");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Prng.Drbg.DrbgUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Prng.Drbg.DrbgUtilities");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Prng.Drbg.HashSP800Drbg,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Prng.Drbg.HashSP800Drbg");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Prng.Drbg.HMacSP800Drbg,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Prng.Drbg.HMacSP800Drbg");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Prng.Drbg.ISP80090Drbg,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Prng.Drbg.ISP80090Drbg");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Signers.DsaDigestSigner,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Signers.DsaDigestSigner");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Signers.DsaSigner,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Signers.DsaSigner");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Signers.ECDsaSigner,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Signers.ECDsaSigner");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Signers.ECGost3410Signer,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Signers.ECGost3410Signer");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Signers.ECNRSigner,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Signers.ECNRSigner");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Signers.Ed25519ctxSigner,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Signers.Ed25519ctxSigner");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Signers.Ed25519ctxSigner+Buffer,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Signers.Buffer");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Signers.Ed25519phSigner,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Signers.Ed25519phSigner");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Signers.Ed25519Signer,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Signers.Ed25519Signer");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Signers.Ed25519Signer+Buffer,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Signers.Buffer");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Signers.Ed448phSigner,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Signers.Ed448phSigner");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Signers.Ed448Signer,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Signers.Ed448Signer");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Signers.Ed448Signer+Buffer,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Signers.Buffer");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Signers.GenericSigner,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Signers.GenericSigner");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Signers.Gost3410DigestSigner,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Signers.Gost3410DigestSigner");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Signers.Gost3410Signer,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Signers.Gost3410Signer");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Signers.HMacDsaKCalculator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Signers.HMacDsaKCalculator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Signers.IDsaEncoding,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Signers.IDsaEncoding");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Signers.IDsaKCalculator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Signers.IDsaKCalculator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Signers.Iso9796d2PssSigner,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Signers.Iso9796d2PssSigner");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Signers.Iso9796d2Signer,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Signers.Iso9796d2Signer");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Signers.IsoTrailers,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Signers.IsoTrailers");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Signers.PlainDsaEncoding,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Signers.PlainDsaEncoding");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Signers.PssSigner,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Signers.PssSigner");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Signers.RandomDsaKCalculator,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Signers.RandomDsaKCalculator");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Signers.RsaDigestSigner,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Signers.RsaDigestSigner");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Signers.SM2Signer,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Signers.SM2Signer");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Signers.StandardDsaEncoding,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Signers.StandardDsaEncoding");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Signers.X931Signer,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Signers.X931Signer");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.AbstractTlsAgreementCredentials,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.AbstractTlsAgreementCredentials");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.AbstractTlsCipherFactory,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.AbstractTlsCipherFactory");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.AbstractTlsClient,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.AbstractTlsClient");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.AbstractTlsContext,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.AbstractTlsContext");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.AbstractTlsCredentials,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.AbstractTlsCredentials");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.AbstractTlsEncryptionCredentials,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.AbstractTlsEncryptionCredentials");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.AbstractTlsKeyExchange");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.AbstractTlsServer,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.AbstractTlsServer");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.AbstractTlsSigner,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.AbstractTlsSigner");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.AbstractTlsSignerCredentials,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.AbstractTlsSignerCredentials");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.AlertDescription,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.AlertDescription");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.AlertLevel,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.AlertLevel");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.BasicTlsPskIdentity,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.BasicTlsPskIdentity");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.BulkCipherAlgorithm,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.BulkCipherAlgorithm");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.ByteQueue,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.ByteQueue");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.ByteQueueStream,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.ByteQueueStream");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.CertChainType,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.CertChainType");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.Certificate,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.Certificate");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.CertificateRequest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.CertificateRequest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.CertificateStatus,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.CertificateStatus");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.CertificateStatusRequest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.CertificateStatusRequest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.CertificateStatusType,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.CertificateStatusType");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.CertificateType,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.CertificateType");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.CertificateUrl,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.CertificateUrl");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.CertificateUrl+ListBuffer16,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.ListBuffer16");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.ChangeCipherSpec,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.ChangeCipherSpec");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.CipherSuite,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.CipherSuite");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.CipherType,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.CipherType");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.ClientAuthenticationType,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.ClientAuthenticationType");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.ClientCertificateType,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.ClientCertificateType");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.CombinedHash,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.CombinedHash");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.CompressionMethod,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.CompressionMethod");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.ConnectionEnd,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.ConnectionEnd");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.ContentType,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.ContentType");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.DatagramTransport,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.DatagramTransport");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.DefaultTlsAgreementCredentials,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.DefaultTlsAgreementCredentials");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.DefaultTlsCipherFactory,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.DefaultTlsCipherFactory");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.DefaultTlsClient,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.DefaultTlsClient");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.DefaultTlsDHVerifier,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.DefaultTlsDHVerifier");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.DefaultTlsEncryptionCredentials,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.DefaultTlsEncryptionCredentials");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.DefaultTlsServer,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.DefaultTlsServer");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.DefaultTlsSignerCredentials,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.DefaultTlsSignerCredentials");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.DefaultTlsSrpGroupVerifier,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.DefaultTlsSrpGroupVerifier");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.DeferredHash,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.DeferredHash");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.DigestInputBuffer,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.DigestInputBuffer");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.DigitallySigned,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.DigitallySigned");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.DtlsClientProtocol,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.DtlsClientProtocol");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.DtlsClientProtocol+ClientHandshakeState,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.ClientHandshakeState");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.DtlsEpoch,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.DtlsEpoch");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.DtlsHandshakeRetransmit,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.DtlsHandshakeRetransmit");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.DtlsProtocol,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.DtlsProtocol");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.DtlsReassembler,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.DtlsReassembler");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.DtlsReassembler+Range,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.Range");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.DtlsRecordLayer,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.DtlsRecordLayer");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.DtlsReliableHandshake,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.DtlsReliableHandshake");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.DtlsReliableHandshake+Message,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.Message");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.DtlsReliableHandshake+RecordLayerBuffer,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.RecordLayerBuffer");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.DtlsReliableHandshake+Retransmit,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.Retransmit");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.DtlsReplayWindow,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.DtlsReplayWindow");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.DtlsServerProtocol,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.DtlsServerProtocol");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.DtlsServerProtocol+ServerHandshakeState,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.ServerHandshakeState");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.DtlsTransport,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.DtlsTransport");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.ECBasisType,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.ECBasisType");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.ECCurveType,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.ECCurveType");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.ECPointFormat,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.ECPointFormat");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.EncryptionAlgorithm,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.EncryptionAlgorithm");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.ExporterLabel,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.ExporterLabel");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.ExtensionType,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.ExtensionType");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.FiniteFieldDheGroup,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.FiniteFieldDheGroup");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.HandshakeType,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.HandshakeType");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.HashAlgorithm,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.HashAlgorithm");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.HeartbeatExtension,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.HeartbeatExtension");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.HeartbeatMessage,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.HeartbeatMessage");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.HeartbeatMessage+PayloadBuffer,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.PayloadBuffer");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.HeartbeatMessageType,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.HeartbeatMessageType");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.HeartbeatMode,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.HeartbeatMode");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.MacAlgorithm,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.MacAlgorithm");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.MaxFragmentLength,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.MaxFragmentLength");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.NamedCurve,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.NamedCurve");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.NameType,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.NameType");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.NewSessionTicket,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.NewSessionTicket");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.OcspStatusRequest,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.OcspStatusRequest");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.PrfAlgorithm,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.PrfAlgorithm");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.ProtocolVersion,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.ProtocolVersion");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.PskTlsClient,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.PskTlsClient");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.PskTlsServer,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.PskTlsServer");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.RecordStream,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.RecordStream");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.RecordStream+HandshakeHashUpdateStream,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.HandshakeHashUpdateStream");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.RecordStream+SequenceNumber,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.SequenceNumber");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.SecurityParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.SecurityParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.ServerName,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.ServerName");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.ServerNameList,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.ServerNameList");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.ServerOnlyTlsAuthentication,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.ServerOnlyTlsAuthentication");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.ServerSrpParams,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.ServerSrpParams");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.SessionParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.SessionParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.SessionParameters+Builder,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.Org.BouncyCastle.Crypto.Tls.SessionParameters.Builder");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.SignatureAlgorithm,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.SignatureAlgorithm");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.SignerInputBuffer,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.SignerInputBuffer");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.SignerInputBuffer+SigStream,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.SigStream");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.SimulatedTlsSrpIdentityManager,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.SimulatedTlsSrpIdentityManager");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.SrpTlsClient,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.SrpTlsClient");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.SrpTlsServer,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.SrpTlsServer");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.SrtpProtectionProfile,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.SrtpProtectionProfile");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.Ssl3Mac,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.Ssl3Mac");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.SupplementalDataEntry,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.SupplementalDataEntry");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.SupplementalDataType,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.SupplementalDataType");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.Timeout,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.Timeout");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsAeadCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsAeadCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsAgreementCredentials,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsAgreementCredentials");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsAuthentication,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsAuthentication");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsBlockCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsBlockCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsCipherFactory,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsCipherFactory");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsClient,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsClient");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsClientContext,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsClientContext");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsClientContextImpl,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsClientContextImpl");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsClientProtocol,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsClientProtocol");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsCloseable,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsCloseable");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsCompression,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsCompression");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsContext,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsContext");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsCredentials,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsCredentials");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsDeflateCompression,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsDeflateCompression");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsDeflateCompression+DeflateOutputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.DeflateOutputStream");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsDheKeyExchange,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsDheKeyExchange");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsDHKeyExchange,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsDHKeyExchange");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsDHUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsDHUtilities");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsDHVerifier,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsDHVerifier");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsDsaSigner,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsDsaSigner");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsDssSigner,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsDssSigner");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsEccUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsEccUtilities");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsECDheKeyExchange,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsECDheKeyExchange");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsECDHKeyExchange,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsECDHKeyExchange");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsECDsaSigner,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsECDsaSigner");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsEncryptionCredentials,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsEncryptionCredentials");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsException,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsException");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsFatalAlert,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsFatalAlert");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsFatalAlertReceived,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsFatalAlertReceived");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsHandshakeHash,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsHandshakeHash");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsKeyExchange,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsKeyExchange");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsMac,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsMac");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsNoCloseNotifyException,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsNoCloseNotifyException");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsNullCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsNullCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsNullCompression,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsNullCompression");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsPeer,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsPeer");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsProtocol,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsProtocol");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsProtocol+HandshakeMessage,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.HandshakeMessage");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsProtocolHandler,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsProtocolHandler");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsPskIdentity,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsPskIdentity");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsPskIdentityManager,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsPskIdentityManager");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsPskKeyExchange,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsPskKeyExchange");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsRsaSigner,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsRsaSigner");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsRsaUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsRsaUtilities");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsServer,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsServer");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsServerContext,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsServerContext");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsServerContextImpl,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsServerContextImpl");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsServerProtocol,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsServerProtocol");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsSession,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsSession");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsSessionImpl,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsSessionImpl");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsSigner,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsSigner");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsSignerCredentials,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsSignerCredentials");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsSrpGroupVerifier,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsSrpGroupVerifier");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsSrpIdentityManager,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsSrpIdentityManager");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsSrpKeyExchange,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsSrpKeyExchange");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsSrpLoginParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsSrpLoginParameters");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsSrpUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsSrpUtilities");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsSRTPUtils,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsSRTPUtils");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsStream,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsStream");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsStreamCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsStreamCipher");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsTimeoutException,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsTimeoutException");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.TlsUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.TlsUtilities");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.UrlAndHash,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.UrlAndHash");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.UserMappingType,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.UserMappingType");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Tls.UseSrtpData,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Tls.UseSrtpData");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Utilities.AlgorithmIdentifierFactory,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Utilities.AlgorithmIdentifierFactory");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Utilities.BasicAlphabetMapper,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Utilities.BasicAlphabetMapper");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Utilities.CipherFactory,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Utilities.CipherFactory");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Utilities.CipherKeyGeneratorFactory,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Utilities.CipherKeyGeneratorFactory");
            feature.AddKnownType("Org.BouncyCastle.Crypto.Utilities.Pack,BouncyCastle.Crypto", "Org.BouncyCastle.Crypto.Utilities.Pack");
            feature.AddKnownType("Org.BouncyCastle.Math.BigInteger,BouncyCastle.Crypto", "Org.BouncyCastle.Math.BigInteger");
            feature.AddKnownType("Org.BouncyCastle.Math.Primes,BouncyCastle.Crypto", "Org.BouncyCastle.Math.Primes");
            feature.AddKnownType("Org.BouncyCastle.Math.Primes+MROutput,BouncyCastle.Crypto", "Org.BouncyCastle.Math.Org.BouncyCastle.Math.Primes.MROutput");
            feature.AddKnownType("Org.BouncyCastle.Math.Primes+STOutput,BouncyCastle.Crypto", "Org.BouncyCastle.Math.Org.BouncyCastle.Math.Primes.STOutput");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.AbstractECLookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.AbstractECLookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.ECAlgorithms,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.ECAlgorithms");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.ECCurve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.ECCurve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.ECCurve+Config,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Org.BouncyCastle.Math.EC.ECCurve.Config");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.ECCurve+DefaultLookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.DefaultLookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.AbstractFpCurve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.AbstractFpCurve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.FpCurve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.FpCurve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.AbstractF2mCurve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.AbstractF2mCurve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.F2mCurve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.F2mCurve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.F2mCurve+DefaultF2mLookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.DefaultF2mLookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.ECFieldElement,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.ECFieldElement");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.AbstractFpFieldElement,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.AbstractFpFieldElement");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.FpFieldElement,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.FpFieldElement");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.AbstractF2mFieldElement,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.AbstractF2mFieldElement");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.F2mFieldElement,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.F2mFieldElement");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.ECLookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.ECLookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.ECPoint,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.ECPoint");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.ECPoint+ValidityCallback,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.ValidityCallback");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.ECPointBase,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.ECPointBase");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.AbstractFpPoint,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.AbstractFpPoint");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.FpPoint,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.FpPoint");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.AbstractF2mPoint,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.AbstractF2mPoint");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.F2mPoint,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.F2mPoint");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.ECPointMap,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.ECPointMap");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.LongArray,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.LongArray");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.ScaleXNegateYPointMap,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.ScaleXNegateYPointMap");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.ScaleXPointMap,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.ScaleXPointMap");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.ScaleYNegateXPointMap,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.ScaleYNegateXPointMap");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.ScaleYPointMap,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.ScaleYPointMap");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.SimpleLookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.SimpleLookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Abc.SimpleBigDecimal,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Abc.SimpleBigDecimal");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Abc.Tnaf,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Abc.Tnaf");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Abc.ZTauElement,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Abc.ZTauElement");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Djb.Curve25519,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Djb.Curve25519");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Djb.Curve25519+Curve25519LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Djb.Curve25519LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Djb.Curve25519Field,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Djb.Curve25519Field");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Djb.Curve25519FieldElement,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Djb.Curve25519FieldElement");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Djb.Curve25519Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Djb.Curve25519Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.GM.SM2P256V1Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.GM.SM2P256V1Curve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.GM.SM2P256V1Curve+SM2P256V1LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.GM.SM2P256V1LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.GM.SM2P256V1Field,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.GM.SM2P256V1Field");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.GM.SM2P256V1FieldElement,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.GM.SM2P256V1FieldElement");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.GM.SM2P256V1Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.GM.SM2P256V1Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP128R1Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP128R1Curve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP128R1Curve+SecP128R1LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP128R1LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP128R1Field,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP128R1Field");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP128R1FieldElement,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP128R1FieldElement");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP128R1Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP128R1Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP160K1Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP160K1Curve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP160K1Curve+SecP160K1LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP160K1LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP160K1Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP160K1Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP160R1Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP160R1Curve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP160R1Curve+SecP160R1LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP160R1LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP160R1Field,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP160R1Field");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP160R1FieldElement,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP160R1FieldElement");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP160R1Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP160R1Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP160R2Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP160R2Curve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP160R2Curve+SecP160R2LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP160R2LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP160R2Field,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP160R2Field");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP160R2FieldElement,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP160R2FieldElement");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP160R2Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP160R2Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP192K1Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP192K1Curve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP192K1Curve+SecP192K1LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP192K1LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP192K1Field,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP192K1Field");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP192K1FieldElement,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP192K1FieldElement");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP192K1Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP192K1Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP192R1Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP192R1Curve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP192R1Curve+SecP192R1LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP192R1LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP192R1Field,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP192R1Field");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP192R1FieldElement,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP192R1FieldElement");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP192R1Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP192R1Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP224K1Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP224K1Curve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP224K1Curve+SecP224K1LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP224K1LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP224K1Field,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP224K1Field");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP224K1FieldElement,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP224K1FieldElement");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP224K1Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP224K1Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP224R1Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP224R1Curve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP224R1Curve+SecP224R1LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP224R1LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP224R1Field,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP224R1Field");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP224R1FieldElement,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP224R1FieldElement");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP224R1Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP224R1Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP256K1Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP256K1Curve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP256K1Curve+SecP256K1LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP256K1LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP256K1Field,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP256K1Field");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP256K1FieldElement,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP256K1FieldElement");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP256K1Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP256K1Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP256R1Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP256R1Curve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP256R1Curve+SecP256R1LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP256R1LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP256R1Field,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP256R1Field");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP256R1FieldElement,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP256R1FieldElement");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP256R1Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP256R1Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP384R1Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP384R1Curve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP384R1Curve+SecP384R1LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP384R1LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP384R1Field,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP384R1Field");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP384R1FieldElement,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP384R1FieldElement");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP384R1Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP384R1Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP521R1Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP521R1Curve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP521R1Curve+SecP521R1LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP521R1LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP521R1Field,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP521R1Field");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP521R1FieldElement,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP521R1FieldElement");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecP521R1Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecP521R1Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT113Field,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT113Field");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT113FieldElement,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT113FieldElement");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT113R1Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT113R1Curve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT113R1Curve+SecT113R1LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT113R1LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT113R1Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT113R1Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT113R2Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT113R2Curve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT113R2Curve+SecT113R2LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT113R2LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT113R2Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT113R2Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT131Field,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT131Field");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT131FieldElement,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT131FieldElement");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT131R1Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT131R1Curve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT131R1Curve+SecT131R1LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT131R1LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT131R1Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT131R1Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT131R2Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT131R2Curve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT131R2Curve+SecT131R2LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT131R2LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT131R2Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT131R2Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT163Field,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT163Field");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT163FieldElement,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT163FieldElement");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT163K1Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT163K1Curve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT163K1Curve+SecT163K1LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT163K1LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT163K1Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT163K1Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT163R1Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT163R1Curve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT163R1Curve+SecT163R1LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT163R1LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT163R1Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT163R1Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT163R2Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT163R2Curve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT163R2Curve+SecT163R2LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT163R2LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT163R2Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT163R2Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT193Field,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT193Field");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT193FieldElement,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT193FieldElement");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT193R1Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT193R1Curve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT193R1Curve+SecT193R1LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT193R1LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT193R1Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT193R1Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT193R2Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT193R2Curve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT193R2Curve+SecT193R2LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT193R2LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT193R2Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT193R2Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT233Field,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT233Field");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT233FieldElement,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT233FieldElement");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT233K1Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT233K1Curve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT233K1Curve+SecT233K1LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT233K1LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT233K1Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT233K1Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT233R1Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT233R1Curve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT233R1Curve+SecT233R1LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT233R1LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT233R1Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT233R1Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT239Field,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT239Field");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT239FieldElement,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT239FieldElement");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT239K1Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT239K1Curve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT239K1Curve+SecT239K1LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT239K1LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT239K1Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT239K1Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT283Field,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT283Field");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT283FieldElement,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT283FieldElement");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT283K1Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT283K1Curve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT283K1Curve+SecT283K1LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT283K1LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT283K1Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT283K1Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT283R1Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT283R1Curve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT283R1Curve+SecT283R1LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT283R1LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT283R1Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT283R1Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT409Field,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT409Field");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT409FieldElement,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT409FieldElement");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT409K1Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT409K1Curve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT409K1Curve+SecT409K1LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT409K1LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT409K1Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT409K1Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT409R1Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT409R1Curve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT409R1Curve+SecT409R1LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT409R1LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT409R1Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT409R1Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT571Field,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT571Field");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT571FieldElement,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT571FieldElement");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT571K1Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT571K1Curve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT571K1Curve+SecT571K1LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT571K1LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT571K1Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT571K1Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT571R1Curve,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT571R1Curve");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT571R1Curve+SecT571R1LookupTable,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT571R1LookupTable");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Custom.Sec.SecT571R1Point,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Custom.Sec.SecT571R1Point");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Endo.ECEndomorphism,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Endo.ECEndomorphism");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Endo.EndoPreCompInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Endo.EndoPreCompInfo");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Endo.EndoUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Endo.EndoUtilities");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Endo.EndoUtilities+MapPointCallback,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Endo.MapPointCallback");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Endo.GlvEndomorphism,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Endo.GlvEndomorphism");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Endo.GlvTypeAEndomorphism,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Endo.GlvTypeAEndomorphism");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Endo.GlvTypeAParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Endo.GlvTypeAParameters");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Endo.GlvTypeBEndomorphism,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Endo.GlvTypeBEndomorphism");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Endo.GlvTypeBParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Endo.GlvTypeBParameters");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Endo.ScalarSplitParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Endo.ScalarSplitParameters");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Multiplier.AbstractECMultiplier,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Multiplier.AbstractECMultiplier");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Multiplier.DoubleAddMultiplier,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Multiplier.DoubleAddMultiplier");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Multiplier.ECMultiplier,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Multiplier.ECMultiplier");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Multiplier.FixedPointCombMultiplier,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Multiplier.FixedPointCombMultiplier");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Multiplier.FixedPointPreCompInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Multiplier.FixedPointPreCompInfo");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Multiplier.FixedPointUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Multiplier.FixedPointUtilities");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Multiplier.FixedPointUtilities+FixedPointCallback,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Multiplier.FixedPointCallback");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Multiplier.GlvMultiplier,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Multiplier.GlvMultiplier");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Multiplier.IPreCompCallback,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Multiplier.IPreCompCallback");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Multiplier.MixedNafR2LMultiplier,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Multiplier.MixedNafR2LMultiplier");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Multiplier.MontgomeryLadderMultiplier,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Multiplier.MontgomeryLadderMultiplier");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Multiplier.NafL2RMultiplier,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Multiplier.NafL2RMultiplier");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Multiplier.NafR2LMultiplier,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Multiplier.NafR2LMultiplier");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Multiplier.PreCompInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Multiplier.PreCompInfo");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Multiplier.ReferenceMultiplier,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Multiplier.ReferenceMultiplier");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Multiplier.ValidityPreCompInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Multiplier.ValidityPreCompInfo");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Multiplier.WNafL2RMultiplier,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Multiplier.WNafL2RMultiplier");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Multiplier.WNafPreCompInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Multiplier.WNafPreCompInfo");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Multiplier.WNafUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Multiplier.WNafUtilities");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Multiplier.WNafUtilities+ConfigureBasepointCallback,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Multiplier.ConfigureBasepointCallback");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Multiplier.WNafUtilities+MapPointCallback,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Multiplier.MapPointCallback");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Multiplier.WNafUtilities+PrecomputeCallback,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Multiplier.PrecomputeCallback");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Multiplier.WNafUtilities+PrecomputeWithPointMapCallback,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Multiplier.PrecomputeWithPointMapCallback");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Multiplier.WTauNafMultiplier,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Multiplier.WTauNafMultiplier");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Multiplier.WTauNafMultiplier+WTauNafCallback,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Multiplier.WTauNafCallback");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Multiplier.WTauNafPreCompInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Multiplier.WTauNafPreCompInfo");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Multiplier.ZSignedDigitL2RMultiplier,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Multiplier.ZSignedDigitL2RMultiplier");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Multiplier.ZSignedDigitR2LMultiplier,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Multiplier.ZSignedDigitR2LMultiplier");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Rfc7748.X25519,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Rfc7748.X25519");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Rfc7748.X25519+F,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Rfc7748.F");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Rfc7748.X25519Field,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Rfc7748.X25519Field");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Rfc7748.X448,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Rfc7748.X448");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Rfc7748.X448+F,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Rfc7748.F");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Rfc7748.X448Field,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Rfc7748.X448Field");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Rfc8032.Ed25519,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Rfc8032.Ed25519");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Rfc8032.Ed25519+Algorithm,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Rfc8032.Org.BouncyCastle.Math.EC.Rfc8032.Ed25519.Algorithm");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Rfc8032.Ed25519+F,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Rfc8032.F");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Rfc8032.Ed25519+PointAccum,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Rfc8032.PointAccum");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Rfc8032.Ed25519+PointAffine,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Rfc8032.PointAffine");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Rfc8032.Ed25519+PointExt,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Rfc8032.PointExt");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Rfc8032.Ed25519+PointPrecomp,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Rfc8032.PointPrecomp");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Rfc8032.Ed448,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Rfc8032.Ed448");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Rfc8032.Ed448+Algorithm,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Rfc8032.Org.BouncyCastle.Math.EC.Rfc8032.Ed448.Algorithm");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Rfc8032.Ed448+F,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Rfc8032.F");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Rfc8032.Ed448+PointExt,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Rfc8032.PointExt");
            feature.AddKnownType("Org.BouncyCastle.Math.EC.Rfc8032.Ed448+PointPrecomp,BouncyCastle.Crypto", "Org.BouncyCastle.Math.EC.Rfc8032.PointPrecomp");
            feature.AddKnownType("Org.BouncyCastle.Math.Field.FiniteFields,BouncyCastle.Crypto", "Org.BouncyCastle.Math.Field.FiniteFields");
            feature.AddKnownType("Org.BouncyCastle.Math.Field.GenericPolynomialExtensionField,BouncyCastle.Crypto", "Org.BouncyCastle.Math.Field.GenericPolynomialExtensionField");
            feature.AddKnownType("Org.BouncyCastle.Math.Field.GF2Polynomial,BouncyCastle.Crypto", "Org.BouncyCastle.Math.Field.GF2Polynomial");
            feature.AddKnownType("Org.BouncyCastle.Math.Field.IExtensionField,BouncyCastle.Crypto", "Org.BouncyCastle.Math.Field.IExtensionField");
            feature.AddKnownType("Org.BouncyCastle.Math.Field.IFiniteField,BouncyCastle.Crypto", "Org.BouncyCastle.Math.Field.IFiniteField");
            feature.AddKnownType("Org.BouncyCastle.Math.Field.IPolynomial,BouncyCastle.Crypto", "Org.BouncyCastle.Math.Field.IPolynomial");
            feature.AddKnownType("Org.BouncyCastle.Math.Field.IPolynomialExtensionField,BouncyCastle.Crypto", "Org.BouncyCastle.Math.Field.IPolynomialExtensionField");
            feature.AddKnownType("Org.BouncyCastle.Math.Field.PrimeField,BouncyCastle.Crypto", "Org.BouncyCastle.Math.Field.PrimeField");
            feature.AddKnownType("Org.BouncyCastle.Math.Raw.Bits,BouncyCastle.Crypto", "Org.BouncyCastle.Math.Raw.Bits");
            feature.AddKnownType("Org.BouncyCastle.Math.Raw.Interleave,BouncyCastle.Crypto", "Org.BouncyCastle.Math.Raw.Interleave");
            feature.AddKnownType("Org.BouncyCastle.Math.Raw.Mod,BouncyCastle.Crypto", "Org.BouncyCastle.Math.Raw.Mod");
            feature.AddKnownType("Org.BouncyCastle.Math.Raw.Nat,BouncyCastle.Crypto", "Org.BouncyCastle.Math.Raw.Nat");
            feature.AddKnownType("Org.BouncyCastle.Math.Raw.Nat128,BouncyCastle.Crypto", "Org.BouncyCastle.Math.Raw.Nat128");
            feature.AddKnownType("Org.BouncyCastle.Math.Raw.Nat160,BouncyCastle.Crypto", "Org.BouncyCastle.Math.Raw.Nat160");
            feature.AddKnownType("Org.BouncyCastle.Math.Raw.Nat192,BouncyCastle.Crypto", "Org.BouncyCastle.Math.Raw.Nat192");
            feature.AddKnownType("Org.BouncyCastle.Math.Raw.Nat224,BouncyCastle.Crypto", "Org.BouncyCastle.Math.Raw.Nat224");
            feature.AddKnownType("Org.BouncyCastle.Math.Raw.Nat256,BouncyCastle.Crypto", "Org.BouncyCastle.Math.Raw.Nat256");
            feature.AddKnownType("Org.BouncyCastle.Math.Raw.Nat320,BouncyCastle.Crypto", "Org.BouncyCastle.Math.Raw.Nat320");
            feature.AddKnownType("Org.BouncyCastle.Math.Raw.Nat384,BouncyCastle.Crypto", "Org.BouncyCastle.Math.Raw.Nat384");
            feature.AddKnownType("Org.BouncyCastle.Math.Raw.Nat448,BouncyCastle.Crypto", "Org.BouncyCastle.Math.Raw.Nat448");
            feature.AddKnownType("Org.BouncyCastle.Math.Raw.Nat512,BouncyCastle.Crypto", "Org.BouncyCastle.Math.Raw.Nat512");
            feature.AddKnownType("Org.BouncyCastle.Math.Raw.Nat576,BouncyCastle.Crypto", "Org.BouncyCastle.Math.Raw.Nat576");
            feature.AddKnownType("Org.BouncyCastle.Ocsp.BasicOcspResp,BouncyCastle.Crypto", "Org.BouncyCastle.Ocsp.BasicOcspResp");
            feature.AddKnownType("Org.BouncyCastle.Ocsp.BasicOcspRespGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Ocsp.BasicOcspRespGenerator");
            feature.AddKnownType("Org.BouncyCastle.Ocsp.BasicOcspRespGenerator+ResponseObject,BouncyCastle.Crypto", "Org.BouncyCastle.Ocsp.ResponseObject");
            feature.AddKnownType("Org.BouncyCastle.Ocsp.CertificateID,BouncyCastle.Crypto", "Org.BouncyCastle.Ocsp.CertificateID");
            feature.AddKnownType("Org.BouncyCastle.Ocsp.CertificateStatus,BouncyCastle.Crypto", "Org.BouncyCastle.Ocsp.CertificateStatus");
            feature.AddKnownType("Org.BouncyCastle.Ocsp.OcspException,BouncyCastle.Crypto", "Org.BouncyCastle.Ocsp.OcspException");
            feature.AddKnownType("Org.BouncyCastle.Ocsp.OcspReq,BouncyCastle.Crypto", "Org.BouncyCastle.Ocsp.OcspReq");
            feature.AddKnownType("Org.BouncyCastle.Ocsp.OcspReqGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Ocsp.OcspReqGenerator");
            feature.AddKnownType("Org.BouncyCastle.Ocsp.OcspReqGenerator+RequestObject,BouncyCastle.Crypto", "Org.BouncyCastle.Ocsp.RequestObject");
            feature.AddKnownType("Org.BouncyCastle.Ocsp.OcspResp,BouncyCastle.Crypto", "Org.BouncyCastle.Ocsp.OcspResp");
            feature.AddKnownType("Org.BouncyCastle.Ocsp.OCSPRespGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Ocsp.OCSPRespGenerator");
            feature.AddKnownType("Org.BouncyCastle.Ocsp.OcscpRespStatus,BouncyCastle.Crypto", "Org.BouncyCastle.Ocsp.OcscpRespStatus");
            feature.AddKnownType("Org.BouncyCastle.Ocsp.OcspRespStatus,BouncyCastle.Crypto", "Org.BouncyCastle.Ocsp.OcspRespStatus");
            feature.AddKnownType("Org.BouncyCastle.Ocsp.OcspUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Ocsp.OcspUtilities");
            feature.AddKnownType("Org.BouncyCastle.Ocsp.Req,BouncyCastle.Crypto", "Org.BouncyCastle.Ocsp.Req");
            feature.AddKnownType("Org.BouncyCastle.Ocsp.RespData,BouncyCastle.Crypto", "Org.BouncyCastle.Ocsp.RespData");
            feature.AddKnownType("Org.BouncyCastle.Ocsp.RespID,BouncyCastle.Crypto", "Org.BouncyCastle.Ocsp.RespID");
            feature.AddKnownType("Org.BouncyCastle.Ocsp.RevokedStatus,BouncyCastle.Crypto", "Org.BouncyCastle.Ocsp.RevokedStatus");
            feature.AddKnownType("Org.BouncyCastle.Ocsp.SingleResp,BouncyCastle.Crypto", "Org.BouncyCastle.Ocsp.SingleResp");
            feature.AddKnownType("Org.BouncyCastle.Ocsp.UnknownStatus,BouncyCastle.Crypto", "Org.BouncyCastle.Ocsp.UnknownStatus");
            feature.AddKnownType("Org.BouncyCastle.OpenSsl.IPasswordFinder,BouncyCastle.Crypto", "Org.BouncyCastle.OpenSsl.IPasswordFinder");
            feature.AddKnownType("Org.BouncyCastle.OpenSsl.MiscPemGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.OpenSsl.MiscPemGenerator");
            feature.AddKnownType("Org.BouncyCastle.OpenSsl.PemException,BouncyCastle.Crypto", "Org.BouncyCastle.OpenSsl.PemException");
            feature.AddKnownType("Org.BouncyCastle.OpenSsl.PemReader,BouncyCastle.Crypto", "Org.BouncyCastle.OpenSsl.PemReader");
            feature.AddKnownType("Org.BouncyCastle.OpenSsl.PemUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.OpenSsl.PemUtilities");
            feature.AddKnownType("Org.BouncyCastle.OpenSsl.PemUtilities+PemBaseAlg,BouncyCastle.Crypto", "Org.BouncyCastle.OpenSsl.PemBaseAlg");
            feature.AddKnownType("Org.BouncyCastle.OpenSsl.PemUtilities+PemMode,BouncyCastle.Crypto", "Org.BouncyCastle.OpenSsl.PemMode");
            feature.AddKnownType("Org.BouncyCastle.OpenSsl.PemWriter,BouncyCastle.Crypto", "Org.BouncyCastle.OpenSsl.PemWriter");
            feature.AddKnownType("Org.BouncyCastle.OpenSsl.Pkcs8Generator,BouncyCastle.Crypto", "Org.BouncyCastle.OpenSsl.Pkcs8Generator");
            feature.AddKnownType("Org.BouncyCastle.Operators.CmsContentEncryptorBuilder,BouncyCastle.Crypto", "Org.BouncyCastle.Operators.CmsContentEncryptorBuilder");
            feature.AddKnownType("Org.BouncyCastle.Operators.CmsKeyTransRecipientInfoGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Operators.CmsKeyTransRecipientInfoGenerator");
            feature.AddKnownType("Org.BouncyCastle.Pkcs.AsymmetricKeyEntry,BouncyCastle.Crypto", "Org.BouncyCastle.Pkcs.AsymmetricKeyEntry");
            feature.AddKnownType("Org.BouncyCastle.Pkcs.EncryptedPrivateKeyInfoFactory,BouncyCastle.Crypto", "Org.BouncyCastle.Pkcs.EncryptedPrivateKeyInfoFactory");
            feature.AddKnownType("Org.BouncyCastle.Pkcs.Pkcs10CertificationRequest,BouncyCastle.Crypto", "Org.BouncyCastle.Pkcs.Pkcs10CertificationRequest");
            feature.AddKnownType("Org.BouncyCastle.Pkcs.Pkcs10CertificationRequestDelaySigned,BouncyCastle.Crypto", "Org.BouncyCastle.Pkcs.Pkcs10CertificationRequestDelaySigned");
            feature.AddKnownType("Org.BouncyCastle.Pkcs.Pkcs12Entry,BouncyCastle.Crypto", "Org.BouncyCastle.Pkcs.Pkcs12Entry");
            feature.AddKnownType("Org.BouncyCastle.Pkcs.Pkcs12Store,BouncyCastle.Crypto", "Org.BouncyCastle.Pkcs.Pkcs12Store");
            feature.AddKnownType("Org.BouncyCastle.Pkcs.Pkcs12Store+CertId,BouncyCastle.Crypto", "Org.BouncyCastle.Pkcs.CertId");
            feature.AddKnownType("Org.BouncyCastle.Pkcs.Pkcs12Store+IgnoresCaseHashtable,BouncyCastle.Crypto", "Org.BouncyCastle.Pkcs.IgnoresCaseHashtable");
            feature.AddKnownType("Org.BouncyCastle.Pkcs.Pkcs12StoreBuilder,BouncyCastle.Crypto", "Org.BouncyCastle.Pkcs.Pkcs12StoreBuilder");
            feature.AddKnownType("Org.BouncyCastle.Pkcs.Pkcs12Utilities,BouncyCastle.Crypto", "Org.BouncyCastle.Pkcs.Pkcs12Utilities");
            feature.AddKnownType("Org.BouncyCastle.Pkcs.Pkcs8EncryptedPrivateKeyInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Pkcs.Pkcs8EncryptedPrivateKeyInfo");
            feature.AddKnownType("Org.BouncyCastle.Pkcs.Pkcs8EncryptedPrivateKeyInfoBuilder,BouncyCastle.Crypto", "Org.BouncyCastle.Pkcs.Pkcs8EncryptedPrivateKeyInfoBuilder");
            feature.AddKnownType("Org.BouncyCastle.Pkcs.PkcsException,BouncyCastle.Crypto", "Org.BouncyCastle.Pkcs.PkcsException");
            feature.AddKnownType("Org.BouncyCastle.Pkcs.PkcsIOException,BouncyCastle.Crypto", "Org.BouncyCastle.Pkcs.PkcsIOException");
            feature.AddKnownType("Org.BouncyCastle.Pkcs.PrivateKeyInfoFactory,BouncyCastle.Crypto", "Org.BouncyCastle.Pkcs.PrivateKeyInfoFactory");
            feature.AddKnownType("Org.BouncyCastle.Pkcs.X509CertificateEntry,BouncyCastle.Crypto", "Org.BouncyCastle.Pkcs.X509CertificateEntry");
            feature.AddKnownType("Org.BouncyCastle.Pkix.CertStatus,BouncyCastle.Crypto", "Org.BouncyCastle.Pkix.CertStatus");
            feature.AddKnownType("Org.BouncyCastle.Pkix.PkixAttrCertChecker,BouncyCastle.Crypto", "Org.BouncyCastle.Pkix.PkixAttrCertChecker");
            feature.AddKnownType("Org.BouncyCastle.Pkix.PkixAttrCertPathBuilder,BouncyCastle.Crypto", "Org.BouncyCastle.Pkix.PkixAttrCertPathBuilder");
            feature.AddKnownType("Org.BouncyCastle.Pkix.PkixAttrCertPathValidator,BouncyCastle.Crypto", "Org.BouncyCastle.Pkix.PkixAttrCertPathValidator");
            feature.AddKnownType("Org.BouncyCastle.Pkix.PkixBuilderParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Pkix.PkixBuilderParameters");
            feature.AddKnownType("Org.BouncyCastle.Pkix.PkixCertPath,BouncyCastle.Crypto", "Org.BouncyCastle.Pkix.PkixCertPath");
            feature.AddKnownType("Org.BouncyCastle.Pkix.PkixCertPathBuilder,BouncyCastle.Crypto", "Org.BouncyCastle.Pkix.PkixCertPathBuilder");
            feature.AddKnownType("Org.BouncyCastle.Pkix.PkixCertPathBuilderException,BouncyCastle.Crypto", "Org.BouncyCastle.Pkix.PkixCertPathBuilderException");
            feature.AddKnownType("Org.BouncyCastle.Pkix.PkixCertPathBuilderResult,BouncyCastle.Crypto", "Org.BouncyCastle.Pkix.PkixCertPathBuilderResult");
            feature.AddKnownType("Org.BouncyCastle.Pkix.PkixCertPathChecker,BouncyCastle.Crypto", "Org.BouncyCastle.Pkix.PkixCertPathChecker");
            feature.AddKnownType("Org.BouncyCastle.Pkix.PkixCertPathValidator,BouncyCastle.Crypto", "Org.BouncyCastle.Pkix.PkixCertPathValidator");
            feature.AddKnownType("Org.BouncyCastle.Pkix.PkixCertPathValidatorException,BouncyCastle.Crypto", "Org.BouncyCastle.Pkix.PkixCertPathValidatorException");
            feature.AddKnownType("Org.BouncyCastle.Pkix.PkixCertPathValidatorResult,BouncyCastle.Crypto", "Org.BouncyCastle.Pkix.PkixCertPathValidatorResult");
            feature.AddKnownType("Org.BouncyCastle.Pkix.PkixCertPathValidatorUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Pkix.PkixCertPathValidatorUtilities");
            feature.AddKnownType("Org.BouncyCastle.Pkix.PkixCrlUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Pkix.PkixCrlUtilities");
            feature.AddKnownType("Org.BouncyCastle.Pkix.PkixNameConstraintValidator,BouncyCastle.Crypto", "Org.BouncyCastle.Pkix.PkixNameConstraintValidator");
            feature.AddKnownType("Org.BouncyCastle.Pkix.PkixNameConstraintValidatorException,BouncyCastle.Crypto", "Org.BouncyCastle.Pkix.PkixNameConstraintValidatorException");
            feature.AddKnownType("Org.BouncyCastle.Pkix.PkixParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Pkix.PkixParameters");
            feature.AddKnownType("Org.BouncyCastle.Pkix.PkixPolicyNode,BouncyCastle.Crypto", "Org.BouncyCastle.Pkix.PkixPolicyNode");
            feature.AddKnownType("Org.BouncyCastle.Pkix.ReasonsMask,BouncyCastle.Crypto", "Org.BouncyCastle.Pkix.ReasonsMask");
            feature.AddKnownType("Org.BouncyCastle.Pkix.Rfc3280CertPathUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Pkix.Rfc3280CertPathUtilities");
            feature.AddKnownType("Org.BouncyCastle.Pkix.Rfc3281CertPathUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Pkix.Rfc3281CertPathUtilities");
            feature.AddKnownType("Org.BouncyCastle.Pkix.TrustAnchor,BouncyCastle.Crypto", "Org.BouncyCastle.Pkix.TrustAnchor");
            feature.AddKnownType("Org.BouncyCastle.Security.EncryptionException,BouncyCastle.Crypto", "Org.BouncyCastle.Security.EncryptionException");
            feature.AddKnownType("Org.BouncyCastle.Security.PasswordException,BouncyCastle.Crypto", "Org.BouncyCastle.Security.PasswordException");
            feature.AddKnownType("Org.BouncyCastle.Security.AgreementUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Security.AgreementUtilities");
            feature.AddKnownType("Org.BouncyCastle.Security.CipherUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Security.CipherUtilities");
            feature.AddKnownType("Org.BouncyCastle.Security.CipherUtilities+CipherAlgorithm,BouncyCastle.Crypto", "Org.BouncyCastle.Security.CipherAlgorithm");
            feature.AddKnownType("Org.BouncyCastle.Security.CipherUtilities+CipherMode,BouncyCastle.Crypto", "Org.BouncyCastle.Security.CipherMode");
            feature.AddKnownType("Org.BouncyCastle.Security.CipherUtilities+CipherPadding,BouncyCastle.Crypto", "Org.BouncyCastle.Security.CipherPadding");
            feature.AddKnownType("Org.BouncyCastle.Security.DigestUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Security.DigestUtilities");
            feature.AddKnownType("Org.BouncyCastle.Security.DigestUtilities+DigestAlgorithm,BouncyCastle.Crypto", "Org.BouncyCastle.Security.DigestAlgorithm");
            feature.AddKnownType("Org.BouncyCastle.Security.DotNetUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Security.DotNetUtilities");
            feature.AddKnownType("Org.BouncyCastle.Security.GeneralSecurityException,BouncyCastle.Crypto", "Org.BouncyCastle.Security.GeneralSecurityException");
            feature.AddKnownType("Org.BouncyCastle.Security.GeneratorUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Security.GeneratorUtilities");
            feature.AddKnownType("Org.BouncyCastle.Security.InvalidKeyException,BouncyCastle.Crypto", "Org.BouncyCastle.Security.InvalidKeyException");
            feature.AddKnownType("Org.BouncyCastle.Security.InvalidParameterException,BouncyCastle.Crypto", "Org.BouncyCastle.Security.InvalidParameterException");
            feature.AddKnownType("Org.BouncyCastle.Security.KeyException,BouncyCastle.Crypto", "Org.BouncyCastle.Security.KeyException");
            feature.AddKnownType("Org.BouncyCastle.Security.MacUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Security.MacUtilities");
            feature.AddKnownType("Org.BouncyCastle.Security.NoSuchAlgorithmException,BouncyCastle.Crypto", "Org.BouncyCastle.Security.NoSuchAlgorithmException");
            feature.AddKnownType("Org.BouncyCastle.Security.ParameterUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Security.ParameterUtilities");
            feature.AddKnownType("Org.BouncyCastle.Security.PbeUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Security.PbeUtilities");
            feature.AddKnownType("Org.BouncyCastle.Security.PrivateKeyFactory,BouncyCastle.Crypto", "Org.BouncyCastle.Security.PrivateKeyFactory");
            feature.AddKnownType("Org.BouncyCastle.Security.PublicKeyFactory,BouncyCastle.Crypto", "Org.BouncyCastle.Security.PublicKeyFactory");
            feature.AddKnownType("Org.BouncyCastle.Security.SecureRandom,BouncyCastle.Crypto", "Org.BouncyCastle.Security.SecureRandom");
            feature.AddKnownType("Org.BouncyCastle.Security.SecurityUtilityException,BouncyCastle.Crypto", "Org.BouncyCastle.Security.SecurityUtilityException");
            feature.AddKnownType("Org.BouncyCastle.Security.SignatureException,BouncyCastle.Crypto", "Org.BouncyCastle.Security.SignatureException");
            feature.AddKnownType("Org.BouncyCastle.Security.SignerUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Security.SignerUtilities");
            feature.AddKnownType("Org.BouncyCastle.Security.WrapperUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Security.WrapperUtilities");
            feature.AddKnownType("Org.BouncyCastle.Security.WrapperUtilities+WrapAlgorithm,BouncyCastle.Crypto", "Org.BouncyCastle.Security.WrapAlgorithm");
            feature.AddKnownType("Org.BouncyCastle.Security.WrapperUtilities+BufferedCipherWrapper,BouncyCastle.Crypto", "Org.BouncyCastle.Security.BufferedCipherWrapper");
            feature.AddKnownType("Org.BouncyCastle.Security.Certificates.CertificateEncodingException,BouncyCastle.Crypto", "Org.BouncyCastle.Security.Certificates.CertificateEncodingException");
            feature.AddKnownType("Org.BouncyCastle.Security.Certificates.CertificateException,BouncyCastle.Crypto", "Org.BouncyCastle.Security.Certificates.CertificateException");
            feature.AddKnownType("Org.BouncyCastle.Security.Certificates.CertificateExpiredException,BouncyCastle.Crypto", "Org.BouncyCastle.Security.Certificates.CertificateExpiredException");
            feature.AddKnownType("Org.BouncyCastle.Security.Certificates.CertificateNotYetValidException,BouncyCastle.Crypto", "Org.BouncyCastle.Security.Certificates.CertificateNotYetValidException");
            feature.AddKnownType("Org.BouncyCastle.Security.Certificates.CertificateParsingException,BouncyCastle.Crypto", "Org.BouncyCastle.Security.Certificates.CertificateParsingException");
            feature.AddKnownType("Org.BouncyCastle.Security.Certificates.CrlException,BouncyCastle.Crypto", "Org.BouncyCastle.Security.Certificates.CrlException");
            feature.AddKnownType("Org.BouncyCastle.Tls.AbstractTlsClient,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.AbstractTlsClient");
            feature.AddKnownType("Org.BouncyCastle.Tls.AbstractTlsContext,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.AbstractTlsContext");
            feature.AddKnownType("Org.BouncyCastle.Tls.AbstractTlsKeyExchange,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.AbstractTlsKeyExchange");
            feature.AddKnownType("Org.BouncyCastle.Tls.AbstractTlsKeyExchangeFactory,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.AbstractTlsKeyExchangeFactory");
            feature.AddKnownType("Org.BouncyCastle.Tls.AbstractTlsPeer,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.AbstractTlsPeer");
            feature.AddKnownType("Org.BouncyCastle.Tls.AbstractTlsServer,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.AbstractTlsServer");
            feature.AddKnownType("Org.BouncyCastle.Tls.AlertDescription,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.AlertDescription");
            feature.AddKnownType("Org.BouncyCastle.Tls.AlertLevel,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.AlertLevel");
            feature.AddKnownType("Org.BouncyCastle.Tls.BasicTlsPskExternal,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.BasicTlsPskExternal");
            feature.AddKnownType("Org.BouncyCastle.Tls.BasicTlsPskIdentity,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.BasicTlsPskIdentity");
            feature.AddKnownType("Org.BouncyCastle.Tls.BasicTlsSrpIdentity,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.BasicTlsSrpIdentity");
            feature.AddKnownType("Org.BouncyCastle.Tls.ByteQueue,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.ByteQueue");
            feature.AddKnownType("Org.BouncyCastle.Tls.ByteQueueInputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.ByteQueueInputStream");
            feature.AddKnownType("Org.BouncyCastle.Tls.ByteQueueOutputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.ByteQueueOutputStream");
            feature.AddKnownType("Org.BouncyCastle.Tls.CachedInformationType,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.CachedInformationType");
            feature.AddKnownType("Org.BouncyCastle.Tls.CertChainType,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.CertChainType");
            feature.AddKnownType("Org.BouncyCastle.Tls.Certificate,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Certificate");
            feature.AddKnownType("Org.BouncyCastle.Tls.Certificate+ParseOptions,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Org.BouncyCastle.Tls.Certificate.ParseOptions");
            feature.AddKnownType("Org.BouncyCastle.Tls.CertificateEntry,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.CertificateEntry");
            feature.AddKnownType("Org.BouncyCastle.Tls.CertificateRequest,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.CertificateRequest");
            feature.AddKnownType("Org.BouncyCastle.Tls.CertificateStatus,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.CertificateStatus");
            feature.AddKnownType("Org.BouncyCastle.Tls.CertificateStatusRequest,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.CertificateStatusRequest");
            feature.AddKnownType("Org.BouncyCastle.Tls.CertificateStatusRequestItemV2,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.CertificateStatusRequestItemV2");
            feature.AddKnownType("Org.BouncyCastle.Tls.CertificateStatusType,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.CertificateStatusType");
            feature.AddKnownType("Org.BouncyCastle.Tls.CertificateType,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.CertificateType");
            feature.AddKnownType("Org.BouncyCastle.Tls.CertificateUrl,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.CertificateUrl");
            feature.AddKnownType("Org.BouncyCastle.Tls.CertificateUrl+ListBuffer16,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.ListBuffer16");
            feature.AddKnownType("Org.BouncyCastle.Tls.ChangeCipherSpec,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.ChangeCipherSpec");
            feature.AddKnownType("Org.BouncyCastle.Tls.ChannelBinding,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.ChannelBinding");
            feature.AddKnownType("Org.BouncyCastle.Tls.CipherSuite,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.CipherSuite");
            feature.AddKnownType("Org.BouncyCastle.Tls.CipherType,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.CipherType");
            feature.AddKnownType("Org.BouncyCastle.Tls.ClientAuthenticationType,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.ClientAuthenticationType");
            feature.AddKnownType("Org.BouncyCastle.Tls.ClientCertificateType,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.ClientCertificateType");
            feature.AddKnownType("Org.BouncyCastle.Tls.ClientHello,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.ClientHello");
            feature.AddKnownType("Org.BouncyCastle.Tls.CombinedHash,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.CombinedHash");
            feature.AddKnownType("Org.BouncyCastle.Tls.CompressionMethod,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.CompressionMethod");
            feature.AddKnownType("Org.BouncyCastle.Tls.ConnectionEnd,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.ConnectionEnd");
            feature.AddKnownType("Org.BouncyCastle.Tls.ContentType,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.ContentType");
            feature.AddKnownType("Org.BouncyCastle.Tls.DatagramReceiver,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.DatagramReceiver");
            feature.AddKnownType("Org.BouncyCastle.Tls.DatagramSender,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.DatagramSender");
            feature.AddKnownType("Org.BouncyCastle.Tls.DatagramTransport,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.DatagramTransport");
            feature.AddKnownType("Org.BouncyCastle.Tls.DefaultTlsClient,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.DefaultTlsClient");
            feature.AddKnownType("Org.BouncyCastle.Tls.DefaultTlsCredentialedSigner,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.DefaultTlsCredentialedSigner");
            feature.AddKnownType("Org.BouncyCastle.Tls.DefaultTlsDHGroupVerifier,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.DefaultTlsDHGroupVerifier");
            feature.AddKnownType("Org.BouncyCastle.Tls.DefaultTlsHeartbeat,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.DefaultTlsHeartbeat");
            feature.AddKnownType("Org.BouncyCastle.Tls.DefaultTlsKeyExchangeFactory,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.DefaultTlsKeyExchangeFactory");
            feature.AddKnownType("Org.BouncyCastle.Tls.DefaultTlsServer,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.DefaultTlsServer");
            feature.AddKnownType("Org.BouncyCastle.Tls.DefaultTlsSrpConfigVerifier,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.DefaultTlsSrpConfigVerifier");
            feature.AddKnownType("Org.BouncyCastle.Tls.DeferredHash,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.DeferredHash");
            feature.AddKnownType("Org.BouncyCastle.Tls.DigestInputBuffer,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.DigestInputBuffer");
            feature.AddKnownType("Org.BouncyCastle.Tls.DigitallySigned,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.DigitallySigned");
            feature.AddKnownType("Org.BouncyCastle.Tls.DtlsClientProtocol,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.DtlsClientProtocol");
            feature.AddKnownType("Org.BouncyCastle.Tls.DtlsClientProtocol+ClientHandshakeState,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.ClientHandshakeState");
            feature.AddKnownType("Org.BouncyCastle.Tls.DtlsEpoch,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.DtlsEpoch");
            feature.AddKnownType("Org.BouncyCastle.Tls.DtlsHandshakeRetransmit,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.DtlsHandshakeRetransmit");
            feature.AddKnownType("Org.BouncyCastle.Tls.DtlsProtocol,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.DtlsProtocol");
            feature.AddKnownType("Org.BouncyCastle.Tls.DtlsReassembler,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.DtlsReassembler");
            feature.AddKnownType("Org.BouncyCastle.Tls.DtlsReassembler+Range,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Range");
            feature.AddKnownType("Org.BouncyCastle.Tls.DtlsRecordLayer,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.DtlsRecordLayer");
            feature.AddKnownType("Org.BouncyCastle.Tls.DtlsReliableHandshake,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.DtlsReliableHandshake");
            feature.AddKnownType("Org.BouncyCastle.Tls.DtlsReliableHandshake+Message,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Message");
            feature.AddKnownType("Org.BouncyCastle.Tls.DtlsReliableHandshake+RecordLayerBuffer,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.RecordLayerBuffer");
            feature.AddKnownType("Org.BouncyCastle.Tls.DtlsReliableHandshake+Retransmit,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Retransmit");
            feature.AddKnownType("Org.BouncyCastle.Tls.DtlsReplayWindow,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.DtlsReplayWindow");
            feature.AddKnownType("Org.BouncyCastle.Tls.DtlsRequest,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.DtlsRequest");
            feature.AddKnownType("Org.BouncyCastle.Tls.DtlsServerProtocol,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.DtlsServerProtocol");
            feature.AddKnownType("Org.BouncyCastle.Tls.DtlsServerProtocol+ServerHandshakeState,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.ServerHandshakeState");
            feature.AddKnownType("Org.BouncyCastle.Tls.DtlsTransport,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.DtlsTransport");
            feature.AddKnownType("Org.BouncyCastle.Tls.DtlsVerifier,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.DtlsVerifier");
            feature.AddKnownType("Org.BouncyCastle.Tls.ECCurveType,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.ECCurveType");
            feature.AddKnownType("Org.BouncyCastle.Tls.ECPointFormat,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.ECPointFormat");
            feature.AddKnownType("Org.BouncyCastle.Tls.EncryptionAlgorithm,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.EncryptionAlgorithm");
            feature.AddKnownType("Org.BouncyCastle.Tls.ExporterLabel,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.ExporterLabel");
            feature.AddKnownType("Org.BouncyCastle.Tls.ExtensionType,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.ExtensionType");
            feature.AddKnownType("Org.BouncyCastle.Tls.HandshakeMessageInput,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.HandshakeMessageInput");
            feature.AddKnownType("Org.BouncyCastle.Tls.HandshakeMessageOutput,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.HandshakeMessageOutput");
            feature.AddKnownType("Org.BouncyCastle.Tls.HandshakeType,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.HandshakeType");
            feature.AddKnownType("Org.BouncyCastle.Tls.HashAlgorithm,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.HashAlgorithm");
            feature.AddKnownType("Org.BouncyCastle.Tls.HeartbeatExtension,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.HeartbeatExtension");
            feature.AddKnownType("Org.BouncyCastle.Tls.HeartbeatMessage,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.HeartbeatMessage");
            feature.AddKnownType("Org.BouncyCastle.Tls.HeartbeatMessageType,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.HeartbeatMessageType");
            feature.AddKnownType("Org.BouncyCastle.Tls.HeartbeatMode,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.HeartbeatMode");
            feature.AddKnownType("Org.BouncyCastle.Tls.IdentifierType,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.IdentifierType");
            feature.AddKnownType("Org.BouncyCastle.Tls.KeyExchangeAlgorithm,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.KeyExchangeAlgorithm");
            feature.AddKnownType("Org.BouncyCastle.Tls.KeyShareEntry,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.KeyShareEntry");
            feature.AddKnownType("Org.BouncyCastle.Tls.KeyUpdateRequest,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.KeyUpdateRequest");
            feature.AddKnownType("Org.BouncyCastle.Tls.MacAlgorithm,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.MacAlgorithm");
            feature.AddKnownType("Org.BouncyCastle.Tls.MaxFragmentLength,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.MaxFragmentLength");
            feature.AddKnownType("Org.BouncyCastle.Tls.NamedGroup,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.NamedGroup");
            feature.AddKnownType("Org.BouncyCastle.Tls.NamedGroupRole,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.NamedGroupRole");
            feature.AddKnownType("Org.BouncyCastle.Tls.NameType,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.NameType");
            feature.AddKnownType("Org.BouncyCastle.Tls.NewSessionTicket,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.NewSessionTicket");
            feature.AddKnownType("Org.BouncyCastle.Tls.OcspStatusRequest,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.OcspStatusRequest");
            feature.AddKnownType("Org.BouncyCastle.Tls.OfferedPsks,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.OfferedPsks");
            feature.AddKnownType("Org.BouncyCastle.Tls.OfferedPsks+BindersConfig,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.BindersConfig");
            feature.AddKnownType("Org.BouncyCastle.Tls.OfferedPsks+SelectedConfig,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.SelectedConfig");
            feature.AddKnownType("Org.BouncyCastle.Tls.PrfAlgorithm,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.PrfAlgorithm");
            feature.AddKnownType("Org.BouncyCastle.Tls.ProtocolName,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.ProtocolName");
            feature.AddKnownType("Org.BouncyCastle.Tls.ProtocolVersion,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.ProtocolVersion");
            feature.AddKnownType("Org.BouncyCastle.Tls.PskIdentity,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.PskIdentity");
            feature.AddKnownType("Org.BouncyCastle.Tls.PskKeyExchangeMode,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.PskKeyExchangeMode");
            feature.AddKnownType("Org.BouncyCastle.Tls.PskTlsClient,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.PskTlsClient");
            feature.AddKnownType("Org.BouncyCastle.Tls.PskTlsServer,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.PskTlsServer");
            feature.AddKnownType("Org.BouncyCastle.Tls.RecordFormat,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.RecordFormat");
            feature.AddKnownType("Org.BouncyCastle.Tls.RecordPreview,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.RecordPreview");
            feature.AddKnownType("Org.BouncyCastle.Tls.RecordStream,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.RecordStream");
            feature.AddKnownType("Org.BouncyCastle.Tls.RecordStream+Record,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Record");
            feature.AddKnownType("Org.BouncyCastle.Tls.RecordStream+SequenceNumber,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.SequenceNumber");
            feature.AddKnownType("Org.BouncyCastle.Tls.SecurityParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.SecurityParameters");
            feature.AddKnownType("Org.BouncyCastle.Tls.ServerHello,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.ServerHello");
            feature.AddKnownType("Org.BouncyCastle.Tls.ServerName,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.ServerName");
            feature.AddKnownType("Org.BouncyCastle.Tls.ServerNameList,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.ServerNameList");
            feature.AddKnownType("Org.BouncyCastle.Tls.ServerOnlyTlsAuthentication,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.ServerOnlyTlsAuthentication");
            feature.AddKnownType("Org.BouncyCastle.Tls.ServerSrpParams,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.ServerSrpParams");
            feature.AddKnownType("Org.BouncyCastle.Tls.SessionParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.SessionParameters");
            feature.AddKnownType("Org.BouncyCastle.Tls.SessionParameters+Builder,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Org.BouncyCastle.Tls.SessionParameters.Builder");
            feature.AddKnownType("Org.BouncyCastle.Tls.SignatureAlgorithm,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.SignatureAlgorithm");
            feature.AddKnownType("Org.BouncyCastle.Tls.SignatureAndHashAlgorithm,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.SignatureAndHashAlgorithm");
            feature.AddKnownType("Org.BouncyCastle.Tls.SignatureScheme,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.SignatureScheme");
            feature.AddKnownType("Org.BouncyCastle.Tls.SimulatedTlsSrpIdentityManager,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.SimulatedTlsSrpIdentityManager");
            feature.AddKnownType("Org.BouncyCastle.Tls.SrpTlsClient,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.SrpTlsClient");
            feature.AddKnownType("Org.BouncyCastle.Tls.SrpTlsServer,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.SrpTlsServer");
            feature.AddKnownType("Org.BouncyCastle.Tls.SrtpProtectionProfile,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.SrtpProtectionProfile");
            feature.AddKnownType("Org.BouncyCastle.Tls.Ssl3Utilities,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Ssl3Utilities");
            feature.AddKnownType("Org.BouncyCastle.Tls.SupplementalDataEntry,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.SupplementalDataEntry");
            feature.AddKnownType("Org.BouncyCastle.Tls.SupplementalDataType,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.SupplementalDataType");
            feature.AddKnownType("Org.BouncyCastle.Tls.Timeout,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Timeout");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsAuthentication,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsAuthentication");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsClient,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsClient");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsClientContext,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsClientContext");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsClientContextImpl,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsClientContextImpl");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsClientProtocol,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsClientProtocol");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsCloseable,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsCloseable");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsContext,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsContext");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsCredentialedAgreement,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsCredentialedAgreement");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsCredentialedDecryptor,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsCredentialedDecryptor");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsCredentialedSigner,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsCredentialedSigner");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsCredentials,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsCredentials");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsDHanonKeyExchange,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsDHanonKeyExchange");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsDheKeyExchange,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsDheKeyExchange");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsDHGroupVerifier,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsDHGroupVerifier");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsDHKeyExchange,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsDHKeyExchange");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsDHUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsDHUtilities");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsEccUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsEccUtilities");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsECDHanonKeyExchange,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsECDHanonKeyExchange");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsECDheKeyExchange,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsECDheKeyExchange");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsECDHKeyExchange,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsECDHKeyExchange");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsException,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsException");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsExtensionsUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsExtensionsUtilities");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsFatalAlert,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsFatalAlert");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsFatalAlertReceived,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsFatalAlertReceived");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsHandshakeHash,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsHandshakeHash");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsHeartbeat,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsHeartbeat");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsKeyExchange,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsKeyExchange");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsKeyExchangeFactory,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsKeyExchangeFactory");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsNoCloseNotifyException,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsNoCloseNotifyException");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsObjectIdentifiers,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsObjectIdentifiers");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsPeer,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsPeer");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsProtocol,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsProtocol");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsPsk,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsPsk");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsPskExternal,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsPskExternal");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsPskIdentity,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsPskIdentity");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsPskIdentityManager,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsPskIdentityManager");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsPskKeyExchange,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsPskKeyExchange");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsRsaKeyExchange,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsRsaKeyExchange");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsServer,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsServer");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsServerCertificate,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsServerCertificate");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsServerCertificateImpl,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsServerCertificateImpl");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsServerContext,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsServerContext");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsServerContextImpl,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsServerContextImpl");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsServerProtocol,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsServerProtocol");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsSession,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsSession");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsSessionImpl,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsSessionImpl");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsSrpConfigVerifier,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsSrpConfigVerifier");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsSrpIdentity,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsSrpIdentity");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsSrpIdentityManager,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsSrpIdentityManager");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsSrpKeyExchange,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsSrpKeyExchange");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsSrpLoginParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsSrpLoginParameters");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsSrpUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsSrpUtilities");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsSrtpUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsSrtpUtilities");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsStream,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsStream");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsTimeoutException,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsTimeoutException");
            feature.AddKnownType("Org.BouncyCastle.Tls.TlsUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TlsUtilities");
            feature.AddKnownType("Org.BouncyCastle.Tls.TrustedAuthority,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.TrustedAuthority");
            feature.AddKnownType("Org.BouncyCastle.Tls.UrlAndHash,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.UrlAndHash");
            feature.AddKnownType("Org.BouncyCastle.Tls.UserMappingType,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.UserMappingType");
            feature.AddKnownType("Org.BouncyCastle.Tls.UseSrtpData,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.UseSrtpData");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.CryptoHashAlgorithm,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.CryptoHashAlgorithm");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.CryptoSignatureAlgorithm,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.CryptoSignatureAlgorithm");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.DHGroup,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.DHGroup");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.DHStandardGroups,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.DHStandardGroups");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Srp6Group,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Srp6Group");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Srp6StandardGroups,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Srp6StandardGroups");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.TlsAgreement,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.TlsAgreement");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.TlsCertificate,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.TlsCertificate");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.TlsCertificateRole,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.TlsCertificateRole");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.TlsCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.TlsCipher");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.TlsCrypto,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.TlsCrypto");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.TlsCryptoException,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.TlsCryptoException");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.TlsCryptoParameters,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.TlsCryptoParameters");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.TlsCryptoUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.TlsCryptoUtilities");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.TlsDecodeResult,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.TlsDecodeResult");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.TlsDHConfig,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.TlsDHConfig");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.TlsDHDomain,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.TlsDHDomain");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.TlsECConfig,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.TlsECConfig");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.TlsECDomain,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.TlsECDomain");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.TlsEncodeResult,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.TlsEncodeResult");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.TlsEncryptor,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.TlsEncryptor");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.TlsHash,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.TlsHash");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.TlsHashSink,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.TlsHashSink");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.TlsHmac,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.TlsHmac");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.TlsMac,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.TlsMac");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.TlsMacSink,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.TlsMacSink");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.TlsNonceGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.TlsNonceGenerator");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.TlsNullNullCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.TlsNullNullCipher");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.TlsSecret,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.TlsSecret");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.TlsSigner,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.TlsSigner");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.TlsSrp6Client,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.TlsSrp6Client");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.TlsSrp6Server,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.TlsSrp6Server");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.TlsSrp6VerifierGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.TlsSrp6VerifierGenerator");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.TlsSrpConfig,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.TlsSrpConfig");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.TlsStreamSigner,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.TlsStreamSigner");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.TlsStreamVerifier,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.TlsStreamVerifier");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.TlsVerifier,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.TlsVerifier");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.AbstractTlsCrypto,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.AbstractTlsCrypto");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.AbstractTlsSecret,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.AbstractTlsSecret");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.RsaUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.RsaUtilities");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.TlsAeadCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.TlsAeadCipher");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.TlsAeadCipherImpl,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.TlsAeadCipherImpl");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.TlsBlockCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.TlsBlockCipher");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.TlsBlockCipherImpl,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.TlsBlockCipherImpl");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.TlsImplUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.TlsImplUtilities");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.TlsNullCipher,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.TlsNullCipher");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.TlsSuiteHmac,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.TlsSuiteHmac");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.TlsSuiteMac,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.TlsSuiteMac");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcChaCha20Poly1305,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcChaCha20Poly1305");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcDefaultTlsCredentialedAgreement,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcDefaultTlsCredentialedAgreement");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcDefaultTlsCredentialedAgreement+DHCredentialedAgreement,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.DHCredentialedAgreement");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcDefaultTlsCredentialedAgreement+ECCredentialedAgreement,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.ECCredentialedAgreement");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcDefaultTlsCredentialedDecryptor,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcDefaultTlsCredentialedDecryptor");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcDefaultTlsCredentialedSigner,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcDefaultTlsCredentialedSigner");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcSsl3Hmac,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcSsl3Hmac");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsAeadCipherImpl,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsAeadCipherImpl");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsBlockCipherImpl,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsBlockCipherImpl");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsCertificate,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsCertificate");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsCrypto,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsCrypto");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsDH,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsDH");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsDHDomain,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsDHDomain");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsDsaSigner,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsDsaSigner");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsDsaVerifier,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsDsaVerifier");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsDssSigner,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsDssSigner");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsDssVerifier,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsDssVerifier");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsECDH,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsECDH");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsECDomain,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsECDomain");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsECDsa13Signer,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsECDsa13Signer");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsECDsa13Verifier,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsECDsa13Verifier");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsECDsaSigner,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsECDsaSigner");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsECDsaVerifier,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsECDsaVerifier");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsEd25519Signer,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsEd25519Signer");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsEd25519Verifier,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsEd25519Verifier");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsEd448Signer,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsEd448Signer");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsEd448Verifier,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsEd448Verifier");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsHash,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsHash");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsHmac,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsHmac");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsNonceGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsNonceGenerator");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsRsaEncryptor,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsRsaEncryptor");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsRsaPssSigner,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsRsaPssSigner");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsRsaPssVerifier,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsRsaPssVerifier");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsRsaSigner,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsRsaSigner");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsRsaVerifier,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsRsaVerifier");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsSecret,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsSecret");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsSigner,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsSigner");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsSrp6Client,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsSrp6Client");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsSrp6Server,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsSrp6Server");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsSrp6VerifierGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsSrp6VerifierGenerator");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsStreamSigner,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsStreamSigner");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsStreamVerifier,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsStreamVerifier");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsVerifier,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcTlsVerifier");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcVerifyingStreamSigner,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcVerifyingStreamSigner");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcX25519,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcX25519");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcX25519Domain,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcX25519Domain");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcX448,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcX448");
            feature.AddKnownType("Org.BouncyCastle.Tls.Crypto.Impl.BC.BcX448Domain,BouncyCastle.Crypto", "Org.BouncyCastle.Tls.Crypto.Impl.BC.BcX448Domain");
            feature.AddKnownType("Org.BouncyCastle.Tsp.GenTimeAccuracy,BouncyCastle.Crypto", "Org.BouncyCastle.Tsp.GenTimeAccuracy");
            feature.AddKnownType("Org.BouncyCastle.Tsp.TimeStampRequest,BouncyCastle.Crypto", "Org.BouncyCastle.Tsp.TimeStampRequest");
            feature.AddKnownType("Org.BouncyCastle.Tsp.TimeStampRequestGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Tsp.TimeStampRequestGenerator");
            feature.AddKnownType("Org.BouncyCastle.Tsp.TimeStampResponse,BouncyCastle.Crypto", "Org.BouncyCastle.Tsp.TimeStampResponse");
            feature.AddKnownType("Org.BouncyCastle.Tsp.TimeStampResponseGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Tsp.TimeStampResponseGenerator");
            feature.AddKnownType("Org.BouncyCastle.Tsp.TimeStampResponseGenerator+FailInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Tsp.FailInfo");
            feature.AddKnownType("Org.BouncyCastle.Tsp.TimeStampToken,BouncyCastle.Crypto", "Org.BouncyCastle.Tsp.TimeStampToken");
            feature.AddKnownType("Org.BouncyCastle.Tsp.TimeStampToken+CertID,BouncyCastle.Crypto", "Org.BouncyCastle.Tsp.CertID");
            feature.AddKnownType("Org.BouncyCastle.Tsp.Resolution,BouncyCastle.Crypto", "Org.BouncyCastle.Tsp.Resolution");
            feature.AddKnownType("Org.BouncyCastle.Tsp.TimeStampTokenGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Tsp.TimeStampTokenGenerator");
            feature.AddKnownType("Org.BouncyCastle.Tsp.TimeStampTokenGenerator+TableGen,BouncyCastle.Crypto", "Org.BouncyCastle.Tsp.TableGen");
            feature.AddKnownType("Org.BouncyCastle.Tsp.TimeStampTokenGenerator+TableGen2,BouncyCastle.Crypto", "Org.BouncyCastle.Tsp.TableGen2");
            feature.AddKnownType("Org.BouncyCastle.Tsp.TimeStampTokenInfo,BouncyCastle.Crypto", "Org.BouncyCastle.Tsp.TimeStampTokenInfo");
            feature.AddKnownType("Org.BouncyCastle.Tsp.TspAlgorithms,BouncyCastle.Crypto", "Org.BouncyCastle.Tsp.TspAlgorithms");
            feature.AddKnownType("Org.BouncyCastle.Tsp.TspException,BouncyCastle.Crypto", "Org.BouncyCastle.Tsp.TspException");
            feature.AddKnownType("Org.BouncyCastle.Tsp.TspUtil,BouncyCastle.Crypto", "Org.BouncyCastle.Tsp.TspUtil");
            feature.AddKnownType("Org.BouncyCastle.Tsp.TspValidationException,BouncyCastle.Crypto", "Org.BouncyCastle.Tsp.TspValidationException");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Arrays,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Arrays");
            feature.AddKnownType("Org.BouncyCastle.Utilities.BigIntegers,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.BigIntegers");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Bytes,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Bytes");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Enums,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Enums");
            feature.AddKnownType("Org.BouncyCastle.Utilities.IMemoable,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.IMemoable");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Integers,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Integers");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Longs,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Longs");
            feature.AddKnownType("Org.BouncyCastle.Utilities.MemoableResetException,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.MemoableResetException");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Platform,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Platform");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Strings,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Strings");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Times,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Times");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Collections.CollectionUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Collections.CollectionUtilities");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Collections.EmptyEnumerable,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Collections.EmptyEnumerable");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Collections.EmptyEnumerator,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Collections.EmptyEnumerator");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Collections.EnumerableProxy,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Collections.EnumerableProxy");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Collections.HashSet,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Collections.HashSet");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Collections.ISet,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Collections.ISet");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Collections.LinkedDictionary,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Collections.LinkedDictionary");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Collections.LinkedDictionaryEnumerator,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Collections.LinkedDictionaryEnumerator");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Collections.UnmodifiableDictionary,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Collections.UnmodifiableDictionary");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Collections.UnmodifiableDictionaryProxy,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Collections.UnmodifiableDictionaryProxy");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Collections.UnmodifiableList,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Collections.UnmodifiableList");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Collections.UnmodifiableListProxy,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Collections.UnmodifiableListProxy");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Collections.UnmodifiableSet,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Collections.UnmodifiableSet");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Collections.UnmodifiableSetProxy,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Collections.UnmodifiableSetProxy");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Date.DateTimeObject,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Date.DateTimeObject");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Date.DateTimeUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Date.DateTimeUtilities");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Encoders.Base64,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Encoders.Base64");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Encoders.Base64Encoder,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Encoders.Base64Encoder");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Encoders.BufferedDecoder,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Encoders.BufferedDecoder");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Encoders.BufferedEncoder,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Encoders.BufferedEncoder");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Encoders.Hex,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Encoders.Hex");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Encoders.HexEncoder,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Encoders.HexEncoder");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Encoders.HexTranslator,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Encoders.HexTranslator");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Encoders.IEncoder,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Encoders.IEncoder");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Encoders.ITranslator,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Encoders.ITranslator");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Encoders.UrlBase64,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Encoders.UrlBase64");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Encoders.UrlBase64Encoder,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Encoders.UrlBase64Encoder");
            feature.AddKnownType("Org.BouncyCastle.Utilities.IO.BaseInputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.IO.BaseInputStream");
            feature.AddKnownType("Org.BouncyCastle.Utilities.IO.BaseOutputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.IO.BaseOutputStream");
            feature.AddKnownType("Org.BouncyCastle.Utilities.IO.FilterStream,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.IO.FilterStream");
            feature.AddKnownType("Org.BouncyCastle.Utilities.IO.MemoryInputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.IO.MemoryInputStream");
            feature.AddKnownType("Org.BouncyCastle.Utilities.IO.MemoryOutputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.IO.MemoryOutputStream");
            feature.AddKnownType("Org.BouncyCastle.Utilities.IO.NullOutputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.IO.NullOutputStream");
            feature.AddKnownType("Org.BouncyCastle.Utilities.IO.PushbackStream,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.IO.PushbackStream");
            feature.AddKnownType("Org.BouncyCastle.Utilities.IO.StreamOverflowException,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.IO.StreamOverflowException");
            feature.AddKnownType("Org.BouncyCastle.Utilities.IO.Streams,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.IO.Streams");
            feature.AddKnownType("Org.BouncyCastle.Utilities.IO.TeeInputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.IO.TeeInputStream");
            feature.AddKnownType("Org.BouncyCastle.Utilities.IO.TeeOutputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.IO.TeeOutputStream");
            feature.AddKnownType("Org.BouncyCastle.Utilities.IO.Pem.PemGenerationException,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.IO.Pem.PemGenerationException");
            feature.AddKnownType("Org.BouncyCastle.Utilities.IO.Pem.PemHeader,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.IO.Pem.PemHeader");
            feature.AddKnownType("Org.BouncyCastle.Utilities.IO.Pem.PemObject,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.IO.Pem.PemObject");
            feature.AddKnownType("Org.BouncyCastle.Utilities.IO.Pem.PemObjectGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.IO.Pem.PemObjectGenerator");
            feature.AddKnownType("Org.BouncyCastle.Utilities.IO.Pem.PemObjectParser,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.IO.Pem.PemObjectParser");
            feature.AddKnownType("Org.BouncyCastle.Utilities.IO.Pem.PemReader,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.IO.Pem.PemReader");
            feature.AddKnownType("Org.BouncyCastle.Utilities.IO.Pem.PemWriter,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.IO.Pem.PemWriter");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Net.IPAddress,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Net.IPAddress");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Zlib.Adler32,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Zlib.Adler32");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Zlib.Deflate,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Zlib.Deflate");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Zlib.Deflate+Config,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Zlib.Config");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Zlib.InfBlocks,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Zlib.InfBlocks");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Zlib.InfCodes,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Zlib.InfCodes");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Zlib.Inflate,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Zlib.Inflate");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Zlib.InfTree,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Zlib.InfTree");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Zlib.JZlib,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Zlib.JZlib");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Zlib.StaticTree,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Zlib.StaticTree");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Zlib.Tree,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Zlib.Tree");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Zlib.ZDeflaterOutputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Zlib.ZDeflaterOutputStream");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Zlib.ZInflaterInputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Zlib.ZInflaterInputStream");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Zlib.ZInputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Zlib.ZInputStream");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Zlib.ZOutputStream,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Zlib.ZOutputStream");
            feature.AddKnownType("Org.BouncyCastle.Utilities.Zlib.ZStream,BouncyCastle.Crypto", "Org.BouncyCastle.Utilities.Zlib.ZStream");
            feature.AddKnownType("Org.BouncyCastle.X509.AttributeCertificateHolder,BouncyCastle.Crypto", "Org.BouncyCastle.X509.AttributeCertificateHolder");
            feature.AddKnownType("Org.BouncyCastle.X509.AttributeCertificateIssuer,BouncyCastle.Crypto", "Org.BouncyCastle.X509.AttributeCertificateIssuer");
            feature.AddKnownType("Org.BouncyCastle.X509.IX509AttributeCertificate,BouncyCastle.Crypto", "Org.BouncyCastle.X509.IX509AttributeCertificate");
            feature.AddKnownType("Org.BouncyCastle.X509.IX509Extension,BouncyCastle.Crypto", "Org.BouncyCastle.X509.IX509Extension");
            feature.AddKnownType("Org.BouncyCastle.X509.PemParser,BouncyCastle.Crypto", "Org.BouncyCastle.X509.PemParser");
            feature.AddKnownType("Org.BouncyCastle.X509.PrincipalUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.X509.PrincipalUtilities");
            feature.AddKnownType("Org.BouncyCastle.X509.SubjectPublicKeyInfoFactory,BouncyCastle.Crypto", "Org.BouncyCastle.X509.SubjectPublicKeyInfoFactory");
            feature.AddKnownType("Org.BouncyCastle.X509.X509AttrCertParser,BouncyCastle.Crypto", "Org.BouncyCastle.X509.X509AttrCertParser");
            feature.AddKnownType("Org.BouncyCastle.X509.X509Attribute,BouncyCastle.Crypto", "Org.BouncyCastle.X509.X509Attribute");
            feature.AddKnownType("Org.BouncyCastle.X509.X509Certificate,BouncyCastle.Crypto", "Org.BouncyCastle.X509.X509Certificate");
            feature.AddKnownType("Org.BouncyCastle.X509.X509Certificate+CachedEncoding,BouncyCastle.Crypto", "Org.BouncyCastle.X509.CachedEncoding");
            feature.AddKnownType("Org.BouncyCastle.X509.X509CertificatePair,BouncyCastle.Crypto", "Org.BouncyCastle.X509.X509CertificatePair");
            feature.AddKnownType("Org.BouncyCastle.X509.X509CertificateParser,BouncyCastle.Crypto", "Org.BouncyCastle.X509.X509CertificateParser");
            feature.AddKnownType("Org.BouncyCastle.X509.X509CertPairParser,BouncyCastle.Crypto", "Org.BouncyCastle.X509.X509CertPairParser");
            feature.AddKnownType("Org.BouncyCastle.X509.X509Crl,BouncyCastle.Crypto", "Org.BouncyCastle.X509.X509Crl");
            feature.AddKnownType("Org.BouncyCastle.X509.X509Crl+CachedEncoding,BouncyCastle.Crypto", "Org.BouncyCastle.X509.CachedEncoding");
            feature.AddKnownType("Org.BouncyCastle.X509.X509CrlEntry,BouncyCastle.Crypto", "Org.BouncyCastle.X509.X509CrlEntry");
            feature.AddKnownType("Org.BouncyCastle.X509.X509CrlParser,BouncyCastle.Crypto", "Org.BouncyCastle.X509.X509CrlParser");
            feature.AddKnownType("Org.BouncyCastle.X509.X509ExtensionBase,BouncyCastle.Crypto", "Org.BouncyCastle.X509.X509ExtensionBase");
            feature.AddKnownType("Org.BouncyCastle.X509.X509KeyUsage,BouncyCastle.Crypto", "Org.BouncyCastle.X509.X509KeyUsage");
            feature.AddKnownType("Org.BouncyCastle.X509.X509SignatureUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.X509.X509SignatureUtilities");
            feature.AddKnownType("Org.BouncyCastle.X509.X509Utilities,BouncyCastle.Crypto", "Org.BouncyCastle.X509.X509Utilities");
            feature.AddKnownType("Org.BouncyCastle.X509.X509V1CertificateGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.X509.X509V1CertificateGenerator");
            feature.AddKnownType("Org.BouncyCastle.X509.X509V2AttributeCertificate,BouncyCastle.Crypto", "Org.BouncyCastle.X509.X509V2AttributeCertificate");
            feature.AddKnownType("Org.BouncyCastle.X509.X509V2AttributeCertificateGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.X509.X509V2AttributeCertificateGenerator");
            feature.AddKnownType("Org.BouncyCastle.X509.X509V2CrlGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.X509.X509V2CrlGenerator");
            feature.AddKnownType("Org.BouncyCastle.X509.X509V3CertificateGenerator,BouncyCastle.Crypto", "Org.BouncyCastle.X509.X509V3CertificateGenerator");
            feature.AddKnownType("Org.BouncyCastle.X509.Extension.AuthorityKeyIdentifierStructure,BouncyCastle.Crypto", "Org.BouncyCastle.X509.Extension.AuthorityKeyIdentifierStructure");
            feature.AddKnownType("Org.BouncyCastle.X509.Extension.SubjectKeyIdentifierStructure,BouncyCastle.Crypto", "Org.BouncyCastle.X509.Extension.SubjectKeyIdentifierStructure");
            feature.AddKnownType("Org.BouncyCastle.X509.Extension.X509ExtensionUtilities,BouncyCastle.Crypto", "Org.BouncyCastle.X509.Extension.X509ExtensionUtilities");
            feature.AddKnownType("Org.BouncyCastle.X509.Store.IX509Selector,BouncyCastle.Crypto", "Org.BouncyCastle.X509.Store.IX509Selector");
            feature.AddKnownType("Org.BouncyCastle.X509.Store.IX509Store,BouncyCastle.Crypto", "Org.BouncyCastle.X509.Store.IX509Store");
            feature.AddKnownType("Org.BouncyCastle.X509.Store.IX509StoreParameters,BouncyCastle.Crypto", "Org.BouncyCastle.X509.Store.IX509StoreParameters");
            feature.AddKnownType("Org.BouncyCastle.X509.Store.NoSuchStoreException,BouncyCastle.Crypto", "Org.BouncyCastle.X509.Store.NoSuchStoreException");
            feature.AddKnownType("Org.BouncyCastle.X509.Store.X509AttrCertStoreSelector,BouncyCastle.Crypto", "Org.BouncyCastle.X509.Store.X509AttrCertStoreSelector");
            feature.AddKnownType("Org.BouncyCastle.X509.Store.X509CertPairStoreSelector,BouncyCastle.Crypto", "Org.BouncyCastle.X509.Store.X509CertPairStoreSelector");
            feature.AddKnownType("Org.BouncyCastle.X509.Store.X509CertStoreSelector,BouncyCastle.Crypto", "Org.BouncyCastle.X509.Store.X509CertStoreSelector");
            feature.AddKnownType("Org.BouncyCastle.X509.Store.X509CollectionStore,BouncyCastle.Crypto", "Org.BouncyCastle.X509.Store.X509CollectionStore");
            feature.AddKnownType("Org.BouncyCastle.X509.Store.X509CollectionStoreParameters,BouncyCastle.Crypto", "Org.BouncyCastle.X509.Store.X509CollectionStoreParameters");
            feature.AddKnownType("Org.BouncyCastle.X509.Store.X509CrlStoreSelector,BouncyCastle.Crypto", "Org.BouncyCastle.X509.Store.X509CrlStoreSelector");
            feature.AddKnownType("Org.BouncyCastle.X509.Store.X509StoreException,BouncyCastle.Crypto", "Org.BouncyCastle.X509.Store.X509StoreException");
            feature.AddKnownType("Org.BouncyCastle.X509.Store.X509StoreFactory,BouncyCastle.Crypto", "Org.BouncyCastle.X509.Store.X509StoreFactory");
            feature.AddKnownType("crypto.Security,BouncyCastle.Crypto", "crypto.Security");
            feature.AddKnownType("CAServer.CAServerDomainSharedModule,CAServer.Domain.Shared", "CAServer.CAServerDomainSharedModule");
            feature.AddKnownType("CAServer.DeviceType,CAServer.Domain.Shared", "CAServer.DeviceType");
            feature.AddKnownType("CAServer.NotifySendType,CAServer.Domain.Shared", "CAServer.NotifySendType");
            feature.AddKnownType("CAServer.StyleType,CAServer.Domain.Shared", "CAServer.StyleType");
            feature.AddKnownType("CAServer.Account.GuardianAccount,CAServer.Domain.Shared", "CAServer.Account.GuardianAccount");
            feature.AddKnownType("CAServer.Account.Guardian,CAServer.Domain.Shared", "CAServer.Account.Guardian");
            feature.AddKnownType("CAServer.Account.Verifier,CAServer.Domain.Shared", "CAServer.Account.Verifier");
            feature.AddKnownType("CAServer.Account.GuardianInfo,CAServer.Domain.Shared", "CAServer.Account.GuardianInfo");
            feature.AddKnownType("CAServer.Account.VerificationInfo,CAServer.Domain.Shared", "CAServer.Account.VerificationInfo");
            feature.AddKnownType("CAServer.Account.GuardianType,CAServer.Domain.Shared", "CAServer.Account.GuardianType");
            feature.AddKnownType("CAServer.Account.ManagerInfo,CAServer.Domain.Shared", "CAServer.Account.ManagerInfo");
            feature.AddKnownType("CAServer.Localization.CAServerResource,CAServer.Domain.Shared", "CAServer.Localization.CAServerResource");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,CAServer.Domain.Shared", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Interop+IpHlpApi+FIXED_INFO,DnsClient", "<global namespace>.FIXED_INFO");
            feature.AddKnownType("Interop+IpHlpApi+IP_ADDR_STRING,DnsClient", "<global namespace>.IP_ADDR_STRING");
            feature.AddKnownType("DnsClient.DnsDatagramReader,DnsClient", "DnsClient.DnsDatagramReader");
            feature.AddKnownType("DnsClient.DnsDatagramWriter,DnsClient", "DnsClient.DnsDatagramWriter");
            feature.AddKnownType("DnsClient.DnsMessageHandleType,DnsClient", "DnsClient.DnsMessageHandleType");
            feature.AddKnownType("DnsClient.DnsMessageHandler,DnsClient", "DnsClient.DnsMessageHandler");
            feature.AddKnownType("DnsClient.DnsOpCode,DnsClient", "DnsClient.DnsOpCode");
            feature.AddKnownType("DnsClient.ServiceHostEntry,DnsClient", "DnsClient.ServiceHostEntry");
            feature.AddKnownType("DnsClient.DnsQueryOptions,DnsClient", "DnsClient.DnsQueryOptions");
            feature.AddKnownType("DnsClient.DnsQueryAndServerOptions,DnsClient", "DnsClient.DnsQueryAndServerOptions");
            feature.AddKnownType("DnsClient.LookupClientOptions,DnsClient", "DnsClient.LookupClientOptions");
            feature.AddKnownType("DnsClient.DnsQuerySettings,DnsClient", "DnsClient.DnsQuerySettings");
            feature.AddKnownType("DnsClient.DnsQueryAndServerSettings,DnsClient", "DnsClient.DnsQueryAndServerSettings");
            feature.AddKnownType("DnsClient.LookupClientSettings,DnsClient", "DnsClient.LookupClientSettings");
            feature.AddKnownType("DnsClient.TruncatedQueryResponse,DnsClient", "DnsClient.TruncatedQueryResponse");
            feature.AddKnownType("DnsClient.DnsQueryResponse,DnsClient", "DnsClient.DnsQueryResponse");
            feature.AddKnownType("DnsClient.DnsQuestion,DnsClient", "DnsClient.DnsQuestion");
            feature.AddKnownType("DnsClient.DnsRecordFactory,DnsClient", "DnsClient.DnsRecordFactory");
            feature.AddKnownType("DnsClient.DnsRequestHeader,DnsClient", "DnsClient.DnsRequestHeader");
            feature.AddKnownType("DnsClient.DnsRequestMessage,DnsClient", "DnsClient.DnsRequestMessage");
            feature.AddKnownType("DnsClient.DnsHeaderResponseCode,DnsClient", "DnsClient.DnsHeaderResponseCode");
            feature.AddKnownType("DnsClient.DnsResponseCode,DnsClient", "DnsClient.DnsResponseCode");
            feature.AddKnownType("DnsClient.DnsResponseException,DnsClient", "DnsClient.DnsResponseException");
            feature.AddKnownType("DnsClient.DnsResponseHeader,DnsClient", "DnsClient.DnsResponseHeader");
            feature.AddKnownType("DnsClient.DnsResponseMessage,DnsClient", "DnsClient.DnsResponseMessage");
            feature.AddKnownType("DnsClient.DnsResponseParseException,DnsClient", "DnsClient.DnsResponseParseException");
            feature.AddKnownType("DnsClient.DnsString,DnsClient", "DnsClient.DnsString");
            feature.AddKnownType("DnsClient.DnsTcpMessageHandler,DnsClient", "DnsClient.DnsTcpMessageHandler");
            feature.AddKnownType("DnsClient.DnsTcpMessageHandler+ClientPool,DnsClient", "DnsClient.ClientPool");
            feature.AddKnownType("DnsClient.DnsTcpMessageHandler+ClientPool+ClientEntry,DnsClient", "DnsClient.DnsClient.ClientPool.ClientEntry");
            feature.AddKnownType("DnsClient.DnsUdpMessageHandler,DnsClient", "DnsClient.DnsUdpMessageHandler");
            feature.AddKnownType("DnsClient.DnsXidMismatchException,DnsClient", "DnsClient.DnsXidMismatchException");
            feature.AddKnownType("DnsClient.IDnsQuery,DnsClient", "DnsClient.IDnsQuery");
            feature.AddKnownType("DnsClient.IDnsQueryResponse,DnsClient", "DnsClient.IDnsQueryResponse");
            feature.AddKnownType("DnsClient.ILookupClient,DnsClient", "DnsClient.ILookupClient");
            feature.AddKnownType("DnsClient.DisposableIntPtr,DnsClient", "DnsClient.DisposableIntPtr");
            feature.AddKnownType("DnsClient.LookupClient,DnsClient", "DnsClient.LookupClient");
            feature.AddKnownType("DnsClient.LookupClient+HandleError,DnsClient", "DnsClient.HandleError");
            feature.AddKnownType("DnsClient.LookupClient+SkipWorker,DnsClient", "DnsClient.SkipWorker");
            feature.AddKnownType("DnsClient.LookupClientAudit,DnsClient", "DnsClient.LookupClientAudit");
            feature.AddKnownType("DnsClient.NameServer,DnsClient", "DnsClient.NameServer");
            feature.AddKnownType("DnsClient.QueryClass,DnsClient", "DnsClient.QueryClass");
            feature.AddKnownType("DnsClient.QueryType,DnsClient", "DnsClient.QueryType");
            feature.AddKnownType("DnsClient.ResponseCache,DnsClient", "DnsClient.ResponseCache");
            feature.AddKnownType("DnsClient.ResponseCache+ResponseEntry,DnsClient", "DnsClient.ResponseEntry");
            feature.AddKnownType("DnsClient.Tracing+TraceLoggerFactory,DnsClient", "DnsClient.TraceLoggerFactory");
            feature.AddKnownType("DnsClient.Tracing+TraceLoggerFactory+TraceLogger,DnsClient", "DnsClient.TraceLogger");
            feature.AddKnownType("DnsClient.Internal.ILogger,DnsClient", "DnsClient.Internal.ILogger");
            feature.AddKnownType("DnsClient.Internal.ILoggerFactory,DnsClient", "DnsClient.Internal.ILoggerFactory");
            feature.AddKnownType("DnsClient.Internal.LogLevel,DnsClient", "DnsClient.Internal.LogLevel");
            feature.AddKnownType("DnsClient.Internal.NullLoggerFactory,DnsClient", "DnsClient.Internal.NullLoggerFactory");
            feature.AddKnownType("DnsClient.Internal.NullLoggerFactory+NullLogger,DnsClient", "DnsClient.Internal.NullLogger");
            feature.AddKnownType("DnsClient.Internal.PooledBytes,DnsClient", "DnsClient.Internal.PooledBytes");
            feature.AddKnownType("DnsClient.Internal.StringBuilderObjectPool,DnsClient", "DnsClient.Internal.StringBuilderObjectPool");
            feature.AddKnownType("DnsClient.Internal.IPooledObjectPolicy`1,DnsClient", "DnsClient.Internal.IPooledObjectPolicy`1'1");
            feature.AddKnownType("DnsClient.Internal.DefaultObjectPool`1,DnsClient", "DnsClient.Internal.DefaultObjectPool`1'1");
            feature.AddKnownType("DnsClient.Internal.DefaultObjectPool`1+ObjectWrapper,DnsClient", "DnsClient.Internal.ObjectWrapper'1");
            feature.AddKnownType("DnsClient.Internal.DefaultObjectPoolProvider,DnsClient", "DnsClient.Internal.DefaultObjectPoolProvider");
            feature.AddKnownType("DnsClient.Internal.DefaultPooledObjectPolicy`1,DnsClient", "DnsClient.Internal.DefaultPooledObjectPolicy`1'1");
            feature.AddKnownType("DnsClient.Internal.ObjectPool`1,DnsClient", "DnsClient.Internal.ObjectPool`1'1");
            feature.AddKnownType("DnsClient.Internal.ObjectPoolProvider,DnsClient", "DnsClient.Internal.ObjectPoolProvider");
            feature.AddKnownType("DnsClient.Internal.PooledObjectPolicy`1,DnsClient", "DnsClient.Internal.PooledObjectPolicy`1'1");
            feature.AddKnownType("DnsClient.Internal.StringBuilderPooledObjectPolicy,DnsClient", "DnsClient.Internal.StringBuilderPooledObjectPolicy");
            feature.AddKnownType("DnsClient.Protocol.DnsHeaderFlag,DnsClient", "DnsClient.Protocol.DnsHeaderFlag");
            feature.AddKnownType("DnsClient.Protocol.AaaaRecord,DnsClient", "DnsClient.Protocol.AaaaRecord");
            feature.AddKnownType("DnsClient.Protocol.AddressRecord,DnsClient", "DnsClient.Protocol.AddressRecord");
            feature.AddKnownType("DnsClient.Protocol.AfsDbRecord,DnsClient", "DnsClient.Protocol.AfsDbRecord");
            feature.AddKnownType("DnsClient.Protocol.AfsType,DnsClient", "DnsClient.Protocol.AfsType");
            feature.AddKnownType("DnsClient.Protocol.ARecord,DnsClient", "DnsClient.Protocol.ARecord");
            feature.AddKnownType("DnsClient.Protocol.CaaRecord,DnsClient", "DnsClient.Protocol.CaaRecord");
            feature.AddKnownType("DnsClient.Protocol.CNameRecord,DnsClient", "DnsClient.Protocol.CNameRecord");
            feature.AddKnownType("DnsClient.Protocol.DnsKeyRecord,DnsClient", "DnsClient.Protocol.DnsKeyRecord");
            feature.AddKnownType("DnsClient.Protocol.DnsResourceRecord,DnsClient", "DnsClient.Protocol.DnsResourceRecord");
            feature.AddKnownType("DnsClient.Protocol.ResourceRecordInfo,DnsClient", "DnsClient.Protocol.ResourceRecordInfo");
            feature.AddKnownType("DnsClient.Protocol.DnsSecurityAlgorithm,DnsClient", "DnsClient.Protocol.DnsSecurityAlgorithm");
            feature.AddKnownType("DnsClient.Protocol.DsRecord,DnsClient", "DnsClient.Protocol.DsRecord");
            feature.AddKnownType("DnsClient.Protocol.EmptyRecord,DnsClient", "DnsClient.Protocol.EmptyRecord");
            feature.AddKnownType("DnsClient.Protocol.HInfoRecord,DnsClient", "DnsClient.Protocol.HInfoRecord");
            feature.AddKnownType("DnsClient.Protocol.MbRecord,DnsClient", "DnsClient.Protocol.MbRecord");
            feature.AddKnownType("DnsClient.Protocol.MgRecord,DnsClient", "DnsClient.Protocol.MgRecord");
            feature.AddKnownType("DnsClient.Protocol.MInfoRecord,DnsClient", "DnsClient.Protocol.MInfoRecord");
            feature.AddKnownType("DnsClient.Protocol.MrRecord,DnsClient", "DnsClient.Protocol.MrRecord");
            feature.AddKnownType("DnsClient.Protocol.MxRecord,DnsClient", "DnsClient.Protocol.MxRecord");
            feature.AddKnownType("DnsClient.Protocol.NAPtrRecord,DnsClient", "DnsClient.Protocol.NAPtrRecord");
            feature.AddKnownType("DnsClient.Protocol.NSec3ParamRecord,DnsClient", "DnsClient.Protocol.NSec3ParamRecord");
            feature.AddKnownType("DnsClient.Protocol.NSec3Record,DnsClient", "DnsClient.Protocol.NSec3Record");
            feature.AddKnownType("DnsClient.Protocol.NSecRecord,DnsClient", "DnsClient.Protocol.NSecRecord");
            feature.AddKnownType("DnsClient.Protocol.NsRecord,DnsClient", "DnsClient.Protocol.NsRecord");
            feature.AddKnownType("DnsClient.Protocol.NullRecord,DnsClient", "DnsClient.Protocol.NullRecord");
            feature.AddKnownType("DnsClient.Protocol.PtrRecord,DnsClient", "DnsClient.Protocol.PtrRecord");
            feature.AddKnownType("DnsClient.Protocol.ResourceRecordType,DnsClient", "DnsClient.Protocol.ResourceRecordType");
            feature.AddKnownType("DnsClient.Protocol.RpRecord,DnsClient", "DnsClient.Protocol.RpRecord");
            feature.AddKnownType("DnsClient.Protocol.RRSigRecord,DnsClient", "DnsClient.Protocol.RRSigRecord");
            feature.AddKnownType("DnsClient.Protocol.SoaRecord,DnsClient", "DnsClient.Protocol.SoaRecord");
            feature.AddKnownType("DnsClient.Protocol.SrvRecord,DnsClient", "DnsClient.Protocol.SrvRecord");
            feature.AddKnownType("DnsClient.Protocol.SshfpRecord,DnsClient", "DnsClient.Protocol.SshfpRecord");
            feature.AddKnownType("DnsClient.Protocol.SshfpAlgorithm,DnsClient", "DnsClient.Protocol.SshfpAlgorithm");
            feature.AddKnownType("DnsClient.Protocol.SshfpFingerprintType,DnsClient", "DnsClient.Protocol.SshfpFingerprintType");
            feature.AddKnownType("DnsClient.Protocol.TlsaRecord,DnsClient", "DnsClient.Protocol.TlsaRecord");
            feature.AddKnownType("DnsClient.Protocol.TlsaCertificateUsage,DnsClient", "DnsClient.Protocol.TlsaCertificateUsage");
            feature.AddKnownType("DnsClient.Protocol.TlsaSelector,DnsClient", "DnsClient.Protocol.TlsaSelector");
            feature.AddKnownType("DnsClient.Protocol.TlsaMatchingType,DnsClient", "DnsClient.Protocol.TlsaMatchingType");
            feature.AddKnownType("DnsClient.Protocol.TxtRecord,DnsClient", "DnsClient.Protocol.TxtRecord");
            feature.AddKnownType("DnsClient.Protocol.UnknownRecord,DnsClient", "DnsClient.Protocol.UnknownRecord");
            feature.AddKnownType("DnsClient.Protocol.UriRecord,DnsClient", "DnsClient.Protocol.UriRecord");
            feature.AddKnownType("DnsClient.Protocol.WksRecord,DnsClient", "DnsClient.Protocol.WksRecord");
            feature.AddKnownType("DnsClient.Protocol.Options.OptRecord,DnsClient", "DnsClient.Protocol.Options.OptRecord");
            feature.AddKnownType("DnsClient.Windows.IpHlpApi.FixedNetworkInformation,DnsClient", "DnsClient.Windows.IpHlpApi.FixedNetworkInformation");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,DnsClient", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.IO.RowConfigReader", "RowConfigReader");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("Elasticsearch.Net.ClusterStateMetric,Elasticsearch.Net", "Elasticsearch.Net.ClusterStateMetric");
            feature.AddKnownType("Elasticsearch.Net.IndicesStatsMetric,Elasticsearch.Net", "Elasticsearch.Net.IndicesStatsMetric");
            feature.AddKnownType("Elasticsearch.Net.NodesInfoMetric,Elasticsearch.Net", "Elasticsearch.Net.NodesInfoMetric");
            feature.AddKnownType("Elasticsearch.Net.NodesStatsMetric,Elasticsearch.Net", "Elasticsearch.Net.NodesStatsMetric");
            feature.AddKnownType("Elasticsearch.Net.NodesStatsIndexMetric,Elasticsearch.Net", "Elasticsearch.Net.NodesStatsIndexMetric");
            feature.AddKnownType("Elasticsearch.Net.NodesUsageMetric,Elasticsearch.Net", "Elasticsearch.Net.NodesUsageMetric");
            feature.AddKnownType("Elasticsearch.Net.WatcherStatsMetric,Elasticsearch.Net", "Elasticsearch.Net.WatcherStatsMetric");
            feature.AddKnownType("Elasticsearch.Net.DefaultOperator,Elasticsearch.Net", "Elasticsearch.Net.DefaultOperator");
            feature.AddKnownType("Elasticsearch.Net.ExpandWildcards,Elasticsearch.Net", "Elasticsearch.Net.ExpandWildcards");
            feature.AddKnownType("Elasticsearch.Net.SearchType,Elasticsearch.Net", "Elasticsearch.Net.SearchType");
            feature.AddKnownType("Elasticsearch.Net.SuggestMode,Elasticsearch.Net", "Elasticsearch.Net.SuggestMode");
            feature.AddKnownType("Elasticsearch.Net.Refresh,Elasticsearch.Net", "Elasticsearch.Net.Refresh");
            feature.AddKnownType("Elasticsearch.Net.Bytes,Elasticsearch.Net", "Elasticsearch.Net.Bytes");
            feature.AddKnownType("Elasticsearch.Net.Health,Elasticsearch.Net", "Elasticsearch.Net.Health");
            feature.AddKnownType("Elasticsearch.Net.Size,Elasticsearch.Net", "Elasticsearch.Net.Size");
            feature.AddKnownType("Elasticsearch.Net.Level,Elasticsearch.Net", "Elasticsearch.Net.Level");
            feature.AddKnownType("Elasticsearch.Net.WaitForEvents,Elasticsearch.Net", "Elasticsearch.Net.WaitForEvents");
            feature.AddKnownType("Elasticsearch.Net.WaitForStatus,Elasticsearch.Net", "Elasticsearch.Net.WaitForStatus");
            feature.AddKnownType("Elasticsearch.Net.ClusterRerouteMetric,Elasticsearch.Net", "Elasticsearch.Net.ClusterRerouteMetric");
            feature.AddKnownType("Elasticsearch.Net.VersionType,Elasticsearch.Net", "Elasticsearch.Net.VersionType");
            feature.AddKnownType("Elasticsearch.Net.Conflicts,Elasticsearch.Net", "Elasticsearch.Net.Conflicts");
            feature.AddKnownType("Elasticsearch.Net.OpType,Elasticsearch.Net", "Elasticsearch.Net.OpType");
            feature.AddKnownType("Elasticsearch.Net.IndicesShardStoresStatus,Elasticsearch.Net", "Elasticsearch.Net.IndicesShardStoresStatus");
            feature.AddKnownType("Elasticsearch.Net.Sort,Elasticsearch.Net", "Elasticsearch.Net.Sort");
            feature.AddKnownType("Elasticsearch.Net.ThreadType,Elasticsearch.Net", "Elasticsearch.Net.ThreadType");
            feature.AddKnownType("Elasticsearch.Net.GridType,Elasticsearch.Net", "Elasticsearch.Net.GridType");
            feature.AddKnownType("Elasticsearch.Net.GroupBy,Elasticsearch.Net", "Elasticsearch.Net.GroupBy");
            feature.AddKnownType("Elasticsearch.Net.TextStructureFindStructureFormat,Elasticsearch.Net", "Elasticsearch.Net.TextStructureFindStructureFormat");
            feature.AddKnownType("Elasticsearch.Net.KnownEnums+EnumDictionary,Elasticsearch.Net", "Elasticsearch.Net.EnumDictionary");
            feature.AddKnownType("Elasticsearch.Net.NativeMethods+Windows+RTL_OSVERSIONINFOEX,Elasticsearch.Net", "Elasticsearch.Net.RTL_OSVERSIONINFOEX");
            feature.AddKnownType("Elasticsearch.Net.IRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.IRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.RequestParameters`1,Elasticsearch.Net", "Elasticsearch.Net.RequestParameters`1'1");
            feature.AddKnownType("Elasticsearch.Net.BulkRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.BulkRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.ClearScrollRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.ClearScrollRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.ClosePointInTimeRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.ClosePointInTimeRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.CountRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.CountRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.CreateRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.CreateRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.DeleteRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.DeleteRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.DeleteByQueryRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.DeleteByQueryRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.DeleteByQueryRethrottleRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.DeleteByQueryRethrottleRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.DeleteScriptRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.DeleteScriptRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.DocumentExistsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.DocumentExistsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.SourceExistsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.SourceExistsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.ExplainRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.ExplainRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.FieldCapabilitiesRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.FieldCapabilitiesRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.GetRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.GetRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.GetScriptRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.GetScriptRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.GetScriptContextRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.GetScriptContextRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.GetScriptLanguagesRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.GetScriptLanguagesRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.SourceRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.SourceRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.IndexRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.IndexRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.RootNodeInfoRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.RootNodeInfoRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.MultiGetRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.MultiGetRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.MultiSearchRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.MultiSearchRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.MultiSearchTemplateRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.MultiSearchTemplateRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.MultiTermVectorsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.MultiTermVectorsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.OpenPointInTimeRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.OpenPointInTimeRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.PingRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.PingRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.PutScriptRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.PutScriptRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.RankEvalRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.RankEvalRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.ReindexOnServerRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.ReindexOnServerRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.ReindexRethrottleRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.ReindexRethrottleRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.RenderSearchTemplateRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.RenderSearchTemplateRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.ExecutePainlessScriptRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.ExecutePainlessScriptRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.ScrollRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.ScrollRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.SearchRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.SearchRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.SearchMvtRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.SearchMvtRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.SearchShardsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.SearchShardsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.SearchTemplateRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.SearchTemplateRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.TermsEnumRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.TermsEnumRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.TermVectorsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.TermVectorsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.UpdateRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.UpdateRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.UpdateByQueryRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.UpdateByQueryRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.UpdateByQueryRethrottleRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.UpdateByQueryRethrottleRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Audit,Elasticsearch.Net", "Elasticsearch.Net.Audit");
            feature.AddKnownType("Elasticsearch.Net.Auditable,Elasticsearch.Net", "Elasticsearch.Net.Auditable");
            feature.AddKnownType("Elasticsearch.Net.AuditEvent,Elasticsearch.Net", "Elasticsearch.Net.AuditEvent");
            feature.AddKnownType("Elasticsearch.Net.ConnectionConfiguration,Elasticsearch.Net", "Elasticsearch.Net.ConnectionConfiguration");
            feature.AddKnownType("Elasticsearch.Net.ConnectionConfiguration`1,Elasticsearch.Net", "Elasticsearch.Net.ConnectionConfiguration`1'1");
            feature.AddKnownType("Elasticsearch.Net.IConnectionConfigurationValues,Elasticsearch.Net", "Elasticsearch.Net.IConnectionConfigurationValues");
            feature.AddKnownType("Elasticsearch.Net.IRequestConfiguration,Elasticsearch.Net", "Elasticsearch.Net.IRequestConfiguration");
            feature.AddKnownType("Elasticsearch.Net.RequestConfiguration,Elasticsearch.Net", "Elasticsearch.Net.RequestConfiguration");
            feature.AddKnownType("Elasticsearch.Net.RequestConfigurationDescriptor,Elasticsearch.Net", "Elasticsearch.Net.RequestConfigurationDescriptor");
            feature.AddKnownType("Elasticsearch.Net.RequestMetaData,Elasticsearch.Net", "Elasticsearch.Net.RequestMetaData");
            feature.AddKnownType("Elasticsearch.Net.ApiKeyAuthenticationCredentials,Elasticsearch.Net", "Elasticsearch.Net.ApiKeyAuthenticationCredentials");
            feature.AddKnownType("Elasticsearch.Net.BasicAuthenticationCredentials,Elasticsearch.Net", "Elasticsearch.Net.BasicAuthenticationCredentials");
            feature.AddKnownType("Elasticsearch.Net.CloudConnectionPool,Elasticsearch.Net", "Elasticsearch.Net.CloudConnectionPool");
            feature.AddKnownType("Elasticsearch.Net.CloudConnectionPool+ParsedCloudId,Elasticsearch.Net", "Elasticsearch.Net.ParsedCloudId");
            feature.AddKnownType("Elasticsearch.Net.IConnectionPool,Elasticsearch.Net", "Elasticsearch.Net.IConnectionPool");
            feature.AddKnownType("Elasticsearch.Net.Node,Elasticsearch.Net", "Elasticsearch.Net.Node");
            feature.AddKnownType("Elasticsearch.Net.SingleNodeConnectionPool,Elasticsearch.Net", "Elasticsearch.Net.SingleNodeConnectionPool");
            feature.AddKnownType("Elasticsearch.Net.SniffingConnectionPool,Elasticsearch.Net", "Elasticsearch.Net.SniffingConnectionPool");
            feature.AddKnownType("Elasticsearch.Net.StaticConnectionPool,Elasticsearch.Net", "Elasticsearch.Net.StaticConnectionPool");
            feature.AddKnownType("Elasticsearch.Net.StickyConnectionPool,Elasticsearch.Net", "Elasticsearch.Net.StickyConnectionPool");
            feature.AddKnownType("Elasticsearch.Net.StickySniffingConnectionPool,Elasticsearch.Net", "Elasticsearch.Net.StickySniffingConnectionPool");
            feature.AddKnownType("Elasticsearch.Net.RequestDataContent,Elasticsearch.Net", "Elasticsearch.Net.RequestDataContent");
            feature.AddKnownType("Elasticsearch.Net.RequestDataContent+CompleteTaskOnCloseStream,Elasticsearch.Net", "Elasticsearch.Net.CompleteTaskOnCloseStream");
            feature.AddKnownType("Elasticsearch.Net.RequestDataContent+DelegatingStream,Elasticsearch.Net", "Elasticsearch.Net.DelegatingStream");
            feature.AddKnownType("Elasticsearch.Net.ActiveHandlerTrackingEntry,Elasticsearch.Net", "Elasticsearch.Net.ActiveHandlerTrackingEntry");
            feature.AddKnownType("Elasticsearch.Net.ExpiredHandlerTrackingEntry,Elasticsearch.Net", "Elasticsearch.Net.ExpiredHandlerTrackingEntry");
            feature.AddKnownType("Elasticsearch.Net.LifetimeTrackingHttpMessageHandler,Elasticsearch.Net", "Elasticsearch.Net.LifetimeTrackingHttpMessageHandler");
            feature.AddKnownType("Elasticsearch.Net.RequestDataHttpClientFactory,Elasticsearch.Net", "Elasticsearch.Net.RequestDataHttpClientFactory");
            feature.AddKnownType("Elasticsearch.Net.WebProxy,Elasticsearch.Net", "Elasticsearch.Net.WebProxy");
            feature.AddKnownType("Elasticsearch.Net.HttpConnection,Elasticsearch.Net", "Elasticsearch.Net.HttpConnection");
            feature.AddKnownType("Elasticsearch.Net.HttpMethod,Elasticsearch.Net", "Elasticsearch.Net.HttpMethod");
            feature.AddKnownType("Elasticsearch.Net.HttpWebRequestConnection,Elasticsearch.Net", "Elasticsearch.Net.HttpWebRequestConnection");
            feature.AddKnownType("Elasticsearch.Net.IConnection,Elasticsearch.Net", "Elasticsearch.Net.IConnection");
            feature.AddKnownType("Elasticsearch.Net.InMemoryHttpResponse,Elasticsearch.Net", "Elasticsearch.Net.InMemoryHttpResponse");
            feature.AddKnownType("Elasticsearch.Net.InMemoryConnection,Elasticsearch.Net", "Elasticsearch.Net.InMemoryConnection");
            feature.AddKnownType("Elasticsearch.Net.ClientVersionInfo,Elasticsearch.Net", "Elasticsearch.Net.ClientVersionInfo");
            feature.AddKnownType("Elasticsearch.Net.MetaDataHeader,Elasticsearch.Net", "Elasticsearch.Net.MetaDataHeader");
            feature.AddKnownType("Elasticsearch.Net.MetaHeaderProvider,Elasticsearch.Net", "Elasticsearch.Net.MetaHeaderProvider");
            feature.AddKnownType("Elasticsearch.Net.RuntimeVersionInfo,Elasticsearch.Net", "Elasticsearch.Net.RuntimeVersionInfo");
            feature.AddKnownType("Elasticsearch.Net.VersionInfo,Elasticsearch.Net", "Elasticsearch.Net.VersionInfo");
            feature.AddKnownType("Elasticsearch.Net.ElasticLowLevelClient,Elasticsearch.Net", "Elasticsearch.Net.ElasticLowLevelClient");
            feature.AddKnownType("Elasticsearch.Net.ElasticsearchUrlFormatter,Elasticsearch.Net", "Elasticsearch.Net.ElasticsearchUrlFormatter");
            feature.AddKnownType("Elasticsearch.Net.ElasticsearchClientException,Elasticsearch.Net", "Elasticsearch.Net.ElasticsearchClientException");
            feature.AddKnownType("Elasticsearch.Net.UnexpectedElasticsearchClientException,Elasticsearch.Net", "Elasticsearch.Net.UnexpectedElasticsearchClientException");
            feature.AddKnownType("Elasticsearch.Net.MapsApiAttribute,Elasticsearch.Net", "Elasticsearch.Net.MapsApiAttribute");
            feature.AddKnownType("Elasticsearch.Net.MapsApiAttribute+OrderedHashSet,Elasticsearch.Net", "Elasticsearch.Net.Elasticsearch.Net.MapsApiAttribute.OrderedHashSet");
            feature.AddKnownType("Elasticsearch.Net.IElasticLowLevelClient,Elasticsearch.Net", "Elasticsearch.Net.IElasticLowLevelClient");
            feature.AddKnownType("Elasticsearch.Net.NamespacedClientProxy,Elasticsearch.Net", "Elasticsearch.Net.NamespacedClientProxy");
            feature.AddKnownType("Elasticsearch.Net.DateTimeProvider,Elasticsearch.Net", "Elasticsearch.Net.DateTimeProvider");
            feature.AddKnownType("Elasticsearch.Net.IDateTimeProvider,Elasticsearch.Net", "Elasticsearch.Net.IDateTimeProvider");
            feature.AddKnownType("Elasticsearch.Net.IMemoryStreamFactory,Elasticsearch.Net", "Elasticsearch.Net.IMemoryStreamFactory");
            feature.AddKnownType("Elasticsearch.Net.IRequestPipelineFactory,Elasticsearch.Net", "Elasticsearch.Net.IRequestPipelineFactory");
            feature.AddKnownType("Elasticsearch.Net.RequestPipelineFactory,Elasticsearch.Net", "Elasticsearch.Net.RequestPipelineFactory");
            feature.AddKnownType("Elasticsearch.Net.MemoryStreamFactory,Elasticsearch.Net", "Elasticsearch.Net.MemoryStreamFactory");
            feature.AddKnownType("Elasticsearch.Net.RecyclableMemoryStream,Elasticsearch.Net", "Elasticsearch.Net.RecyclableMemoryStream");
            feature.AddKnownType("Elasticsearch.Net.RecyclableMemoryStream+BlockAndOffset,Elasticsearch.Net", "Elasticsearch.Net.BlockAndOffset");
            feature.AddKnownType("Elasticsearch.Net.RecyclableMemoryStreamFactory,Elasticsearch.Net", "Elasticsearch.Net.RecyclableMemoryStreamFactory");
            feature.AddKnownType("Elasticsearch.Net.RecyclableMemoryStreamManager,Elasticsearch.Net", "Elasticsearch.Net.RecyclableMemoryStreamManager");
            feature.AddKnownType("Elasticsearch.Net.RecyclableMemoryStreamManager+Events,Elasticsearch.Net", "Elasticsearch.Net.Elasticsearch.Net.RecyclableMemoryStreamManager.Events");
            feature.AddKnownType("Elasticsearch.Net.RecyclableMemoryStreamManager+Events+MemoryStreamBufferType,Elasticsearch.Net", "Elasticsearch.Net.Elasticsearch.Net.Elasticsearch.Net.RecyclableMemoryStreamManager.Events.MemoryStreamBufferType");
            feature.AddKnownType("Elasticsearch.Net.RecyclableMemoryStreamManager+Events+MemoryStreamDiscardReason,Elasticsearch.Net", "Elasticsearch.Net.Elasticsearch.Net.Elasticsearch.Net.RecyclableMemoryStreamManager.Events.MemoryStreamDiscardReason");
            feature.AddKnownType("Elasticsearch.Net.RecyclableMemoryStreamManager+ReportingMemoryStream,Elasticsearch.Net", "Elasticsearch.Net.ReportingMemoryStream");
            feature.AddKnownType("Elasticsearch.Net.DynamicDictionary,Elasticsearch.Net", "Elasticsearch.Net.DynamicDictionary");
            feature.AddKnownType("Elasticsearch.Net.DynamicResponse,Elasticsearch.Net", "Elasticsearch.Net.DynamicResponse");
            feature.AddKnownType("Elasticsearch.Net.DynamicValue,Elasticsearch.Net", "Elasticsearch.Net.DynamicValue");
            feature.AddKnownType("Elasticsearch.Net.ElasticsearchResponseBase,Elasticsearch.Net", "Elasticsearch.Net.ElasticsearchResponseBase");
            feature.AddKnownType("Elasticsearch.Net.ElasticsearchResponse`1,Elasticsearch.Net", "Elasticsearch.Net.ElasticsearchResponse`1'1");
            feature.AddKnownType("Elasticsearch.Net.ApiCallDetails,Elasticsearch.Net", "Elasticsearch.Net.ApiCallDetails");
            feature.AddKnownType("Elasticsearch.Net.IApiCallDetails,Elasticsearch.Net", "Elasticsearch.Net.IApiCallDetails");
            feature.AddKnownType("Elasticsearch.Net.IElasticsearchResponse,Elasticsearch.Net", "Elasticsearch.Net.IElasticsearchResponse");
            feature.AddKnownType("Elasticsearch.Net.BuildVersion,Elasticsearch.Net", "Elasticsearch.Net.BuildVersion");
            feature.AddKnownType("Elasticsearch.Net.RootResponse,Elasticsearch.Net", "Elasticsearch.Net.RootResponse");
            feature.AddKnownType("Elasticsearch.Net.Error,Elasticsearch.Net", "Elasticsearch.Net.Error");
            feature.AddKnownType("Elasticsearch.Net.ErrorFormatter,Elasticsearch.Net", "Elasticsearch.Net.ErrorFormatter");
            feature.AddKnownType("Elasticsearch.Net.ErrorCause,Elasticsearch.Net", "Elasticsearch.Net.ErrorCause");
            feature.AddKnownType("Elasticsearch.Net.ErrorCauseFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.ErrorCauseFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.ErrorCauseFormatter,Elasticsearch.Net", "Elasticsearch.Net.ErrorCauseFormatter");
            feature.AddKnownType("Elasticsearch.Net.ServerError,Elasticsearch.Net", "Elasticsearch.Net.ServerError");
            feature.AddKnownType("Elasticsearch.Net.ShardFailure,Elasticsearch.Net", "Elasticsearch.Net.ShardFailure");
            feature.AddKnownType("Elasticsearch.Net.SniffResponse,Elasticsearch.Net", "Elasticsearch.Net.SniffResponse");
            feature.AddKnownType("Elasticsearch.Net.NodeInfo,Elasticsearch.Net", "Elasticsearch.Net.NodeInfo");
            feature.AddKnownType("Elasticsearch.Net.NodeInfoHttp,Elasticsearch.Net", "Elasticsearch.Net.NodeInfoHttp");
            feature.AddKnownType("Elasticsearch.Net.BytesResponse,Elasticsearch.Net", "Elasticsearch.Net.BytesResponse");
            feature.AddKnownType("Elasticsearch.Net.StringResponse,Elasticsearch.Net", "Elasticsearch.Net.StringResponse");
            feature.AddKnownType("Elasticsearch.Net.VoidResponse,Elasticsearch.Net", "Elasticsearch.Net.VoidResponse");
            feature.AddKnownType("Elasticsearch.Net.VoidResponse+VoidBody,Elasticsearch.Net", "Elasticsearch.Net.Elasticsearch.Net.VoidResponse.VoidBody");
            feature.AddKnownType("Elasticsearch.Net.CustomResponseBuilderBase,Elasticsearch.Net", "Elasticsearch.Net.CustomResponseBuilderBase");
            feature.AddKnownType("Elasticsearch.Net.SerializerRegistrationInformation,Elasticsearch.Net", "Elasticsearch.Net.SerializerRegistrationInformation");
            feature.AddKnownType("Elasticsearch.Net.DiagnosticsSerializerProxy,Elasticsearch.Net", "Elasticsearch.Net.DiagnosticsSerializerProxy");
            feature.AddKnownType("Elasticsearch.Net.DynamicDictionaryFormatter,Elasticsearch.Net", "Elasticsearch.Net.DynamicDictionaryFormatter");
            feature.AddKnownType("Elasticsearch.Net.ElasticsearchNetEnumResolver,Elasticsearch.Net", "Elasticsearch.Net.ElasticsearchNetEnumResolver");
            feature.AddKnownType("Elasticsearch.Net.ExceptionFormatterResolver,Elasticsearch.Net", "Elasticsearch.Net.ExceptionFormatterResolver");
            feature.AddKnownType("Elasticsearch.Net.ExceptionFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.ExceptionFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.InterfaceReadOnlyCollectionSingleOrEnumerableFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.InterfaceReadOnlyCollectionSingleOrEnumerableFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.NullableStringIntFormatter,Elasticsearch.Net", "Elasticsearch.Net.NullableStringIntFormatter");
            feature.AddKnownType("Elasticsearch.Net.IElasticsearchSerializer,Elasticsearch.Net", "Elasticsearch.Net.IElasticsearchSerializer");
            feature.AddKnownType("Elasticsearch.Net.IInternalSerializer,Elasticsearch.Net", "Elasticsearch.Net.IInternalSerializer");
            feature.AddKnownType("Elasticsearch.Net.IUrlParameter,Elasticsearch.Net", "Elasticsearch.Net.IUrlParameter");
            feature.AddKnownType("Elasticsearch.Net.LowLevelRequestResponseSerializer,Elasticsearch.Net", "Elasticsearch.Net.LowLevelRequestResponseSerializer");
            feature.AddKnownType("Elasticsearch.Net.ElasticsearchNetFormatterResolver,Elasticsearch.Net", "Elasticsearch.Net.ElasticsearchNetFormatterResolver");
            feature.AddKnownType("Elasticsearch.Net.ElasticsearchNetFormatterResolver+InnerResolver,Elasticsearch.Net", "Elasticsearch.Net.InnerResolver");
            feature.AddKnownType("Elasticsearch.Net.SerializationFormatting,Elasticsearch.Net", "Elasticsearch.Net.SerializationFormatting");
            feature.AddKnownType("Elasticsearch.Net.StringEnumAttribute,Elasticsearch.Net", "Elasticsearch.Net.StringEnumAttribute");
            feature.AddKnownType("Elasticsearch.Net.ITransport`1,Elasticsearch.Net", "Elasticsearch.Net.ITransport`1'1");
            feature.AddKnownType("Elasticsearch.Net.IRequestPipeline,Elasticsearch.Net", "Elasticsearch.Net.IRequestPipeline");
            feature.AddKnownType("Elasticsearch.Net.PipelineException,Elasticsearch.Net", "Elasticsearch.Net.PipelineException");
            feature.AddKnownType("Elasticsearch.Net.PipelineFailure,Elasticsearch.Net", "Elasticsearch.Net.PipelineFailure");
            feature.AddKnownType("Elasticsearch.Net.ProductCheckStatus,Elasticsearch.Net", "Elasticsearch.Net.ProductCheckStatus");
            feature.AddKnownType("Elasticsearch.Net.RequestData,Elasticsearch.Net", "Elasticsearch.Net.RequestData");
            feature.AddKnownType("Elasticsearch.Net.RequestPipeline,Elasticsearch.Net", "Elasticsearch.Net.RequestPipeline");
            feature.AddKnownType("Elasticsearch.Net.UnsupportedProductException,Elasticsearch.Net", "Elasticsearch.Net.UnsupportedProductException");
            feature.AddKnownType("Elasticsearch.Net.IPostData`1,Elasticsearch.Net", "Elasticsearch.Net.IPostData`1'1");
            feature.AddKnownType("Elasticsearch.Net.PostType,Elasticsearch.Net", "Elasticsearch.Net.PostType");
            feature.AddKnownType("Elasticsearch.Net.PostData,Elasticsearch.Net", "Elasticsearch.Net.PostData");
            feature.AddKnownType("Elasticsearch.Net.PostData`1,Elasticsearch.Net", "Elasticsearch.Net.PostData`1'1");
            feature.AddKnownType("Elasticsearch.Net.SerializableData`1,Elasticsearch.Net", "Elasticsearch.Net.SerializableData`1'1");
            feature.AddKnownType("Elasticsearch.Net.StreamableData`1,Elasticsearch.Net", "Elasticsearch.Net.StreamableData`1'1");
            feature.AddKnownType("Elasticsearch.Net.Transport`1,Elasticsearch.Net", "Elasticsearch.Net.Transport`1'1");
            feature.AddKnownType("Elasticsearch.Net.Diagnostics.AuditDiagnosticObserver,Elasticsearch.Net", "Elasticsearch.Net.Diagnostics.AuditDiagnosticObserver");
            feature.AddKnownType("Elasticsearch.Net.Diagnostics.Diagnostic`1,Elasticsearch.Net", "Elasticsearch.Net.Diagnostics.Diagnostic`1'1");
            feature.AddKnownType("Elasticsearch.Net.Diagnostics.Diagnostic`2,Elasticsearch.Net", "Elasticsearch.Net.Diagnostics.Diagnostic`2'2");
            feature.AddKnownType("Elasticsearch.Net.Diagnostics.DiagnosticSources+EmptyDisposable,Elasticsearch.Net", "Elasticsearch.Net.Diagnostics.EmptyDisposable");
            feature.AddKnownType("Elasticsearch.Net.Diagnostics.DiagnosticSources+IDiagnosticsKeys,Elasticsearch.Net", "Elasticsearch.Net.Diagnostics.IDiagnosticsKeys");
            feature.AddKnownType("Elasticsearch.Net.Diagnostics.DiagnosticSources+HttpConnectionDiagnosticKeys,Elasticsearch.Net", "Elasticsearch.Net.Diagnostics.Elasticsearch.Net.Diagnostics.DiagnosticSources.HttpConnectionDiagnosticKeys");
            feature.AddKnownType("Elasticsearch.Net.Diagnostics.DiagnosticSources+SerializerDiagnosticKeys,Elasticsearch.Net", "Elasticsearch.Net.Diagnostics.Elasticsearch.Net.Diagnostics.DiagnosticSources.SerializerDiagnosticKeys");
            feature.AddKnownType("Elasticsearch.Net.Diagnostics.DiagnosticSources+RequestPipelineDiagnosticKeys,Elasticsearch.Net", "Elasticsearch.Net.Diagnostics.Elasticsearch.Net.Diagnostics.DiagnosticSources.RequestPipelineDiagnosticKeys");
            feature.AddKnownType("Elasticsearch.Net.Diagnostics.DiagnosticSources+AuditDiagnosticKeys,Elasticsearch.Net", "Elasticsearch.Net.Diagnostics.Elasticsearch.Net.Diagnostics.DiagnosticSources.AuditDiagnosticKeys");
            feature.AddKnownType("Elasticsearch.Net.Diagnostics.HttpConnectionDiagnosticObserver,Elasticsearch.Net", "Elasticsearch.Net.Diagnostics.HttpConnectionDiagnosticObserver");
            feature.AddKnownType("Elasticsearch.Net.Diagnostics.RequestPipelineDiagnosticObserver,Elasticsearch.Net", "Elasticsearch.Net.Diagnostics.RequestPipelineDiagnosticObserver");
            feature.AddKnownType("Elasticsearch.Net.Diagnostics.SerializerDiagnosticObserver,Elasticsearch.Net", "Elasticsearch.Net.Diagnostics.SerializerDiagnosticObserver");
            feature.AddKnownType("Elasticsearch.Net.Diagnostics.ThreadPoolStats,Elasticsearch.Net", "Elasticsearch.Net.Diagnostics.ThreadPoolStats");
            feature.AddKnownType("Elasticsearch.Net.Diagnostics.ThreadPoolStatistics,Elasticsearch.Net", "Elasticsearch.Net.Diagnostics.ThreadPoolStatistics");
            feature.AddKnownType("Elasticsearch.Net.Diagnostics.TypedDiagnosticObserverBase`1,Elasticsearch.Net", "Elasticsearch.Net.Diagnostics.TypedDiagnosticObserverBase`1'1");
            feature.AddKnownType("Elasticsearch.Net.Diagnostics.TypedDiagnosticObserverBase`2,Elasticsearch.Net", "Elasticsearch.Net.Diagnostics.TypedDiagnosticObserverBase`2'2");
            feature.AddKnownType("Elasticsearch.Net.Specification.AsyncSearchApi.AsyncSearchDeleteRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.AsyncSearchApi.AsyncSearchDeleteRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.AsyncSearchApi.AsyncSearchGetRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.AsyncSearchApi.AsyncSearchGetRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.AsyncSearchApi.AsyncSearchStatusRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.AsyncSearchApi.AsyncSearchStatusRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.AsyncSearchApi.AsyncSearchSubmitRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.AsyncSearchApi.AsyncSearchSubmitRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.AsyncSearchApi.LowLevelAsyncSearchNamespace,Elasticsearch.Net", "Elasticsearch.Net.Specification.AsyncSearchApi.LowLevelAsyncSearchNamespace");
            feature.AddKnownType("Elasticsearch.Net.Specification.AutoscalingApi.DeleteAutoscalingPolicyRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.AutoscalingApi.DeleteAutoscalingPolicyRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.AutoscalingApi.GetAutoscalingCapacityRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.AutoscalingApi.GetAutoscalingCapacityRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.AutoscalingApi.GetAutoscalingPolicyRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.AutoscalingApi.GetAutoscalingPolicyRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.AutoscalingApi.PutAutoscalingPolicyRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.AutoscalingApi.PutAutoscalingPolicyRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.AutoscalingApi.LowLevelAutoscalingNamespace,Elasticsearch.Net", "Elasticsearch.Net.Specification.AutoscalingApi.LowLevelAutoscalingNamespace");
            feature.AddKnownType("Elasticsearch.Net.Specification.CatApi.CatAliasesRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CatApi.CatAliasesRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CatApi.CatAllocationRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CatApi.CatAllocationRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CatApi.CatCountRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CatApi.CatCountRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CatApi.CatFielddataRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CatApi.CatFielddataRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CatApi.CatHealthRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CatApi.CatHealthRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CatApi.CatHelpRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CatApi.CatHelpRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CatApi.CatIndicesRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CatApi.CatIndicesRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CatApi.CatMasterRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CatApi.CatMasterRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CatApi.CatDataFrameAnalyticsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CatApi.CatDataFrameAnalyticsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CatApi.CatDatafeedsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CatApi.CatDatafeedsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CatApi.CatJobsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CatApi.CatJobsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CatApi.CatTrainedModelsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CatApi.CatTrainedModelsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CatApi.CatNodeAttributesRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CatApi.CatNodeAttributesRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CatApi.CatNodesRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CatApi.CatNodesRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CatApi.CatPendingTasksRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CatApi.CatPendingTasksRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CatApi.CatPluginsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CatApi.CatPluginsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CatApi.CatRecoveryRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CatApi.CatRecoveryRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CatApi.CatRepositoriesRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CatApi.CatRepositoriesRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CatApi.CatSegmentsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CatApi.CatSegmentsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CatApi.CatShardsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CatApi.CatShardsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CatApi.CatSnapshotsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CatApi.CatSnapshotsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CatApi.CatTasksRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CatApi.CatTasksRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CatApi.CatTemplatesRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CatApi.CatTemplatesRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CatApi.CatThreadPoolRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CatApi.CatThreadPoolRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CatApi.CatTransformsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CatApi.CatTransformsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CatApi.LowLevelCatNamespace,Elasticsearch.Net", "Elasticsearch.Net.Specification.CatApi.LowLevelCatNamespace");
            feature.AddKnownType("Elasticsearch.Net.Specification.ClusterApi.ClusterAllocationExplainRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.ClusterApi.ClusterAllocationExplainRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.ClusterApi.DeleteComponentTemplateRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.ClusterApi.DeleteComponentTemplateRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.ClusterApi.DeleteVotingConfigExclusionsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.ClusterApi.DeleteVotingConfigExclusionsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.ClusterApi.ComponentTemplateExistsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.ClusterApi.ComponentTemplateExistsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.ClusterApi.GetComponentTemplateRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.ClusterApi.GetComponentTemplateRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.ClusterApi.ClusterGetSettingsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.ClusterApi.ClusterGetSettingsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.ClusterApi.ClusterHealthRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.ClusterApi.ClusterHealthRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.ClusterApi.ClusterPendingTasksRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.ClusterApi.ClusterPendingTasksRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.ClusterApi.PostVotingConfigExclusionsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.ClusterApi.PostVotingConfigExclusionsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.ClusterApi.PutComponentTemplateRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.ClusterApi.PutComponentTemplateRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.ClusterApi.ClusterPutSettingsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.ClusterApi.ClusterPutSettingsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.ClusterApi.RemoteInfoRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.ClusterApi.RemoteInfoRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.ClusterApi.ClusterRerouteRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.ClusterApi.ClusterRerouteRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.ClusterApi.ClusterStateRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.ClusterApi.ClusterStateRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.ClusterApi.ClusterStatsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.ClusterApi.ClusterStatsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.ClusterApi.LowLevelClusterNamespace,Elasticsearch.Net", "Elasticsearch.Net.Specification.ClusterApi.LowLevelClusterNamespace");
            feature.AddKnownType("Elasticsearch.Net.Specification.CrossClusterReplicationApi.DeleteAutoFollowPatternRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CrossClusterReplicationApi.DeleteAutoFollowPatternRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CrossClusterReplicationApi.CreateFollowIndexRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CrossClusterReplicationApi.CreateFollowIndexRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CrossClusterReplicationApi.FollowInfoRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CrossClusterReplicationApi.FollowInfoRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CrossClusterReplicationApi.FollowIndexStatsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CrossClusterReplicationApi.FollowIndexStatsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CrossClusterReplicationApi.ForgetFollowerIndexRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CrossClusterReplicationApi.ForgetFollowerIndexRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CrossClusterReplicationApi.GetAutoFollowPatternRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CrossClusterReplicationApi.GetAutoFollowPatternRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CrossClusterReplicationApi.PauseAutoFollowPatternRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CrossClusterReplicationApi.PauseAutoFollowPatternRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CrossClusterReplicationApi.PauseFollowIndexRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CrossClusterReplicationApi.PauseFollowIndexRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CrossClusterReplicationApi.CreateAutoFollowPatternRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CrossClusterReplicationApi.CreateAutoFollowPatternRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CrossClusterReplicationApi.ResumeAutoFollowPatternRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CrossClusterReplicationApi.ResumeAutoFollowPatternRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CrossClusterReplicationApi.ResumeFollowIndexRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CrossClusterReplicationApi.ResumeFollowIndexRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CrossClusterReplicationApi.CcrStatsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CrossClusterReplicationApi.CcrStatsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CrossClusterReplicationApi.UnfollowIndexRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.CrossClusterReplicationApi.UnfollowIndexRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.CrossClusterReplicationApi.LowLevelCrossClusterReplicationNamespace,Elasticsearch.Net", "Elasticsearch.Net.Specification.CrossClusterReplicationApi.LowLevelCrossClusterReplicationNamespace");
            feature.AddKnownType("Elasticsearch.Net.Specification.DanglingIndicesApi.DeleteDanglingIndexRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.DanglingIndicesApi.DeleteDanglingIndexRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.DanglingIndicesApi.ImportDanglingIndexRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.DanglingIndicesApi.ImportDanglingIndexRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.DanglingIndicesApi.ListDanglingIndicesRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.DanglingIndicesApi.ListDanglingIndicesRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.DanglingIndicesApi.LowLevelDanglingIndicesNamespace,Elasticsearch.Net", "Elasticsearch.Net.Specification.DanglingIndicesApi.LowLevelDanglingIndicesNamespace");
            feature.AddKnownType("Elasticsearch.Net.Specification.EnrichApi.DeleteEnrichPolicyRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.EnrichApi.DeleteEnrichPolicyRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.EnrichApi.ExecuteEnrichPolicyRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.EnrichApi.ExecuteEnrichPolicyRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.EnrichApi.GetEnrichPolicyRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.EnrichApi.GetEnrichPolicyRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.EnrichApi.PutEnrichPolicyRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.EnrichApi.PutEnrichPolicyRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.EnrichApi.EnrichStatsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.EnrichApi.EnrichStatsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.EnrichApi.LowLevelEnrichNamespace,Elasticsearch.Net", "Elasticsearch.Net.Specification.EnrichApi.LowLevelEnrichNamespace");
            feature.AddKnownType("Elasticsearch.Net.Specification.EqlApi.EqlDeleteRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.EqlApi.EqlDeleteRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.EqlApi.EqlGetRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.EqlApi.EqlGetRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.EqlApi.EqlSearchStatusRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.EqlApi.EqlSearchStatusRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.EqlApi.EqlSearchRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.EqlApi.EqlSearchRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.EqlApi.LowLevelEqlNamespace,Elasticsearch.Net", "Elasticsearch.Net.Specification.EqlApi.LowLevelEqlNamespace");
            feature.AddKnownType("Elasticsearch.Net.Specification.FeaturesApi.GetFeaturesRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.FeaturesApi.GetFeaturesRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.FeaturesApi.ResetFeaturesRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.FeaturesApi.ResetFeaturesRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.FeaturesApi.LowLevelFeaturesNamespace,Elasticsearch.Net", "Elasticsearch.Net.Specification.FeaturesApi.LowLevelFeaturesNamespace");
            feature.AddKnownType("Elasticsearch.Net.Specification.FleetApi.GlobalCheckpointsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.FleetApi.GlobalCheckpointsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.FleetApi.MsearchRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.FleetApi.MsearchRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.FleetApi.SearchRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.FleetApi.SearchRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.FleetApi.LowLevelFleetNamespace,Elasticsearch.Net", "Elasticsearch.Net.Specification.FleetApi.LowLevelFleetNamespace");
            feature.AddKnownType("Elasticsearch.Net.Specification.GraphApi.GraphExploreRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.GraphApi.GraphExploreRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.GraphApi.LowLevelGraphNamespace,Elasticsearch.Net", "Elasticsearch.Net.Specification.GraphApi.LowLevelGraphNamespace");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndexLifecycleManagementApi.DeleteLifecycleRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndexLifecycleManagementApi.DeleteLifecycleRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndexLifecycleManagementApi.ExplainLifecycleRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndexLifecycleManagementApi.ExplainLifecycleRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndexLifecycleManagementApi.GetLifecycleRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndexLifecycleManagementApi.GetLifecycleRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndexLifecycleManagementApi.GetIlmStatusRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndexLifecycleManagementApi.GetIlmStatusRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndexLifecycleManagementApi.MigrateToDataTiersRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndexLifecycleManagementApi.MigrateToDataTiersRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndexLifecycleManagementApi.MoveToStepRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndexLifecycleManagementApi.MoveToStepRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndexLifecycleManagementApi.PutLifecycleRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndexLifecycleManagementApi.PutLifecycleRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndexLifecycleManagementApi.RemovePolicyRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndexLifecycleManagementApi.RemovePolicyRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndexLifecycleManagementApi.RetryIlmRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndexLifecycleManagementApi.RetryIlmRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndexLifecycleManagementApi.StartIlmRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndexLifecycleManagementApi.StartIlmRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndexLifecycleManagementApi.StopIlmRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndexLifecycleManagementApi.StopIlmRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndexLifecycleManagementApi.LowLevelIndexLifecycleManagementNamespace,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndexLifecycleManagementApi.LowLevelIndexLifecycleManagementNamespace");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.AddIndexBlockRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.AddIndexBlockRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.AnalyzeRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.AnalyzeRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.ClearCacheRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.ClearCacheRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.CloneIndexRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.CloneIndexRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.CloseIndexRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.CloseIndexRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.CreateIndexRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.CreateIndexRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.CreateDataStreamRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.CreateDataStreamRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.DataStreamsStatsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.DataStreamsStatsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.DeleteIndexRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.DeleteIndexRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.DeleteAliasRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.DeleteAliasRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.DeleteDataStreamRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.DeleteDataStreamRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.DeleteIndexTemplateV2RequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.DeleteIndexTemplateV2RequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.DeleteIndexTemplateRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.DeleteIndexTemplateRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.DiskUsageRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.DiskUsageRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.IndexExistsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.IndexExistsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.AliasExistsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.AliasExistsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.IndexTemplateV2ExistsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.IndexTemplateV2ExistsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.IndexTemplateExistsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.IndexTemplateExistsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.TypeExistsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.TypeExistsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.FieldUsageStatsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.FieldUsageStatsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.FlushRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.FlushRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.SyncedFlushRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.SyncedFlushRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.ForceMergeRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.ForceMergeRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.FreezeIndexRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.FreezeIndexRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.GetIndexRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.GetIndexRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.GetAliasRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.GetAliasRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.GetDataStreamRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.GetDataStreamRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.GetFieldMappingRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.GetFieldMappingRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.GetIndexTemplateV2RequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.GetIndexTemplateV2RequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.GetMappingRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.GetMappingRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.GetIndexSettingsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.GetIndexSettingsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.GetIndexTemplateRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.GetIndexTemplateRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.MigrateToDataStreamRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.MigrateToDataStreamRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.ModifyDataStreamRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.ModifyDataStreamRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.OpenIndexRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.OpenIndexRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.PromoteDataStreamRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.PromoteDataStreamRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.PutAliasRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.PutAliasRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.PutIndexTemplateV2RequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.PutIndexTemplateV2RequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.PutMappingRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.PutMappingRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.UpdateIndexSettingsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.UpdateIndexSettingsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.PutIndexTemplateRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.PutIndexTemplateRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.RecoveryStatusRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.RecoveryStatusRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.RefreshRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.RefreshRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.ReloadSearchAnalyzersRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.ReloadSearchAnalyzersRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.ResolveIndexRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.ResolveIndexRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.RolloverIndexRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.RolloverIndexRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.SegmentsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.SegmentsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.IndicesShardStoresRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.IndicesShardStoresRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.ShrinkIndexRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.ShrinkIndexRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.SimulateIndexTemplateRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.SimulateIndexTemplateRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.SimulateTemplateRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.SimulateTemplateRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.SplitIndexRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.SplitIndexRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.IndicesStatsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.IndicesStatsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.UnfreezeIndexRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.UnfreezeIndexRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.BulkAliasRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.BulkAliasRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.ValidateQueryRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.ValidateQueryRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IndicesApi.LowLevelIndicesNamespace,Elasticsearch.Net", "Elasticsearch.Net.Specification.IndicesApi.LowLevelIndicesNamespace");
            feature.AddKnownType("Elasticsearch.Net.Specification.IngestApi.DeletePipelineRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IngestApi.DeletePipelineRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IngestApi.GeoIpStatsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IngestApi.GeoIpStatsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IngestApi.GetPipelineRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IngestApi.GetPipelineRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IngestApi.GrokProcessorPatternsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IngestApi.GrokProcessorPatternsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IngestApi.PutPipelineRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IngestApi.PutPipelineRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IngestApi.SimulatePipelineRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.IngestApi.SimulatePipelineRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.IngestApi.LowLevelIngestNamespace,Elasticsearch.Net", "Elasticsearch.Net.Specification.IngestApi.LowLevelIngestNamespace");
            feature.AddKnownType("Elasticsearch.Net.Specification.LicenseApi.DeleteLicenseRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.LicenseApi.DeleteLicenseRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.LicenseApi.GetLicenseRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.LicenseApi.GetLicenseRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.LicenseApi.GetBasicLicenseStatusRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.LicenseApi.GetBasicLicenseStatusRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.LicenseApi.GetTrialLicenseStatusRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.LicenseApi.GetTrialLicenseStatusRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.LicenseApi.PostLicenseRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.LicenseApi.PostLicenseRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.LicenseApi.StartBasicLicenseRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.LicenseApi.StartBasicLicenseRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.LicenseApi.StartTrialLicenseRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.LicenseApi.StartTrialLicenseRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.LicenseApi.LowLevelLicenseNamespace,Elasticsearch.Net", "Elasticsearch.Net.Specification.LicenseApi.LowLevelLicenseNamespace");
            feature.AddKnownType("Elasticsearch.Net.Specification.LogstashApi.DeletePipelineRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.LogstashApi.DeletePipelineRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.LogstashApi.GetPipelineRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.LogstashApi.GetPipelineRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.LogstashApi.PutPipelineRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.LogstashApi.PutPipelineRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.LogstashApi.LowLevelLogstashNamespace,Elasticsearch.Net", "Elasticsearch.Net.Specification.LogstashApi.LowLevelLogstashNamespace");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.CloseJobRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.CloseJobRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.DeleteCalendarRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.DeleteCalendarRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.DeleteCalendarEventRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.DeleteCalendarEventRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.DeleteCalendarJobRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.DeleteCalendarJobRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.DeleteDataFrameAnalyticsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.DeleteDataFrameAnalyticsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.DeleteDatafeedRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.DeleteDatafeedRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.DeleteExpiredDataRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.DeleteExpiredDataRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.DeleteFilterRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.DeleteFilterRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.DeleteForecastRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.DeleteForecastRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.DeleteJobRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.DeleteJobRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.DeleteModelSnapshotRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.DeleteModelSnapshotRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.DeleteTrainedModelRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.DeleteTrainedModelRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.DeleteTrainedModelAliasRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.DeleteTrainedModelAliasRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.EstimateModelMemoryRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.EstimateModelMemoryRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.EvaluateDataFrameRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.EvaluateDataFrameRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.ExplainDataFrameAnalyticsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.ExplainDataFrameAnalyticsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.FlushJobRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.FlushJobRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.ForecastJobRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.ForecastJobRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.GetBucketsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.GetBucketsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.GetCalendarEventsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.GetCalendarEventsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.GetCalendarsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.GetCalendarsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.GetCategoriesRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.GetCategoriesRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.GetDataFrameAnalyticsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.GetDataFrameAnalyticsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.GetDataFrameAnalyticsStatsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.GetDataFrameAnalyticsStatsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.GetDatafeedStatsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.GetDatafeedStatsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.GetDatafeedsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.GetDatafeedsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.GetFiltersRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.GetFiltersRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.GetInfluencersRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.GetInfluencersRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.GetJobStatsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.GetJobStatsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.GetJobsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.GetJobsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.GetModelSnapshotUpgradeStatsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.GetModelSnapshotUpgradeStatsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.GetModelSnapshotsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.GetModelSnapshotsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.GetOverallBucketsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.GetOverallBucketsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.GetAnomalyRecordsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.GetAnomalyRecordsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.GetTrainedModelsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.GetTrainedModelsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.GetTrainedModelsStatsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.GetTrainedModelsStatsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.MachineLearningInfoRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.MachineLearningInfoRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.OpenJobRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.OpenJobRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.PostCalendarEventsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.PostCalendarEventsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.PostJobDataRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.PostJobDataRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.PreviewDataFrameAnalyticsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.PreviewDataFrameAnalyticsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.PreviewDatafeedRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.PreviewDatafeedRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.PutCalendarRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.PutCalendarRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.PutCalendarJobRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.PutCalendarJobRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.PutDataFrameAnalyticsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.PutDataFrameAnalyticsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.PutDatafeedRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.PutDatafeedRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.PutFilterRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.PutFilterRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.PutJobRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.PutJobRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.PutTrainedModelRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.PutTrainedModelRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.PutTrainedModelAliasRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.PutTrainedModelAliasRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.ResetJobRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.ResetJobRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.RevertModelSnapshotRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.RevertModelSnapshotRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.SetUpgradeModeRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.SetUpgradeModeRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.StartDataFrameAnalyticsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.StartDataFrameAnalyticsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.StartDatafeedRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.StartDatafeedRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.StopDataFrameAnalyticsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.StopDataFrameAnalyticsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.StopDatafeedRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.StopDatafeedRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.UpdateDataFrameAnalyticsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.UpdateDataFrameAnalyticsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.UpdateDatafeedRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.UpdateDatafeedRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.UpdateFilterRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.UpdateFilterRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.UpdateJobRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.UpdateJobRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.UpdateModelSnapshotRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.UpdateModelSnapshotRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.UpgradeJobSnapshotRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.UpgradeJobSnapshotRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.ValidateJobRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.ValidateJobRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.ValidateDetectorRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.ValidateDetectorRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MachineLearningApi.LowLevelMachineLearningNamespace,Elasticsearch.Net", "Elasticsearch.Net.Specification.MachineLearningApi.LowLevelMachineLearningNamespace");
            feature.AddKnownType("Elasticsearch.Net.Specification.MigrationApi.DeprecationInfoRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MigrationApi.DeprecationInfoRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MigrationApi.GetFeatureUpgradeStatusRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MigrationApi.GetFeatureUpgradeStatusRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MigrationApi.PostFeatureUpgradeRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.MigrationApi.PostFeatureUpgradeRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.MigrationApi.LowLevelMigrationNamespace,Elasticsearch.Net", "Elasticsearch.Net.Specification.MigrationApi.LowLevelMigrationNamespace");
            feature.AddKnownType("Elasticsearch.Net.Specification.NodesApi.ClearRepositoriesMeteringArchiveRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.NodesApi.ClearRepositoriesMeteringArchiveRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.NodesApi.GetRepositoriesMeteringInfoRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.NodesApi.GetRepositoriesMeteringInfoRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.NodesApi.NodesHotThreadsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.NodesApi.NodesHotThreadsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.NodesApi.NodesInfoRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.NodesApi.NodesInfoRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.NodesApi.ReloadSecureSettingsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.NodesApi.ReloadSecureSettingsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.NodesApi.NodesStatsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.NodesApi.NodesStatsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.NodesApi.NodesUsageRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.NodesApi.NodesUsageRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.NodesApi.LowLevelNodesNamespace,Elasticsearch.Net", "Elasticsearch.Net.Specification.NodesApi.LowLevelNodesNamespace");
            feature.AddKnownType("Elasticsearch.Net.Specification.RollupApi.DeleteRollupJobRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.RollupApi.DeleteRollupJobRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.RollupApi.GetRollupJobRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.RollupApi.GetRollupJobRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.RollupApi.GetRollupCapabilitiesRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.RollupApi.GetRollupCapabilitiesRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.RollupApi.GetRollupIndexCapabilitiesRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.RollupApi.GetRollupIndexCapabilitiesRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.RollupApi.CreateRollupJobRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.RollupApi.CreateRollupJobRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.RollupApi.RollupRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.RollupApi.RollupRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.RollupApi.RollupSearchRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.RollupApi.RollupSearchRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.RollupApi.StartRollupJobRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.RollupApi.StartRollupJobRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.RollupApi.StopRollupJobRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.RollupApi.StopRollupJobRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.RollupApi.LowLevelRollupNamespace,Elasticsearch.Net", "Elasticsearch.Net.Specification.RollupApi.LowLevelRollupNamespace");
            feature.AddKnownType("Elasticsearch.Net.Specification.SearchableSnapshotsApi.CacheStatsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SearchableSnapshotsApi.CacheStatsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SearchableSnapshotsApi.ClearCacheRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SearchableSnapshotsApi.ClearCacheRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SearchableSnapshotsApi.MountRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SearchableSnapshotsApi.MountRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SearchableSnapshotsApi.RepositoryStatsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SearchableSnapshotsApi.RepositoryStatsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SearchableSnapshotsApi.StatsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SearchableSnapshotsApi.StatsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SearchableSnapshotsApi.LowLevelSearchableSnapshotsNamespace,Elasticsearch.Net", "Elasticsearch.Net.Specification.SearchableSnapshotsApi.LowLevelSearchableSnapshotsNamespace");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.AuthenticateRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.AuthenticateRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.ChangePasswordRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.ChangePasswordRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.ClearApiKeyCacheRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.ClearApiKeyCacheRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.ClearCachedPrivilegesRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.ClearCachedPrivilegesRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.ClearCachedRealmsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.ClearCachedRealmsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.ClearCachedRolesRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.ClearCachedRolesRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.ClearCachedServiceTokensRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.ClearCachedServiceTokensRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.CreateApiKeyRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.CreateApiKeyRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.CreateServiceTokenRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.CreateServiceTokenRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.DeletePrivilegesRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.DeletePrivilegesRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.DeleteRoleRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.DeleteRoleRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.DeleteRoleMappingRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.DeleteRoleMappingRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.DeleteServiceTokenRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.DeleteServiceTokenRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.DeleteUserRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.DeleteUserRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.DisableUserRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.DisableUserRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.EnableUserRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.EnableUserRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.GetApiKeyRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.GetApiKeyRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.GetBuiltinPrivilegesRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.GetBuiltinPrivilegesRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.GetPrivilegesRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.GetPrivilegesRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.GetRoleRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.GetRoleRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.GetRoleMappingRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.GetRoleMappingRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.GetServiceAccountsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.GetServiceAccountsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.GetServiceCredentialsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.GetServiceCredentialsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.GetUserAccessTokenRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.GetUserAccessTokenRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.GetUserRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.GetUserRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.GetUserPrivilegesRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.GetUserPrivilegesRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.GrantApiKeyRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.GrantApiKeyRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.HasPrivilegesRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.HasPrivilegesRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.InvalidateApiKeyRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.InvalidateApiKeyRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.InvalidateUserAccessTokenRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.InvalidateUserAccessTokenRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.PutPrivilegesRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.PutPrivilegesRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.PutRoleRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.PutRoleRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.PutRoleMappingRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.PutRoleMappingRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.PutUserRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.PutUserRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.QueryApiKeysRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.QueryApiKeysRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.SamlAuthenticateRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.SamlAuthenticateRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.SamlCompleteLogoutRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.SamlCompleteLogoutRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.SamlInvalidateRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.SamlInvalidateRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.SamlLogoutRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.SamlLogoutRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.SamlPrepareAuthenticationRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.SamlPrepareAuthenticationRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.SamlServiceProviderMetadataRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.SamlServiceProviderMetadataRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.GetCertificatesRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.GetCertificatesRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SecurityApi.LowLevelSecurityNamespace,Elasticsearch.Net", "Elasticsearch.Net.Specification.SecurityApi.LowLevelSecurityNamespace");
            feature.AddKnownType("Elasticsearch.Net.Specification.ShutdownApi.DeleteNodeRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.ShutdownApi.DeleteNodeRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.ShutdownApi.GetNodeRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.ShutdownApi.GetNodeRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.ShutdownApi.PutNodeRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.ShutdownApi.PutNodeRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.ShutdownApi.LowLevelShutdownNamespace,Elasticsearch.Net", "Elasticsearch.Net.Specification.ShutdownApi.LowLevelShutdownNamespace");
            feature.AddKnownType("Elasticsearch.Net.Specification.SnapshotApi.CleanupRepositoryRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SnapshotApi.CleanupRepositoryRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SnapshotApi.CloneSnapshotRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SnapshotApi.CloneSnapshotRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SnapshotApi.SnapshotRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SnapshotApi.SnapshotRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SnapshotApi.CreateRepositoryRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SnapshotApi.CreateRepositoryRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SnapshotApi.DeleteSnapshotRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SnapshotApi.DeleteSnapshotRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SnapshotApi.DeleteRepositoryRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SnapshotApi.DeleteRepositoryRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SnapshotApi.GetSnapshotRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SnapshotApi.GetSnapshotRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SnapshotApi.GetRepositoryRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SnapshotApi.GetRepositoryRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SnapshotApi.AnalyzeRepositoryRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SnapshotApi.AnalyzeRepositoryRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SnapshotApi.RestoreRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SnapshotApi.RestoreRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SnapshotApi.SnapshotStatusRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SnapshotApi.SnapshotStatusRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SnapshotApi.VerifyRepositoryRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SnapshotApi.VerifyRepositoryRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SnapshotApi.LowLevelSnapshotNamespace,Elasticsearch.Net", "Elasticsearch.Net.Specification.SnapshotApi.LowLevelSnapshotNamespace");
            feature.AddKnownType("Elasticsearch.Net.Specification.SnapshotLifecycleManagementApi.DeleteSnapshotLifecycleRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SnapshotLifecycleManagementApi.DeleteSnapshotLifecycleRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SnapshotLifecycleManagementApi.ExecuteSnapshotLifecycleRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SnapshotLifecycleManagementApi.ExecuteSnapshotLifecycleRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SnapshotLifecycleManagementApi.ExecuteRetentionRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SnapshotLifecycleManagementApi.ExecuteRetentionRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SnapshotLifecycleManagementApi.GetSnapshotLifecycleRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SnapshotLifecycleManagementApi.GetSnapshotLifecycleRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SnapshotLifecycleManagementApi.GetSnapshotLifecycleStatsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SnapshotLifecycleManagementApi.GetSnapshotLifecycleStatsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SnapshotLifecycleManagementApi.GetSnapshotLifecycleManagementStatusRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SnapshotLifecycleManagementApi.GetSnapshotLifecycleManagementStatusRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SnapshotLifecycleManagementApi.PutSnapshotLifecycleRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SnapshotLifecycleManagementApi.PutSnapshotLifecycleRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SnapshotLifecycleManagementApi.StartSnapshotLifecycleManagementRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SnapshotLifecycleManagementApi.StartSnapshotLifecycleManagementRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SnapshotLifecycleManagementApi.StopSnapshotLifecycleManagementRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SnapshotLifecycleManagementApi.StopSnapshotLifecycleManagementRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SnapshotLifecycleManagementApi.LowLevelSnapshotLifecycleManagementNamespace,Elasticsearch.Net", "Elasticsearch.Net.Specification.SnapshotLifecycleManagementApi.LowLevelSnapshotLifecycleManagementNamespace");
            feature.AddKnownType("Elasticsearch.Net.Specification.SqlApi.ClearSqlCursorRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SqlApi.ClearSqlCursorRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SqlApi.SqlDeleteRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SqlApi.SqlDeleteRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SqlApi.SqlGetRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SqlApi.SqlGetRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SqlApi.SqlSearchStatusRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SqlApi.SqlSearchStatusRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SqlApi.QuerySqlRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SqlApi.QuerySqlRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SqlApi.TranslateSqlRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.SqlApi.TranslateSqlRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.SqlApi.LowLevelSqlNamespace,Elasticsearch.Net", "Elasticsearch.Net.Specification.SqlApi.LowLevelSqlNamespace");
            feature.AddKnownType("Elasticsearch.Net.Specification.TasksApi.CancelTasksRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.TasksApi.CancelTasksRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.TasksApi.GetTaskRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.TasksApi.GetTaskRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.TasksApi.ListTasksRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.TasksApi.ListTasksRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.TasksApi.LowLevelTasksNamespace,Elasticsearch.Net", "Elasticsearch.Net.Specification.TasksApi.LowLevelTasksNamespace");
            feature.AddKnownType("Elasticsearch.Net.Specification.TextStructureApi.FindStructureRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.TextStructureApi.FindStructureRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.TextStructureApi.LowLevelTextStructureNamespace,Elasticsearch.Net", "Elasticsearch.Net.Specification.TextStructureApi.LowLevelTextStructureNamespace");
            feature.AddKnownType("Elasticsearch.Net.Specification.TransformApi.DeleteTransformRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.TransformApi.DeleteTransformRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.TransformApi.GetTransformRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.TransformApi.GetTransformRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.TransformApi.GetTransformStatsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.TransformApi.GetTransformStatsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.TransformApi.PreviewTransformRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.TransformApi.PreviewTransformRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.TransformApi.PutTransformRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.TransformApi.PutTransformRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.TransformApi.StartTransformRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.TransformApi.StartTransformRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.TransformApi.StopTransformRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.TransformApi.StopTransformRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.TransformApi.UpdateTransformRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.TransformApi.UpdateTransformRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.TransformApi.UpgradeTransformsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.TransformApi.UpgradeTransformsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.TransformApi.LowLevelTransformNamespace,Elasticsearch.Net", "Elasticsearch.Net.Specification.TransformApi.LowLevelTransformNamespace");
            feature.AddKnownType("Elasticsearch.Net.Specification.WatcherApi.AcknowledgeWatchRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.WatcherApi.AcknowledgeWatchRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.WatcherApi.ActivateWatchRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.WatcherApi.ActivateWatchRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.WatcherApi.DeactivateWatchRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.WatcherApi.DeactivateWatchRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.WatcherApi.DeleteWatchRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.WatcherApi.DeleteWatchRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.WatcherApi.ExecuteWatchRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.WatcherApi.ExecuteWatchRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.WatcherApi.GetWatchRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.WatcherApi.GetWatchRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.WatcherApi.PutWatchRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.WatcherApi.PutWatchRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.WatcherApi.QueryWatchesRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.WatcherApi.QueryWatchesRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.WatcherApi.StartWatcherRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.WatcherApi.StartWatcherRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.WatcherApi.WatcherStatsRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.WatcherApi.WatcherStatsRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.WatcherApi.StopWatcherRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.WatcherApi.StopWatcherRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.WatcherApi.LowLevelWatcherNamespace,Elasticsearch.Net", "Elasticsearch.Net.Specification.WatcherApi.LowLevelWatcherNamespace");
            feature.AddKnownType("Elasticsearch.Net.Specification.XPackApi.XPackInfoRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.XPackApi.XPackInfoRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.XPackApi.XPackUsageRequestParameters,Elasticsearch.Net", "Elasticsearch.Net.Specification.XPackApi.XPackUsageRequestParameters");
            feature.AddKnownType("Elasticsearch.Net.Specification.XPackApi.LowLevelXPackNamespace,Elasticsearch.Net", "Elasticsearch.Net.Specification.XPackApi.LowLevelXPackNamespace");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.JsonFormatterAttribute,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.JsonFormatterAttribute");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.SerializationConstructorAttribute,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.SerializationConstructorAttribute");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.InterfaceDataContractAttribute,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.InterfaceDataContractAttribute");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.IJsonFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.IJsonFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.IJsonFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.IJsonFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.IObjectPropertyNameFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.IObjectPropertyNameFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.IJsonFormatterResolver,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.IJsonFormatterResolver");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.FormatterNotRegisteredException,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.FormatterNotRegisteredException");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.IJsonProperty,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.IJsonProperty");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.JsonProperty,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.JsonProperty");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.JsonReader,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.JsonReader");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.JsonParsingException,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.JsonParsingException");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.JsonSerializer+NonGeneric+CompiledMethods,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.CompiledMethods");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.JsonToken,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.JsonToken");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.JsonWriter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.JsonWriter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.AnonymousFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.AnonymousFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.ArrayFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.ArrayFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.ArraySegmentFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.ArraySegmentFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.ListFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.ListFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.CollectionFormatterBase`4,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.CollectionFormatterBase`4'4");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.CollectionFormatterBase`3,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.CollectionFormatterBase`3'3");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.CollectionFormatterBase`2,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.CollectionFormatterBase`2'2");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.GenericCollectionFormatter`2,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.GenericCollectionFormatter`2'2");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.LinkedListFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.LinkedListFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.QueueFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.QueueFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.StackFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.StackFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.HashSetFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.HashSetFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.ReadOnlyCollectionFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.ReadOnlyCollectionFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.InterfaceListFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.InterfaceListFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.InterfaceCollectionFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.InterfaceCollectionFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.InterfaceEnumerableFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.InterfaceEnumerableFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.InterfaceGroupingFormatter`2,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.InterfaceGroupingFormatter`2'2");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.InterfaceLookupFormatter`2,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.InterfaceLookupFormatter`2'2");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.Grouping`2,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.Grouping`2'2");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.Lookup`2,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.Lookup`2'2");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.NonGenericListFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.NonGenericListFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.NonGenericInterfaceEnumerableFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.NonGenericInterfaceEnumerableFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.NonGenericInterfaceCollectionFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.NonGenericInterfaceCollectionFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.NonGenericInterfaceListFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.NonGenericInterfaceListFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.ObservableCollectionFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.ObservableCollectionFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.ReadOnlyObservableCollectionFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.ReadOnlyObservableCollectionFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.InterfaceReadOnlyListFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.InterfaceReadOnlyListFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.InterfaceReadOnlyCollectionFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.InterfaceReadOnlyCollectionFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.InterfaceSetFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.InterfaceSetFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.ConcurrentBagFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.ConcurrentBagFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.ConcurrentQueueFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.ConcurrentQueueFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.ConcurrentStackFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.ConcurrentStackFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.DateTimeFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.DateTimeFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.NullableDateTimeFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.NullableDateTimeFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.ISO8601DateTimeFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.ISO8601DateTimeFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.UnixTimestampDateTimeFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.UnixTimestampDateTimeFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.DateTimeOffsetFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.DateTimeOffsetFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.NullableDateTimeOffsetFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.NullableDateTimeOffsetFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.ISO8601DateTimeOffsetFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.ISO8601DateTimeOffsetFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.TimeSpanFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.TimeSpanFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.NullableTimeSpanFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.NullableTimeSpanFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.ISO8601TimeSpanFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.ISO8601TimeSpanFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.DictionaryFormatterBase`5,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.DictionaryFormatterBase`5'5");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.DictionaryFormatterBase`4,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.DictionaryFormatterBase`4'4");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.DictionaryFormatterBase`3,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.DictionaryFormatterBase`3'3");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.DictionaryFormatter`2,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.DictionaryFormatter`2'2");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.GenericDictionaryFormatter`3,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.GenericDictionaryFormatter`3'3");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.InterfaceDictionaryFormatter`2,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.InterfaceDictionaryFormatter`2'2");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.SortedListFormatter`2,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.SortedListFormatter`2'2");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.SortedDictionaryFormatter`2,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.SortedDictionaryFormatter`2'2");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.ReadOnlyDictionaryFormatter`2,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.ReadOnlyDictionaryFormatter`2'2");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.InterfaceReadOnlyDictionaryFormatter`2,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.InterfaceReadOnlyDictionaryFormatter`2'2");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.ConcurrentDictionaryFormatter`2,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.ConcurrentDictionaryFormatter`2'2");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.NonGenericDictionaryFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.NonGenericDictionaryFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.NonGenericInterfaceDictionaryFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.NonGenericInterfaceDictionaryFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.DynamicObjectTypeFallbackFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.DynamicObjectTypeFallbackFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.EnumFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.EnumFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.TwoDimensionalArrayFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.TwoDimensionalArrayFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.ThreeDimensionalArrayFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.ThreeDimensionalArrayFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.FourDimensionalArrayFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.FourDimensionalArrayFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.NullableFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.NullableFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.StaticNullableFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.StaticNullableFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.SByteFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.SByteFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.NullableSByteFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.NullableSByteFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.SByteArrayFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.SByteArrayFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.Int16Formatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.Int16Formatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.NullableInt16Formatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.NullableInt16Formatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.Int16ArrayFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.Int16ArrayFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.Int32Formatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.Int32Formatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.NullableInt32Formatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.NullableInt32Formatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.Int32ArrayFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.Int32ArrayFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.Int64Formatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.Int64Formatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.NullableInt64Formatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.NullableInt64Formatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.Int64ArrayFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.Int64ArrayFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.ByteFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.ByteFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.NullableByteFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.NullableByteFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.UInt16Formatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.UInt16Formatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.NullableUInt16Formatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.NullableUInt16Formatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.UInt16ArrayFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.UInt16ArrayFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.UInt32Formatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.UInt32Formatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.NullableUInt32Formatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.NullableUInt32Formatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.UInt32ArrayFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.UInt32ArrayFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.UInt64Formatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.UInt64Formatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.NullableUInt64Formatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.NullableUInt64Formatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.UInt64ArrayFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.UInt64ArrayFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.SingleFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.SingleFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.NullableSingleFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.NullableSingleFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.SingleArrayFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.SingleArrayFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.DoubleFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.DoubleFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.NullableDoubleFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.NullableDoubleFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.DoubleArrayFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.DoubleArrayFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.BooleanFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.BooleanFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.NullableBooleanFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.NullableBooleanFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.BooleanArrayFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.BooleanArrayFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.PrimitiveObjectFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.PrimitiveObjectFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.ByteArrayFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.ByteArrayFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.ByteArraySegmentFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.ByteArraySegmentFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.NullableStringFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.NullableStringFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.NullableStringArrayFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.NullableStringArrayFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.CharFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.CharFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.NullableCharFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.NullableCharFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.CharArrayFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.CharArrayFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.GuidFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.GuidFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.DecimalFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.DecimalFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.UriFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.UriFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.VersionFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.VersionFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.KeyValuePairFormatter`2,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.KeyValuePairFormatter`2'2");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.StringBuilderFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.StringBuilderFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.BitArrayFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.BitArrayFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.TypeFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.TypeFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.BigIntegerFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.BigIntegerFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.ComplexFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.ComplexFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.ExpandoObjectFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.ExpandoObjectFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.LazyFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.LazyFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.TaskUnitFormatter,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.TaskUnitFormatter");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.TaskValueFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.TaskValueFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.ValueTaskFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.ValueTaskFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.TupleFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.TupleFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.TupleFormatter`2,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.TupleFormatter`2'2");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.TupleFormatter`3,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.TupleFormatter`3'3");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.TupleFormatter`4,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.TupleFormatter`4'4");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.TupleFormatter`5,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.TupleFormatter`5'5");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.TupleFormatter`6,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.TupleFormatter`6'6");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.TupleFormatter`7,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.TupleFormatter`7'7");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.TupleFormatter`8,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.TupleFormatter`8'8");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.ValueTupleFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.ValueTupleFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.ValueTupleFormatter`2,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.ValueTupleFormatter`2'2");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.ValueTupleFormatter`3,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.ValueTupleFormatter`3'3");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.ValueTupleFormatter`4,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.ValueTupleFormatter`4'4");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.ValueTupleFormatter`5,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.ValueTupleFormatter`5'5");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.ValueTupleFormatter`6,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.ValueTupleFormatter`6'6");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.ValueTupleFormatter`7,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.ValueTupleFormatter`7'7");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Formatters.ValueTupleFormatter`8,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Formatters.ValueTupleFormatter`8'8");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.ArrayBuffer`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.ArrayBuffer`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.ArrayPool`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.ArrayPool`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.AutomataDictionary,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.AutomataDictionary");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.AutomataDictionary+AutomataNode,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.AutomataNode");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.ByteArrayStringHashTable`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.ByteArrayStringHashTable`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.ByteArrayStringHashTable`1+Entry,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.Entry'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.FarmHash+Pair,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.Pair");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.GuidBits,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.GuidBits");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.ThreadsafeTypeKeyHashTable`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.ThreadsafeTypeKeyHashTable`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.ThreadsafeTypeKeyHashTable`1+Entry,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.Entry'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.DoubleConversion.DiyFp,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.DoubleConversion.DiyFp");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.DoubleConversion.InternalStringBuilder,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.DoubleConversion.InternalStringBuilder");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.DoubleConversion.DoubleToStringConverter+FastDtoaMode,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.DoubleConversion.FastDtoaMode");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.DoubleConversion.DoubleToStringConverter+DtoaMode,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.DoubleConversion.DtoaMode");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.DoubleConversion.DoubleToStringConverter+Flags,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.DoubleConversion.Flags");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.DoubleConversion.UnionDoubleULong,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.DoubleConversion.UnionDoubleULong");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.DoubleConversion.UnionFloatUInt,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.DoubleConversion.UnionFloatUInt");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.DoubleConversion.Double,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.DoubleConversion.Double");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.DoubleConversion.Single,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.DoubleConversion.Single");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.DoubleConversion.CachedPower,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.DoubleConversion.CachedPower");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.DoubleConversion.Vector,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.DoubleConversion.Vector");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.DoubleConversion.Iterator,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.DoubleConversion.Iterator");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.DoubleConversion.StringToDoubleConverter+Flags,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.DoubleConversion.Flags");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.Emit.DynamicAssembly,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.Emit.DynamicAssembly");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.Emit.ArgumentField,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.Emit.ArgumentField");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.Emit.ILStreamReader,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.Emit.ILStreamReader");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.Emit.MetaMember,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.Emit.MetaMember");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.Emit.MetaMember+AttributeDeclaringType`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.Emit.Elasticsearch.Net.Utf8Json.Internal.Emit.MetaMember.AttributeDeclaringType`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.Emit.StringConstantValueMetaMember,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.Emit.StringConstantValueMetaMember");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.Emit.InnerExceptionMetaMember,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.Emit.InnerExceptionMetaMember");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.Emit.MetaMethodInfoComparer,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.Emit.MetaMethodInfoComparer");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Internal.Emit.MetaType,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Internal.Emit.MetaType");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Resolvers.AttributeFormatterResolver,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Resolvers.AttributeFormatterResolver");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Resolvers.BuiltinResolver,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Resolvers.BuiltinResolver");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Resolvers.CompositeResolver,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Resolvers.CompositeResolver");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Resolvers.DynamicCompositeResolver,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Resolvers.DynamicCompositeResolver");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Resolvers.DynamicGenericResolver,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Resolvers.DynamicGenericResolver");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Resolvers.CustomDynamicObjectResolver,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Resolvers.CustomDynamicObjectResolver");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Resolvers.DynamicObjectResolverAllowPrivateFalseExcludeNullFalseNameMutateOriginal,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Resolvers.DynamicObjectResolverAllowPrivateFalseExcludeNullFalseNameMutateOriginal");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Resolvers.DynamicObjectResolverAllowPrivateFalseExcludeNullTrueNameMutateCamelCase,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Resolvers.DynamicObjectResolverAllowPrivateFalseExcludeNullTrueNameMutateCamelCase");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Resolvers.DynamicObjectResolverAllowPrivateTrueExcludeNullTrueNameMutateCamelCase,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Resolvers.DynamicObjectResolverAllowPrivateTrueExcludeNullTrueNameMutateCamelCase");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Resolvers.DynamicObjectTypeBuilder+DeserializeInfo,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Resolvers.DeserializeInfo");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Resolvers.DynamicMethodAnonymousFormatter`1,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Resolvers.DynamicMethodAnonymousFormatter`1'1");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Resolvers.AnonymousTypeSerializationException,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Resolvers.AnonymousTypeSerializationException");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Resolvers.EnumDefaultResolver,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Resolvers.EnumDefaultResolver");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Resolvers.EnumUnderlyingValueResolver,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Resolvers.EnumUnderlyingValueResolver");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Resolvers.DefaultStandardResolver,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Resolvers.DefaultStandardResolver");
            feature.AddKnownType("Elasticsearch.Net.Utf8Json.Resolvers.DefaultStandardResolver+InnerResolver,Elasticsearch.Net", "Elasticsearch.Net.Utf8Json.Resolvers.InnerResolver");
            feature.AddKnownType("Google.Protobuf.ByteString,Google.Protobuf", "Google.Protobuf.ByteString");
            feature.AddKnownType("Google.Protobuf.CodedInputStream,Google.Protobuf", "Google.Protobuf.CodedInputStream");
            feature.AddKnownType("Google.Protobuf.CodedOutputStream,Google.Protobuf", "Google.Protobuf.CodedOutputStream");
            feature.AddKnownType("Google.Protobuf.CodedOutputStream+OutOfSpaceException,Google.Protobuf", "Google.Protobuf.Google.Protobuf.CodedOutputStream.OutOfSpaceException");
            feature.AddKnownType("Google.Protobuf.Extension,Google.Protobuf", "Google.Protobuf.Extension");
            feature.AddKnownType("Google.Protobuf.Extension`2,Google.Protobuf", "Google.Protobuf.Extension`2'2");
            feature.AddKnownType("Google.Protobuf.RepeatedExtension`2,Google.Protobuf", "Google.Protobuf.RepeatedExtension`2'2");
            feature.AddKnownType("Google.Protobuf.ExtensionRegistry,Google.Protobuf", "Google.Protobuf.ExtensionRegistry");
            feature.AddKnownType("Google.Protobuf.ExtensionRegistry+ExtensionComparer,Google.Protobuf", "Google.Protobuf.ExtensionComparer");
            feature.AddKnownType("Google.Protobuf.ExtensionSet`1,Google.Protobuf", "Google.Protobuf.ExtensionSet`1'1");
            feature.AddKnownType("Google.Protobuf.IExtensionValue,Google.Protobuf", "Google.Protobuf.IExtensionValue");
            feature.AddKnownType("Google.Protobuf.ExtensionValue`1,Google.Protobuf", "Google.Protobuf.ExtensionValue`1'1");
            feature.AddKnownType("Google.Protobuf.RepeatedExtensionValue`1,Google.Protobuf", "Google.Protobuf.RepeatedExtensionValue`1'1");
            feature.AddKnownType("Google.Protobuf.FieldCodec`1,Google.Protobuf", "Google.Protobuf.FieldCodec`1'1");
            feature.AddKnownType("Google.Protobuf.FieldMaskTree,Google.Protobuf", "Google.Protobuf.FieldMaskTree");
            feature.AddKnownType("Google.Protobuf.FieldMaskTree+Node,Google.Protobuf", "Google.Protobuf.Node");
            feature.AddKnownType("Google.Protobuf.IBufferMessage,Google.Protobuf", "Google.Protobuf.IBufferMessage");
            feature.AddKnownType("Google.Protobuf.ICustomDiagnosticMessage,Google.Protobuf", "Google.Protobuf.ICustomDiagnosticMessage");
            feature.AddKnownType("Google.Protobuf.IDeepCloneable`1,Google.Protobuf", "Google.Protobuf.IDeepCloneable`1'1");
            feature.AddKnownType("Google.Protobuf.IExtendableMessage`1,Google.Protobuf", "Google.Protobuf.IExtendableMessage`1'1");
            feature.AddKnownType("Google.Protobuf.IMessage,Google.Protobuf", "Google.Protobuf.IMessage");
            feature.AddKnownType("Google.Protobuf.IMessage`1,Google.Protobuf", "Google.Protobuf.IMessage`1'1");
            feature.AddKnownType("Google.Protobuf.InvalidJsonException,Google.Protobuf", "Google.Protobuf.InvalidJsonException");
            feature.AddKnownType("Google.Protobuf.InvalidProtocolBufferException,Google.Protobuf", "Google.Protobuf.InvalidProtocolBufferException");
            feature.AddKnownType("Google.Protobuf.JsonFormatter,Google.Protobuf", "Google.Protobuf.JsonFormatter");
            feature.AddKnownType("Google.Protobuf.JsonFormatter+Settings,Google.Protobuf", "Google.Protobuf.Google.Protobuf.JsonFormatter.Settings");
            feature.AddKnownType("Google.Protobuf.JsonParser,Google.Protobuf", "Google.Protobuf.JsonParser");
            feature.AddKnownType("Google.Protobuf.JsonParser+Settings,Google.Protobuf", "Google.Protobuf.Google.Protobuf.JsonParser.Settings");
            feature.AddKnownType("Google.Protobuf.JsonToken,Google.Protobuf", "Google.Protobuf.JsonToken");
            feature.AddKnownType("Google.Protobuf.JsonToken+TokenType,Google.Protobuf", "Google.Protobuf.TokenType");
            feature.AddKnownType("Google.Protobuf.JsonTokenizer,Google.Protobuf", "Google.Protobuf.JsonTokenizer");
            feature.AddKnownType("Google.Protobuf.JsonTokenizer+JsonReplayTokenizer,Google.Protobuf", "Google.Protobuf.JsonReplayTokenizer");
            feature.AddKnownType("Google.Protobuf.JsonTokenizer+JsonTextTokenizer,Google.Protobuf", "Google.Protobuf.JsonTextTokenizer");
            feature.AddKnownType("Google.Protobuf.JsonTokenizer+JsonTextTokenizer+ContainerType,Google.Protobuf", "Google.Protobuf.ContainerType");
            feature.AddKnownType("Google.Protobuf.JsonTokenizer+JsonTextTokenizer+State,Google.Protobuf", "Google.Protobuf.State");
            feature.AddKnownType("Google.Protobuf.JsonTokenizer+JsonTextTokenizer+PushBackReader,Google.Protobuf", "Google.Protobuf.PushBackReader");
            feature.AddKnownType("Google.Protobuf.LimitedInputStream,Google.Protobuf", "Google.Protobuf.LimitedInputStream");
            feature.AddKnownType("Google.Protobuf.MessageParser,Google.Protobuf", "Google.Protobuf.MessageParser");
            feature.AddKnownType("Google.Protobuf.MessageParser`1,Google.Protobuf", "Google.Protobuf.MessageParser`1'1");
            feature.AddKnownType("Google.Protobuf.ObjectIntPair`1,Google.Protobuf", "Google.Protobuf.ObjectIntPair`1'1");
            feature.AddKnownType("Google.Protobuf.ParseContext,Google.Protobuf", "Google.Protobuf.ParseContext");
            feature.AddKnownType("Google.Protobuf.ParserInternalState,Google.Protobuf", "Google.Protobuf.ParserInternalState");
            feature.AddKnownType("Google.Protobuf.SegmentedBufferHelper,Google.Protobuf", "Google.Protobuf.SegmentedBufferHelper");
            feature.AddKnownType("Google.Protobuf.UnknownField,Google.Protobuf", "Google.Protobuf.UnknownField");
            feature.AddKnownType("Google.Protobuf.UnknownFieldSet,Google.Protobuf", "Google.Protobuf.UnknownFieldSet");
            feature.AddKnownType("Google.Protobuf.WireFormat+WireType,Google.Protobuf", "Google.Protobuf.Google.Protobuf.WireFormat.WireType");
            feature.AddKnownType("Google.Protobuf.WriteBufferHelper,Google.Protobuf", "Google.Protobuf.WriteBufferHelper");
            feature.AddKnownType("Google.Protobuf.WriteContext,Google.Protobuf", "Google.Protobuf.WriteContext");
            feature.AddKnownType("Google.Protobuf.WriterInternalState,Google.Protobuf", "Google.Protobuf.WriterInternalState");
            feature.AddKnownType("Google.Protobuf.Collections.MapField`2,Google.Protobuf", "Google.Protobuf.Collections.MapField`2'2");
            feature.AddKnownType("Google.Protobuf.Collections.MapField`2+DictionaryEnumerator,Google.Protobuf", "Google.Protobuf.Collections.DictionaryEnumerator'2");
            feature.AddKnownType("Google.Protobuf.Collections.MapField`2+Codec,Google.Protobuf", "Google.Protobuf.Collections.Google.Protobuf.Collections.MapField`2'2.Codec'2");
            feature.AddKnownType("Google.Protobuf.Collections.MapField`2+MapView`1,Google.Protobuf", "Google.Protobuf.Collections.MapView`1'3");
            feature.AddKnownType("Google.Protobuf.Collections.ProtobufEqualityComparers+BitwiseDoubleEqualityComparerImpl,Google.Protobuf", "Google.Protobuf.Collections.BitwiseDoubleEqualityComparerImpl");
            feature.AddKnownType("Google.Protobuf.Collections.ProtobufEqualityComparers+BitwiseSingleEqualityComparerImpl,Google.Protobuf", "Google.Protobuf.Collections.BitwiseSingleEqualityComparerImpl");
            feature.AddKnownType("Google.Protobuf.Collections.ProtobufEqualityComparers+BitwiseNullableDoubleEqualityComparerImpl,Google.Protobuf", "Google.Protobuf.Collections.BitwiseNullableDoubleEqualityComparerImpl");
            feature.AddKnownType("Google.Protobuf.Collections.ProtobufEqualityComparers+BitwiseNullableSingleEqualityComparerImpl,Google.Protobuf", "Google.Protobuf.Collections.BitwiseNullableSingleEqualityComparerImpl");
            feature.AddKnownType("Google.Protobuf.Collections.ReadOnlyDictionary`2,Google.Protobuf", "Google.Protobuf.Collections.ReadOnlyDictionary`2'2");
            feature.AddKnownType("Google.Protobuf.Collections.RepeatedField`1,Google.Protobuf", "Google.Protobuf.Collections.RepeatedField`1'1");
            feature.AddKnownType("Google.Protobuf.Reflection.CustomOptions,Google.Protobuf", "Google.Protobuf.Reflection.CustomOptions");
            feature.AddKnownType("Google.Protobuf.Reflection.FileDescriptorSet,Google.Protobuf", "Google.Protobuf.Reflection.FileDescriptorSet");
            feature.AddKnownType("Google.Protobuf.Reflection.FileDescriptorProto,Google.Protobuf", "Google.Protobuf.Reflection.FileDescriptorProto");
            feature.AddKnownType("Google.Protobuf.Reflection.DescriptorProto,Google.Protobuf", "Google.Protobuf.Reflection.DescriptorProto");
            feature.AddKnownType("Google.Protobuf.Reflection.DescriptorProto+Types+ExtensionRange,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.DescriptorProto.Types.ExtensionRange");
            feature.AddKnownType("Google.Protobuf.Reflection.DescriptorProto+Types+ReservedRange,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.DescriptorProto.Types.ReservedRange");
            feature.AddKnownType("Google.Protobuf.Reflection.ExtensionRangeOptions,Google.Protobuf", "Google.Protobuf.Reflection.ExtensionRangeOptions");
            feature.AddKnownType("Google.Protobuf.Reflection.FieldDescriptorProto,Google.Protobuf", "Google.Protobuf.Reflection.FieldDescriptorProto");
            feature.AddKnownType("Google.Protobuf.Reflection.FieldDescriptorProto+Types+Type,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.FieldDescriptorProto.Types.Type");
            feature.AddKnownType("Google.Protobuf.Reflection.FieldDescriptorProto+Types+Label,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.FieldDescriptorProto.Types.Label");
            feature.AddKnownType("Google.Protobuf.Reflection.OneofDescriptorProto,Google.Protobuf", "Google.Protobuf.Reflection.OneofDescriptorProto");
            feature.AddKnownType("Google.Protobuf.Reflection.EnumDescriptorProto,Google.Protobuf", "Google.Protobuf.Reflection.EnumDescriptorProto");
            feature.AddKnownType("Google.Protobuf.Reflection.EnumDescriptorProto+Types+EnumReservedRange,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.EnumDescriptorProto.Types.EnumReservedRange");
            feature.AddKnownType("Google.Protobuf.Reflection.EnumValueDescriptorProto,Google.Protobuf", "Google.Protobuf.Reflection.EnumValueDescriptorProto");
            feature.AddKnownType("Google.Protobuf.Reflection.ServiceDescriptorProto,Google.Protobuf", "Google.Protobuf.Reflection.ServiceDescriptorProto");
            feature.AddKnownType("Google.Protobuf.Reflection.MethodDescriptorProto,Google.Protobuf", "Google.Protobuf.Reflection.MethodDescriptorProto");
            feature.AddKnownType("Google.Protobuf.Reflection.FileOptions,Google.Protobuf", "Google.Protobuf.Reflection.FileOptions");
            feature.AddKnownType("Google.Protobuf.Reflection.FileOptions+Types+OptimizeMode,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.FileOptions.Types.OptimizeMode");
            feature.AddKnownType("Google.Protobuf.Reflection.MessageOptions,Google.Protobuf", "Google.Protobuf.Reflection.MessageOptions");
            feature.AddKnownType("Google.Protobuf.Reflection.FieldOptions,Google.Protobuf", "Google.Protobuf.Reflection.FieldOptions");
            feature.AddKnownType("Google.Protobuf.Reflection.FieldOptions+Types+CType,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.FieldOptions.Types.CType");
            feature.AddKnownType("Google.Protobuf.Reflection.FieldOptions+Types+JSType,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.FieldOptions.Types.JSType");
            feature.AddKnownType("Google.Protobuf.Reflection.OneofOptions,Google.Protobuf", "Google.Protobuf.Reflection.OneofOptions");
            feature.AddKnownType("Google.Protobuf.Reflection.EnumOptions,Google.Protobuf", "Google.Protobuf.Reflection.EnumOptions");
            feature.AddKnownType("Google.Protobuf.Reflection.EnumValueOptions,Google.Protobuf", "Google.Protobuf.Reflection.EnumValueOptions");
            feature.AddKnownType("Google.Protobuf.Reflection.ServiceOptions,Google.Protobuf", "Google.Protobuf.Reflection.ServiceOptions");
            feature.AddKnownType("Google.Protobuf.Reflection.MethodOptions,Google.Protobuf", "Google.Protobuf.Reflection.MethodOptions");
            feature.AddKnownType("Google.Protobuf.Reflection.MethodOptions+Types+IdempotencyLevel,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.MethodOptions.Types.IdempotencyLevel");
            feature.AddKnownType("Google.Protobuf.Reflection.UninterpretedOption,Google.Protobuf", "Google.Protobuf.Reflection.UninterpretedOption");
            feature.AddKnownType("Google.Protobuf.Reflection.UninterpretedOption+Types+NamePart,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.UninterpretedOption.Types.NamePart");
            feature.AddKnownType("Google.Protobuf.Reflection.SourceCodeInfo,Google.Protobuf", "Google.Protobuf.Reflection.SourceCodeInfo");
            feature.AddKnownType("Google.Protobuf.Reflection.SourceCodeInfo+Types+Location,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.SourceCodeInfo.Types.Location");
            feature.AddKnownType("Google.Protobuf.Reflection.GeneratedCodeInfo,Google.Protobuf", "Google.Protobuf.Reflection.GeneratedCodeInfo");
            feature.AddKnownType("Google.Protobuf.Reflection.GeneratedCodeInfo+Types+Annotation,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.Google.Protobuf.Reflection.GeneratedCodeInfo.Types.Annotation");
            feature.AddKnownType("Google.Protobuf.Reflection.DescriptorBase,Google.Protobuf", "Google.Protobuf.Reflection.DescriptorBase");
            feature.AddKnownType("Google.Protobuf.Reflection.DescriptorDeclaration,Google.Protobuf", "Google.Protobuf.Reflection.DescriptorDeclaration");
            feature.AddKnownType("Google.Protobuf.Reflection.DescriptorPool,Google.Protobuf", "Google.Protobuf.Reflection.DescriptorPool");
            feature.AddKnownType("Google.Protobuf.Reflection.DescriptorValidationException,Google.Protobuf", "Google.Protobuf.Reflection.DescriptorValidationException");
            feature.AddKnownType("Google.Protobuf.Reflection.EnumDescriptor,Google.Protobuf", "Google.Protobuf.Reflection.EnumDescriptor");
            feature.AddKnownType("Google.Protobuf.Reflection.EnumValueDescriptor,Google.Protobuf", "Google.Protobuf.Reflection.EnumValueDescriptor");
            feature.AddKnownType("Google.Protobuf.Reflection.ExtensionAccessor,Google.Protobuf", "Google.Protobuf.Reflection.ExtensionAccessor");
            feature.AddKnownType("Google.Protobuf.Reflection.ExtensionCollection,Google.Protobuf", "Google.Protobuf.Reflection.ExtensionCollection");
            feature.AddKnownType("Google.Protobuf.Reflection.FieldAccessorBase,Google.Protobuf", "Google.Protobuf.Reflection.FieldAccessorBase");
            feature.AddKnownType("Google.Protobuf.Reflection.FieldDescriptor,Google.Protobuf", "Google.Protobuf.Reflection.FieldDescriptor");
            feature.AddKnownType("Google.Protobuf.Reflection.FieldType,Google.Protobuf", "Google.Protobuf.Reflection.FieldType");
            feature.AddKnownType("Google.Protobuf.Reflection.Syntax,Google.Protobuf", "Google.Protobuf.Reflection.Syntax");
            feature.AddKnownType("Google.Protobuf.Reflection.FileDescriptor,Google.Protobuf", "Google.Protobuf.Reflection.FileDescriptor");
            feature.AddKnownType("Google.Protobuf.Reflection.GeneratedClrTypeInfo,Google.Protobuf", "Google.Protobuf.Reflection.GeneratedClrTypeInfo");
            feature.AddKnownType("Google.Protobuf.Reflection.IDescriptor,Google.Protobuf", "Google.Protobuf.Reflection.IDescriptor");
            feature.AddKnownType("Google.Protobuf.Reflection.IFieldAccessor,Google.Protobuf", "Google.Protobuf.Reflection.IFieldAccessor");
            feature.AddKnownType("Google.Protobuf.Reflection.MapFieldAccessor,Google.Protobuf", "Google.Protobuf.Reflection.MapFieldAccessor");
            feature.AddKnownType("Google.Protobuf.Reflection.MessageDescriptor,Google.Protobuf", "Google.Protobuf.Reflection.MessageDescriptor");
            feature.AddKnownType("Google.Protobuf.Reflection.MessageDescriptor+FieldCollection,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.MessageDescriptor.FieldCollection");
            feature.AddKnownType("Google.Protobuf.Reflection.MethodDescriptor,Google.Protobuf", "Google.Protobuf.Reflection.MethodDescriptor");
            feature.AddKnownType("Google.Protobuf.Reflection.OneofAccessor,Google.Protobuf", "Google.Protobuf.Reflection.OneofAccessor");
            feature.AddKnownType("Google.Protobuf.Reflection.OneofDescriptor,Google.Protobuf", "Google.Protobuf.Reflection.OneofDescriptor");
            feature.AddKnownType("Google.Protobuf.Reflection.OriginalNameAttribute,Google.Protobuf", "Google.Protobuf.Reflection.OriginalNameAttribute");
            feature.AddKnownType("Google.Protobuf.Reflection.PackageDescriptor,Google.Protobuf", "Google.Protobuf.Reflection.PackageDescriptor");
            feature.AddKnownType("Google.Protobuf.Reflection.ReflectionUtil+IReflectionHelper,Google.Protobuf", "Google.Protobuf.Reflection.IReflectionHelper");
            feature.AddKnownType("Google.Protobuf.Reflection.ReflectionUtil+IExtensionReflectionHelper,Google.Protobuf", "Google.Protobuf.Reflection.IExtensionReflectionHelper");
            feature.AddKnownType("Google.Protobuf.Reflection.ReflectionUtil+IExtensionSetReflector,Google.Protobuf", "Google.Protobuf.Reflection.IExtensionSetReflector");
            feature.AddKnownType("Google.Protobuf.Reflection.ReflectionUtil+ReflectionHelper`2,Google.Protobuf", "Google.Protobuf.Reflection.ReflectionHelper`2'2");
            feature.AddKnownType("Google.Protobuf.Reflection.ReflectionUtil+ExtensionReflectionHelper`2,Google.Protobuf", "Google.Protobuf.Reflection.ExtensionReflectionHelper`2'2");
            feature.AddKnownType("Google.Protobuf.Reflection.ReflectionUtil+ExtensionSetReflector`1,Google.Protobuf", "Google.Protobuf.Reflection.ExtensionSetReflector`1'1");
            feature.AddKnownType("Google.Protobuf.Reflection.ReflectionUtil+SampleEnum,Google.Protobuf", "Google.Protobuf.Reflection.Google.Protobuf.Reflection.ReflectionUtil.SampleEnum");
            feature.AddKnownType("Google.Protobuf.Reflection.RepeatedFieldAccessor,Google.Protobuf", "Google.Protobuf.Reflection.RepeatedFieldAccessor");
            feature.AddKnownType("Google.Protobuf.Reflection.ServiceDescriptor,Google.Protobuf", "Google.Protobuf.Reflection.ServiceDescriptor");
            feature.AddKnownType("Google.Protobuf.Reflection.SingleFieldAccessor,Google.Protobuf", "Google.Protobuf.Reflection.SingleFieldAccessor");
            feature.AddKnownType("Google.Protobuf.Reflection.TypeRegistry,Google.Protobuf", "Google.Protobuf.Reflection.TypeRegistry");
            feature.AddKnownType("Google.Protobuf.Reflection.TypeRegistry+Builder,Google.Protobuf", "Google.Protobuf.Reflection.Builder");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Any,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Any");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Api,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Api");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Method,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Method");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Mixin,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Mixin");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Duration,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Duration");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Empty,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Empty");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.FieldMask,Google.Protobuf", "Google.Protobuf.WellKnownTypes.FieldMask");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.FieldMask+MergeOptions,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Google.Protobuf.WellKnownTypes.FieldMask.MergeOptions");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.SourceContext,Google.Protobuf", "Google.Protobuf.WellKnownTypes.SourceContext");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.NullValue,Google.Protobuf", "Google.Protobuf.WellKnownTypes.NullValue");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Struct,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Struct");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Value,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Value");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Value+KindOneofCase,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Google.Protobuf.WellKnownTypes.Value.KindOneofCase");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.ListValue,Google.Protobuf", "Google.Protobuf.WellKnownTypes.ListValue");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Timestamp,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Timestamp");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Syntax,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Syntax");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Type,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Type");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Field,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Field");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Field+Types+Kind,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Google.Protobuf.WellKnownTypes.Google.Protobuf.WellKnownTypes.Field.Types.Kind");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Field+Types+Cardinality,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Google.Protobuf.WellKnownTypes.Google.Protobuf.WellKnownTypes.Field.Types.Cardinality");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Enum,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Enum");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.EnumValue,Google.Protobuf", "Google.Protobuf.WellKnownTypes.EnumValue");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Option,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Option");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.DoubleValue,Google.Protobuf", "Google.Protobuf.WellKnownTypes.DoubleValue");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.FloatValue,Google.Protobuf", "Google.Protobuf.WellKnownTypes.FloatValue");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Int64Value,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Int64Value");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.UInt64Value,Google.Protobuf", "Google.Protobuf.WellKnownTypes.UInt64Value");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.Int32Value,Google.Protobuf", "Google.Protobuf.WellKnownTypes.Int32Value");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.UInt32Value,Google.Protobuf", "Google.Protobuf.WellKnownTypes.UInt32Value");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.BoolValue,Google.Protobuf", "Google.Protobuf.WellKnownTypes.BoolValue");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.StringValue,Google.Protobuf", "Google.Protobuf.WellKnownTypes.StringValue");
            feature.AddKnownType("Google.Protobuf.WellKnownTypes.BytesValue,Google.Protobuf", "Google.Protobuf.WellKnownTypes.BytesValue");
            feature.AddKnownType("JetBrains.Annotations.CanBeNullAttribute,JetBrains.Annotations", "JetBrains.Annotations.CanBeNullAttribute");
            feature.AddKnownType("JetBrains.Annotations.NotNullAttribute,JetBrains.Annotations", "JetBrains.Annotations.NotNullAttribute");
            feature.AddKnownType("JetBrains.Annotations.ItemNotNullAttribute,JetBrains.Annotations", "JetBrains.Annotations.ItemNotNullAttribute");
            feature.AddKnownType("JetBrains.Annotations.ItemCanBeNullAttribute,JetBrains.Annotations", "JetBrains.Annotations.ItemCanBeNullAttribute");
            feature.AddKnownType("JetBrains.Annotations.StringFormatMethodAttribute,JetBrains.Annotations", "JetBrains.Annotations.StringFormatMethodAttribute");
            feature.AddKnownType("JetBrains.Annotations.StructuredMessageTemplateAttribute,JetBrains.Annotations", "JetBrains.Annotations.StructuredMessageTemplateAttribute");
            feature.AddKnownType("JetBrains.Annotations.ValueProviderAttribute,JetBrains.Annotations", "JetBrains.Annotations.ValueProviderAttribute");
            feature.AddKnownType("JetBrains.Annotations.ValueRangeAttribute,JetBrains.Annotations", "JetBrains.Annotations.ValueRangeAttribute");
            feature.AddKnownType("JetBrains.Annotations.NonNegativeValueAttribute,JetBrains.Annotations", "JetBrains.Annotations.NonNegativeValueAttribute");
            feature.AddKnownType("JetBrains.Annotations.InvokerParameterNameAttribute,JetBrains.Annotations", "JetBrains.Annotations.InvokerParameterNameAttribute");
            feature.AddKnownType("JetBrains.Annotations.NotifyPropertyChangedInvocatorAttribute,JetBrains.Annotations", "JetBrains.Annotations.NotifyPropertyChangedInvocatorAttribute");
            feature.AddKnownType("JetBrains.Annotations.ContractAnnotationAttribute,JetBrains.Annotations", "JetBrains.Annotations.ContractAnnotationAttribute");
            feature.AddKnownType("JetBrains.Annotations.LocalizationRequiredAttribute,JetBrains.Annotations", "JetBrains.Annotations.LocalizationRequiredAttribute");
            feature.AddKnownType("JetBrains.Annotations.CannotApplyEqualityOperatorAttribute,JetBrains.Annotations", "JetBrains.Annotations.CannotApplyEqualityOperatorAttribute");
            feature.AddKnownType("JetBrains.Annotations.BaseTypeRequiredAttribute,JetBrains.Annotations", "JetBrains.Annotations.BaseTypeRequiredAttribute");
            feature.AddKnownType("JetBrains.Annotations.UsedImplicitlyAttribute,JetBrains.Annotations", "JetBrains.Annotations.UsedImplicitlyAttribute");
            feature.AddKnownType("JetBrains.Annotations.MeansImplicitUseAttribute,JetBrains.Annotations", "JetBrains.Annotations.MeansImplicitUseAttribute");
            feature.AddKnownType("JetBrains.Annotations.ImplicitUseKindFlags,JetBrains.Annotations", "JetBrains.Annotations.ImplicitUseKindFlags");
            feature.AddKnownType("JetBrains.Annotations.ImplicitUseTargetFlags,JetBrains.Annotations", "JetBrains.Annotations.ImplicitUseTargetFlags");
            feature.AddKnownType("JetBrains.Annotations.PublicAPIAttribute,JetBrains.Annotations", "JetBrains.Annotations.PublicAPIAttribute");
            feature.AddKnownType("JetBrains.Annotations.InstantHandleAttribute,JetBrains.Annotations", "JetBrains.Annotations.InstantHandleAttribute");
            feature.AddKnownType("JetBrains.Annotations.PureAttribute,JetBrains.Annotations", "JetBrains.Annotations.PureAttribute");
            feature.AddKnownType("JetBrains.Annotations.MustUseReturnValueAttribute,JetBrains.Annotations", "JetBrains.Annotations.MustUseReturnValueAttribute");
            feature.AddKnownType("JetBrains.Annotations.RequireStaticDelegateAttribute,JetBrains.Annotations", "JetBrains.Annotations.RequireStaticDelegateAttribute");
            feature.AddKnownType("JetBrains.Annotations.ProvidesContextAttribute,JetBrains.Annotations", "JetBrains.Annotations.ProvidesContextAttribute");
            feature.AddKnownType("JetBrains.Annotations.PathReferenceAttribute,JetBrains.Annotations", "JetBrains.Annotations.PathReferenceAttribute");
            feature.AddKnownType("JetBrains.Annotations.SourceTemplateAttribute,JetBrains.Annotations", "JetBrains.Annotations.SourceTemplateAttribute");
            feature.AddKnownType("JetBrains.Annotations.MacroAttribute,JetBrains.Annotations", "JetBrains.Annotations.MacroAttribute");
            feature.AddKnownType("JetBrains.Annotations.CollectionAccessAttribute,JetBrains.Annotations", "JetBrains.Annotations.CollectionAccessAttribute");
            feature.AddKnownType("JetBrains.Annotations.CollectionAccessType,JetBrains.Annotations", "JetBrains.Annotations.CollectionAccessType");
            feature.AddKnownType("JetBrains.Annotations.AssertionMethodAttribute,JetBrains.Annotations", "JetBrains.Annotations.AssertionMethodAttribute");
            feature.AddKnownType("JetBrains.Annotations.AssertionConditionAttribute,JetBrains.Annotations", "JetBrains.Annotations.AssertionConditionAttribute");
            feature.AddKnownType("JetBrains.Annotations.AssertionConditionType,JetBrains.Annotations", "JetBrains.Annotations.AssertionConditionType");
            feature.AddKnownType("JetBrains.Annotations.TerminatesProgramAttribute,JetBrains.Annotations", "JetBrains.Annotations.TerminatesProgramAttribute");
            feature.AddKnownType("JetBrains.Annotations.LinqTunnelAttribute,JetBrains.Annotations", "JetBrains.Annotations.LinqTunnelAttribute");
            feature.AddKnownType("JetBrains.Annotations.NoEnumerationAttribute,JetBrains.Annotations", "JetBrains.Annotations.NoEnumerationAttribute");
            feature.AddKnownType("JetBrains.Annotations.RegexPatternAttribute,JetBrains.Annotations", "JetBrains.Annotations.RegexPatternAttribute");
            feature.AddKnownType("JetBrains.Annotations.InjectedLanguage,JetBrains.Annotations", "JetBrains.Annotations.InjectedLanguage");
            feature.AddKnownType("JetBrains.Annotations.LanguageInjectionAttribute,JetBrains.Annotations", "JetBrains.Annotations.LanguageInjectionAttribute");
            feature.AddKnownType("JetBrains.Annotations.NoReorderAttribute,JetBrains.Annotations", "JetBrains.Annotations.NoReorderAttribute");
            feature.AddKnownType("JetBrains.Annotations.CodeTemplateAttribute,JetBrains.Annotations", "JetBrains.Annotations.CodeTemplateAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspChildControlTypeAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspChildControlTypeAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspDataFieldAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspDataFieldAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspDataFieldsAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspDataFieldsAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspMethodPropertyAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspMethodPropertyAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspRequiredAttributeAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspRequiredAttributeAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspTypePropertyAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspTypePropertyAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspMvcAreaMasterLocationFormatAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspMvcAreaMasterLocationFormatAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspMvcAreaPartialViewLocationFormatAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspMvcAreaPartialViewLocationFormatAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspMvcAreaViewLocationFormatAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspMvcAreaViewLocationFormatAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspMvcMasterLocationFormatAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspMvcMasterLocationFormatAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspMvcPartialViewLocationFormatAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspMvcPartialViewLocationFormatAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspMvcViewLocationFormatAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspMvcViewLocationFormatAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspMvcActionAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspMvcActionAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspMvcAreaAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspMvcAreaAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspMvcControllerAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspMvcControllerAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspMvcMasterAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspMvcMasterAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspMvcModelTypeAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspMvcModelTypeAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspMvcPartialViewAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspMvcPartialViewAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspMvcSuppressViewErrorAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspMvcSuppressViewErrorAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspMvcDisplayTemplateAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspMvcDisplayTemplateAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspMvcEditorTemplateAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspMvcEditorTemplateAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspMvcTemplateAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspMvcTemplateAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspMvcViewAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspMvcViewAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspMvcViewComponentAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspMvcViewComponentAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspMvcViewComponentViewAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspMvcViewComponentViewAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspMvcActionSelectorAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspMvcActionSelectorAttribute");
            feature.AddKnownType("JetBrains.Annotations.RouteTemplateAttribute,JetBrains.Annotations", "JetBrains.Annotations.RouteTemplateAttribute");
            feature.AddKnownType("JetBrains.Annotations.RouteParameterConstraintAttribute,JetBrains.Annotations", "JetBrains.Annotations.RouteParameterConstraintAttribute");
            feature.AddKnownType("JetBrains.Annotations.UriStringAttribute,JetBrains.Annotations", "JetBrains.Annotations.UriStringAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspRouteConventionAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspRouteConventionAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspDefaultRouteValuesAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspDefaultRouteValuesAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspRouteValuesConstraintsAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspRouteValuesConstraintsAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspRouteOrderAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspRouteOrderAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspRouteVerbsAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspRouteVerbsAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspAttributeRoutingAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspAttributeRoutingAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspMinimalApiDeclarationAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspMinimalApiDeclarationAttribute");
            feature.AddKnownType("JetBrains.Annotations.AspMinimalApiHandlerAttribute,JetBrains.Annotations", "JetBrains.Annotations.AspMinimalApiHandlerAttribute");
            feature.AddKnownType("JetBrains.Annotations.HtmlElementAttributesAttribute,JetBrains.Annotations", "JetBrains.Annotations.HtmlElementAttributesAttribute");
            feature.AddKnownType("JetBrains.Annotations.HtmlAttributeValueAttribute,JetBrains.Annotations", "JetBrains.Annotations.HtmlAttributeValueAttribute");
            feature.AddKnownType("JetBrains.Annotations.RazorSectionAttribute,JetBrains.Annotations", "JetBrains.Annotations.RazorSectionAttribute");
            feature.AddKnownType("JetBrains.Annotations.RazorImportNamespaceAttribute,JetBrains.Annotations", "JetBrains.Annotations.RazorImportNamespaceAttribute");
            feature.AddKnownType("JetBrains.Annotations.RazorInjectionAttribute,JetBrains.Annotations", "JetBrains.Annotations.RazorInjectionAttribute");
            feature.AddKnownType("JetBrains.Annotations.RazorDirectiveAttribute,JetBrains.Annotations", "JetBrains.Annotations.RazorDirectiveAttribute");
            feature.AddKnownType("JetBrains.Annotations.RazorPageBaseTypeAttribute,JetBrains.Annotations", "JetBrains.Annotations.RazorPageBaseTypeAttribute");
            feature.AddKnownType("JetBrains.Annotations.RazorHelperCommonAttribute,JetBrains.Annotations", "JetBrains.Annotations.RazorHelperCommonAttribute");
            feature.AddKnownType("JetBrains.Annotations.RazorLayoutAttribute,JetBrains.Annotations", "JetBrains.Annotations.RazorLayoutAttribute");
            feature.AddKnownType("JetBrains.Annotations.RazorWriteLiteralMethodAttribute,JetBrains.Annotations", "JetBrains.Annotations.RazorWriteLiteralMethodAttribute");
            feature.AddKnownType("JetBrains.Annotations.RazorWriteMethodAttribute,JetBrains.Annotations", "JetBrains.Annotations.RazorWriteMethodAttribute");
            feature.AddKnownType("JetBrains.Annotations.RazorWriteMethodParameterAttribute,JetBrains.Annotations", "JetBrains.Annotations.RazorWriteMethodParameterAttribute");
            feature.AddKnownType("JetBrains.Annotations.XamlItemsControlAttribute,JetBrains.Annotations", "JetBrains.Annotations.XamlItemsControlAttribute");
            feature.AddKnownType("JetBrains.Annotations.XamlItemBindingOfItemsControlAttribute,JetBrains.Annotations", "JetBrains.Annotations.XamlItemBindingOfItemsControlAttribute");
            feature.AddKnownType("JetBrains.Annotations.XamlItemStyleOfItemsControlAttribute,JetBrains.Annotations", "JetBrains.Annotations.XamlItemStyleOfItemsControlAttribute");
            feature.AddKnownType("JetBrains.Annotations.XamlOneWayBindingModeByDefaultAttribute,JetBrains.Annotations", "JetBrains.Annotations.XamlOneWayBindingModeByDefaultAttribute");
            feature.AddKnownType("JetBrains.Annotations.XamlTwoWayBindingModeByDefaultAttribute,JetBrains.Annotations", "JetBrains.Annotations.XamlTwoWayBindingModeByDefaultAttribute");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.AllowAnonymousAttribute,Microsoft.AspNetCore.Authorization", "Microsoft.AspNetCore.Authorization.AllowAnonymousAttribute");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.AuthorizationBuilder,Microsoft.AspNetCore.Authorization", "Microsoft.AspNetCore.Authorization.AuthorizationBuilder");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.AuthorizationFailure,Microsoft.AspNetCore.Authorization", "Microsoft.AspNetCore.Authorization.AuthorizationFailure");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.AuthorizationFailureReason,Microsoft.AspNetCore.Authorization", "Microsoft.AspNetCore.Authorization.AuthorizationFailureReason");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.AuthorizationHandler`1,Microsoft.AspNetCore.Authorization", "Microsoft.AspNetCore.Authorization.AuthorizationHandler`1'1");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.AuthorizationHandler`2,Microsoft.AspNetCore.Authorization", "Microsoft.AspNetCore.Authorization.AuthorizationHandler`2'2");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,Microsoft.AspNetCore.Authorization", "Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.AuthorizationOptions,Microsoft.AspNetCore.Authorization", "Microsoft.AspNetCore.Authorization.AuthorizationOptions");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.AuthorizationPolicy,Microsoft.AspNetCore.Authorization", "Microsoft.AspNetCore.Authorization.AuthorizationPolicy");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder,Microsoft.AspNetCore.Authorization", "Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.AuthorizationResult,Microsoft.AspNetCore.Authorization", "Microsoft.AspNetCore.Authorization.AuthorizationResult");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.AuthorizeAttribute,Microsoft.AspNetCore.Authorization", "Microsoft.AspNetCore.Authorization.AuthorizeAttribute");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.DefaultAuthorizationEvaluator,Microsoft.AspNetCore.Authorization", "Microsoft.AspNetCore.Authorization.DefaultAuthorizationEvaluator");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.DefaultAuthorizationHandlerContextFactory,Microsoft.AspNetCore.Authorization", "Microsoft.AspNetCore.Authorization.DefaultAuthorizationHandlerContextFactory");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.DefaultAuthorizationHandlerProvider,Microsoft.AspNetCore.Authorization", "Microsoft.AspNetCore.Authorization.DefaultAuthorizationHandlerProvider");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.DefaultAuthorizationPolicyProvider,Microsoft.AspNetCore.Authorization", "Microsoft.AspNetCore.Authorization.DefaultAuthorizationPolicyProvider");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.DefaultAuthorizationService,Microsoft.AspNetCore.Authorization", "Microsoft.AspNetCore.Authorization.DefaultAuthorizationService");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator,Microsoft.AspNetCore.Authorization", "Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.IAuthorizationHandler,Microsoft.AspNetCore.Authorization", "Microsoft.AspNetCore.Authorization.IAuthorizationHandler");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.IAuthorizationHandlerContextFactory,Microsoft.AspNetCore.Authorization", "Microsoft.AspNetCore.Authorization.IAuthorizationHandlerContextFactory");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.IAuthorizationHandlerProvider,Microsoft.AspNetCore.Authorization", "Microsoft.AspNetCore.Authorization.IAuthorizationHandlerProvider");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider,Microsoft.AspNetCore.Authorization", "Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.IAuthorizationRequirement,Microsoft.AspNetCore.Authorization", "Microsoft.AspNetCore.Authorization.IAuthorizationRequirement");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.IAuthorizationService,Microsoft.AspNetCore.Authorization", "Microsoft.AspNetCore.Authorization.IAuthorizationService");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.Infrastructure.AssertionRequirement,Microsoft.AspNetCore.Authorization", "Microsoft.AspNetCore.Authorization.Infrastructure.AssertionRequirement");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.Infrastructure.ClaimsAuthorizationRequirement,Microsoft.AspNetCore.Authorization", "Microsoft.AspNetCore.Authorization.Infrastructure.ClaimsAuthorizationRequirement");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.Infrastructure.DenyAnonymousAuthorizationRequirement,Microsoft.AspNetCore.Authorization", "Microsoft.AspNetCore.Authorization.Infrastructure.DenyAnonymousAuthorizationRequirement");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement,Microsoft.AspNetCore.Authorization", "Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.Infrastructure.OperationAuthorizationRequirement,Microsoft.AspNetCore.Authorization", "Microsoft.AspNetCore.Authorization.Infrastructure.OperationAuthorizationRequirement");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.Infrastructure.PassThroughAuthorizationHandler,Microsoft.AspNetCore.Authorization", "Microsoft.AspNetCore.Authorization.Infrastructure.PassThroughAuthorizationHandler");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.Infrastructure.RolesAuthorizationRequirement,Microsoft.AspNetCore.Authorization", "Microsoft.AspNetCore.Authorization.Infrastructure.RolesAuthorizationRequirement");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.AspNetCore.Authorization", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.IAllowAnonymous,Microsoft.AspNetCore.Metadata", "Microsoft.AspNetCore.Authorization.IAllowAnonymous");
            feature.AddKnownType("Microsoft.AspNetCore.Authorization.IAuthorizeData,Microsoft.AspNetCore.Metadata", "Microsoft.AspNetCore.Authorization.IAuthorizeData");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.AspNetCore.Metadata", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Bcl.AsyncInterfaces", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.MemberNotNullAttribute", "MemberNotNullAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute", "MemberNotNullWhenAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.LibraryImportAttribute", "LibraryImportAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.StringMarshalling", "StringMarshalling");
            feature.AddKnownType("Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo,Microsoft.CSharp", "Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo");
            feature.AddKnownType("Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags,Microsoft.CSharp", "Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags");
            feature.AddKnownType("Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,Microsoft.CSharp", "Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags");
            feature.AddKnownType("Microsoft.CSharp.RuntimeBinder.RuntimeBinderException,Microsoft.CSharp", "Microsoft.CSharp.RuntimeBinder.RuntimeBinderException");
            feature.AddKnownType("Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException,Microsoft.CSharp", "Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.CSharp", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.Caching.Abstractions", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions,Microsoft.Extensions.Caching.Abstractions", "Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions");
            feature.AddKnownType("Microsoft.Extensions.Caching.Distributed.IDistributedCache,Microsoft.Extensions.Caching.Abstractions", "Microsoft.Extensions.Caching.Distributed.IDistributedCache");
            feature.AddKnownType("Microsoft.Extensions.Caching.Memory.CacheItemPriority,Microsoft.Extensions.Caching.Abstractions", "Microsoft.Extensions.Caching.Memory.CacheItemPriority");
            feature.AddKnownType("Microsoft.Extensions.Caching.Memory.EvictionReason,Microsoft.Extensions.Caching.Abstractions", "Microsoft.Extensions.Caching.Memory.EvictionReason");
            feature.AddKnownType("Microsoft.Extensions.Caching.Memory.ICacheEntry,Microsoft.Extensions.Caching.Abstractions", "Microsoft.Extensions.Caching.Memory.ICacheEntry");
            feature.AddKnownType("Microsoft.Extensions.Caching.Memory.IMemoryCache,Microsoft.Extensions.Caching.Abstractions", "Microsoft.Extensions.Caching.Memory.IMemoryCache");
            feature.AddKnownType("Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Caching.Abstractions", "Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions");
            feature.AddKnownType("Microsoft.Extensions.Caching.Memory.MemoryCacheStatistics,Microsoft.Extensions.Caching.Abstractions", "Microsoft.Extensions.Caching.Memory.MemoryCacheStatistics");
            feature.AddKnownType("Microsoft.Extensions.Caching.Memory.PostEvictionCallbackRegistration,Microsoft.Extensions.Caching.Abstractions", "Microsoft.Extensions.Caching.Memory.PostEvictionCallbackRegistration");
            feature.AddKnownType("Microsoft.Extensions.Internal.ISystemClock,Microsoft.Extensions.Caching.Abstractions", "Microsoft.Extensions.Internal.ISystemClock");
            feature.AddKnownType("Microsoft.Extensions.Internal.SystemClock,Microsoft.Extensions.Caching.Abstractions", "Microsoft.Extensions.Internal.SystemClock");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.Caching.Memory", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache,Microsoft.Extensions.Caching.Memory", "Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache");
            feature.AddKnownType("Microsoft.Extensions.Caching.Memory.CacheEntry,Microsoft.Extensions.Caching.Memory", "Microsoft.Extensions.Caching.Memory.CacheEntry");
            feature.AddKnownType("Microsoft.Extensions.Caching.Memory.CacheEntry+CacheEntryTokens,Microsoft.Extensions.Caching.Memory", "Microsoft.Extensions.Caching.Memory.CacheEntryTokens");
            feature.AddKnownType("Microsoft.Extensions.Caching.Memory.MemoryCache,Microsoft.Extensions.Caching.Memory", "Microsoft.Extensions.Caching.Memory.MemoryCache");
            feature.AddKnownType("Microsoft.Extensions.Caching.Memory.MemoryCache+Stats,Microsoft.Extensions.Caching.Memory", "Microsoft.Extensions.Caching.Memory.Stats");
            feature.AddKnownType("Microsoft.Extensions.Caching.Memory.MemoryCache+CoherentState,Microsoft.Extensions.Caching.Memory", "Microsoft.Extensions.Caching.Memory.CoherentState");
            feature.AddKnownType("Microsoft.Extensions.Caching.Memory.MemoryCacheOptions,Microsoft.Extensions.Caching.Memory", "Microsoft.Extensions.Caching.Memory.MemoryCacheOptions");
            feature.AddKnownType("Microsoft.Extensions.Caching.Memory.MemoryDistributedCacheOptions,Microsoft.Extensions.Caching.Memory", "Microsoft.Extensions.Caching.Memory.MemoryDistributedCacheOptions");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.Configuration.Abstractions", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.Configuration.ConfigurationDebugViewContext,Microsoft.Extensions.Configuration.Abstractions", "Microsoft.Extensions.Configuration.ConfigurationDebugViewContext");
            feature.AddKnownType("Microsoft.Extensions.Configuration.ConfigurationKeyNameAttribute,Microsoft.Extensions.Configuration.Abstractions", "Microsoft.Extensions.Configuration.ConfigurationKeyNameAttribute");
            feature.AddKnownType("Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Configuration.Abstractions", "Microsoft.Extensions.Configuration.IConfiguration");
            feature.AddKnownType("Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.Configuration.Abstractions", "Microsoft.Extensions.Configuration.IConfigurationBuilder");
            feature.AddKnownType("Microsoft.Extensions.Configuration.IConfigurationProvider,Microsoft.Extensions.Configuration.Abstractions", "Microsoft.Extensions.Configuration.IConfigurationProvider");
            feature.AddKnownType("Microsoft.Extensions.Configuration.IConfigurationRoot,Microsoft.Extensions.Configuration.Abstractions", "Microsoft.Extensions.Configuration.IConfigurationRoot");
            feature.AddKnownType("Microsoft.Extensions.Configuration.IConfigurationSection,Microsoft.Extensions.Configuration.Abstractions", "Microsoft.Extensions.Configuration.IConfigurationSection");
            feature.AddKnownType("Microsoft.Extensions.Configuration.IConfigurationSource,Microsoft.Extensions.Configuration.Abstractions", "Microsoft.Extensions.Configuration.IConfigurationSource");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.Configuration.Binder", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.Configuration.BinderOptions,Microsoft.Extensions.Configuration.Binder", "Microsoft.Extensions.Configuration.BinderOptions");
            feature.AddKnownType("Microsoft.Extensions.Configuration.BindingPoint,Microsoft.Extensions.Configuration.Binder", "Microsoft.Extensions.Configuration.BindingPoint");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.Configuration.CommandLine", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider,Microsoft.Extensions.Configuration.CommandLine", "Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider");
            feature.AddKnownType("Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource,Microsoft.Extensions.Configuration.CommandLine", "Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.Configuration", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.Configuration.ChainedConfigurationProvider,Microsoft.Extensions.Configuration", "Microsoft.Extensions.Configuration.ChainedConfigurationProvider");
            feature.AddKnownType("Microsoft.Extensions.Configuration.ChainedConfigurationSource,Microsoft.Extensions.Configuration", "Microsoft.Extensions.Configuration.ChainedConfigurationSource");
            feature.AddKnownType("Microsoft.Extensions.Configuration.ConfigurationBuilder,Microsoft.Extensions.Configuration", "Microsoft.Extensions.Configuration.ConfigurationBuilder");
            feature.AddKnownType("Microsoft.Extensions.Configuration.ConfigurationKeyComparer,Microsoft.Extensions.Configuration", "Microsoft.Extensions.Configuration.ConfigurationKeyComparer");
            feature.AddKnownType("Microsoft.Extensions.Configuration.ConfigurationManager,Microsoft.Extensions.Configuration", "Microsoft.Extensions.Configuration.ConfigurationManager");
            feature.AddKnownType("Microsoft.Extensions.Configuration.ConfigurationManager+ConfigurationSources,Microsoft.Extensions.Configuration", "Microsoft.Extensions.Configuration.ConfigurationSources");
            feature.AddKnownType("Microsoft.Extensions.Configuration.ConfigurationManager+ConfigurationBuilderProperties,Microsoft.Extensions.Configuration", "Microsoft.Extensions.Configuration.ConfigurationBuilderProperties");
            feature.AddKnownType("Microsoft.Extensions.Configuration.ConfigurationProvider,Microsoft.Extensions.Configuration", "Microsoft.Extensions.Configuration.ConfigurationProvider");
            feature.AddKnownType("Microsoft.Extensions.Configuration.ConfigurationReloadToken,Microsoft.Extensions.Configuration", "Microsoft.Extensions.Configuration.ConfigurationReloadToken");
            feature.AddKnownType("Microsoft.Extensions.Configuration.ConfigurationRoot,Microsoft.Extensions.Configuration", "Microsoft.Extensions.Configuration.ConfigurationRoot");
            feature.AddKnownType("Microsoft.Extensions.Configuration.ConfigurationSection,Microsoft.Extensions.Configuration", "Microsoft.Extensions.Configuration.ConfigurationSection");
            feature.AddKnownType("Microsoft.Extensions.Configuration.ReferenceCountedProviders,Microsoft.Extensions.Configuration", "Microsoft.Extensions.Configuration.ReferenceCountedProviders");
            feature.AddKnownType("Microsoft.Extensions.Configuration.ReferenceCountedProviders+ActiveReferenceCountedProviders,Microsoft.Extensions.Configuration", "Microsoft.Extensions.Configuration.ActiveReferenceCountedProviders");
            feature.AddKnownType("Microsoft.Extensions.Configuration.ReferenceCountedProviders+DisposedReferenceCountedProviders,Microsoft.Extensions.Configuration", "Microsoft.Extensions.Configuration.DisposedReferenceCountedProviders");
            feature.AddKnownType("Microsoft.Extensions.Configuration.ReferenceCountedProviderManager,Microsoft.Extensions.Configuration", "Microsoft.Extensions.Configuration.ReferenceCountedProviderManager");
            feature.AddKnownType("Microsoft.Extensions.Configuration.StreamConfigurationProvider,Microsoft.Extensions.Configuration", "Microsoft.Extensions.Configuration.StreamConfigurationProvider");
            feature.AddKnownType("Microsoft.Extensions.Configuration.StreamConfigurationSource,Microsoft.Extensions.Configuration", "Microsoft.Extensions.Configuration.StreamConfigurationSource");
            feature.AddKnownType("Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider,Microsoft.Extensions.Configuration", "Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider");
            feature.AddKnownType("Microsoft.Extensions.Configuration.Memory.MemoryConfigurationSource,Microsoft.Extensions.Configuration", "Microsoft.Extensions.Configuration.Memory.MemoryConfigurationSource");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.Configuration.EnvironmentVariables", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.Configuration.EnvironmentVariables.EnvironmentVariablesConfigurationProvider,Microsoft.Extensions.Configuration.EnvironmentVariables", "Microsoft.Extensions.Configuration.EnvironmentVariables.EnvironmentVariablesConfigurationProvider");
            feature.AddKnownType("Microsoft.Extensions.Configuration.EnvironmentVariables.EnvironmentVariablesConfigurationSource,Microsoft.Extensions.Configuration.EnvironmentVariables", "Microsoft.Extensions.Configuration.EnvironmentVariables.EnvironmentVariablesConfigurationSource");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.Configuration.FileExtensions", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.Configuration.FileConfigurationProvider,Microsoft.Extensions.Configuration.FileExtensions", "Microsoft.Extensions.Configuration.FileConfigurationProvider");
            feature.AddKnownType("Microsoft.Extensions.Configuration.FileConfigurationSource,Microsoft.Extensions.Configuration.FileExtensions", "Microsoft.Extensions.Configuration.FileConfigurationSource");
            feature.AddKnownType("Microsoft.Extensions.Configuration.FileLoadExceptionContext,Microsoft.Extensions.Configuration.FileExtensions", "Microsoft.Extensions.Configuration.FileLoadExceptionContext");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.Configuration.Json", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.Configuration.Json.JsonConfigurationFileParser,Microsoft.Extensions.Configuration.Json", "Microsoft.Extensions.Configuration.Json.JsonConfigurationFileParser");
            feature.AddKnownType("Microsoft.Extensions.Configuration.Json.JsonConfigurationProvider,Microsoft.Extensions.Configuration.Json", "Microsoft.Extensions.Configuration.Json.JsonConfigurationProvider");
            feature.AddKnownType("Microsoft.Extensions.Configuration.Json.JsonConfigurationSource,Microsoft.Extensions.Configuration.Json", "Microsoft.Extensions.Configuration.Json.JsonConfigurationSource");
            feature.AddKnownType("Microsoft.Extensions.Configuration.Json.JsonStreamConfigurationProvider,Microsoft.Extensions.Configuration.Json", "Microsoft.Extensions.Configuration.Json.JsonStreamConfigurationProvider");
            feature.AddKnownType("Microsoft.Extensions.Configuration.Json.JsonStreamConfigurationSource,Microsoft.Extensions.Configuration.Json", "Microsoft.Extensions.Configuration.Json.JsonStreamConfigurationSource");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.Configuration.UserSecrets", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.Configuration.UserSecrets.PathHelper,Microsoft.Extensions.Configuration.UserSecrets", "Microsoft.Extensions.Configuration.UserSecrets.PathHelper");
            feature.AddKnownType("Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute,Microsoft.Extensions.Configuration.UserSecrets", "Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.DependencyInjection.Abstractions", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ActivatorUtilities+ConstructorMatcher,Microsoft.Extensions.DependencyInjection.Abstractions", "Microsoft.Extensions.DependencyInjection.ConstructorMatcher");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ActivatorUtilitiesConstructorAttribute,Microsoft.Extensions.DependencyInjection.Abstractions", "Microsoft.Extensions.DependencyInjection.ActivatorUtilitiesConstructorAttribute");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.AsyncServiceScope,Microsoft.Extensions.DependencyInjection.Abstractions", "Microsoft.Extensions.DependencyInjection.AsyncServiceScope");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.Abstractions", "Microsoft.Extensions.DependencyInjection.IServiceCollection");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1,Microsoft.Extensions.DependencyInjection.Abstractions", "Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1'1");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.IServiceProviderIsService,Microsoft.Extensions.DependencyInjection.Abstractions", "Microsoft.Extensions.DependencyInjection.IServiceProviderIsService");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.IServiceScope,Microsoft.Extensions.DependencyInjection.Abstractions", "Microsoft.Extensions.DependencyInjection.IServiceScope");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.IServiceScopeFactory,Microsoft.Extensions.DependencyInjection.Abstractions", "Microsoft.Extensions.DependencyInjection.IServiceScopeFactory");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ISupportRequiredService,Microsoft.Extensions.DependencyInjection.Abstractions", "Microsoft.Extensions.DependencyInjection.ISupportRequiredService");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceCollection,Microsoft.Extensions.DependencyInjection.Abstractions", "Microsoft.Extensions.DependencyInjection.ServiceCollection");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceDescriptor,Microsoft.Extensions.DependencyInjection.Abstractions", "Microsoft.Extensions.DependencyInjection.ServiceDescriptor");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLifetime,Microsoft.Extensions.DependencyInjection.Abstractions", "Microsoft.Extensions.DependencyInjection.ServiceLifetime");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.DependencyInjection", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.CallSiteJsonFormatter,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.CallSiteJsonFormatter");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.CallSiteJsonFormatter+CallSiteFormatterContext,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.CallSiteFormatterContext");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.DefaultServiceProviderFactory");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.DependencyInjectionEventSource,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.DependencyInjectionEventSource");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.DependencyInjectionEventSourceExtensions+NodeCountingVisitor,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.NodeCountingVisitor");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceProvider,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceProvider");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceProviderOptions,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceProviderOptions");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteChain,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteChain");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteChain+ChainItemInfo,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ChainItemInfo");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory+ServiceDescriptorCacheItem,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceDescriptorCacheItem");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteKind,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteKind");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteResultCacheLocation,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteResultCacheLocation");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.RuntimeResolverContext,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.RuntimeResolverContext");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.RuntimeResolverLock,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.RuntimeResolverLock");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteValidator,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteValidator");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteValidator+CallSiteValidatorState,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteValidatorState");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2'2");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.CompiledServiceProviderEngine,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.CompiledServiceProviderEngine");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.ConstantCallSite,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ConstantCallSite");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.ConstructorCallSite,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ConstructorCallSite");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.ExpressionResolverBuilder,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ExpressionResolverBuilder");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.ExpressionsServiceProviderEngine,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ExpressionsServiceProviderEngine");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.FactoryCallSite,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.FactoryCallSite");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.IEnumerableCallSite,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.IEnumerableCallSite");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.ResultCache,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ResultCache");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.RuntimeServiceProviderEngine,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.RuntimeServiceProviderEngine");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceCacheKey,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceCacheKey");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceCallSite,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceCallSite");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderCallSite,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderCallSite");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.StackGuard,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.StackGuard");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.ILEmitResolverBuilder,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ILEmitResolverBuilder");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.ILEmitResolverBuilder+ILEmitResolverBuilderRuntimeContext,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ILEmitResolverBuilderRuntimeContext");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.ILEmitResolverBuilder+GeneratedMethod,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.GeneratedMethod");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.ILEmitResolverBuilderContext,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ILEmitResolverBuilderContext");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.ServiceLookup.ILEmitServiceProviderEngine,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.DependencyInjection.ServiceLookup.ILEmitServiceProviderEngine");
            feature.AddKnownType("Microsoft.Extensions.Internal.TypeNameHelper+DisplayNameOptions,Microsoft.Extensions.DependencyInjection", "Microsoft.Extensions.Internal.DisplayNameOptions");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.FileProviders.Abstractions", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.IDirectoryContents,Microsoft.Extensions.FileProviders.Abstractions", "Microsoft.Extensions.FileProviders.IDirectoryContents");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.IFileInfo,Microsoft.Extensions.FileProviders.Abstractions", "Microsoft.Extensions.FileProviders.IFileInfo");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.IFileProvider,Microsoft.Extensions.FileProviders.Abstractions", "Microsoft.Extensions.FileProviders.IFileProvider");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.NotFoundDirectoryContents,Microsoft.Extensions.FileProviders.Abstractions", "Microsoft.Extensions.FileProviders.NotFoundDirectoryContents");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.NotFoundFileInfo,Microsoft.Extensions.FileProviders.Abstractions", "Microsoft.Extensions.FileProviders.NotFoundFileInfo");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.NullChangeToken,Microsoft.Extensions.FileProviders.Abstractions", "Microsoft.Extensions.FileProviders.NullChangeToken");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.NullFileProvider,Microsoft.Extensions.FileProviders.Abstractions", "Microsoft.Extensions.FileProviders.NullFileProvider");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.EmptyDisposable,Microsoft.Extensions.FileProviders.Abstractions", "Microsoft.Extensions.FileProviders.EmptyDisposable");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.FileProviders.Composite", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.CompositeFileProvider,Microsoft.Extensions.FileProviders.Composite", "Microsoft.Extensions.FileProviders.CompositeFileProvider");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents,Microsoft.Extensions.FileProviders.Composite", "Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.FileProviders.Embedded", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.EmbeddedFileProvider,Microsoft.Extensions.FileProviders.Embedded", "Microsoft.Extensions.FileProviders.EmbeddedFileProvider");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.ManifestEmbeddedFileProvider,Microsoft.Extensions.FileProviders.Embedded", "Microsoft.Extensions.FileProviders.ManifestEmbeddedFileProvider");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.Embedded.EmbeddedResourceFileInfo,Microsoft.Extensions.FileProviders.Embedded", "Microsoft.Extensions.FileProviders.Embedded.EmbeddedResourceFileInfo");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.Embedded.EnumerableDirectoryContents,Microsoft.Extensions.FileProviders.Embedded", "Microsoft.Extensions.FileProviders.Embedded.EnumerableDirectoryContents");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.Embedded.Manifest.EmbeddedFilesManifest,Microsoft.Extensions.FileProviders.Embedded", "Microsoft.Extensions.FileProviders.Embedded.Manifest.EmbeddedFilesManifest");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.Embedded.Manifest.ManifestDirectory,Microsoft.Extensions.FileProviders.Embedded", "Microsoft.Extensions.FileProviders.Embedded.Manifest.ManifestDirectory");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.Embedded.Manifest.ManifestDirectoryContents,Microsoft.Extensions.FileProviders.Embedded", "Microsoft.Extensions.FileProviders.Embedded.Manifest.ManifestDirectoryContents");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.Embedded.Manifest.ManifestDirectoryInfo,Microsoft.Extensions.FileProviders.Embedded", "Microsoft.Extensions.FileProviders.Embedded.Manifest.ManifestDirectoryInfo");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.Embedded.Manifest.ManifestEntry,Microsoft.Extensions.FileProviders.Embedded", "Microsoft.Extensions.FileProviders.Embedded.Manifest.ManifestEntry");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.Embedded.Manifest.ManifestFile,Microsoft.Extensions.FileProviders.Embedded", "Microsoft.Extensions.FileProviders.Embedded.Manifest.ManifestFile");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.Embedded.Manifest.ManifestFileInfo,Microsoft.Extensions.FileProviders.Embedded", "Microsoft.Extensions.FileProviders.Embedded.Manifest.ManifestFileInfo");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.Embedded.Manifest.ManifestRootDirectory,Microsoft.Extensions.FileProviders.Embedded", "Microsoft.Extensions.FileProviders.Embedded.Manifest.ManifestRootDirectory");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.Embedded.Manifest.ManifestSinkDirectory,Microsoft.Extensions.FileProviders.Embedded", "Microsoft.Extensions.FileProviders.Embedded.Manifest.ManifestSinkDirectory");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.FileProviders.Physical", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.IPollingChangeToken,Microsoft.Extensions.FileProviders.Physical", "Microsoft.Extensions.FileProviders.IPollingChangeToken");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.PhysicalFileProvider,Microsoft.Extensions.FileProviders.Physical", "Microsoft.Extensions.FileProviders.PhysicalFileProvider");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.EmptyDisposable,Microsoft.Extensions.FileProviders.Physical", "Microsoft.Extensions.FileProviders.EmptyDisposable");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.Internal.PhysicalDirectoryContents,Microsoft.Extensions.FileProviders.Physical", "Microsoft.Extensions.FileProviders.Internal.PhysicalDirectoryContents");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.Physical.ExclusionFilters,Microsoft.Extensions.FileProviders.Physical", "Microsoft.Extensions.FileProviders.Physical.ExclusionFilters");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.Physical.Clock,Microsoft.Extensions.FileProviders.Physical", "Microsoft.Extensions.FileProviders.Physical.Clock");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.Physical.IClock,Microsoft.Extensions.FileProviders.Physical", "Microsoft.Extensions.FileProviders.Physical.IClock");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.Physical.PhysicalDirectoryInfo,Microsoft.Extensions.FileProviders.Physical", "Microsoft.Extensions.FileProviders.Physical.PhysicalDirectoryInfo");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo,Microsoft.Extensions.FileProviders.Physical", "Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher,Microsoft.Extensions.FileProviders.Physical", "Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher+ChangeTokenInfo,Microsoft.Extensions.FileProviders.Physical", "Microsoft.Extensions.FileProviders.Physical.ChangeTokenInfo");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.Physical.PollingFileChangeToken,Microsoft.Extensions.FileProviders.Physical", "Microsoft.Extensions.FileProviders.Physical.PollingFileChangeToken");
            feature.AddKnownType("Microsoft.Extensions.FileProviders.Physical.PollingWildCardChangeToken,Microsoft.Extensions.FileProviders.Physical", "Microsoft.Extensions.FileProviders.Physical.PollingWildCardChangeToken");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.Matcher,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.Matcher");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.PatternMatchingResult,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.PatternMatchingResult");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoWrapper,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoWrapper");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.Internal.ILinearPattern,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.Internal.ILinearPattern");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.Internal.InMemoryFileInfo,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.Internal.InMemoryFileInfo");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.Internal.IPathSegment,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.Internal.IPathSegment");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.Internal.IPattern,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.Internal.IPattern");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.Internal.IPatternContext,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.Internal.IPatternContext");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.Internal.IRaggedPattern,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.Internal.IRaggedPattern");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.Internal.MatcherContext,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.Internal.MatcherContext");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.Internal.PatternTestResult,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.Internal.PatternTestResult");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.CurrentPathSegment,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.CurrentPathSegment");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.LiteralPathSegment,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.LiteralPathSegment");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.ParentPathSegment,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.ParentPathSegment");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.RecursiveWildcardSegment,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.RecursiveWildcardSegment");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.WildcardPathSegment,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.Internal.PathSegments.WildcardPathSegment");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContext`1,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContext`1'1");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinear,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinear");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinear+FrameData,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinear.FrameData");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinearExclude,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinearExclude");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinearInclude,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextLinearInclude");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRagged,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRagged");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRagged+FrameData,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRagged.FrameData");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRaggedExclude,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRaggedExclude");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRaggedInclude,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts.PatternContextRaggedInclude");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.Internal.Patterns.PatternBuilder,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.Internal.Patterns.PatternBuilder");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.Internal.Patterns.PatternBuilder+LinearPattern,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.Internal.Patterns.LinearPattern");
            feature.AddKnownType("Microsoft.Extensions.FileSystemGlobbing.Internal.Patterns.PatternBuilder+RaggedPattern,Microsoft.Extensions.FileSystemGlobbing", "Microsoft.Extensions.FileSystemGlobbing.Internal.Patterns.RaggedPattern");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.Hosting.Abstractions", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.Hosting.BackgroundService,Microsoft.Extensions.Hosting.Abstractions", "Microsoft.Extensions.Hosting.BackgroundService");
            feature.AddKnownType("Microsoft.Extensions.Hosting.HostAbortedException,Microsoft.Extensions.Hosting.Abstractions", "Microsoft.Extensions.Hosting.HostAbortedException");
            feature.AddKnownType("Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.Hosting.Abstractions", "Microsoft.Extensions.Hosting.HostBuilderContext");
            feature.AddKnownType("Microsoft.Extensions.Hosting.IApplicationLifetime,Microsoft.Extensions.Hosting.Abstractions", "Microsoft.Extensions.Hosting.IApplicationLifetime");
            feature.AddKnownType("Microsoft.Extensions.Hosting.IHost,Microsoft.Extensions.Hosting.Abstractions", "Microsoft.Extensions.Hosting.IHost");
            feature.AddKnownType("Microsoft.Extensions.Hosting.IHostApplicationLifetime,Microsoft.Extensions.Hosting.Abstractions", "Microsoft.Extensions.Hosting.IHostApplicationLifetime");
            feature.AddKnownType("Microsoft.Extensions.Hosting.IHostBuilder,Microsoft.Extensions.Hosting.Abstractions", "Microsoft.Extensions.Hosting.IHostBuilder");
            feature.AddKnownType("Microsoft.Extensions.Hosting.IHostedService,Microsoft.Extensions.Hosting.Abstractions", "Microsoft.Extensions.Hosting.IHostedService");
            feature.AddKnownType("Microsoft.Extensions.Hosting.IHostEnvironment,Microsoft.Extensions.Hosting.Abstractions", "Microsoft.Extensions.Hosting.IHostEnvironment");
            feature.AddKnownType("Microsoft.Extensions.Hosting.IHostingEnvironment,Microsoft.Extensions.Hosting.Abstractions", "Microsoft.Extensions.Hosting.IHostingEnvironment");
            feature.AddKnownType("Microsoft.Extensions.Hosting.IHostLifetime,Microsoft.Extensions.Hosting.Abstractions", "Microsoft.Extensions.Hosting.IHostLifetime");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.Localization.Abstractions", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.Localization.IStringLocalizer,Microsoft.Extensions.Localization.Abstractions", "Microsoft.Extensions.Localization.IStringLocalizer");
            feature.AddKnownType("Microsoft.Extensions.Localization.IStringLocalizer`1,Microsoft.Extensions.Localization.Abstractions", "Microsoft.Extensions.Localization.IStringLocalizer`1'1");
            feature.AddKnownType("Microsoft.Extensions.Localization.IStringLocalizerFactory,Microsoft.Extensions.Localization.Abstractions", "Microsoft.Extensions.Localization.IStringLocalizerFactory");
            feature.AddKnownType("Microsoft.Extensions.Localization.LocalizedString,Microsoft.Extensions.Localization.Abstractions", "Microsoft.Extensions.Localization.LocalizedString");
            feature.AddKnownType("Microsoft.Extensions.Localization.StringLocalizer`1,Microsoft.Extensions.Localization.Abstractions", "Microsoft.Extensions.Localization.StringLocalizer`1'1");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.Localization", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.Localization.AssemblyWrapper,Microsoft.Extensions.Localization", "Microsoft.Extensions.Localization.AssemblyWrapper");
            feature.AddKnownType("Microsoft.Extensions.Localization.IResourceStringProvider,Microsoft.Extensions.Localization", "Microsoft.Extensions.Localization.IResourceStringProvider");
            feature.AddKnownType("Microsoft.Extensions.Localization.ResourceManagerStringProvider,Microsoft.Extensions.Localization", "Microsoft.Extensions.Localization.ResourceManagerStringProvider");
            feature.AddKnownType("Microsoft.Extensions.Localization.IResourceNamesCache,Microsoft.Extensions.Localization", "Microsoft.Extensions.Localization.IResourceNamesCache");
            feature.AddKnownType("Microsoft.Extensions.Localization.LocalizationOptions,Microsoft.Extensions.Localization", "Microsoft.Extensions.Localization.LocalizationOptions");
            feature.AddKnownType("Microsoft.Extensions.Localization.ResourceLocationAttribute,Microsoft.Extensions.Localization", "Microsoft.Extensions.Localization.ResourceLocationAttribute");
            feature.AddKnownType("Microsoft.Extensions.Localization.ResourceManagerStringLocalizer,Microsoft.Extensions.Localization", "Microsoft.Extensions.Localization.ResourceManagerStringLocalizer");
            feature.AddKnownType("Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory,Microsoft.Extensions.Localization", "Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory");
            feature.AddKnownType("Microsoft.Extensions.Localization.ResourceNamesCache,Microsoft.Extensions.Localization", "Microsoft.Extensions.Localization.ResourceNamesCache");
            feature.AddKnownType("Microsoft.Extensions.Localization.RootNamespaceAttribute,Microsoft.Extensions.Localization", "Microsoft.Extensions.Localization.RootNamespaceAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.Logging.Abstractions", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.Internal.TypeNameHelper+DisplayNameOptions,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Internal.DisplayNameOptions");
            feature.AddKnownType("Microsoft.Extensions.Logging.EventId,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.EventId");
            feature.AddKnownType("Microsoft.Extensions.Logging.FormattedLogValues,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.FormattedLogValues");
            feature.AddKnownType("Microsoft.Extensions.Logging.IExternalScopeProvider,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.IExternalScopeProvider");
            feature.AddKnownType("Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.ILogger");
            feature.AddKnownType("Microsoft.Extensions.Logging.ILogger`1,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.ILogger`1'1");
            feature.AddKnownType("Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.ILoggerFactory");
            feature.AddKnownType("Microsoft.Extensions.Logging.ILoggerProvider,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.ILoggerProvider");
            feature.AddKnownType("Microsoft.Extensions.Logging.ISupportExternalScope,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.ISupportExternalScope");
            feature.AddKnownType("Microsoft.Extensions.Logging.LogDefineOptions,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.LogDefineOptions");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerExternalScopeProvider,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.LoggerExternalScopeProvider");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerExternalScopeProvider+Scope,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.Scope");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerMessage+LogValues,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.LogValues");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerMessage+LogValues`1,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.LogValues`1'1");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerMessage+LogValues`2,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.LogValues`2'2");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerMessage+LogValues`3,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.LogValues`3'3");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerMessage+LogValues`4,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.LogValues`4'4");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerMessage+LogValues`5,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.LogValues`5'5");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerMessage+LogValues`6,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.LogValues`6'6");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerMessageAttribute,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.LoggerMessageAttribute");
            feature.AddKnownType("Microsoft.Extensions.Logging.Logger`1,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.Logger`1'1");
            feature.AddKnownType("Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.LogLevel");
            feature.AddKnownType("Microsoft.Extensions.Logging.LogValuesFormatter,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.LogValuesFormatter");
            feature.AddKnownType("Microsoft.Extensions.Logging.NullExternalScopeProvider,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.NullExternalScopeProvider");
            feature.AddKnownType("Microsoft.Extensions.Logging.NullScope,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.NullScope");
            feature.AddKnownType("Microsoft.Extensions.Logging.Abstractions.LogEntry`1,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.Abstractions.LogEntry`1'1");
            feature.AddKnownType("Microsoft.Extensions.Logging.Abstractions.NullLogger,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.Abstractions.NullLogger");
            feature.AddKnownType("Microsoft.Extensions.Logging.Abstractions.NullLogger`1,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.Abstractions.NullLogger`1'1");
            feature.AddKnownType("Microsoft.Extensions.Logging.Abstractions.NullLoggerFactory,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.Abstractions.NullLoggerFactory");
            feature.AddKnownType("Microsoft.Extensions.Logging.Abstractions.NullLoggerProvider,Microsoft.Extensions.Logging.Abstractions", "Microsoft.Extensions.Logging.Abstractions.NullLoggerProvider");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Text.ValueStringBuilder", "ValueStringBuilder");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.Logging", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.Logging.ActivityTrackingOptions,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.ActivityTrackingOptions");
            feature.AddKnownType("Microsoft.Extensions.Logging.DefaultLoggerLevelConfigureOptions,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.DefaultLoggerLevelConfigureOptions");
            feature.AddKnownType("Microsoft.Extensions.Logging.ILoggingBuilder,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.ILoggingBuilder");
            feature.AddKnownType("Microsoft.Extensions.Logging.Logger,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.Logger");
            feature.AddKnownType("Microsoft.Extensions.Logging.Logger+Scope,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.Scope");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerFactory,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.LoggerFactory");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerFactory+ProviderRegistration,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.ProviderRegistration");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerFactory+DisposingLoggerFactory,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.DisposingLoggerFactory");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerFactoryOptions,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.LoggerFactoryOptions");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerFactoryScopeProvider,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.LoggerFactoryScopeProvider");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerFactoryScopeProvider+Scope,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.Scope");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerFactoryScopeProvider+ActivityLogScope,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.ActivityLogScope");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerFactoryScopeProvider+ActivityBaggageLogScopeWrapper,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.ActivityBaggageLogScopeWrapper");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerFilterOptions,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.LoggerFilterOptions");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerFilterRule,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.LoggerFilterRule");
            feature.AddKnownType("Microsoft.Extensions.Logging.MessageLogger,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.MessageLogger");
            feature.AddKnownType("Microsoft.Extensions.Logging.ScopeLogger,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.ScopeLogger");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggerInformation,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.LoggerInformation");
            feature.AddKnownType("Microsoft.Extensions.Logging.LoggingBuilder,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.LoggingBuilder");
            feature.AddKnownType("Microsoft.Extensions.Logging.ProviderAliasAttribute,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.ProviderAliasAttribute");
            feature.AddKnownType("Microsoft.Extensions.Logging.StaticFilterOptionsMonitor,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.StaticFilterOptionsMonitor");
            feature.AddKnownType("Microsoft.Extensions.Logging.NullExternalScopeProvider,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.NullExternalScopeProvider");
            feature.AddKnownType("Microsoft.Extensions.Logging.NullScope,Microsoft.Extensions.Logging", "Microsoft.Extensions.Logging.NullScope");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.Options.ConfigurationExtensions", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.Options.ConfigurationChangeTokenSource`1,Microsoft.Extensions.Options.ConfigurationExtensions", "Microsoft.Extensions.Options.ConfigurationChangeTokenSource`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.ConfigureFromConfigurationOptions`1,Microsoft.Extensions.Options.ConfigurationExtensions", "Microsoft.Extensions.Options.ConfigureFromConfigurationOptions`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.NamedConfigureFromConfigurationOptions`1,Microsoft.Extensions.Options.ConfigurationExtensions", "Microsoft.Extensions.Options.NamedConfigureFromConfigurationOptions`1'1");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.Options", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.Options.ConfigureNamedOptions`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.ConfigureNamedOptions`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.ConfigureNamedOptions`2,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.ConfigureNamedOptions`2'2");
            feature.AddKnownType("Microsoft.Extensions.Options.ConfigureNamedOptions`3,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.ConfigureNamedOptions`3'3");
            feature.AddKnownType("Microsoft.Extensions.Options.ConfigureNamedOptions`4,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.ConfigureNamedOptions`4'4");
            feature.AddKnownType("Microsoft.Extensions.Options.ConfigureNamedOptions`5,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.ConfigureNamedOptions`5'5");
            feature.AddKnownType("Microsoft.Extensions.Options.ConfigureNamedOptions`6,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.ConfigureNamedOptions`6'6");
            feature.AddKnownType("Microsoft.Extensions.Options.ConfigureOptions`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.ConfigureOptions`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.IConfigureNamedOptions`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.IConfigureNamedOptions`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.IConfigureOptions`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.IConfigureOptions`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.IOptions`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.IOptions`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.IOptionsChangeTokenSource`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.IOptionsChangeTokenSource`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.IOptionsFactory`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.IOptionsFactory`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.IOptionsMonitor`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.IOptionsMonitor`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.IOptionsMonitorCache`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.IOptionsMonitorCache`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.IOptionsSnapshot`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.IOptionsSnapshot`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.IPostConfigureOptions`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.IPostConfigureOptions`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.IValidateOptions`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.IValidateOptions`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.OptionsBuilder`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.OptionsBuilder`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.OptionsCache`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.OptionsCache`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.OptionsFactory`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.OptionsFactory`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.OptionsManager`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.OptionsManager`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.OptionsMonitor`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.OptionsMonitor`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.OptionsMonitor`1+ChangeTrackerDisposable,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.ChangeTrackerDisposable'1");
            feature.AddKnownType("Microsoft.Extensions.Options.OptionsValidationException,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.OptionsValidationException");
            feature.AddKnownType("Microsoft.Extensions.Options.OptionsWrapper`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.OptionsWrapper`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.PostConfigureOptions`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.PostConfigureOptions`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.PostConfigureOptions`2,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.PostConfigureOptions`2'2");
            feature.AddKnownType("Microsoft.Extensions.Options.PostConfigureOptions`3,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.PostConfigureOptions`3'3");
            feature.AddKnownType("Microsoft.Extensions.Options.PostConfigureOptions`4,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.PostConfigureOptions`4'4");
            feature.AddKnownType("Microsoft.Extensions.Options.PostConfigureOptions`5,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.PostConfigureOptions`5'5");
            feature.AddKnownType("Microsoft.Extensions.Options.PostConfigureOptions`6,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.PostConfigureOptions`6'6");
            feature.AddKnownType("Microsoft.Extensions.Options.UnnamedOptionsManager`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.UnnamedOptionsManager`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.ValidateOptions`1,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.ValidateOptions`1'1");
            feature.AddKnownType("Microsoft.Extensions.Options.ValidateOptions`2,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.ValidateOptions`2'2");
            feature.AddKnownType("Microsoft.Extensions.Options.ValidateOptions`3,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.ValidateOptions`3'3");
            feature.AddKnownType("Microsoft.Extensions.Options.ValidateOptions`4,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.ValidateOptions`4'4");
            feature.AddKnownType("Microsoft.Extensions.Options.ValidateOptions`5,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.ValidateOptions`5'5");
            feature.AddKnownType("Microsoft.Extensions.Options.ValidateOptions`6,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.ValidateOptions`6'6");
            feature.AddKnownType("Microsoft.Extensions.Options.ValidateOptionsResult,Microsoft.Extensions.Options", "Microsoft.Extensions.Options.ValidateOptionsResult");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Extensions.Primitives", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.Primitives.CancellationChangeToken,Microsoft.Extensions.Primitives", "Microsoft.Extensions.Primitives.CancellationChangeToken");
            feature.AddKnownType("Microsoft.Extensions.Primitives.CancellationChangeToken+NullDisposable,Microsoft.Extensions.Primitives", "Microsoft.Extensions.Primitives.NullDisposable");
            feature.AddKnownType("Microsoft.Extensions.Primitives.ChangeToken+ChangeTokenRegistration`1,Microsoft.Extensions.Primitives", "Microsoft.Extensions.Primitives.ChangeTokenRegistration`1'1");
            feature.AddKnownType("Microsoft.Extensions.Primitives.ChangeToken+ChangeTokenRegistration`1+NoopDisposable,Microsoft.Extensions.Primitives", "Microsoft.Extensions.Primitives.NoopDisposable'1");
            feature.AddKnownType("Microsoft.Extensions.Primitives.CompositeChangeToken,Microsoft.Extensions.Primitives", "Microsoft.Extensions.Primitives.CompositeChangeToken");
            feature.AddKnownType("Microsoft.Extensions.Primitives.IChangeToken,Microsoft.Extensions.Primitives", "Microsoft.Extensions.Primitives.IChangeToken");
            feature.AddKnownType("Microsoft.Extensions.Primitives.StringSegment,Microsoft.Extensions.Primitives", "Microsoft.Extensions.Primitives.StringSegment");
            feature.AddKnownType("Microsoft.Extensions.Primitives.StringSegmentComparer,Microsoft.Extensions.Primitives", "Microsoft.Extensions.Primitives.StringSegmentComparer");
            feature.AddKnownType("Microsoft.Extensions.Primitives.StringTokenizer,Microsoft.Extensions.Primitives", "Microsoft.Extensions.Primitives.StringTokenizer");
            feature.AddKnownType("Microsoft.Extensions.Primitives.StringTokenizer+Enumerator,Microsoft.Extensions.Primitives", "Microsoft.Extensions.Primitives.Microsoft.Extensions.Primitives.StringTokenizer.Enumerator");
            feature.AddKnownType("Microsoft.Extensions.Primitives.StringValues,Microsoft.Extensions.Primitives", "Microsoft.Extensions.Primitives.StringValues");
            feature.AddKnownType("Microsoft.Extensions.Primitives.StringValues+Enumerator,Microsoft.Extensions.Primitives", "Microsoft.Extensions.Primitives.Microsoft.Extensions.Primitives.StringValues.Enumerator");
            feature.AddKnownType("Microsoft.Extensions.Primitives.ExceptionArgument,Microsoft.Extensions.Primitives", "Microsoft.Extensions.Primitives.ExceptionArgument");
            feature.AddKnownType("Microsoft.Extensions.Primitives.ExceptionResource,Microsoft.Extensions.Primitives", "Microsoft.Extensions.Primitives.ExceptionResource");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.IdentityModel.Abstractions.EventLogLevel,Microsoft.IdentityModel.Abstractions", "Microsoft.IdentityModel.Abstractions.EventLogLevel");
            feature.AddKnownType("Microsoft.IdentityModel.Abstractions.IIdentityLogger,Microsoft.IdentityModel.Abstractions", "Microsoft.IdentityModel.Abstractions.IIdentityLogger");
            feature.AddKnownType("Microsoft.IdentityModel.Abstractions.ITelemetryClient,Microsoft.IdentityModel.Abstractions", "Microsoft.IdentityModel.Abstractions.ITelemetryClient");
            feature.AddKnownType("Microsoft.IdentityModel.Abstractions.LogEntry,Microsoft.IdentityModel.Abstractions", "Microsoft.IdentityModel.Abstractions.LogEntry");
            feature.AddKnownType("Microsoft.IdentityModel.Abstractions.NullIdentityModelLogger,Microsoft.IdentityModel.Abstractions", "Microsoft.IdentityModel.Abstractions.NullIdentityModelLogger");
            feature.AddKnownType("Microsoft.IdentityModel.Abstractions.NullTelemetryClient,Microsoft.IdentityModel.Abstractions", "Microsoft.IdentityModel.Abstractions.NullTelemetryClient");
            feature.AddKnownType("Microsoft.IdentityModel.Abstractions.TelemetryEventDetails,Microsoft.IdentityModel.Abstractions", "Microsoft.IdentityModel.Abstractions.TelemetryEventDetails");
            feature.AddKnownType("Microsoft.IdentityModel.Logging.IdentityModelEventSource,Microsoft.IdentityModel.Logging", "Microsoft.IdentityModel.Logging.IdentityModelEventSource");
            feature.AddKnownType("Microsoft.IdentityModel.Logging.LoggerContext,Microsoft.IdentityModel.Logging", "Microsoft.IdentityModel.Logging.LoggerContext");
            feature.AddKnownType("Microsoft.IdentityModel.Logging.LogHelper,Microsoft.IdentityModel.Logging", "Microsoft.IdentityModel.Logging.LogHelper");
            feature.AddKnownType("Microsoft.IdentityModel.Logging.NonPII,Microsoft.IdentityModel.Logging", "Microsoft.IdentityModel.Logging.NonPII");
            feature.AddKnownType("Microsoft.IdentityModel.Logging.TextWriterEventListener,Microsoft.IdentityModel.Logging", "Microsoft.IdentityModel.Logging.TextWriterEventListener");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.IdentityModel.Tokens", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.IdentityModel.Json.ConstructorHandling,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.ConstructorHandling");
            feature.AddKnownType("Microsoft.IdentityModel.Json.DateFormatHandling,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.DateFormatHandling");
            feature.AddKnownType("Microsoft.IdentityModel.Json.DateParseHandling,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.DateParseHandling");
            feature.AddKnownType("Microsoft.IdentityModel.Json.DateTimeZoneHandling,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.DateTimeZoneHandling");
            feature.AddKnownType("Microsoft.IdentityModel.Json.DefaultJsonNameTable,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.DefaultJsonNameTable");
            feature.AddKnownType("Microsoft.IdentityModel.Json.DefaultJsonNameTable+Entry,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Entry");
            feature.AddKnownType("Microsoft.IdentityModel.Json.DefaultValueHandling,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.DefaultValueHandling");
            feature.AddKnownType("Microsoft.IdentityModel.Json.FloatFormatHandling,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.FloatFormatHandling");
            feature.AddKnownType("Microsoft.IdentityModel.Json.FloatParseHandling,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.FloatParseHandling");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Formatting,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Formatting");
            feature.AddKnownType("Microsoft.IdentityModel.Json.IArrayPool`1,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.IArrayPool`1'1");
            feature.AddKnownType("Microsoft.IdentityModel.Json.IJsonLineInfo,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.IJsonLineInfo");
            feature.AddKnownType("Microsoft.IdentityModel.Json.JsonArrayAttribute,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.JsonArrayAttribute");
            feature.AddKnownType("Microsoft.IdentityModel.Json.JsonConstructorAttribute,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.JsonConstructorAttribute");
            feature.AddKnownType("Microsoft.IdentityModel.Json.JsonContainerAttribute,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.JsonContainerAttribute");
            feature.AddKnownType("Microsoft.IdentityModel.Json.JsonConverter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.JsonConverter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.JsonConverter`1,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.JsonConverter`1'1");
            feature.AddKnownType("Microsoft.IdentityModel.Json.JsonConverterAttribute,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.JsonConverterAttribute");
            feature.AddKnownType("Microsoft.IdentityModel.Json.JsonConverterCollection,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.JsonConverterCollection");
            feature.AddKnownType("Microsoft.IdentityModel.Json.JsonDictionaryAttribute,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.JsonDictionaryAttribute");
            feature.AddKnownType("Microsoft.IdentityModel.Json.JsonException,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.JsonException");
            feature.AddKnownType("Microsoft.IdentityModel.Json.JsonExtensionDataAttribute,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.JsonExtensionDataAttribute");
            feature.AddKnownType("Microsoft.IdentityModel.Json.JsonIgnoreAttribute,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.JsonIgnoreAttribute");
            feature.AddKnownType("Microsoft.IdentityModel.Json.JsonNameTable,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.JsonNameTable");
            feature.AddKnownType("Microsoft.IdentityModel.Json.JsonObjectAttribute,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.JsonObjectAttribute");
            feature.AddKnownType("Microsoft.IdentityModel.Json.JsonContainerType,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.JsonContainerType");
            feature.AddKnownType("Microsoft.IdentityModel.Json.JsonPosition,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.JsonPosition");
            feature.AddKnownType("Microsoft.IdentityModel.Json.JsonPropertyAttribute,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.JsonPropertyAttribute");
            feature.AddKnownType("Microsoft.IdentityModel.Json.JsonReader,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.JsonReader");
            feature.AddKnownType("Microsoft.IdentityModel.Json.JsonReader+State,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.State");
            feature.AddKnownType("Microsoft.IdentityModel.Json.JsonReaderException,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.JsonReaderException");
            feature.AddKnownType("Microsoft.IdentityModel.Json.JsonRequiredAttribute,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.JsonRequiredAttribute");
            feature.AddKnownType("Microsoft.IdentityModel.Json.JsonSerializationException,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.JsonSerializationException");
            feature.AddKnownType("Microsoft.IdentityModel.Json.JsonSerializer,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.JsonSerializer");
            feature.AddKnownType("Microsoft.IdentityModel.Json.JsonSerializerSettings,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.JsonSerializerSettings");
            feature.AddKnownType("Microsoft.IdentityModel.Json.JsonTextReader,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.JsonTextReader");
            feature.AddKnownType("Microsoft.IdentityModel.Json.ReadType,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.ReadType");
            feature.AddKnownType("Microsoft.IdentityModel.Json.JsonTextWriter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.JsonTextWriter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.JsonToken,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.JsonToken");
            feature.AddKnownType("Microsoft.IdentityModel.Json.JsonValidatingReader,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.JsonValidatingReader");
            feature.AddKnownType("Microsoft.IdentityModel.Json.JsonValidatingReader+SchemaScope,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.SchemaScope");
            feature.AddKnownType("Microsoft.IdentityModel.Json.JsonWriter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.JsonWriter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.JsonWriter+State,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.State");
            feature.AddKnownType("Microsoft.IdentityModel.Json.JsonWriterException,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.JsonWriterException");
            feature.AddKnownType("Microsoft.IdentityModel.Json.MemberSerialization,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.MemberSerialization");
            feature.AddKnownType("Microsoft.IdentityModel.Json.MetadataPropertyHandling,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.MetadataPropertyHandling");
            feature.AddKnownType("Microsoft.IdentityModel.Json.MissingMemberHandling,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.MissingMemberHandling");
            feature.AddKnownType("Microsoft.IdentityModel.Json.NullValueHandling,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.NullValueHandling");
            feature.AddKnownType("Microsoft.IdentityModel.Json.ObjectCreationHandling,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.ObjectCreationHandling");
            feature.AddKnownType("Microsoft.IdentityModel.Json.PreserveReferencesHandling,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.PreserveReferencesHandling");
            feature.AddKnownType("Microsoft.IdentityModel.Json.ReferenceLoopHandling,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.ReferenceLoopHandling");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Required,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Required");
            feature.AddKnownType("Microsoft.IdentityModel.Json.StringEscapeHandling,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.StringEscapeHandling");
            feature.AddKnownType("Microsoft.IdentityModel.Json.TypeNameAssemblyFormatHandling,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.TypeNameAssemblyFormatHandling");
            feature.AddKnownType("Microsoft.IdentityModel.Json.TypeNameHandling,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.TypeNameHandling");
            feature.AddKnownType("Microsoft.IdentityModel.Json.WriteState,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.WriteState");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Bson.BsonBinaryType,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Bson.BsonBinaryType");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Bson.BsonBinaryWriter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Bson.BsonBinaryWriter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Bson.BsonObjectId,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Bson.BsonObjectId");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Bson.BsonReader,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Bson.BsonReader");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Bson.BsonReader+BsonReaderState,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Bson.BsonReaderState");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Bson.BsonReader+ContainerContext,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Bson.ContainerContext");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Bson.BsonToken,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Bson.BsonToken");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Bson.BsonObject,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Bson.BsonObject");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Bson.BsonArray,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Bson.BsonArray");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Bson.BsonEmpty,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Bson.BsonEmpty");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Bson.BsonValue,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Bson.BsonValue");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Bson.BsonBoolean,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Bson.BsonBoolean");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Bson.BsonString,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Bson.BsonString");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Bson.BsonBinary,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Bson.BsonBinary");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Bson.BsonRegex,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Bson.BsonRegex");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Bson.BsonProperty,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Bson.BsonProperty");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Bson.BsonType,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Bson.BsonType");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Bson.BsonWriter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Bson.BsonWriter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.BinaryConverter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.BinaryConverter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.BsonObjectIdConverter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.BsonObjectIdConverter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.CustomCreationConverter`1,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.CustomCreationConverter`1'1");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.DataSetConverter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.DataSetConverter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.DataTableConverter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.DataTableConverter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.DateTimeConverterBase,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.DateTimeConverterBase");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.DiscriminatedUnionConverter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.DiscriminatedUnionConverter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.DiscriminatedUnionConverter+Union,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.Union");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.DiscriminatedUnionConverter+UnionCase,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.UnionCase");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.EntityKeyMemberConverter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.EntityKeyMemberConverter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.ExpandoObjectConverter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.ExpandoObjectConverter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.IsoDateTimeConverter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.IsoDateTimeConverter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.JavaScriptDateTimeConverter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.JavaScriptDateTimeConverter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.KeyValuePairConverter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.KeyValuePairConverter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.RegexConverter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.RegexConverter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.StringEnumConverter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.StringEnumConverter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.UnixDateTimeConverter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.UnixDateTimeConverter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.VersionConverter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.VersionConverter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.XmlDocumentWrapper,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.XmlDocumentWrapper");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.XmlElementWrapper,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.XmlElementWrapper");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.XmlDeclarationWrapper,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.XmlDeclarationWrapper");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.XmlDocumentTypeWrapper,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.XmlDocumentTypeWrapper");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.XmlNodeWrapper,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.XmlNodeWrapper");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.IXmlDocument,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.IXmlDocument");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.IXmlDeclaration,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.IXmlDeclaration");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.IXmlDocumentType,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.IXmlDocumentType");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.IXmlElement,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.IXmlElement");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.IXmlNode,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.IXmlNode");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.XDeclarationWrapper,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.XDeclarationWrapper");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.XDocumentTypeWrapper,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.XDocumentTypeWrapper");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.XDocumentWrapper,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.XDocumentWrapper");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.XTextWrapper,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.XTextWrapper");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.XCommentWrapper,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.XCommentWrapper");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.XProcessingInstructionWrapper,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.XProcessingInstructionWrapper");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.XContainerWrapper,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.XContainerWrapper");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.XObjectWrapper,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.XObjectWrapper");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.XAttributeWrapper,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.XAttributeWrapper");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.XElementWrapper,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.XElementWrapper");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Converters.XmlNodeConverter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Converters.XmlNodeConverter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.CommentHandling,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.CommentHandling");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.DuplicatePropertyNameHandling,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.DuplicatePropertyNameHandling");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.IJEnumerable`1,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.IJEnumerable`1'1");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JArray,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JArray");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JConstructor,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JConstructor");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JContainer,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JContainer");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JEnumerable`1,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JEnumerable`1'1");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JObject,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JObject");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JObject+JObjectDynamicProxy,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JObjectDynamicProxy");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JProperty,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JProperty");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JProperty+JPropertyList,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JPropertyList");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JPropertyDescriptor,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JPropertyDescriptor");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JPropertyKeyedCollection,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JPropertyKeyedCollection");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JRaw,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JRaw");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JsonLoadSettings,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JsonLoadSettings");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JsonMergeSettings,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JsonMergeSettings");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JsonSelectSettings,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JsonSelectSettings");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JToken,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JToken");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JToken+LineInfoAnnotation,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.LineInfoAnnotation");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JTokenEqualityComparer,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JTokenEqualityComparer");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JTokenReader,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JTokenReader");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JTokenType,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JTokenType");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JTokenWriter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JTokenWriter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JValue,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JValue");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JValue+JValueDynamicProxy,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JValueDynamicProxy");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.LineInfoHandling,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.LineInfoHandling");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.MergeArrayHandling,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.MergeArrayHandling");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.MergeNullValueHandling,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.MergeNullValueHandling");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JsonPath.ArrayIndexFilter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JsonPath.ArrayIndexFilter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JsonPath.ArrayMultipleIndexFilter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JsonPath.ArrayMultipleIndexFilter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JsonPath.ArraySliceFilter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JsonPath.ArraySliceFilter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JsonPath.FieldFilter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JsonPath.FieldFilter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JsonPath.FieldMultipleFilter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JsonPath.FieldMultipleFilter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JsonPath.JPath,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JsonPath.JPath");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JsonPath.PathFilter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JsonPath.PathFilter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JsonPath.QueryOperator,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JsonPath.QueryOperator");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JsonPath.QueryExpression,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JsonPath.QueryExpression");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JsonPath.CompositeExpression,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JsonPath.CompositeExpression");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JsonPath.BooleanQueryExpression,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JsonPath.BooleanQueryExpression");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JsonPath.QueryFilter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JsonPath.QueryFilter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JsonPath.QueryScanFilter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JsonPath.QueryScanFilter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JsonPath.RootFilter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JsonPath.RootFilter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JsonPath.ScanFilter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JsonPath.ScanFilter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Linq.JsonPath.ScanMultipleFilter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Linq.JsonPath.ScanMultipleFilter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Schema.JsonSchema,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Schema.JsonSchema");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Schema.JsonSchemaBuilder,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Schema.JsonSchemaBuilder");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Schema.JsonSchemaException,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Schema.JsonSchemaException");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Schema.JsonSchemaGenerator,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Schema.JsonSchemaGenerator");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Schema.JsonSchemaGenerator+TypeSchema,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Schema.TypeSchema");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Schema.JsonSchemaModel,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Schema.JsonSchemaModel");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Schema.JsonSchemaModelBuilder,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Schema.JsonSchemaModelBuilder");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Schema.JsonSchemaNode,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Schema.JsonSchemaNode");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Schema.JsonSchemaNodeCollection,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Schema.JsonSchemaNodeCollection");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Schema.JsonSchemaResolver,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Schema.JsonSchemaResolver");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Schema.JsonSchemaType,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Schema.JsonSchemaType");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Schema.JsonSchemaWriter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Schema.JsonSchemaWriter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Schema.UndefinedSchemaIdHandling,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Schema.UndefinedSchemaIdHandling");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Schema.ValidationEventArgs,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Schema.ValidationEventArgs");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.CamelCaseNamingStrategy,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.CamelCaseNamingStrategy");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.CamelCasePropertyNamesContractResolver,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.CamelCasePropertyNamesContractResolver");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.DefaultContractResolver,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.DefaultContractResolver");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.DefaultContractResolver+EnumerableDictionaryWrapper`2,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.EnumerableDictionaryWrapper`2'2");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.DefaultNamingStrategy,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.DefaultNamingStrategy");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.DefaultReferenceResolver,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.DefaultReferenceResolver");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.DefaultSerializationBinder,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.DefaultSerializationBinder");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.DiagnosticsTraceWriter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.DiagnosticsTraceWriter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.DynamicValueProvider,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.DynamicValueProvider");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.ErrorContext,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.ErrorContext");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.ErrorEventArgs,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.ErrorEventArgs");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.ExpressionValueProvider,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.ExpressionValueProvider");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.IAttributeProvider,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.IAttributeProvider");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.IContractResolver,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.IContractResolver");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.IReferenceResolver,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.IReferenceResolver");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.ISerializationBinder,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.ISerializationBinder");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.ITraceWriter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.ITraceWriter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.IValueProvider,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.IValueProvider");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.JsonArrayContract,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.JsonArrayContract");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.JsonContainerContract,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.JsonContainerContract");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.JsonContractType,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.JsonContractType");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.JsonContract,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.JsonContract");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.JsonDictionaryContract,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.JsonDictionaryContract");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.JsonDynamicContract,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.JsonDynamicContract");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.JsonFormatterConverter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.JsonFormatterConverter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.JsonISerializableContract,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.JsonISerializableContract");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.JsonLinqContract,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.JsonLinqContract");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.JsonObjectContract,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.JsonObjectContract");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.JsonPrimitiveContract,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.JsonPrimitiveContract");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.JsonProperty,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.JsonProperty");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.JsonPropertyCollection,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.JsonPropertyCollection");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.JsonSerializerInternalBase,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.JsonSerializerInternalBase");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.JsonSerializerInternalBase+ReferenceEqualsEqualityComparer,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.ReferenceEqualsEqualityComparer");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.JsonSerializerInternalReader,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.JsonSerializerInternalReader");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.JsonSerializerInternalReader+PropertyPresence,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.PropertyPresence");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.JsonSerializerInternalReader+CreatorPropertyContext,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.CreatorPropertyContext");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.JsonSerializerInternalWriter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.JsonSerializerInternalWriter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.JsonSerializerProxy,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.JsonSerializerProxy");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.JsonStringContract,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.JsonStringContract");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.KebabCaseNamingStrategy,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.KebabCaseNamingStrategy");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.MemoryTraceWriter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.MemoryTraceWriter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.NamingStrategy,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.NamingStrategy");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.OnErrorAttribute,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.OnErrorAttribute");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.ReflectionAttributeProvider,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.ReflectionAttributeProvider");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.ReflectionValueProvider,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.ReflectionValueProvider");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.SerializationBinderAdapter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.SerializationBinderAdapter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.SnakeCaseNamingStrategy,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.SnakeCaseNamingStrategy");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.TraceJsonReader,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.TraceJsonReader");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Serialization.TraceJsonWriter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Serialization.TraceJsonWriter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.Base64Encoder,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.Base64Encoder");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.BidirectionalDictionary`2,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.BidirectionalDictionary`2'2");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.IWrappedCollection,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.IWrappedCollection");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.CollectionWrapper`1,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.CollectionWrapper`1'1");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.PrimitiveTypeCode,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.PrimitiveTypeCode");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.TypeInformation,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.TypeInformation");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.ParseResult,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.ParseResult");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.ConvertUtils+ConvertResult,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.ConvertResult");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.ParserTimeZone,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.ParserTimeZone");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.DateTimeParser,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.DateTimeParser");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.IWrappedDictionary,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.IWrappedDictionary");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.DictionaryWrapper`2,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.DictionaryWrapper`2'2");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.DictionaryWrapper`2+DictionaryEnumerator`2,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.DictionaryEnumerator`2'4");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.DynamicProxy`1,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.DynamicProxy`1'1");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.DynamicProxyMetaObject`1,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.DynamicProxyMetaObject`1'1");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.DynamicProxyMetaObject`1+GetBinderAdapter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.GetBinderAdapter'1");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.DynamicReflectionDelegateFactory,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.DynamicReflectionDelegateFactory");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.NoThrowGetBinderMember,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.NoThrowGetBinderMember");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.NoThrowSetBinderMember,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.NoThrowSetBinderMember");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.NoThrowExpressionVisitor,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.NoThrowExpressionVisitor");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.EnumInfo,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.EnumInfo");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.ExpressionReflectionDelegateFactory,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.ExpressionReflectionDelegateFactory");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.ExpressionReflectionDelegateFactory+ByRefParameter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.ByRefParameter");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.FSharpFunction,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.FSharpFunction");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.FSharpUtils,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.FSharpUtils");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.ImmutableCollectionsUtils+ImmutableCollectionTypeInfo,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.ImmutableCollectionTypeInfo");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.LateBoundReflectionDelegateFactory,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.LateBoundReflectionDelegateFactory");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.ReflectionDelegateFactory,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.ReflectionDelegateFactory");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.ReflectionMember,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.ReflectionMember");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.ReflectionObject,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.ReflectionObject");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.StringBuffer,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.StringBuffer");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.StringReference,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.StringReference");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.StringUtils+SeparatedCaseState,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.SeparatedCaseState");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.StructMultiKey`2,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.StructMultiKey`2'2");
            feature.AddKnownType("Microsoft.IdentityModel.Json.Utilities.ThreadSafeStore`2,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Json.Utilities.ThreadSafeStore`2'2");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.AsymmetricAdapter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.AsymmetricAdapter");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.AsymmetricSecurityKey,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.AsymmetricSecurityKey");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.PrivateKeyStatus,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.PrivateKeyStatus");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.BaseConfiguration,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.BaseConfiguration");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.BaseConfigurationManager,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.BaseConfigurationManager");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.CallContext,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.CallContext");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.CompressionAlgorithms,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.CompressionAlgorithms");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.CompressionProviderFactory,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.CompressionProviderFactory");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.CryptoProviderCache,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.CryptoProviderCache");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.CryptoProviderCacheOptions,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.CryptoProviderCacheOptions");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.CryptoProviderFactory,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.CryptoProviderFactory");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.DeflateCompressionProvider,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.DeflateCompressionProvider");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.ECDsaAdapter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.ECDsaAdapter");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.ECDsaAdapter+KeyBlobMagicNumber,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.KeyBlobMagicNumber");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.ECDsaSecurityKey,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.ECDsaSecurityKey");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.EncryptingCredentials,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.EncryptingCredentials");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.AuthenticatedEncryptionProvider,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.AuthenticatedEncryptionProvider");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.AuthenticatedEncryptionProvider+AuthenticatedKeys,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.AuthenticatedKeys");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.AuthenticatedEncryptionResult,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.AuthenticatedEncryptionResult");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.EcdhKeyExchangeProvider,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.EcdhKeyExchangeProvider");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.KeyWrapProvider,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.KeyWrapProvider");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.RsaKeyWrapProvider,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.RsaKeyWrapProvider");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SymmetricKeyWrapProvider,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SymmetricKeyWrapProvider");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.EventBasedLRUCache`2,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.EventBasedLRUCache`2'2");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.LRUCacheItem`2,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.LRUCacheItem`2'2");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SecurityTokenCompressionFailedException,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SecurityTokenCompressionFailedException");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SecurityTokenDecompressionFailedException,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SecurityTokenDecompressionFailedException");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SecurityTokenDecryptionFailedException,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SecurityTokenDecryptionFailedException");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SecurityTokenEncryptionFailedException,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SecurityTokenEncryptionFailedException");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SecurityTokenEncryptionKeyNotFoundException,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SecurityTokenEncryptionKeyNotFoundException");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SecurityTokenException,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SecurityTokenException");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SecurityTokenInvalidAlgorithmException,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SecurityTokenInvalidAlgorithmException");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SecurityTokenInvalidAudienceException,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SecurityTokenInvalidAudienceException");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SecurityTokenInvalidLifetimeException,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SecurityTokenInvalidLifetimeException");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SecurityTokenInvalidSignatureException,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SecurityTokenInvalidSignatureException");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SecurityTokenInvalidSigningKeyException,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SecurityTokenInvalidSigningKeyException");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SecurityTokenInvalidTypeException,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SecurityTokenInvalidTypeException");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SecurityTokenKeyWrapException,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SecurityTokenKeyWrapException");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SecurityTokenNoExpirationException,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SecurityTokenNoExpirationException");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SecurityTokenNotYetValidException,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SecurityTokenNotYetValidException");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SecurityTokenReplayAddFailedException,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SecurityTokenReplayAddFailedException");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SecurityTokenReplayDetectedException,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SecurityTokenReplayDetectedException");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SecurityTokenUnableToValidateException,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SecurityTokenUnableToValidateException");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SecurityTokenValidationException,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SecurityTokenValidationException");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.ValidationFailure,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.ValidationFailure");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.ICompressionProvider,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.ICompressionProvider");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.ICryptoProvider,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.ICryptoProvider");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.InMemoryCryptoProviderCache,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.InMemoryCryptoProviderCache");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.ISecurityTokenValidator,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.ISecurityTokenValidator");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.ITokenReplayCache,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.ITokenReplayCache");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.JsonWebKey,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.JsonWebKey");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.JsonWebKeyConverter,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.JsonWebKeyConverter");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.JsonWebKeySet,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.JsonWebKeySet");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.DisposableObjectPool`1,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.DisposableObjectPool`1'1");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.DisposableObjectPool`1+Element,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.Element'1");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.AesGcm,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.AesGcm");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.Cng+OpenAlgorithmProviderFlags,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.Microsoft.IdentityModel.Tokens.Cng.OpenAlgorithmProviderFlags");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.CryptoThrowHelper+WindowsCryptographicException,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.WindowsCryptographicException");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.Interop,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.Interop");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.Interop+BCrypt+BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.Interop+BCrypt+BCRYPT_KEY_DATA_BLOB_HEADER,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.BCRYPT_KEY_DATA_BLOB_HEADER");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.Interop+BCrypt+NTSTATUS,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.NTSTATUS");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SafeAlgorithmHandle,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SafeAlgorithmHandle");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SafeBCryptHandle,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SafeBCryptHandle");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SafeKeyHandle,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SafeKeyHandle");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.RsaSecurityKey,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.RsaSecurityKey");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SecurityKey,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SecurityKey");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SecurityKeyIdentifierClause,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SecurityKeyIdentifierClause");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SecurityToken,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SecurityToken");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SecurityTokenDescriptor,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SecurityTokenDescriptor");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SecurityTokenHandler,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SecurityTokenHandler");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SignatureProvider,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SignatureProvider");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SigningCredentials,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SigningCredentials");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SymmetricSecurityKey,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SymmetricSecurityKey");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.SymmetricSignatureProvider,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.SymmetricSignatureProvider");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.TokenContext,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.TokenContext");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.TokenHandler,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.TokenHandler");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.TokenUtilities,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.TokenUtilities");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.TokenValidationParameters,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.TokenValidationParameters");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.TokenValidationResult,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.TokenValidationResult");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.X509EncryptingCredentials,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.X509EncryptingCredentials");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.X509SecurityKey,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.X509SecurityKey");
            feature.AddKnownType("Microsoft.IdentityModel.Tokens.X509SigningCredentials,Microsoft.IdentityModel.Tokens", "Microsoft.IdentityModel.Tokens.X509SigningCredentials");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.VisualBasic.Core", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.VisualBasic.AppWinStyle,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.AppWinStyle");
            feature.AddKnownType("Microsoft.VisualBasic.CallType,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.CallType");
            feature.AddKnownType("Microsoft.VisualBasic.Collection,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.Collection");
            feature.AddKnownType("Microsoft.VisualBasic.ComClassAttribute,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.ComClassAttribute");
            feature.AddKnownType("Microsoft.VisualBasic.CompareMethod,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.CompareMethod");
            feature.AddKnownType("Microsoft.VisualBasic.Constants,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.Constants");
            feature.AddKnownType("Microsoft.VisualBasic.ControlChars,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.ControlChars");
            feature.AddKnownType("Microsoft.VisualBasic.Conversion,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.Conversion");
            feature.AddKnownType("Microsoft.VisualBasic.DateAndTime,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.DateAndTime");
            feature.AddKnownType("Microsoft.VisualBasic.DateFormat,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.DateFormat");
            feature.AddKnownType("Microsoft.VisualBasic.DateInterval,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.DateInterval");
            feature.AddKnownType("Microsoft.VisualBasic.DueDate,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.DueDate");
            feature.AddKnownType("Microsoft.VisualBasic.ErrObject,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.ErrObject");
            feature.AddKnownType("Microsoft.VisualBasic.FileAttribute,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.FileAttribute");
            feature.AddKnownType("Microsoft.VisualBasic.FileSystem,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.FileSystem");
            feature.AddKnownType("Microsoft.VisualBasic.Financial,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.Financial");
            feature.AddKnownType("Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.FirstDayOfWeek");
            feature.AddKnownType("Microsoft.VisualBasic.FirstWeekOfYear,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.FirstWeekOfYear");
            feature.AddKnownType("Microsoft.VisualBasic.HideModuleNameAttribute,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.HideModuleNameAttribute");
            feature.AddKnownType("Microsoft.VisualBasic.Information,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.Information");
            feature.AddKnownType("Microsoft.VisualBasic.Interaction,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.Interaction");
            feature.AddKnownType("Microsoft.VisualBasic.MsgBoxResult,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.MsgBoxResult");
            feature.AddKnownType("Microsoft.VisualBasic.MsgBoxStyle,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.MsgBoxStyle");
            feature.AddKnownType("Microsoft.VisualBasic.MyGroupCollectionAttribute,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.MyGroupCollectionAttribute");
            feature.AddKnownType("Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.OpenAccess");
            feature.AddKnownType("Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.OpenMode");
            feature.AddKnownType("Microsoft.VisualBasic.OpenShare,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.OpenShare");
            feature.AddKnownType("Microsoft.VisualBasic.SpcInfo,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.SpcInfo");
            feature.AddKnownType("Microsoft.VisualBasic.Strings,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.Strings");
            feature.AddKnownType("Microsoft.VisualBasic.TabInfo,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.TabInfo");
            feature.AddKnownType("Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.TriState");
            feature.AddKnownType("Microsoft.VisualBasic.VariantType,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.VariantType");
            feature.AddKnownType("Microsoft.VisualBasic.VBFixedArrayAttribute,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.VBFixedArrayAttribute");
            feature.AddKnownType("Microsoft.VisualBasic.VBFixedStringAttribute,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.VBFixedStringAttribute");
            feature.AddKnownType("Microsoft.VisualBasic.VBMath,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.VBMath");
            feature.AddKnownType("Microsoft.VisualBasic.VbStrConv,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.VbStrConv");
            feature.AddKnownType("Microsoft.VisualBasic.CompilerServices.BooleanType,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.CompilerServices.BooleanType");
            feature.AddKnownType("Microsoft.VisualBasic.CompilerServices.ByteType,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.CompilerServices.ByteType");
            feature.AddKnownType("Microsoft.VisualBasic.CompilerServices.CharArrayType,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.CompilerServices.CharArrayType");
            feature.AddKnownType("Microsoft.VisualBasic.CompilerServices.CharType,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.CompilerServices.CharType");
            feature.AddKnownType("Microsoft.VisualBasic.CompilerServices.Conversions,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.CompilerServices.Conversions");
            feature.AddKnownType("Microsoft.VisualBasic.CompilerServices.DateType,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.CompilerServices.DateType");
            feature.AddKnownType("Microsoft.VisualBasic.CompilerServices.DecimalType,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.CompilerServices.DecimalType");
            feature.AddKnownType("Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute");
            feature.AddKnownType("Microsoft.VisualBasic.CompilerServices.DoubleType,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.CompilerServices.DoubleType");
            feature.AddKnownType("Microsoft.VisualBasic.CompilerServices.IncompleteInitialization,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.CompilerServices.IncompleteInitialization");
            feature.AddKnownType("Microsoft.VisualBasic.CompilerServices.IntegerType,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.CompilerServices.IntegerType");
            feature.AddKnownType("Microsoft.VisualBasic.CompilerServices.LateBinding,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.CompilerServices.LateBinding");
            feature.AddKnownType("Microsoft.VisualBasic.CompilerServices.LikeOperator,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.CompilerServices.LikeOperator");
            feature.AddKnownType("Microsoft.VisualBasic.CompilerServices.LongType,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.CompilerServices.LongType");
            feature.AddKnownType("Microsoft.VisualBasic.CompilerServices.NewLateBinding,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.CompilerServices.NewLateBinding");
            feature.AddKnownType("Microsoft.VisualBasic.CompilerServices.ObjectFlowControl,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.CompilerServices.ObjectFlowControl");
            feature.AddKnownType("Microsoft.VisualBasic.CompilerServices.ObjectFlowControl+ForLoopControl,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.CompilerServices.Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl");
            feature.AddKnownType("Microsoft.VisualBasic.CompilerServices.ObjectType,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.CompilerServices.ObjectType");
            feature.AddKnownType("Microsoft.VisualBasic.CompilerServices.Operators,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.CompilerServices.Operators");
            feature.AddKnownType("Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute");
            feature.AddKnownType("Microsoft.VisualBasic.CompilerServices.OptionTextAttribute,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.CompilerServices.OptionTextAttribute");
            feature.AddKnownType("Microsoft.VisualBasic.CompilerServices.ProjectData,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.CompilerServices.ProjectData");
            feature.AddKnownType("Microsoft.VisualBasic.CompilerServices.ShortType,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.CompilerServices.ShortType");
            feature.AddKnownType("Microsoft.VisualBasic.CompilerServices.SingleType,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.CompilerServices.SingleType");
            feature.AddKnownType("Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute");
            feature.AddKnownType("Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag");
            feature.AddKnownType("Microsoft.VisualBasic.CompilerServices.StringType,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.CompilerServices.StringType");
            feature.AddKnownType("Microsoft.VisualBasic.CompilerServices.Utils,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.CompilerServices.Utils");
            feature.AddKnownType("Microsoft.VisualBasic.CompilerServices.Versioned,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.CompilerServices.Versioned");
            feature.AddKnownType("Microsoft.VisualBasic.FileIO.DeleteDirectoryOption,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.FileIO.DeleteDirectoryOption");
            feature.AddKnownType("Microsoft.VisualBasic.FileIO.FieldType,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.FileIO.FieldType");
            feature.AddKnownType("Microsoft.VisualBasic.FileIO.FileSystem,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.FileIO.FileSystem");
            feature.AddKnownType("Microsoft.VisualBasic.FileIO.MalformedLineException,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.FileIO.MalformedLineException");
            feature.AddKnownType("Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.FileIO.RecycleOption");
            feature.AddKnownType("Microsoft.VisualBasic.FileIO.SearchOption,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.FileIO.SearchOption");
            feature.AddKnownType("Microsoft.VisualBasic.FileIO.SpecialDirectories,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.FileIO.SpecialDirectories");
            feature.AddKnownType("Microsoft.VisualBasic.FileIO.TextFieldParser,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.FileIO.TextFieldParser");
            feature.AddKnownType("Microsoft.VisualBasic.FileIO.UICancelOption,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.FileIO.UICancelOption");
            feature.AddKnownType("Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.Core", "Microsoft.VisualBasic.FileIO.UIOption");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Win32.Primitives", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.ComponentModel.Win32Exception", "Win32Exception");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Microsoft.Win32.Registry", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Win32.RegistryHive,Microsoft.Win32.Registry", "Microsoft.Win32.RegistryHive");
            feature.AddKnownType("Microsoft.Win32.RegistryKey,Microsoft.Win32.Registry", "Microsoft.Win32.RegistryKey");
            feature.AddKnownType("Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.Registry", "Microsoft.Win32.RegistryKeyPermissionCheck");
            feature.AddKnownType("Microsoft.Win32.RegistryOptions,Microsoft.Win32.Registry", "Microsoft.Win32.RegistryOptions");
            feature.AddKnownType("Microsoft.Win32.RegistryValueKind,Microsoft.Win32.Registry", "Microsoft.Win32.RegistryValueKind");
            feature.AddKnownType("Microsoft.Win32.RegistryValueOptions,Microsoft.Win32.Registry", "Microsoft.Win32.RegistryValueOptions");
            feature.AddKnownType("Microsoft.Win32.RegistryView,Microsoft.Win32.Registry", "Microsoft.Win32.RegistryView");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.Registry", "Microsoft.Win32.SafeHandles.SafeRegistryHandle");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Security.AccessControl.RegistryAccessRule", "RegistryAccessRule");
            feature.AddKnownType("System.Security.AccessControl.RegistryAuditRule", "RegistryAuditRule");
            feature.AddKnownType("System.Security.AccessControl.RegistryRights", "RegistryRights");
            feature.AddKnownType("System.Security.AccessControl.RegistrySecurity", "RegistrySecurity");
            feature.AddKnownType("MongoDB.Bson.BsonException,MongoDB.Bson", "MongoDB.Bson.BsonException");
            feature.AddKnownType("MongoDB.Bson.BsonInternalException,MongoDB.Bson", "MongoDB.Bson.BsonInternalException");
            feature.AddKnownType("MongoDB.Bson.BsonSerializationException,MongoDB.Bson", "MongoDB.Bson.BsonSerializationException");
            feature.AddKnownType("MongoDB.Bson.DuplicateBsonMemberMapAttributeException,MongoDB.Bson", "MongoDB.Bson.DuplicateBsonMemberMapAttributeException");
            feature.AddKnownType("MongoDB.Bson.TruncationException,MongoDB.Bson", "MongoDB.Bson.TruncationException");
            feature.AddKnownType("MongoDB.Bson.BsonArray,MongoDB.Bson", "MongoDB.Bson.BsonArray");
            feature.AddKnownType("MongoDB.Bson.BsonBinaryData,MongoDB.Bson", "MongoDB.Bson.BsonBinaryData");
            feature.AddKnownType("MongoDB.Bson.BsonBinarySubType,MongoDB.Bson", "MongoDB.Bson.BsonBinarySubType");
            feature.AddKnownType("MongoDB.Bson.BsonBoolean,MongoDB.Bson", "MongoDB.Bson.BsonBoolean");
            feature.AddKnownType("MongoDB.Bson.BsonDateTime,MongoDB.Bson", "MongoDB.Bson.BsonDateTime");
            feature.AddKnownType("MongoDB.Bson.BsonDecimal128,MongoDB.Bson", "MongoDB.Bson.BsonDecimal128");
            feature.AddKnownType("MongoDB.Bson.BsonDocument,MongoDB.Bson", "MongoDB.Bson.BsonDocument");
            feature.AddKnownType("MongoDB.Bson.BsonDocumentWrapper,MongoDB.Bson", "MongoDB.Bson.BsonDocumentWrapper");
            feature.AddKnownType("MongoDB.Bson.BsonDouble,MongoDB.Bson", "MongoDB.Bson.BsonDouble");
            feature.AddKnownType("MongoDB.Bson.BsonElement,MongoDB.Bson", "MongoDB.Bson.BsonElement");
            feature.AddKnownType("MongoDB.Bson.BsonInt32,MongoDB.Bson", "MongoDB.Bson.BsonInt32");
            feature.AddKnownType("MongoDB.Bson.BsonInt64,MongoDB.Bson", "MongoDB.Bson.BsonInt64");
            feature.AddKnownType("MongoDB.Bson.BsonJavaScript,MongoDB.Bson", "MongoDB.Bson.BsonJavaScript");
            feature.AddKnownType("MongoDB.Bson.BsonJavaScriptWithScope,MongoDB.Bson", "MongoDB.Bson.BsonJavaScriptWithScope");
            feature.AddKnownType("MongoDB.Bson.BsonMaxKey,MongoDB.Bson", "MongoDB.Bson.BsonMaxKey");
            feature.AddKnownType("MongoDB.Bson.BsonMinKey,MongoDB.Bson", "MongoDB.Bson.BsonMinKey");
            feature.AddKnownType("MongoDB.Bson.BsonNull,MongoDB.Bson", "MongoDB.Bson.BsonNull");
            feature.AddKnownType("MongoDB.Bson.BsonObjectId,MongoDB.Bson", "MongoDB.Bson.BsonObjectId");
            feature.AddKnownType("MongoDB.Bson.BsonRegularExpression,MongoDB.Bson", "MongoDB.Bson.BsonRegularExpression");
            feature.AddKnownType("MongoDB.Bson.BsonString,MongoDB.Bson", "MongoDB.Bson.BsonString");
            feature.AddKnownType("MongoDB.Bson.BsonSymbol,MongoDB.Bson", "MongoDB.Bson.BsonSymbol");
            feature.AddKnownType("MongoDB.Bson.BsonTimestamp,MongoDB.Bson", "MongoDB.Bson.BsonTimestamp");
            feature.AddKnownType("MongoDB.Bson.BsonType,MongoDB.Bson", "MongoDB.Bson.BsonType");
            feature.AddKnownType("MongoDB.Bson.BsonTypeMapper+Conversion,MongoDB.Bson", "MongoDB.Bson.Conversion");
            feature.AddKnownType("MongoDB.Bson.BsonTypeMapper+Mapping,MongoDB.Bson", "MongoDB.Bson.Mapping");
            feature.AddKnownType("MongoDB.Bson.DuplicateNameHandling,MongoDB.Bson", "MongoDB.Bson.DuplicateNameHandling");
            feature.AddKnownType("MongoDB.Bson.BsonTypeMapperOptions,MongoDB.Bson", "MongoDB.Bson.BsonTypeMapperOptions");
            feature.AddKnownType("MongoDB.Bson.BsonUndefined,MongoDB.Bson", "MongoDB.Bson.BsonUndefined");
            feature.AddKnownType("MongoDB.Bson.BsonValue,MongoDB.Bson", "MongoDB.Bson.BsonValue");
            feature.AddKnownType("MongoDB.Bson.Decimal128,MongoDB.Bson", "MongoDB.Bson.Decimal128");
            feature.AddKnownType("MongoDB.Bson.Decimal128+Decimal128Comparer,MongoDB.Bson", "MongoDB.Bson.Decimal128Comparer");
            feature.AddKnownType("MongoDB.Bson.Decimal128+Decimal128Comparer+Decimal128Type,MongoDB.Bson", "MongoDB.Bson.Decimal128Type");
            feature.AddKnownType("MongoDB.Bson.Decimal128+Decimal128Comparer+NumberClass,MongoDB.Bson", "MongoDB.Bson.NumberClass");
            feature.AddKnownType("MongoDB.Bson.GuidRepresentation,MongoDB.Bson", "MongoDB.Bson.GuidRepresentation");
            feature.AddKnownType("MongoDB.Bson.GuidRepresentationMode,MongoDB.Bson", "MongoDB.Bson.GuidRepresentationMode");
            feature.AddKnownType("MongoDB.Bson.IConvertibleToBsonDocument,MongoDB.Bson", "MongoDB.Bson.IConvertibleToBsonDocument");
            feature.AddKnownType("MongoDB.Bson.ICustomBsonTypeMapper,MongoDB.Bson", "MongoDB.Bson.ICustomBsonTypeMapper");
            feature.AddKnownType("MongoDB.Bson.LazyBsonArray,MongoDB.Bson", "MongoDB.Bson.LazyBsonArray");
            feature.AddKnownType("MongoDB.Bson.LazyBsonDocument,MongoDB.Bson", "MongoDB.Bson.LazyBsonDocument");
            feature.AddKnownType("MongoDB.Bson.MaterializedOnDemandBsonArray,MongoDB.Bson", "MongoDB.Bson.MaterializedOnDemandBsonArray");
            feature.AddKnownType("MongoDB.Bson.MaterializedOnDemandBsonArray+MaterializedOnDemandBsonArraySerializer,MongoDB.Bson", "MongoDB.Bson.MaterializedOnDemandBsonArraySerializer");
            feature.AddKnownType("MongoDB.Bson.MaterializedOnDemandBsonDocument,MongoDB.Bson", "MongoDB.Bson.MaterializedOnDemandBsonDocument");
            feature.AddKnownType("MongoDB.Bson.MaterializedOnDemandBsonDocumentSerializer,MongoDB.Bson", "MongoDB.Bson.MaterializedOnDemandBsonDocumentSerializer");
            feature.AddKnownType("MongoDB.Bson.ObjectId,MongoDB.Bson", "MongoDB.Bson.ObjectId");
            feature.AddKnownType("MongoDB.Bson.RawBsonArray,MongoDB.Bson", "MongoDB.Bson.RawBsonArray");
            feature.AddKnownType("MongoDB.Bson.RawBsonDocument,MongoDB.Bson", "MongoDB.Bson.RawBsonDocument");
            feature.AddKnownType("MongoDB.Bson.UInt128,MongoDB.Bson", "MongoDB.Bson.UInt128");
            feature.AddKnownType("MongoDB.Bson.PreserveAttribute,MongoDB.Bson", "MongoDB.Bson.PreserveAttribute");
            feature.AddKnownType("MongoDB.Bson.IO.IArrayElementNameAccelerator,MongoDB.Bson", "MongoDB.Bson.IO.IArrayElementNameAccelerator");
            feature.AddKnownType("MongoDB.Bson.IO.ArrayElementNameAccelerator,MongoDB.Bson", "MongoDB.Bson.IO.ArrayElementNameAccelerator");
            feature.AddKnownType("MongoDB.Bson.IO.BsonBinaryReader,MongoDB.Bson", "MongoDB.Bson.IO.BsonBinaryReader");
            feature.AddKnownType("MongoDB.Bson.IO.BsonBinaryReaderBookmark,MongoDB.Bson", "MongoDB.Bson.IO.BsonBinaryReaderBookmark");
            feature.AddKnownType("MongoDB.Bson.IO.BsonBinaryReaderContext,MongoDB.Bson", "MongoDB.Bson.IO.BsonBinaryReaderContext");
            feature.AddKnownType("MongoDB.Bson.IO.BsonBinaryReaderSettings,MongoDB.Bson", "MongoDB.Bson.IO.BsonBinaryReaderSettings");
            feature.AddKnownType("MongoDB.Bson.IO.BsonBinaryWriter,MongoDB.Bson", "MongoDB.Bson.IO.BsonBinaryWriter");
            feature.AddKnownType("MongoDB.Bson.IO.BsonBinaryWriterContext,MongoDB.Bson", "MongoDB.Bson.IO.BsonBinaryWriterContext");
            feature.AddKnownType("MongoDB.Bson.IO.BsonBinaryWriterSettings,MongoDB.Bson", "MongoDB.Bson.IO.BsonBinaryWriterSettings");
            feature.AddKnownType("MongoDB.Bson.IO.BsonChunkPool,MongoDB.Bson", "MongoDB.Bson.IO.BsonChunkPool");
            feature.AddKnownType("MongoDB.Bson.IO.BsonChunkPool+DisposableChunk,MongoDB.Bson", "MongoDB.Bson.IO.DisposableChunk");
            feature.AddKnownType("MongoDB.Bson.IO.BsonChunkPool+ReferenceCountedChunk,MongoDB.Bson", "MongoDB.Bson.IO.ReferenceCountedChunk");
            feature.AddKnownType("MongoDB.Bson.IO.BsonDocumentReader,MongoDB.Bson", "MongoDB.Bson.IO.BsonDocumentReader");
            feature.AddKnownType("MongoDB.Bson.IO.BsonDocumentReaderBookmark,MongoDB.Bson", "MongoDB.Bson.IO.BsonDocumentReaderBookmark");
            feature.AddKnownType("MongoDB.Bson.IO.BsonDocumentReaderContext,MongoDB.Bson", "MongoDB.Bson.IO.BsonDocumentReaderContext");
            feature.AddKnownType("MongoDB.Bson.IO.BsonDocumentReaderSettings,MongoDB.Bson", "MongoDB.Bson.IO.BsonDocumentReaderSettings");
            feature.AddKnownType("MongoDB.Bson.IO.BsonDocumentWriter,MongoDB.Bson", "MongoDB.Bson.IO.BsonDocumentWriter");
            feature.AddKnownType("MongoDB.Bson.IO.BsonDocumentWriterContext,MongoDB.Bson", "MongoDB.Bson.IO.BsonDocumentWriterContext");
            feature.AddKnownType("MongoDB.Bson.IO.BsonDocumentWriterSettings,MongoDB.Bson", "MongoDB.Bson.IO.BsonDocumentWriterSettings");
            feature.AddKnownType("MongoDB.Bson.IO.BsonReader,MongoDB.Bson", "MongoDB.Bson.IO.BsonReader");
            feature.AddKnownType("MongoDB.Bson.IO.BsonReaderBookmark,MongoDB.Bson", "MongoDB.Bson.IO.BsonReaderBookmark");
            feature.AddKnownType("MongoDB.Bson.IO.BsonReaderSettings,MongoDB.Bson", "MongoDB.Bson.IO.BsonReaderSettings");
            feature.AddKnownType("MongoDB.Bson.IO.BsonReaderState,MongoDB.Bson", "MongoDB.Bson.IO.BsonReaderState");
            feature.AddKnownType("MongoDB.Bson.IO.BsonStream,MongoDB.Bson", "MongoDB.Bson.IO.BsonStream");
            feature.AddKnownType("MongoDB.Bson.IO.BsonStreamAdapter,MongoDB.Bson", "MongoDB.Bson.IO.BsonStreamAdapter");
            feature.AddKnownType("MongoDB.Bson.IO.BsonTrie`1,MongoDB.Bson", "MongoDB.Bson.IO.BsonTrie`1'1");
            feature.AddKnownType("MongoDB.Bson.IO.BsonTrieNode`1,MongoDB.Bson", "MongoDB.Bson.IO.BsonTrieNode`1'1");
            feature.AddKnownType("MongoDB.Bson.IO.BsonWriter,MongoDB.Bson", "MongoDB.Bson.IO.BsonWriter");
            feature.AddKnownType("MongoDB.Bson.IO.BsonWriterSettings,MongoDB.Bson", "MongoDB.Bson.IO.BsonWriterSettings");
            feature.AddKnownType("MongoDB.Bson.IO.BsonWriterState,MongoDB.Bson", "MongoDB.Bson.IO.BsonWriterState");
            feature.AddKnownType("MongoDB.Bson.IO.ByteArrayBuffer,MongoDB.Bson", "MongoDB.Bson.IO.ByteArrayBuffer");
            feature.AddKnownType("MongoDB.Bson.IO.ByteArrayChunk,MongoDB.Bson", "MongoDB.Bson.IO.ByteArrayChunk");
            feature.AddKnownType("MongoDB.Bson.IO.ByteBufferSlice,MongoDB.Bson", "MongoDB.Bson.IO.ByteBufferSlice");
            feature.AddKnownType("MongoDB.Bson.IO.ByteBufferStream,MongoDB.Bson", "MongoDB.Bson.IO.ByteBufferStream");
            feature.AddKnownType("MongoDB.Bson.IO.ContextType,MongoDB.Bson", "MongoDB.Bson.IO.ContextType");
            feature.AddKnownType("MongoDB.Bson.IO.ElementAppendingBsonWriter,MongoDB.Bson", "MongoDB.Bson.IO.ElementAppendingBsonWriter");
            feature.AddKnownType("MongoDB.Bson.IO.EncodingHelper+DisposableSegment,MongoDB.Bson", "MongoDB.Bson.IO.MongoDB.Bson.IO.EncodingHelper.DisposableSegment");
            feature.AddKnownType("MongoDB.Bson.IO.IBsonChunk,MongoDB.Bson", "MongoDB.Bson.IO.IBsonChunk");
            feature.AddKnownType("MongoDB.Bson.IO.IBsonChunkSource,MongoDB.Bson", "MongoDB.Bson.IO.IBsonChunkSource");
            feature.AddKnownType("MongoDB.Bson.IO.IBsonReader,MongoDB.Bson", "MongoDB.Bson.IO.IBsonReader");
            feature.AddKnownType("MongoDB.Bson.IO.IBsonWriter,MongoDB.Bson", "MongoDB.Bson.IO.IBsonWriter");
            feature.AddKnownType("MongoDB.Bson.IO.IByteBuffer,MongoDB.Bson", "MongoDB.Bson.IO.IByteBuffer");
            feature.AddKnownType("MongoDB.Bson.IO.IElementNameValidator,MongoDB.Bson", "MongoDB.Bson.IO.IElementNameValidator");
            feature.AddKnownType("MongoDB.Bson.IO.INameDecoder,MongoDB.Bson", "MongoDB.Bson.IO.INameDecoder");
            feature.AddKnownType("MongoDB.Bson.IO.InputBufferChunkSource,MongoDB.Bson", "MongoDB.Bson.IO.InputBufferChunkSource");
            feature.AddKnownType("MongoDB.Bson.IO.IStreamEfficientCopyTo,MongoDB.Bson", "MongoDB.Bson.IO.IStreamEfficientCopyTo");
            feature.AddKnownType("MongoDB.Bson.IO.JsonBuffer,MongoDB.Bson", "MongoDB.Bson.IO.JsonBuffer");
            feature.AddKnownType("MongoDB.Bson.IO.JsonOutputMode,MongoDB.Bson", "MongoDB.Bson.IO.JsonOutputMode");
            feature.AddKnownType("MongoDB.Bson.IO.JsonReader,MongoDB.Bson", "MongoDB.Bson.IO.JsonReader");
            feature.AddKnownType("MongoDB.Bson.IO.JsonReaderBookmark,MongoDB.Bson", "MongoDB.Bson.IO.JsonReaderBookmark");
            feature.AddKnownType("MongoDB.Bson.IO.JsonReaderContext,MongoDB.Bson", "MongoDB.Bson.IO.JsonReaderContext");
            feature.AddKnownType("MongoDB.Bson.IO.JsonReaderSettings,MongoDB.Bson", "MongoDB.Bson.IO.JsonReaderSettings");
            feature.AddKnownType("MongoDB.Bson.IO.JsonScanner+NumberState,MongoDB.Bson", "MongoDB.Bson.IO.NumberState");
            feature.AddKnownType("MongoDB.Bson.IO.JsonScanner+RegularExpressionState,MongoDB.Bson", "MongoDB.Bson.IO.RegularExpressionState");
            feature.AddKnownType("MongoDB.Bson.IO.JsonTokenType,MongoDB.Bson", "MongoDB.Bson.IO.JsonTokenType");
            feature.AddKnownType("MongoDB.Bson.IO.JsonToken,MongoDB.Bson", "MongoDB.Bson.IO.JsonToken");
            feature.AddKnownType("MongoDB.Bson.IO.DateTimeJsonToken,MongoDB.Bson", "MongoDB.Bson.IO.DateTimeJsonToken");
            feature.AddKnownType("MongoDB.Bson.IO.DoubleJsonToken,MongoDB.Bson", "MongoDB.Bson.IO.DoubleJsonToken");
            feature.AddKnownType("MongoDB.Bson.IO.Int32JsonToken,MongoDB.Bson", "MongoDB.Bson.IO.Int32JsonToken");
            feature.AddKnownType("MongoDB.Bson.IO.Int64JsonToken,MongoDB.Bson", "MongoDB.Bson.IO.Int64JsonToken");
            feature.AddKnownType("MongoDB.Bson.IO.ObjectIdJsonToken,MongoDB.Bson", "MongoDB.Bson.IO.ObjectIdJsonToken");
            feature.AddKnownType("MongoDB.Bson.IO.RegularExpressionJsonToken,MongoDB.Bson", "MongoDB.Bson.IO.RegularExpressionJsonToken");
            feature.AddKnownType("MongoDB.Bson.IO.StringJsonToken,MongoDB.Bson", "MongoDB.Bson.IO.StringJsonToken");
            feature.AddKnownType("MongoDB.Bson.IO.JsonWriter,MongoDB.Bson", "MongoDB.Bson.IO.JsonWriter");
            feature.AddKnownType("MongoDB.Bson.IO.JsonWriterContext,MongoDB.Bson", "MongoDB.Bson.IO.JsonWriterContext");
            feature.AddKnownType("MongoDB.Bson.IO.JsonWriterSettings,MongoDB.Bson", "MongoDB.Bson.IO.JsonWriterSettings");
            feature.AddKnownType("MongoDB.Bson.IO.MultiChunkBuffer,MongoDB.Bson", "MongoDB.Bson.IO.MultiChunkBuffer");
            feature.AddKnownType("MongoDB.Bson.IO.NoOpElementNameValidator,MongoDB.Bson", "MongoDB.Bson.IO.NoOpElementNameValidator");
            feature.AddKnownType("MongoDB.Bson.IO.OutputBufferChunkSource,MongoDB.Bson", "MongoDB.Bson.IO.OutputBufferChunkSource");
            feature.AddKnownType("MongoDB.Bson.IO.SingleChunkBuffer,MongoDB.Bson", "MongoDB.Bson.IO.SingleChunkBuffer");
            feature.AddKnownType("MongoDB.Bson.IO.ThreadStaticBuffer+RentedBuffer,MongoDB.Bson", "MongoDB.Bson.IO.MongoDB.Bson.IO.ThreadStaticBuffer.RentedBuffer");
            feature.AddKnownType("MongoDB.Bson.IO.TrieNameDecoder`1,MongoDB.Bson", "MongoDB.Bson.IO.TrieNameDecoder`1'1");
            feature.AddKnownType("MongoDB.Bson.IO.Utf8NameDecoder,MongoDB.Bson", "MongoDB.Bson.IO.Utf8NameDecoder");
            feature.AddKnownType("MongoDB.Bson.IO.WrappingBsonWriter,MongoDB.Bson", "MongoDB.Bson.IO.WrappingBsonWriter");
            feature.AddKnownType("MongoDB.Bson.Serialization.AttributedSerializationProvider,MongoDB.Bson", "MongoDB.Bson.Serialization.AttributedSerializationProvider");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonMemberMapAttributeUsageAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonMemberMapAttributeUsageAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.IBsonClassMapAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.IBsonClassMapAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.IBsonCreatorMapAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.IBsonCreatorMapAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.IBsonMemberMapAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.IBsonMemberMapAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.IBsonPostProcessingAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.IBsonPostProcessingAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonClassMap,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonClassMap");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonClassMap`1,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonClassMap`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonClassMapSerializationProvider,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonClassMapSerializationProvider");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonCreatorMap,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonCreatorMap");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonDeserializationArgs,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonDeserializationArgs");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonDeserializationContext");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonDeserializationContext+Builder,MongoDB.Bson", "MongoDB.Bson.Serialization.MongoDB.Bson.Serialization.BsonDeserializationContext.Builder");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonDocumentBackedClass,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonDocumentBackedClass");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonMemberMap,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonMemberMap");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonObjectModelSerializationProvider,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonObjectModelSerializationProvider");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonSerializationArgs,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonSerializationArgs");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonSerializationContext");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonSerializationContext+Builder,MongoDB.Bson", "MongoDB.Bson.Serialization.MongoDB.Bson.Serialization.BsonSerializationContext.Builder");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonSerializationInfo,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonSerializationInfo");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonSerializationProviderBase,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonSerializationProviderBase");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonSerializerRegistry,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonSerializerRegistry");
            feature.AddKnownType("MongoDB.Bson.Serialization.CollectionsSerializationProvider,MongoDB.Bson", "MongoDB.Bson.Serialization.CollectionsSerializationProvider");
            feature.AddKnownType("MongoDB.Bson.Serialization.CreatorMapDelegateCompiler,MongoDB.Bson", "MongoDB.Bson.Serialization.CreatorMapDelegateCompiler");
            feature.AddKnownType("MongoDB.Bson.Serialization.DiscriminatedInterfaceSerializationProvider,MongoDB.Bson", "MongoDB.Bson.Serialization.DiscriminatedInterfaceSerializationProvider");
            feature.AddKnownType("MongoDB.Bson.Serialization.ExpressionVisitor,MongoDB.Bson", "MongoDB.Bson.Serialization.ExpressionVisitor");
            feature.AddKnownType("MongoDB.Bson.Serialization.IBsonArraySerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.IBsonArraySerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.IBsonDictionarySerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.IBsonDictionarySerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.IBsonDocumentSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.IBsonDocumentSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.IBsonIdProvider,MongoDB.Bson", "MongoDB.Bson.Serialization.IBsonIdProvider");
            feature.AddKnownType("MongoDB.Bson.Serialization.IBsonPolymorphicSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.IBsonPolymorphicSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.IBsonSerializationProvider,MongoDB.Bson", "MongoDB.Bson.Serialization.IBsonSerializationProvider");
            feature.AddKnownType("MongoDB.Bson.Serialization.IRegistryAwareBsonSerializationProvider,MongoDB.Bson", "MongoDB.Bson.Serialization.IRegistryAwareBsonSerializationProvider");
            feature.AddKnownType("MongoDB.Bson.Serialization.IBsonSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.IBsonSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.IBsonSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.IBsonSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.IBsonSerializerRegistry,MongoDB.Bson", "MongoDB.Bson.Serialization.IBsonSerializerRegistry");
            feature.AddKnownType("MongoDB.Bson.Serialization.IChildSerializerConfigurable,MongoDB.Bson", "MongoDB.Bson.Serialization.IChildSerializerConfigurable");
            feature.AddKnownType("MongoDB.Bson.Serialization.ICreatorSelector,MongoDB.Bson", "MongoDB.Bson.Serialization.ICreatorSelector");
            feature.AddKnownType("MongoDB.Bson.Serialization.IDictionaryRepresentationConfigurable,MongoDB.Bson", "MongoDB.Bson.Serialization.IDictionaryRepresentationConfigurable");
            feature.AddKnownType("MongoDB.Bson.Serialization.IDictionaryRepresentationConfigurable`1,MongoDB.Bson", "MongoDB.Bson.Serialization.IDictionaryRepresentationConfigurable`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.IIdGenerator,MongoDB.Bson", "MongoDB.Bson.Serialization.IIdGenerator");
            feature.AddKnownType("MongoDB.Bson.Serialization.IRepresentationConfigurable,MongoDB.Bson", "MongoDB.Bson.Serialization.IRepresentationConfigurable");
            feature.AddKnownType("MongoDB.Bson.Serialization.IRepresentationConfigurable`1,MongoDB.Bson", "MongoDB.Bson.Serialization.IRepresentationConfigurable`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.IRepresentationConverterConfigurable,MongoDB.Bson", "MongoDB.Bson.Serialization.IRepresentationConverterConfigurable");
            feature.AddKnownType("MongoDB.Bson.Serialization.IRepresentationConverterConfigurable`1,MongoDB.Bson", "MongoDB.Bson.Serialization.IRepresentationConverterConfigurable`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.MostArgumentsCreatorSelector,MongoDB.Bson", "MongoDB.Bson.Serialization.MostArgumentsCreatorSelector");
            feature.AddKnownType("MongoDB.Bson.Serialization.MostArgumentsCreatorSelector+MatchData,MongoDB.Bson", "MongoDB.Bson.Serialization.MatchData");
            feature.AddKnownType("MongoDB.Bson.Serialization.PrimitiveSerializationProvider,MongoDB.Bson", "MongoDB.Bson.Serialization.PrimitiveSerializationProvider");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonClassMapSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonClassMapSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.BsonDocumentBackedClassSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.BsonDocumentBackedClassSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.TypeMappingSerializationProvider,MongoDB.Bson", "MongoDB.Bson.Serialization.TypeMappingSerializationProvider");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonConstructorAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonConstructorAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonDateTimeOptionsAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonDateTimeOptionsAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonDefaultValueAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonDefaultValueAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonDictionaryOptionsAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonDictionaryOptionsAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonDiscriminatorAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonDiscriminatorAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonElementAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonElementAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonExtraElementsAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonExtraElementsAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonFactoryMethodAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonFactoryMethodAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonGuidRepresentationAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonGuidRepresentationAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonIdAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonIdAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonIgnoreAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonIgnoreAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonIgnoreExtraElementsAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonIgnoreExtraElementsAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonIgnoreIfDefaultAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonIgnoreIfDefaultAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonIgnoreIfNullAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonIgnoreIfNullAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonKnownTypesAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonKnownTypesAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonNoIdAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonNoIdAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonRepresentationAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonRepresentationAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonRequiredAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonRequiredAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonSerializationOptionsAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonSerializationOptionsAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonSerializerAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonSerializerAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Attributes.BsonTimeSpanOptionsAttribute,MongoDB.Bson", "MongoDB.Bson.Serialization.Attributes.BsonTimeSpanOptionsAttribute");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.AttributeConventionPack,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.AttributeConventionPack");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.AttributeConventionPack+AttributeConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.AttributeConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.CamelCaseElementNameConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.CamelCaseElementNameConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.ConventionBase,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.ConventionBase");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.ConventionPack,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.ConventionPack");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.ConventionRegistry+ConventionPackContainer,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.ConventionPackContainer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.ConventionRunner,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.ConventionRunner");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.DefaultConventionPack,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.DefaultConventionPack");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.DelegateClassMapConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.DelegateClassMapConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.DelegateMemberMapConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.DelegateMemberMapConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.DelegatePostProcessingConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.DelegatePostProcessingConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.EnumRepresentationConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.EnumRepresentationConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.HierarchicalDiscriminatorConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.HierarchicalDiscriminatorConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.IClassMapConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.IClassMapConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.IConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.IConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.IConventionPack,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.IConventionPack");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.ICreatorMapConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.ICreatorMapConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.IDiscriminatorConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.IDiscriminatorConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.IgnoreExtraElementsConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.IgnoreExtraElementsConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.IgnoreIfDefaultConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.IgnoreIfDefaultConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.IgnoreIfNullConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.IgnoreIfNullConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.IMemberMapConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.IMemberMapConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.ImmutableTypeClassMapConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.ImmutableTypeClassMapConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.IPostProcessingConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.IPostProcessingConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.LookupIdGeneratorConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.LookupIdGeneratorConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.MemberDefaultValueConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.MemberDefaultValueConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.MemberNameElementNameConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.MemberNameElementNameConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.NamedExtraElementsMemberConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.NamedExtraElementsMemberConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.NamedIdMemberConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.NamedIdMemberConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.NamedParameterCreatorMapConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.NamedParameterCreatorMapConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.NoIdMemberConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.NoIdMemberConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.ObjectDiscriminatorConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.ObjectDiscriminatorConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.ReadWriteMemberFinderConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.ReadWriteMemberFinderConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.ResetClassMapConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.ResetClassMapConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.ResetMemberMapsConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.ResetMemberMapsConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.ScalarDiscriminatorConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.ScalarDiscriminatorConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.StandardDiscriminatorConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.StandardDiscriminatorConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.StringIdStoredAsObjectIdConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.StringIdStoredAsObjectIdConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.Conventions.StringObjectIdIdGeneratorConvention,MongoDB.Bson", "MongoDB.Bson.Serialization.Conventions.StringObjectIdIdGeneratorConvention");
            feature.AddKnownType("MongoDB.Bson.Serialization.IdGenerators.AscendingGuidGenerator,MongoDB.Bson", "MongoDB.Bson.Serialization.IdGenerators.AscendingGuidGenerator");
            feature.AddKnownType("MongoDB.Bson.Serialization.IdGenerators.BsonBinaryDataGuidGenerator,MongoDB.Bson", "MongoDB.Bson.Serialization.IdGenerators.BsonBinaryDataGuidGenerator");
            feature.AddKnownType("MongoDB.Bson.Serialization.IdGenerators.BsonObjectIdGenerator,MongoDB.Bson", "MongoDB.Bson.Serialization.IdGenerators.BsonObjectIdGenerator");
            feature.AddKnownType("MongoDB.Bson.Serialization.IdGenerators.CombGuidGenerator,MongoDB.Bson", "MongoDB.Bson.Serialization.IdGenerators.CombGuidGenerator");
            feature.AddKnownType("MongoDB.Bson.Serialization.IdGenerators.GuidGenerator,MongoDB.Bson", "MongoDB.Bson.Serialization.IdGenerators.GuidGenerator");
            feature.AddKnownType("MongoDB.Bson.Serialization.IdGenerators.NullIdChecker,MongoDB.Bson", "MongoDB.Bson.Serialization.IdGenerators.NullIdChecker");
            feature.AddKnownType("MongoDB.Bson.Serialization.IdGenerators.ObjectIdGenerator,MongoDB.Bson", "MongoDB.Bson.Serialization.IdGenerators.ObjectIdGenerator");
            feature.AddKnownType("MongoDB.Bson.Serialization.IdGenerators.StringObjectIdGenerator,MongoDB.Bson", "MongoDB.Bson.Serialization.IdGenerators.StringObjectIdGenerator");
            feature.AddKnownType("MongoDB.Bson.Serialization.IdGenerators.ZeroIdChecker`1,MongoDB.Bson", "MongoDB.Bson.Serialization.IdGenerators.ZeroIdChecker`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Options.DictionaryRepresentation,MongoDB.Bson", "MongoDB.Bson.Serialization.Options.DictionaryRepresentation");
            feature.AddKnownType("MongoDB.Bson.Serialization.Options.RepresentationConverter,MongoDB.Bson", "MongoDB.Bson.Serialization.Options.RepresentationConverter");
            feature.AddKnownType("MongoDB.Bson.Serialization.Options.TimeSpanUnits,MongoDB.Bson", "MongoDB.Bson.Serialization.Options.TimeSpanUnits");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.AbstractClassSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.AbstractClassSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.ArraySerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.ArraySerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BitArraySerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BitArraySerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BooleanSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BooleanSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonArraySerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonArraySerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonBinaryDataSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonBinaryDataSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonBooleanSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonBooleanSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonDateTimeSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonDateTimeSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonDecimal128Serializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonDecimal128Serializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonDocumentSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonDocumentSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonDocumentWrapperSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonDocumentWrapperSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonDoubleSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonDoubleSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonInt32Serializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonInt32Serializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonInt64Serializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonInt64Serializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonJavaScriptSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonJavaScriptSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonJavaScriptWithScopeSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonJavaScriptWithScopeSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonMaxKeySerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonMaxKeySerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonMinKeySerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonMinKeySerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonNullSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonNullSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonObjectIdSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonObjectIdSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonRegularExpressionSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonRegularExpressionSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonStringSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonStringSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonSymbolSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonSymbolSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonTimestampSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonTimestampSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonUndefinedSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonUndefinedSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullArrayAndDocumentSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullArrayAndDocumentSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullArraySerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullArraySerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullDocumentSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullDocumentSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonValueSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonValueSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.BsonValueSerializerBase`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.BsonValueSerializerBase`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.ByteArraySerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.ByteArraySerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.ByteSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.ByteSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.CharSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.CharSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.ClassSerializerBase`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.ClassSerializerBase`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.CultureInfoSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.CultureInfoSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.DateTimeOffsetSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.DateTimeOffsetSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.DateTimeSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.DateTimeSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.Decimal128Serializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.Decimal128Serializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.DecimalSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.DecimalSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`3,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`3'3");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`3,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`3'3");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.DiscriminatedInterfaceSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.DiscriminatedInterfaceSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.DiscriminatedWrapperSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.DiscriminatedWrapperSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.DoubleSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.DoubleSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.DynamicDocumentBaseSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.DynamicDocumentBaseSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.ElementAppendingSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.ElementAppendingSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializer`2,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializer`2'2");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializerBase`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializerBase`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializerBase`2,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializerBase`2'2");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`2,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`2'2");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.EnumSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.EnumSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.ExpandoObjectSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.ExpandoObjectSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.GuidSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.GuidSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.ImpliedImplementationInterfaceSerializer`2,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.ImpliedImplementationInterfaceSerializer`2'2");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.Int16Serializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.Int16Serializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.Int32Serializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.Int32Serializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.Int64Serializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.Int64Serializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.IOrderedEnumerableSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.IOrderedEnumerableSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.OrderedEnumerableListWrapper`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.OrderedEnumerableListWrapper`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.IPAddressSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.IPAddressSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.IPEndPointSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.IPEndPointSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.KeyValuePairSerializer`2,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.KeyValuePairSerializer`2'2");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.LazyBsonArraySerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.LazyBsonArraySerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.LazyBsonDocumentSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.LazyBsonDocumentSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.NullableSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.NullableSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.ObjectIdSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.ObjectIdSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.ObjectSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.ObjectSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.PartiallyRawBsonDocumentSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.PartiallyRawBsonDocumentSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.ProjectingDeserializer`2,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.ProjectingDeserializer`2'2");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.QueueSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.QueueSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.QueueSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.QueueSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.RawBsonArraySerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.RawBsonArraySerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.RawBsonDocumentSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.RawBsonDocumentSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.ReadOnlyCollectionSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.ReadOnlyCollectionSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.ReadOnlyCollectionSubclassSerializer`2,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.ReadOnlyCollectionSubclassSerializer`2'2");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.ReadOnlyDictionaryInterfaceImplementerSerializer`3,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.ReadOnlyDictionaryInterfaceImplementerSerializer`3'3");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.RegexSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.RegexSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.SByteSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.SByteSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.SealedClassSerializerBase`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.SealedClassSerializerBase`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.SerializeAsNominalTypeSerializer`2,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.SerializeAsNominalTypeSerializer`2'2");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.SerializerBase`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.SerializerBase`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.SerializerHelper,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.SerializerHelper");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.SerializerHelper+Member,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.MongoDB.Bson.Serialization.Serializers.SerializerHelper.Member");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.SingleSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.SingleSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.StackSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.StackSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.StackSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.StackSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.StringSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.StringSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.StructSerializerBase`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.StructSerializerBase`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.ThreeDimensionalArraySerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.ThreeDimensionalArraySerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.TimeSpanSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.TimeSpanSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.TupleSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.TupleSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.TupleSerializer`2,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.TupleSerializer`2'2");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.TupleSerializer`3,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.TupleSerializer`3'3");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.TupleSerializer`4,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.TupleSerializer`4'4");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.TupleSerializer`5,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.TupleSerializer`5'5");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.TupleSerializer`6,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.TupleSerializer`6'6");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.TupleSerializer`7,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.TupleSerializer`7'7");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.TupleSerializer`8,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.TupleSerializer`8'8");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.TwoDimensionalArraySerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.TwoDimensionalArraySerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.UInt16Serializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.UInt16Serializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.UInt32Serializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.UInt32Serializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.UInt64Serializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.UInt64Serializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.UndiscriminatedActualTypeSerializer`1,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.UndiscriminatedActualTypeSerializer`1'1");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.UriSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.UriSerializer");
            feature.AddKnownType("MongoDB.Bson.Serialization.Serializers.VersionSerializer,MongoDB.Bson", "MongoDB.Bson.Serialization.Serializers.VersionSerializer");
            feature.AddKnownType("MongoDB.Shared.Hasher,MongoDB.Bson", "MongoDB.Shared.Hasher");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,MongoDB.Driver.Core", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("MongoDB.Driver.BatchTransformingAsyncCursor`2,MongoDB.Driver.Core", "MongoDB.Driver.BatchTransformingAsyncCursor`2'2");
            feature.AddKnownType("MongoDB.Driver.ChangeStreamDocument`1,MongoDB.Driver.Core", "MongoDB.Driver.ChangeStreamDocument`1'1");
            feature.AddKnownType("MongoDB.Driver.ChangeStreamDocumentCollectionNamespaceSerializer,MongoDB.Driver.Core", "MongoDB.Driver.ChangeStreamDocumentCollectionNamespaceSerializer");
            feature.AddKnownType("MongoDB.Driver.ChangeStreamDocumentDatabaseNamespaceSerializer,MongoDB.Driver.Core", "MongoDB.Driver.ChangeStreamDocumentDatabaseNamespaceSerializer");
            feature.AddKnownType("MongoDB.Driver.ChangeStreamDocumentSerializer`1,MongoDB.Driver.Core", "MongoDB.Driver.ChangeStreamDocumentSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.ChangeStreamFullDocumentBeforeChangeOption,MongoDB.Driver.Core", "MongoDB.Driver.ChangeStreamFullDocumentBeforeChangeOption");
            feature.AddKnownType("MongoDB.Driver.ChangeStreamFullDocumentOption,MongoDB.Driver.Core", "MongoDB.Driver.ChangeStreamFullDocumentOption");
            feature.AddKnownType("MongoDB.Driver.ChangeStreamOperationType,MongoDB.Driver.Core", "MongoDB.Driver.ChangeStreamOperationType");
            feature.AddKnownType("MongoDB.Driver.ChangeStreamOperationTypeSerializer,MongoDB.Driver.Core", "MongoDB.Driver.ChangeStreamOperationTypeSerializer");
            feature.AddKnownType("MongoDB.Driver.ChangeStreamUpdateDescription,MongoDB.Driver.Core", "MongoDB.Driver.ChangeStreamUpdateDescription");
            feature.AddKnownType("MongoDB.Driver.ChangeStreamUpdateDescriptionSerializer,MongoDB.Driver.Core", "MongoDB.Driver.ChangeStreamUpdateDescriptionSerializer");
            feature.AddKnownType("MongoDB.Driver.CollationAlternate,MongoDB.Driver.Core", "MongoDB.Driver.CollationAlternate");
            feature.AddKnownType("MongoDB.Driver.CollationCaseFirst,MongoDB.Driver.Core", "MongoDB.Driver.CollationCaseFirst");
            feature.AddKnownType("MongoDB.Driver.CollationMaxVariable,MongoDB.Driver.Core", "MongoDB.Driver.CollationMaxVariable");
            feature.AddKnownType("MongoDB.Driver.CollationStrength,MongoDB.Driver.Core", "MongoDB.Driver.CollationStrength");
            feature.AddKnownType("MongoDB.Driver.Collation,MongoDB.Driver.Core", "MongoDB.Driver.Collation");
            feature.AddKnownType("MongoDB.Driver.CollectionNamespace,MongoDB.Driver.Core", "MongoDB.Driver.CollectionNamespace");
            feature.AddKnownType("MongoDB.Driver.CoreServerSession,MongoDB.Driver.Core", "MongoDB.Driver.CoreServerSession");
            feature.AddKnownType("MongoDB.Driver.CoreServerSessionPool,MongoDB.Driver.Core", "MongoDB.Driver.CoreServerSessionPool");
            feature.AddKnownType("MongoDB.Driver.CoreServerSessionPool+ReleaseOnDisposeCoreServerSession,MongoDB.Driver.Core", "MongoDB.Driver.ReleaseOnDisposeCoreServerSession");
            feature.AddKnownType("MongoDB.Driver.ICoreServerSessionPool,MongoDB.Driver.Core", "MongoDB.Driver.ICoreServerSessionPool");
            feature.AddKnownType("MongoDB.Driver.ICoreServerSession,MongoDB.Driver.Core", "MongoDB.Driver.ICoreServerSession");
            feature.AddKnownType("MongoDB.Driver.WrappingCoreServerSession,MongoDB.Driver.Core", "MongoDB.Driver.WrappingCoreServerSession");
            feature.AddKnownType("MongoDB.Driver.CreateIndexCommitQuorum,MongoDB.Driver.Core", "MongoDB.Driver.CreateIndexCommitQuorum");
            feature.AddKnownType("MongoDB.Driver.CreateIndexCommitQuorumWithMode,MongoDB.Driver.Core", "MongoDB.Driver.CreateIndexCommitQuorumWithMode");
            feature.AddKnownType("MongoDB.Driver.CreateIndexCommitQuorumWithW,MongoDB.Driver.Core", "MongoDB.Driver.CreateIndexCommitQuorumWithW");
            feature.AddKnownType("MongoDB.Driver.DatabaseNamespace,MongoDB.Driver.Core", "MongoDB.Driver.DatabaseNamespace");
            feature.AddKnownType("MongoDB.Driver.DeferredAsyncCursor`1,MongoDB.Driver.Core", "MongoDB.Driver.DeferredAsyncCursor`1'1");
            feature.AddKnownType("MongoDB.Driver.DocumentValidationAction,MongoDB.Driver.Core", "MongoDB.Driver.DocumentValidationAction");
            feature.AddKnownType("MongoDB.Driver.DocumentValidationLevel,MongoDB.Driver.Core", "MongoDB.Driver.DocumentValidationLevel");
            feature.AddKnownType("MongoDB.Driver.IAsyncCursor`1,MongoDB.Driver.Core", "MongoDB.Driver.IAsyncCursor`1'1");
            feature.AddKnownType("MongoDB.Driver.IChangeStreamCursor`1,MongoDB.Driver.Core", "MongoDB.Driver.IChangeStreamCursor`1'1");
            feature.AddKnownType("MongoDB.Driver.ICursorBatchInfo,MongoDB.Driver.Core", "MongoDB.Driver.ICursorBatchInfo");
            feature.AddKnownType("MongoDB.Driver.IAsyncCursorSource`1,MongoDB.Driver.Core", "MongoDB.Driver.IAsyncCursorSource`1'1");
            feature.AddKnownType("MongoDB.Driver.MongoAuthenticationException,MongoDB.Driver.Core", "MongoDB.Driver.MongoAuthenticationException");
            feature.AddKnownType("MongoDB.Driver.MongoClientException,MongoDB.Driver.Core", "MongoDB.Driver.MongoClientException");
            feature.AddKnownType("MongoDB.Driver.MongoCommandException,MongoDB.Driver.Core", "MongoDB.Driver.MongoCommandException");
            feature.AddKnownType("MongoDB.Driver.MongoConfigurationException,MongoDB.Driver.Core", "MongoDB.Driver.MongoConfigurationException");
            feature.AddKnownType("MongoDB.Driver.MongoConnectionClosedException,MongoDB.Driver.Core", "MongoDB.Driver.MongoConnectionClosedException");
            feature.AddKnownType("MongoDB.Driver.MongoConnectionException,MongoDB.Driver.Core", "MongoDB.Driver.MongoConnectionException");
            feature.AddKnownType("MongoDB.Driver.MongoConnectionPoolPausedException,MongoDB.Driver.Core", "MongoDB.Driver.MongoConnectionPoolPausedException");
            feature.AddKnownType("MongoDB.Driver.MongoCursorNotFoundException,MongoDB.Driver.Core", "MongoDB.Driver.MongoCursorNotFoundException");
            feature.AddKnownType("MongoDB.Driver.MongoDuplicateKeyException,MongoDB.Driver.Core", "MongoDB.Driver.MongoDuplicateKeyException");
            feature.AddKnownType("MongoDB.Driver.MongoException,MongoDB.Driver.Core", "MongoDB.Driver.MongoException");
            feature.AddKnownType("MongoDB.Driver.MongoExecutionTimeoutException,MongoDB.Driver.Core", "MongoDB.Driver.MongoExecutionTimeoutException");
            feature.AddKnownType("MongoDB.Driver.MongoIncompatibleDriverException,MongoDB.Driver.Core", "MongoDB.Driver.MongoIncompatibleDriverException");
            feature.AddKnownType("MongoDB.Driver.MongoInternalException,MongoDB.Driver.Core", "MongoDB.Driver.MongoInternalException");
            feature.AddKnownType("MongoDB.Driver.MongoNodeIsRecoveringException,MongoDB.Driver.Core", "MongoDB.Driver.MongoNodeIsRecoveringException");
            feature.AddKnownType("MongoDB.Driver.MongoNotPrimaryException,MongoDB.Driver.Core", "MongoDB.Driver.MongoNotPrimaryException");
            feature.AddKnownType("MongoDB.Driver.MongoQueryException,MongoDB.Driver.Core", "MongoDB.Driver.MongoQueryException");
            feature.AddKnownType("MongoDB.Driver.MongoServerException,MongoDB.Driver.Core", "MongoDB.Driver.MongoServerException");
            feature.AddKnownType("MongoDB.Driver.MongoWaitQueueFullException,MongoDB.Driver.Core", "MongoDB.Driver.MongoWaitQueueFullException");
            feature.AddKnownType("MongoDB.Driver.MongoWriteConcernException,MongoDB.Driver.Core", "MongoDB.Driver.MongoWriteConcernException");
            feature.AddKnownType("MongoDB.Driver.Optional`1,MongoDB.Driver.Core", "MongoDB.Driver.Optional`1'1");
            feature.AddKnownType("MongoDB.Driver.ReadConcern,MongoDB.Driver.Core", "MongoDB.Driver.ReadConcern");
            feature.AddKnownType("MongoDB.Driver.ReadConcernLevel,MongoDB.Driver.Core", "MongoDB.Driver.ReadConcernLevel");
            feature.AddKnownType("MongoDB.Driver.ReadPreference,MongoDB.Driver.Core", "MongoDB.Driver.ReadPreference");
            feature.AddKnownType("MongoDB.Driver.ReadPreferenceHedge,MongoDB.Driver.Core", "MongoDB.Driver.ReadPreferenceHedge");
            feature.AddKnownType("MongoDB.Driver.ReadPreferenceMode,MongoDB.Driver.Core", "MongoDB.Driver.ReadPreferenceMode");
            feature.AddKnownType("MongoDB.Driver.ServerApi,MongoDB.Driver.Core", "MongoDB.Driver.ServerApi");
            feature.AddKnownType("MongoDB.Driver.ServerApiVersion,MongoDB.Driver.Core", "MongoDB.Driver.ServerApiVersion");
            feature.AddKnownType("MongoDB.Driver.ServerErrorCategory,MongoDB.Driver.Core", "MongoDB.Driver.ServerErrorCategory");
            feature.AddKnownType("MongoDB.Driver.ServerErrorCode,MongoDB.Driver.Core", "MongoDB.Driver.ServerErrorCode");
            feature.AddKnownType("MongoDB.Driver.SingleBatchAsyncCursor`1,MongoDB.Driver.Core", "MongoDB.Driver.SingleBatchAsyncCursor`1'1");
            feature.AddKnownType("MongoDB.Driver.Tag,MongoDB.Driver.Core", "MongoDB.Driver.Tag");
            feature.AddKnownType("MongoDB.Driver.TagSet,MongoDB.Driver.Core", "MongoDB.Driver.TagSet");
            feature.AddKnownType("MongoDB.Driver.TimeSeriesGranularity,MongoDB.Driver.Core", "MongoDB.Driver.TimeSeriesGranularity");
            feature.AddKnownType("MongoDB.Driver.TimeSeriesOptions,MongoDB.Driver.Core", "MongoDB.Driver.TimeSeriesOptions");
            feature.AddKnownType("MongoDB.Driver.TransactionOptions,MongoDB.Driver.Core", "MongoDB.Driver.TransactionOptions");
            feature.AddKnownType("MongoDB.Driver.WriteConcern,MongoDB.Driver.Core", "MongoDB.Driver.WriteConcern");
            feature.AddKnownType("MongoDB.Driver.WriteConcern+WValue,MongoDB.Driver.Core", "MongoDB.Driver.MongoDB.Driver.WriteConcern.WValue");
            feature.AddKnownType("MongoDB.Driver.WriteConcern+WCount,MongoDB.Driver.Core", "MongoDB.Driver.MongoDB.Driver.WriteConcern.WCount");
            feature.AddKnownType("MongoDB.Driver.WriteConcern+WMode,MongoDB.Driver.Core", "MongoDB.Driver.MongoDB.Driver.WriteConcern.WMode");
            feature.AddKnownType("MongoDB.Driver.WriteConcernResult,MongoDB.Driver.Core", "MongoDB.Driver.WriteConcernResult");
            feature.AddKnownType("MongoDB.Driver.Core.Async.AsyncQueue`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Async.AsyncQueue`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.AuthenticatorFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.AuthenticatorFactory");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.DefaultAuthenticator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.DefaultAuthenticator");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.GssapiAuthenticator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.GssapiAuthenticator");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.GssapiAuthenticator+GssapiMechanism,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.GssapiMechanism");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.GssapiAuthenticator+FirstStep,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.FirstStep");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.GssapiAuthenticator+InitializeStep,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.InitializeStep");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.GssapiAuthenticator+NegotiateStep,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.NegotiateStep");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.GssapiException,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.GssapiException");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.IAuthenticator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.IAuthenticator");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.IAuthenticatorFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.IAuthenticatorFactory");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.ISecurityContext,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.ISecurityContext");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.MongoAWSAuthenticator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.MongoAWSAuthenticator");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.MongoAWSAuthenticator+AwsCredentials,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.AwsCredentials");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.MongoAWSAuthenticator+MongoAWSMechanism,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.MongoAWSMechanism");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.MongoAWSAuthenticator+ClientFirst,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.ClientFirst");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.MongoAWSAuthenticator+ClientLast,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.ClientLast");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.MongoDBCRAuthenticator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.MongoDBCRAuthenticator");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.MongoDBX509Authenticator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.MongoDBX509Authenticator");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.PlainAuthenticator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.PlainAuthenticator");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.PlainAuthenticator+PlainMechanism,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.PlainMechanism");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.SaslAuthenticator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.SaslAuthenticator");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.SaslAuthenticator+SaslConversation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.SaslConversation");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.SaslAuthenticator+ISaslMechanism,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.ISaslMechanism");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.SaslAuthenticator+ISaslStep,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.ISaslStep");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.SaslAuthenticator+CompletedStep,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.CompletedStep");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.ScramCache,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.ScramCache");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.ScramCacheKey,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.ScramCacheKey");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.ScramCacheEntry,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.ScramCacheEntry");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.ScramSha1Authenticator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.ScramSha1Authenticator");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.ScramSha256Authenticator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.ScramSha256Authenticator");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.ScramShaAuthenticator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.ScramShaAuthenticator");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.ScramShaAuthenticator+ScramShaMechanism,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.ScramShaMechanism");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.ScramShaAuthenticator+ClientFirst,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.ClientFirst");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.ScramShaAuthenticator+ClientLast,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.ClientLast");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.UsernamePasswordCredential,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.UsernamePasswordCredential");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Libgssapi.GssapiSafeHandle,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Libgssapi.GssapiSafeHandle");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Libgssapi.GssapiSecurityContext,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Libgssapi.GssapiSecurityContext");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Libgssapi.GssapiSecurityCredential,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Libgssapi.GssapiSecurityCredential");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Libgssapi.GssapiServicePrincipalName,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Libgssapi.GssapiServicePrincipalName");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Libgssapi.GssCode,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Libgssapi.GssCode");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Libgssapi.GssCredentialUsage,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Libgssapi.GssCredentialUsage");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Libgssapi.GssFlags,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Libgssapi.GssFlags");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Libgssapi.GssStatus,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Libgssapi.GssStatus");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Libgssapi.GssInputBuffer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Libgssapi.GssInputBuffer");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Libgssapi.GssOutputBuffer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Libgssapi.GssOutputBuffer");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Libgssapi.LibgssapiException,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Libgssapi.LibgssapiException");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Libgssapi.Oid,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Libgssapi.Oid");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.AuthIdentity,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.AuthIdentity");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.AuthIdentityFlag,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.AuthIdentityFlag");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.DataRepresentation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.DataRepresentation");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.EncryptQualityOfProtection,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.EncryptQualityOfProtection");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.QueryContextAttributes,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.QueryContextAttributes");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.SecurityBuffer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.SecurityBuffer");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.SecurityBufferDescriptor,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.SecurityBufferDescriptor");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.SecurityBufferType,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.SecurityBufferType");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.SecurityCredentialUse,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.SecurityCredentialUse");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.SecurityPackageContextSizes,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.SecurityPackageContextSizes");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.SecurityPackageInfo,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.SecurityPackageInfo");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.SspiContextFlags,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.SspiContextFlags");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.SspiHandle,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.SspiHandle");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.SspiPackage,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.SspiPackage");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.SspiSecurityContext,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.SspiSecurityContext");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.SspiSecurityCredential,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.SspiSecurityCredential");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Sspi.Win32Exception,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Sspi.Win32Exception");
            feature.AddKnownType("MongoDB.Driver.Core.Authentication.Vendored.Rfc2898DeriveBytes,MongoDB.Driver.Core", "MongoDB.Driver.Core.Authentication.Vendored.Rfc2898DeriveBytes");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.ChannelChannelSource,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.ChannelChannelSource");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.ChannelReadBinding,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.ChannelReadBinding");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.ChannelReadWriteBinding,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.ChannelReadWriteBinding");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.ChannelSourceHandle,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.ChannelSourceHandle");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.ChannelSourceReadWriteBinding,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.ChannelSourceReadWriteBinding");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.CoreSession,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.CoreSession");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.CoreSessionHandle,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.CoreSessionHandle");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.CoreSessionOptions,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.CoreSessionOptions");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.CoreTransaction,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.CoreTransaction");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.CoreTransactionState,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.CoreTransactionState");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.IBinding,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.IBinding");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.IReadBinding,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.IReadBinding");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.IWriteBinding,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.IWriteBinding");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.IReadWriteBinding,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.IReadWriteBinding");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.IReadBindingHandle,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.IReadBindingHandle");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.IWriteBindingHandle,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.IWriteBindingHandle");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.IReadWriteBindingHandle,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.IReadWriteBindingHandle");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.IMayUseSecondaryCriteria,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.IMayUseSecondaryCriteria");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.IChannel,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.IChannel");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.IChannelHandle,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.IChannelHandle");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.IChannelSource,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.IChannelSource");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.IChannelSourceHandle,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.IChannelSourceHandle");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.ICoreSession,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.ICoreSession");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.ICoreSessionHandle,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.ICoreSessionHandle");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.NoCoreServerSession,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.NoCoreServerSession");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.NoCoreSession,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.NoCoreSession");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.NonDisposingCoreSessionHandle,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.NonDisposingCoreSessionHandle");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.ReadBindingHandle,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.ReadBindingHandle");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.ReadPreferenceBinding,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.ReadPreferenceBinding");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.ReadWriteBindingHandle,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.ReadWriteBindingHandle");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.ReferenceCountedCoreSession,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.ReferenceCountedCoreSession");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.ServerChannelSource,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.ServerChannelSource");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.SingleServerReadBinding,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.SingleServerReadBinding");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.SingleServerReadWriteBinding,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.SingleServerReadWriteBinding");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.WrappingCoreSession,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.WrappingCoreSession");
            feature.AddKnownType("MongoDB.Driver.Core.Bindings.WritableServerBinding,MongoDB.Driver.Core", "MongoDB.Driver.Core.Bindings.WritableServerBinding");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.Cluster,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.Cluster");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.Cluster+SelectServerHelper,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.SelectServerHelper");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.Cluster+WaitForDescriptionChangedHelper,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.WaitForDescriptionChangedHelper");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ClusterClock,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ClusterClock");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.NoClusterClock,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.NoClusterClock");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ClusterConnectionMode,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ClusterConnectionMode");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ClusterDescription,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ClusterDescription");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ClusterDescriptionChangedEventArgs,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ClusterDescriptionChangedEventArgs");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ClusterFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ClusterFactory");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ClusterId,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ClusterId");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ClusterState,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ClusterState");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ClusterType,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ClusterType");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ConnectionModeSwitch,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ConnectionModeSwitch");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.CryptClientCreator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.CryptClientCreator");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.DnsMonitor,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.DnsMonitor");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.DnsMonitorFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.DnsMonitorFactory");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ElectionId,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ElectionId");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ICluster,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ICluster");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.IClusterClock,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.IClusterClock");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.IClusterFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.IClusterFactory");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.DnsMonitorState,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.DnsMonitorState");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.IDnsMonitor,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.IDnsMonitor");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.IDnsMonitorFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.IDnsMonitorFactory");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.IDnsMonitoringCluster,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.IDnsMonitoringCluster");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.LoadBalancedCluster,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.LoadBalancedCluster");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.MultiServerCluster,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.MultiServerCluster");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.MultiServerCluster+ElectionInfo,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ElectionInfo");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ReplicaSetConfig,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ReplicaSetConfig");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.SingleServerCluster,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.SingleServerCluster");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ServerSelectors.CompositeServerSelector,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ServerSelectors.CompositeServerSelector");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ServerSelectors.DelegateServerSelector,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ServerSelectors.DelegateServerSelector");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ServerSelectors.EndPointServerSelector,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ServerSelectors.EndPointServerSelector");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ServerSelectors.IServerSelector,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ServerSelectors.IServerSelector");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ServerSelectors.LatencyLimitingServerSelector,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ServerSelectors.LatencyLimitingServerSelector");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ServerSelectors.OperationsCountServerSelector,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ServerSelectors.OperationsCountServerSelector");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ServerSelectors.RandomServerSelector,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ServerSelectors.RandomServerSelector");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ServerSelectors.ReadPreferenceServerSelector,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ServerSelectors.ReadPreferenceServerSelector");
            feature.AddKnownType("MongoDB.Driver.Core.Clusters.ServerSelectors.WritableServerSelector,MongoDB.Driver.Core", "MongoDB.Driver.Core.Clusters.ServerSelectors.WritableServerSelector");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.ICompressorSource,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.ICompressorSource");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.CompressorSource,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.CompressorSource");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.CompressorType,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.CompressorType");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.ICompressor,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.ICompressor");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.NoopCompressor,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.NoopCompressor");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.SnappyCompressor,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.SnappyCompressor");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.ZlibCompressor,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.ZlibCompressor");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.ZstandardCompressor,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.ZstandardCompressor");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Snappy.Snappy32NativeMethods+Delegates32,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Snappy.Delegates32");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Snappy.Snappy32NativeMethods+SnappyLocator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Snappy.SnappyLocator");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Snappy.Snappy64NativeMethods+Delegates64,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Snappy.Delegates64");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Snappy.Snappy64NativeMethods+SnappyLocator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Snappy.SnappyLocator");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Snappy.SnappyStatus,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Snappy.SnappyStatus");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Zstandard.NativeBufferInfo,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Zstandard.NativeBufferInfo");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Zstandard.PinnedBufferWalker,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Zstandard.PinnedBufferWalker");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Zstandard.Zstandard64NativeMethods,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Zstandard.Zstandard64NativeMethods");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Zstandard.Zstandard64NativeMethods+Delegates64,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Zstandard.Delegates64");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Zstandard.Zstandard64NativeMethods+ZstandardLocator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Zstandard.ZstandardLocator");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Zstandard.ZstandardNativeWrapper,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Zstandard.ZstandardNativeWrapper");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Zstandard.ZstandardNativeWrapper+OperationContext,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Zstandard.OperationContext");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Zstandard.BufferInfo,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Zstandard.BufferInfo");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Zstandard.ZstandardStream,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Zstandard.ZstandardStream");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Zstandard.ZstandardStream+StreamReadHelper,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Zstandard.StreamReadHelper");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Zstandard.ZstandardStream+StreamReadHelper+ReadingState,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Zstandard.ReadingState");
            feature.AddKnownType("MongoDB.Driver.Core.Compression.Zstandard.ZstandardStream+StreamWriteHelper,MongoDB.Driver.Core", "MongoDB.Driver.Core.Compression.Zstandard.StreamWriteHelper");
            feature.AddKnownType("MongoDB.Driver.Core.Configuration.ClusterBuilder,MongoDB.Driver.Core", "MongoDB.Driver.Core.Configuration.ClusterBuilder");
            feature.AddKnownType("MongoDB.Driver.Core.Configuration.ClusterSettings,MongoDB.Driver.Core", "MongoDB.Driver.Core.Configuration.ClusterSettings");
            feature.AddKnownType("MongoDB.Driver.Core.Configuration.CompressorConfiguration,MongoDB.Driver.Core", "MongoDB.Driver.Core.Configuration.CompressorConfiguration");
            feature.AddKnownType("MongoDB.Driver.Core.Configuration.ConnectionPoolSettings,MongoDB.Driver.Core", "MongoDB.Driver.Core.Configuration.ConnectionPoolSettings");
            feature.AddKnownType("MongoDB.Driver.Core.Configuration.ConnectionSettings,MongoDB.Driver.Core", "MongoDB.Driver.Core.Configuration.ConnectionSettings");
            feature.AddKnownType("MongoDB.Driver.Core.Configuration.ConnectionStringScheme,MongoDB.Driver.Core", "MongoDB.Driver.Core.Configuration.ConnectionStringScheme");
            feature.AddKnownType("MongoDB.Driver.Core.Configuration.ConnectionString,MongoDB.Driver.Core", "MongoDB.Driver.Core.Configuration.ConnectionString");
            feature.AddKnownType("MongoDB.Driver.Core.Configuration.ConnectionString+CompressorsOptions,MongoDB.Driver.Core", "MongoDB.Driver.Core.Configuration.CompressorsOptions");
            feature.AddKnownType("MongoDB.Driver.Core.Configuration.CryptClientSettings,MongoDB.Driver.Core", "MongoDB.Driver.Core.Configuration.CryptClientSettings");
            feature.AddKnownType("MongoDB.Driver.Core.Configuration.SdamLoggingSettings,MongoDB.Driver.Core", "MongoDB.Driver.Core.Configuration.SdamLoggingSettings");
            feature.AddKnownType("MongoDB.Driver.Core.Configuration.ServerSettings,MongoDB.Driver.Core", "MongoDB.Driver.Core.Configuration.ServerSettings");
            feature.AddKnownType("MongoDB.Driver.Core.Configuration.SslStreamSettings,MongoDB.Driver.Core", "MongoDB.Driver.Core.Configuration.SslStreamSettings");
            feature.AddKnownType("MongoDB.Driver.Core.Configuration.TcpStreamSettings,MongoDB.Driver.Core", "MongoDB.Driver.Core.Configuration.TcpStreamSettings");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.CheckOutReason,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.CheckOutReason");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.ICheckOutReasonTracker,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.ICheckOutReasonTracker");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.CheckOutReasonCounter,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.CheckOutReasonCounter");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPool,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPool");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPool+State,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.State");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPool+PoolState,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.PoolState");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPool+AcquireConnectionHelper,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.AcquireConnectionHelper");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPool+PooledConnection,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.PooledConnection");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPool+AcquiredConnection,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.AcquiredConnection");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPool+ListConnectionHolder,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.ListConnectionHolder");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPool+ConnectionCreator,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.ConnectionCreator");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPoolFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.ExclusiveConnectionPoolFactory");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.IConnectionPool,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.IConnectionPool");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.IConnectionExceptionHandler,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.IConnectionExceptionHandler");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.IConnectionPoolFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.IConnectionPoolFactory");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.MaintenanceHelper,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.MaintenanceHelper");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.MaintenanceExecutingContext,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.MaintenanceExecutingContext");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.ServiceStates,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.ServiceStates");
            feature.AddKnownType("MongoDB.Driver.Core.ConnectionPools.ServiceStates+ServiceState,MongoDB.Driver.Core", "MongoDB.Driver.Core.ConnectionPools.ServiceState");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.BinaryConnection,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.BinaryConnection");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.BinaryConnection+Dropbox,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.Dropbox");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.BinaryConnection+OpenConnectionHelper,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.OpenConnectionHelper");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.BinaryConnection+ReceiveMessageHelper,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.ReceiveMessageHelper");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.BinaryConnection+SendMessagesHelper,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.SendMessagesHelper");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.BinaryConnectionFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.BinaryConnectionFactory");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.ClientDocumentHelper,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.ClientDocumentHelper");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.CommandEventHelper,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.CommandEventHelper");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.CommandEventHelper+ExpectedResponseType,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.ExpectedResponseType");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.CommandEventHelper+CommandState,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.CommandState");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.ConnectionDescription,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.ConnectionDescription");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.ConnectionId,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.ConnectionId");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.ConnectionInitializer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.ConnectionInitializer");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.HelloResult,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.HelloResult");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.IConnection,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.IConnection");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.IConnectionHandle,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.IConnectionHandle");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.IConnectionFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.IConnectionFactory");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.IConnectionInitializer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.IConnectionInitializer");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.IsMasterResult,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.IsMasterResult");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.IStreamFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.IStreamFactory");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.KeepAliveValues,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.KeepAliveValues");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.SslStreamFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.SslStreamFactory");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.TcpStreamFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.TcpStreamFactory");
            feature.AddKnownType("MongoDB.Driver.Core.Connections.TcpStreamFactory+PreferredAddressFamilyComparer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Connections.PreferredAddressFamilyComparer");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ClusterAddedServerEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ClusterAddedServerEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ClusterAddingServerEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ClusterAddingServerEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ClusterClosedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ClusterClosedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ClusterClosingEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ClusterClosingEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ClusterDescriptionChangedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ClusterDescriptionChangedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ClusterOpenedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ClusterOpenedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ClusterOpeningEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ClusterOpeningEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ClusterRemovedServerEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ClusterRemovedServerEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ClusterRemovingServerEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ClusterRemovingServerEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ClusterSelectedServerEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ClusterSelectedServerEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ClusterSelectingServerEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ClusterSelectingServerEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ClusterSelectingServerFailedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ClusterSelectingServerFailedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.CommandFailedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.CommandFailedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.CommandStartedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.CommandStartedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.CommandSucceededEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.CommandSucceededEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionCheckOutFailedReason,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionCheckOutFailedReason");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionClosedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionClosedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionClosedReason,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionClosedReason");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionClosingEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionClosingEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionCreatedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionCreatedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionFailedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionFailedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionOpenedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionOpenedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionOpeningEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionOpeningEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionOpeningFailedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionOpeningFailedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolAddedConnectionEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolAddedConnectionEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolAddingConnectionEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolAddingConnectionEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolCheckedInConnectionEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolCheckedInConnectionEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolCheckedOutConnectionEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolCheckedOutConnectionEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolCheckingInConnectionEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolCheckingInConnectionEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionFailedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolCheckingOutConnectionFailedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolClearedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolClearedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolClearingEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolClearingEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolClosedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolClosedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolClosingEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolClosingEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolOpenedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolOpenedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolOpeningEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolOpeningEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolReadyEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolReadyEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolRemovedConnectionEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolRemovedConnectionEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionPoolRemovingConnectionEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionPoolRemovingConnectionEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionReceivedMessageEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionReceivedMessageEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionReceivingMessageEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionReceivingMessageEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionReceivingMessageFailedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionReceivingMessageFailedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionSendingMessagesEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionSendingMessagesEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionSendingMessagesFailedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionSendingMessagesFailedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ConnectionSentMessagesEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ConnectionSentMessagesEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.EventAggregator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.EventAggregator");
            feature.AddKnownType("MongoDB.Driver.Core.Events.EventContext+NoOpDisposer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.NoOpDisposer");
            feature.AddKnownType("MongoDB.Driver.Core.Events.EventContext+FindOperationDisposer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.FindOperationDisposer");
            feature.AddKnownType("MongoDB.Driver.Core.Events.EventContext+KillCursorsOperationDisposer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.KillCursorsOperationDisposer");
            feature.AddKnownType("MongoDB.Driver.Core.Events.EventContext+OperationIdDisposer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.OperationIdDisposer");
            feature.AddKnownType("MongoDB.Driver.Core.Events.IEventSubscriber,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.IEventSubscriber");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ReflectionEventSubscriber,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ReflectionEventSubscriber");
            feature.AddKnownType("MongoDB.Driver.Core.Events.SdamInformationEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.SdamInformationEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ServerClosedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ServerClosedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ServerClosingEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ServerClosingEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ServerDescriptionChangedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ServerDescriptionChangedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ServerHeartbeatFailedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ServerHeartbeatFailedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ServerHeartbeatStartedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ServerHeartbeatStartedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ServerHeartbeatSucceededEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ServerHeartbeatSucceededEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ServerOpenedEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ServerOpenedEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.ServerOpeningEvent,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.ServerOpeningEvent");
            feature.AddKnownType("MongoDB.Driver.Core.Events.SingleEventSubscriber`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.SingleEventSubscriber`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Events.Diagnostics.TraceSourceCommandEventSubscriber,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.Diagnostics.TraceSourceCommandEventSubscriber");
            feature.AddKnownType("MongoDB.Driver.Core.Events.Diagnostics.TraceSourceEventSubscriber,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.Diagnostics.TraceSourceEventSubscriber");
            feature.AddKnownType("MongoDB.Driver.Core.Events.Diagnostics.TraceSourceSdamEventSubscriber,MongoDB.Driver.Core", "MongoDB.Driver.Core.Events.Diagnostics.TraceSourceSdamEventSubscriber");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.BatchableSource`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.BatchableSource`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.CachedEnumerable`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.CachedEnumerable`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.DecryptedSecureString,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.DecryptedSecureString");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.DefaultRandomByteGenerator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.DefaultRandomByteGenerator");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.DefaultRandomStringGenerator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.DefaultRandomStringGenerator");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.DnsClientWrapper,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.DnsClientWrapper");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.EndPointHelper+EndPointEqualityComparerImpl,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.EndPointEqualityComparerImpl");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.ExponentiallyWeightedMovingAverage,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.ExponentiallyWeightedMovingAverage");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.Feature,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.Feature");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.FixedCountBatchableSourceSerializer`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.FixedCountBatchableSourceSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.HintForFindAndModifyFeature,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.HintForFindAndModifyFeature");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.IBatchableSource`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.IBatchableSource`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.IClock,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.IClock");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.SrvRecord,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.SrvRecord");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.TxtRecord,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.TxtRecord");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.IDnsResolver,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.IDnsResolver");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.IndexMap,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.IndexMap");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.IndexMap+RangeBased,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.MongoDB.Driver.Core.Misc.IndexMap.RangeBased");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.IndexMap+DictionaryBased,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.MongoDB.Driver.Core.Misc.IndexMap.DictionaryBased");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.InterlockedInt32,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.InterlockedInt32");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.IRandomByteGenerator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.IRandomByteGenerator");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.IRandomStringGenerator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.IRandomStringGenerator");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.Metronome,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.Metronome");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.OperatingSystemPlatform,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.OperatingSystemPlatform");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.Range`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.Range`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.ReadAheadEnumerable`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.ReadAheadEnumerable`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.ReadAheadEnumerable`1+ReadAheadEnumerator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.ReadAheadEnumerator'1");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.ReferenceCounted`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.ReferenceCounted`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.SemanticVersion,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.SemanticVersion");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.SemaphoreSlimRequest,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.SemaphoreSlimRequest");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.SemaphoreSlimSignalable,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.SemaphoreSlimSignalable");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.SemaphoreSlimSignalable+SemaphoreWaitResult,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.MongoDB.Driver.Core.Misc.SemaphoreSlimSignalable.SemaphoreWaitResult");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.SemaphoreSlimSignalable+CancellationContext,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.CancellationContext");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.SemaphoreSlimSignalable+SemaphoreSlimSignalableAwaiter,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.MongoDB.Driver.Core.Misc.SemaphoreSlimSignalable.SemaphoreSlimSignalableAwaiter");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.ServerVersion,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.ServerVersion");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.SizeLimitingBatchableSourceSerializer`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.SizeLimitingBatchableSourceSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.SystemClock,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.SystemClock");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.TaskExtensions+YieldNoContextAwaitable,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.YieldNoContextAwaitable");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.TaskExtensions+YieldNoContextAwaitable+YieldNoContextAwaiter,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.MongoDB.Driver.Core.Misc.YieldNoContextAwaitable.YieldNoContextAwaiter");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.ToStringComparer`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.ToStringComparer`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Misc.WireVersion+WireVersionInfo,MongoDB.Driver.Core", "MongoDB.Driver.Core.Misc.WireVersionInfo");
            feature.AddKnownType("MongoDB.Driver.Core.NativeLibraryLoader.DarwinLibraryLoader,MongoDB.Driver.Core", "MongoDB.Driver.Core.NativeLibraryLoader.DarwinLibraryLoader");
            feature.AddKnownType("MongoDB.Driver.Core.NativeLibraryLoader.ILibraryLocator,MongoDB.Driver.Core", "MongoDB.Driver.Core.NativeLibraryLoader.ILibraryLocator");
            feature.AddKnownType("MongoDB.Driver.Core.NativeLibraryLoader.INativeLibraryLoader,MongoDB.Driver.Core", "MongoDB.Driver.Core.NativeLibraryLoader.INativeLibraryLoader");
            feature.AddKnownType("MongoDB.Driver.Core.NativeLibraryLoader.LibraryLoader,MongoDB.Driver.Core", "MongoDB.Driver.Core.NativeLibraryLoader.LibraryLoader");
            feature.AddKnownType("MongoDB.Driver.Core.NativeLibraryLoader.LinuxLibraryLoader,MongoDB.Driver.Core", "MongoDB.Driver.Core.NativeLibraryLoader.LinuxLibraryLoader");
            feature.AddKnownType("MongoDB.Driver.Core.NativeLibraryLoader.PinnedBuffer,MongoDB.Driver.Core", "MongoDB.Driver.Core.NativeLibraryLoader.PinnedBuffer");
            feature.AddKnownType("MongoDB.Driver.Core.NativeLibraryLoader.RelativeLibraryLocatorBase,MongoDB.Driver.Core", "MongoDB.Driver.Core.NativeLibraryLoader.RelativeLibraryLocatorBase");
            feature.AddKnownType("MongoDB.Driver.Core.NativeLibraryLoader.WindowsLibraryLoader,MongoDB.Driver.Core", "MongoDB.Driver.Core.NativeLibraryLoader.WindowsLibraryLoader");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.AggregateExplainOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.AggregateExplainOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.AggregateOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.AggregateOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.AggregateOperation`1+AggregateResult,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.AggregateResult'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.AggregateOperation`1+AggregateResultDeserializer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.AggregateResultDeserializer'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.AggregateOperation`1+CursorDeserializer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.CursorDeserializer'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.AggregateToCollectionOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.AggregateToCollectionOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.AggregateToCollectionOperation+MayUseSecondary,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.MayUseSecondary");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.AsyncCursor`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.AsyncCursor`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.AsyncCursorEnumerableOneTimeAdapter`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.AsyncCursorEnumerableOneTimeAdapter`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.AsyncCursorEnumerator`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.AsyncCursorEnumerator`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.AsyncCursorSourceEnumerableAdapter`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.AsyncCursorSourceEnumerableAdapter`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkDeleteOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BulkDeleteOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkInsertOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BulkInsertOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkInsertOperation+InsertRequestSerializer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.InsertRequestSerializer");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkMixedWriteOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BulkMixedWriteOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkMixedWriteOperation+Batch,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.Batch");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkMixedWriteOperation+BatchHelper,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BatchHelper");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkMixedWriteOperation+BatchHelper+WriteRequestWithIndex,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.WriteRequestWithIndex");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkUnmixedWriteOperationBase`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BulkUnmixedWriteOperationBase`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkUnmixedWriteOperationBase`1+BatchHelper,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BatchHelper'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkUnmixedWriteOperationBase`1+Batch,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.Batch'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkUnmixedWriteOperationEmulatorBase`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BulkUnmixedWriteOperationEmulatorBase`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkUnmixedWriteOperationEmulatorBase`1+BatchHelper,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BatchHelper'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkUnmixedWriteOperationEmulatorBase`1+BatchHelper+Batch,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.MongoDB.Driver.Core.Operations.BatchHelper'1.Batch'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkUpdateOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BulkUpdateOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkWriteBatchResult,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BulkWriteBatchResult");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkWriteBatchResultCombiner,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BulkWriteBatchResultCombiner");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkWriteConcernError,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BulkWriteConcernError");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkWriteOperationError,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BulkWriteOperationError");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkWriteOperationResult,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BulkWriteOperationResult");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkWriteOperationResult+Acknowledged,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.MongoDB.Driver.Core.Operations.BulkWriteOperationResult.Acknowledged");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkWriteOperationResult+Unacknowledged,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.MongoDB.Driver.Core.Operations.BulkWriteOperationResult.Unacknowledged");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkWriteOperationResultConverter,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BulkWriteOperationResultConverter");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.BulkWriteOperationUpsert,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.BulkWriteOperationUpsert");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ChangeStreamCursor`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ChangeStreamCursor`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ChangeStreamCursor`1+ResumeValues,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ResumeValues'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.IChangeStreamOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.IChangeStreamOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ChangeStreamOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ChangeStreamOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.CommandOperationBase`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.CommandOperationBase`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.CompositeWriteOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.CompositeWriteOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.CountDocumentsOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.CountDocumentsOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.CountOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.CountOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.CreateCollectionOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.CreateCollectionOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.CreateCollectionOperation+CreateCollectionFlags,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.CreateCollectionFlags");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.CreateIndexesOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.CreateIndexesOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.CreateIndexRequest,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.CreateIndexRequest");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.CreateViewOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.CreateViewOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.CursorType,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.CursorType");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.DatabaseExistsOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.DatabaseExistsOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.DelayedEvaluationWriteConcernSerializer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.DelayedEvaluationWriteConcernSerializer");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.DeleteOpcodeOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.DeleteOpcodeOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.DeleteOpcodeOperationEmulator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.DeleteOpcodeOperationEmulator");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.DeleteRequest,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.DeleteRequest");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.DistinctOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.DistinctOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.DistinctOperation`1+DistinctResult,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.DistinctResult'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.DistinctOperation`1+DistinctResultDeserializer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.DistinctResultDeserializer'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.DropCollectionOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.DropCollectionOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.DropDatabaseOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.DropDatabaseOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.DropIndexOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.DropIndexOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ElementDeserializer`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ElementDeserializer`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.EndTransactionOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.EndTransactionOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.AbortTransactionOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.AbortTransactionOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.CommitTransactionOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.CommitTransactionOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.EstimatedDocumentCountOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.EstimatedDocumentCountOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.EvalOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.EvalOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.IExplainableOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.IExplainableOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ExplainOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ExplainOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ExplainVerbosity,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ExplainVerbosity");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.FindAndModifyOperationBase`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.FindAndModifyValueDeserializer`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.FindAndModifyValueDeserializer`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.FindOneAndDeleteOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.FindOneAndDeleteOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.FindOneAndReplaceOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.FindOneAndReplaceOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.FindOneAndUpdateOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.FindOneAndUpdateOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.FindOneAndUpdateOperation`1+Validator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.Validator'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.FindOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.FindOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.GeoNearOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.GeoNearOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.GeoSearchOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.GeoSearchOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.GroupOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.GroupOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.InsertOpcodeOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.InsertOpcodeOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.InsertOpcodeOperationEmulator`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.InsertOpcodeOperationEmulator`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.InsertRequest,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.InsertRequest");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.IReadOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.IReadOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.IWriteOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.IWriteOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.IOperationClock,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.IOperationClock");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.IExecutableInRetryableReadContext`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.IExecutableInRetryableReadContext`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.IExecutableInRetryableWriteContext`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.IExecutableInRetryableWriteContext`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.IRetryableReadOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.IRetryableReadOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.IRetryableWriteOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.IRetryableWriteOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ListCollectionsOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ListCollectionsOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ListDatabasesOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ListDatabasesOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ListIndexesOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ListIndexesOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ListIndexesUsingCommandOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ListIndexesUsingCommandOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.MapReduceLegacyOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.MapReduceLegacyOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.MapReduceOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.MapReduceOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.MapReduceOperationBase,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.MapReduceOperationBase");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.MapReduceOutputMode,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.MapReduceOutputMode");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.MapReduceOutputToCollectionOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.MapReduceOutputToCollectionOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.MongoBulkWriteOperationException,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.MongoBulkWriteOperationException");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.OperationClock,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.OperationClock");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.NoOperationClock,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.NoOperationClock");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ParallelScanOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ParallelScanOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.PingOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.PingOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ReadCommandOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ReadCommandOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ReIndexOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ReIndexOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.RenameCollectionOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.RenameCollectionOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.RetryableDeleteCommandOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.RetryableDeleteCommandOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.RetryableDeleteCommandOperation+DeleteRequestSerializer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.DeleteRequestSerializer");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.RetryableInsertCommandOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.RetryableInsertCommandOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.RetryableInsertCommandOperation`1+InsertSerializer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.InsertSerializer'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.RetryableReadContext,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.RetryableReadContext");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.RetryableUpdateCommandOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.RetryableUpdateCommandOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.RetryableUpdateCommandOperation+UpdateRequestSerializer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.UpdateRequestSerializer");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.RetryableWriteCommandOperationBase,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.RetryableWriteCommandOperationBase");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.RetryableWriteCommandOperationBase+CommandArgs,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.CommandArgs");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.RetryableWriteContext,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.RetryableWriteContext");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ReturnDocument,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ReturnDocument");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.UpdateOpcodeOperation,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.UpdateOpcodeOperation");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.UpdateOpcodeOperationEmulator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.UpdateOpcodeOperationEmulator");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.UpdateRequest,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.UpdateRequest");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.UpdateType,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.UpdateType");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.WriteCommandOperation`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.WriteCommandOperation`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.WriteRequest,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.WriteRequest");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.WriteRequestType,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.WriteRequestType");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ElementNameValidators.ReplacementElementNameValidator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ElementNameValidators.ReplacementElementNameValidator");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ElementNameValidators.UpdateElementNameValidator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ElementNameValidators.UpdateElementNameValidator");
            feature.AddKnownType("MongoDB.Driver.Core.Operations.ElementNameValidators.UpdateOrReplacementElementNameValidator,MongoDB.Driver.Core", "MongoDB.Driver.Core.Operations.ElementNameValidators.UpdateOrReplacementElementNameValidator");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.ClusterClockAdvancingCoreSession,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.ClusterClockAdvancingCoreSession");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.DefaultServer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.DefaultServer");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.HeartbeatDelay,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.HeartbeatDelay");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.IClusterableServerFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.IClusterableServerFactory");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.IServer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.IServer");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.IClusterableServer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.IClusterableServer");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.IServerMonitor,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.IServerMonitor");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.IServerMonitorFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.IServerMonitorFactory");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.LoadBalancedServer,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.LoadBalancedServer");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.IRoundTripTimeMonitor,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.IRoundTripTimeMonitor");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.RoundTripTimeMonitor,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.RoundTripTimeMonitor");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.Server,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.Server");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.Server+ServerChannel,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.ServerChannel");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.ServerDescription,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.ServerDescription");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.ServerDescriptionChangedEventArgs,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.ServerDescriptionChangedEventArgs");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.ServerFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.ServerFactory");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.ServerId,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.ServerId");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.ServerMonitor,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.ServerMonitor");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.ServerMonitorFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.ServerMonitorFactory");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.ServerMonitorSettings,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.ServerMonitorSettings");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.ServerState,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.ServerState");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.ServerType,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.ServerType");
            feature.AddKnownType("MongoDB.Driver.Core.Servers.TopologyVersion,MongoDB.Driver.Core", "MongoDB.Driver.Core.Servers.TopologyVersion");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.CommandMessageFieldDecryptor,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.CommandMessageFieldDecryptor");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.CommandMessageFieldEncryptor,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.CommandMessageFieldEncryptor");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.CommandResponseHandling,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.CommandResponseHandling");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.CommandUsingCommandMessageWireProtocol`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.CommandUsingCommandMessageWireProtocol`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.CommandUsingQueryMessageWireProtocol`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.CommandUsingQueryMessageWireProtocol`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.CommandUsingQueryMessageWireProtocol`1+IgnoredReply,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.IgnoredReply'1");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.CommandUsingQueryMessageWireProtocol`1+IgnoredReplySerializer,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.IgnoredReplySerializer'1");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.CommandWireProtocol`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.CommandWireProtocol`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.CursorBatch`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.CursorBatch`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.IBinaryCommandFieldEncryptor,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.IBinaryCommandFieldEncryptor");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.IBinaryDocumentFieldDecryptor,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.IBinaryDocumentFieldDecryptor");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.IWireProtocol,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.IWireProtocol");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.IWireProtocol`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.IWireProtocol`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.QueryWireProtocol`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.QueryWireProtocol`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.WriteWireProtocolBase,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.WriteWireProtocolBase");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.CommandMessage,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.CommandMessage");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.CommandMessageDisposer,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.CommandMessageDisposer");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.PayloadType,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.PayloadType");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.CommandMessageSection,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.CommandMessageSection");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Type0CommandMessageSection,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Type0CommandMessageSection");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Type0CommandMessageSection`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Type0CommandMessageSection`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Type1CommandMessageSection,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Type1CommandMessageSection");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Type1CommandMessageSection`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Type1CommandMessageSection`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.CommandRequestMessage,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.CommandRequestMessage");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.CommandResponseMessage,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.CommandResponseMessage");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.CompressedMessage,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.CompressedMessage");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.MongoDBMessage,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.MongoDBMessage");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.MongoDBMessageType,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.MongoDBMessageType");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.QueryMessage,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.QueryMessage");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.ReplyMessage`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.ReplyMessage`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.RequestMessage,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.RequestMessage");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.ResponseMessage,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.ResponseMessage");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.CommandResponseMessageEncoderSelector,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.CommandResponseMessageEncoderSelector");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.CompressedMessageEncoderSelector,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.CompressedMessageEncoderSelector");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IEncodableMessage,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IEncodableMessage");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoder,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoder");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderFactory");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderPostProcessor,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderPostProcessor");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderSelector,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.IMessageEncoderSelector");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.MessageEncoderSettings");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.ReplyMessageEncoderSelector`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.ReplyMessageEncoderSelector`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.BinaryMessageEncoderFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.BinaryMessageEncoderFactory");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.CommandMessageBinaryEncoder,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.CommandMessageBinaryEncoder");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.CommandMessageBinaryEncoder+PostProcessor,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.PostProcessor");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.CommandRequestMessageBinaryEncoder,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.CommandRequestMessageBinaryEncoder");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.CommandResponseMessageBinaryEncoder,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.CommandResponseMessageBinaryEncoder");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.CompressedMessageBinaryEncoder,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.CompressedMessageBinaryEncoder");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.MessageBinaryEncoderBase,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.MessageBinaryEncoderBase");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.Opcode,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.Opcode");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.OpMsgFlags,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.OpMsgFlags");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.QueryMessageBinaryEncoder,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.QueryMessageBinaryEncoder");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.QueryMessageBinaryEncoder+PostProcessor,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.PostProcessor");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.QueryMessageBinaryEncoder+QueryFlags,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.QueryFlags");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.ReplyMessageBinaryEncoder`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.ReplyMessageBinaryEncoder`1'1");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.ReplyMessageBinaryEncoder`1+ResponseFlags,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.BinaryEncoders.ResponseFlags'1");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.CommandMessageJsonEncoder,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.CommandMessageJsonEncoder");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.CommandRequestMessageJsonEncoder,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.CommandRequestMessageJsonEncoder");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.CommandResponseMessageJsonEncoder,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.CommandResponseMessageJsonEncoder");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.CompressedMessageJsonEncoder,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.CompressedMessageJsonEncoder");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.JsonMessageEncoderFactory,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.JsonMessageEncoderFactory");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.MessageJsonEncoderBase,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.MessageJsonEncoderBase");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.QueryMessageJsonEncoder,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.QueryMessageJsonEncoder");
            feature.AddKnownType("MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.ReplyMessageJsonEncoder`1,MongoDB.Driver.Core", "MongoDB.Driver.Core.WireProtocol.Messages.Encoders.JsonEncoders.ReplyMessageJsonEncoder`1'1");
            feature.AddKnownType("MongoDB.Driver.Encryption.EncryptedCollectionHelper+HelperCollectionForEncryption,MongoDB.Driver.Core", "MongoDB.Driver.Encryption.MongoDB.Driver.Encryption.EncryptedCollectionHelper.HelperCollectionForEncryption");
            feature.AddKnownType("MongoDB.Shared.Hasher,MongoDB.Driver.Core", "MongoDB.Shared.Hasher");
            feature.AddKnownType("System.Runtime.CompilerServices.NativeIntegerAttribute", "NativeIntegerAttribute");
            feature.AddKnownType("MongoDB.Driver.AggregateBucketAutoGranularity,MongoDB.Driver", "MongoDB.Driver.AggregateBucketAutoGranularity");
            feature.AddKnownType("MongoDB.Driver.AggregateBucketAutoOptions,MongoDB.Driver", "MongoDB.Driver.AggregateBucketAutoOptions");
            feature.AddKnownType("MongoDB.Driver.AggregateBucketAutoResult`1,MongoDB.Driver", "MongoDB.Driver.AggregateBucketAutoResult`1'1");
            feature.AddKnownType("MongoDB.Driver.AggregateBucketAutoResultId`1,MongoDB.Driver", "MongoDB.Driver.AggregateBucketAutoResultId`1'1");
            feature.AddKnownType("MongoDB.Driver.AggregateBucketOptions`1,MongoDB.Driver", "MongoDB.Driver.AggregateBucketOptions`1'1");
            feature.AddKnownType("MongoDB.Driver.AggregateBucketResult`1,MongoDB.Driver", "MongoDB.Driver.AggregateBucketResult`1'1");
            feature.AddKnownType("MongoDB.Driver.AggregateCountResult,MongoDB.Driver", "MongoDB.Driver.AggregateCountResult");
            feature.AddKnownType("MongoDB.Driver.AggregateExpressionDefinition`2,MongoDB.Driver", "MongoDB.Driver.AggregateExpressionDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.BsonValueAggregateExpressionDefinition`2,MongoDB.Driver", "MongoDB.Driver.BsonValueAggregateExpressionDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.ExpressionAggregateExpressionDefinition`2,MongoDB.Driver", "MongoDB.Driver.ExpressionAggregateExpressionDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.AggregateFacet`1,MongoDB.Driver", "MongoDB.Driver.AggregateFacet`1'1");
            feature.AddKnownType("MongoDB.Driver.AggregateFacet`2,MongoDB.Driver", "MongoDB.Driver.AggregateFacet`2'2");
            feature.AddKnownType("MongoDB.Driver.AggregateFacetOptions`1,MongoDB.Driver", "MongoDB.Driver.AggregateFacetOptions`1'1");
            feature.AddKnownType("MongoDB.Driver.AggregateFacetResult,MongoDB.Driver", "MongoDB.Driver.AggregateFacetResult");
            feature.AddKnownType("MongoDB.Driver.AggregateFacetResult`1,MongoDB.Driver", "MongoDB.Driver.AggregateFacetResult`1'1");
            feature.AddKnownType("MongoDB.Driver.AggregateFacetResults,MongoDB.Driver", "MongoDB.Driver.AggregateFacetResults");
            feature.AddKnownType("MongoDB.Driver.AggregateFacetResultsSerializer,MongoDB.Driver", "MongoDB.Driver.AggregateFacetResultsSerializer");
            feature.AddKnownType("MongoDB.Driver.AggregateFluent`2,MongoDB.Driver", "MongoDB.Driver.AggregateFluent`2'2");
            feature.AddKnownType("MongoDB.Driver.CollectionAggregateFluent`2,MongoDB.Driver", "MongoDB.Driver.CollectionAggregateFluent`2'2");
            feature.AddKnownType("MongoDB.Driver.DatabaseAggregateFluent`1,MongoDB.Driver", "MongoDB.Driver.DatabaseAggregateFluent`1'1");
            feature.AddKnownType("MongoDB.Driver.AggregateFluentBase`1,MongoDB.Driver", "MongoDB.Driver.AggregateFluentBase`1'1");
            feature.AddKnownType("MongoDB.Driver.AggregateGraphLookupOptions`3,MongoDB.Driver", "MongoDB.Driver.AggregateGraphLookupOptions`3'3");
            feature.AddKnownType("MongoDB.Driver.AggregateLookupOptions`2,MongoDB.Driver", "MongoDB.Driver.AggregateLookupOptions`2'2");
            feature.AddKnownType("MongoDB.Driver.AggregateOptions,MongoDB.Driver", "MongoDB.Driver.AggregateOptions");
            feature.AddKnownType("MongoDB.Driver.AggregateSortByCountResult`1,MongoDB.Driver", "MongoDB.Driver.AggregateSortByCountResult`1'1");
            feature.AddKnownType("MongoDB.Driver.AggregateStringTranslationMode,MongoDB.Driver", "MongoDB.Driver.AggregateStringTranslationMode");
            feature.AddKnownType("MongoDB.Driver.AggregateUnwindOptions`1,MongoDB.Driver", "MongoDB.Driver.AggregateUnwindOptions`1'1");
            feature.AddKnownType("MongoDB.Driver.ArrayFilterDefinition,MongoDB.Driver", "MongoDB.Driver.ArrayFilterDefinition");
            feature.AddKnownType("MongoDB.Driver.ArrayFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.ArrayFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.BsonDocumentArrayFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.BsonDocumentArrayFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.JsonArrayFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.JsonArrayFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.BulkWriteError,MongoDB.Driver", "MongoDB.Driver.BulkWriteError");
            feature.AddKnownType("MongoDB.Driver.BulkWriteOptions,MongoDB.Driver", "MongoDB.Driver.BulkWriteOptions");
            feature.AddKnownType("MongoDB.Driver.BulkWriteResult,MongoDB.Driver", "MongoDB.Driver.BulkWriteResult");
            feature.AddKnownType("MongoDB.Driver.BulkWriteResult`1,MongoDB.Driver", "MongoDB.Driver.BulkWriteResult`1'1");
            feature.AddKnownType("MongoDB.Driver.BulkWriteResult`1+Acknowledged,MongoDB.Driver", "MongoDB.Driver.MongoDB.Driver.BulkWriteResult`1'1.Acknowledged'1");
            feature.AddKnownType("MongoDB.Driver.BulkWriteResult`1+Unacknowledged,MongoDB.Driver", "MongoDB.Driver.MongoDB.Driver.BulkWriteResult`1'1.Unacknowledged'1");
            feature.AddKnownType("MongoDB.Driver.BulkWriteUpsert,MongoDB.Driver", "MongoDB.Driver.BulkWriteUpsert");
            feature.AddKnownType("MongoDB.Driver.ChangeStreamOptions,MongoDB.Driver", "MongoDB.Driver.ChangeStreamOptions");
            feature.AddKnownType("MongoDB.Driver.ChangeStreamPreAndPostImagesOptions,MongoDB.Driver", "MongoDB.Driver.ChangeStreamPreAndPostImagesOptions");
            feature.AddKnownType("MongoDB.Driver.ChangeStreamPreAndPostImagesOptionsSerializer,MongoDB.Driver", "MongoDB.Driver.ChangeStreamPreAndPostImagesOptionsSerializer");
            feature.AddKnownType("MongoDB.Driver.ChangeStreamStageOptions,MongoDB.Driver", "MongoDB.Driver.ChangeStreamStageOptions");
            feature.AddKnownType("MongoDB.Driver.ClientSessionHandle,MongoDB.Driver", "MongoDB.Driver.ClientSessionHandle");
            feature.AddKnownType("MongoDB.Driver.ClientSessionOptions,MongoDB.Driver", "MongoDB.Driver.ClientSessionOptions");
            feature.AddKnownType("MongoDB.Driver.ClusteredIndexOptions`1,MongoDB.Driver", "MongoDB.Driver.ClusteredIndexOptions`1'1");
            feature.AddKnownType("MongoDB.Driver.ClusterKey,MongoDB.Driver", "MongoDB.Driver.ClusterKey");
            feature.AddKnownType("MongoDB.Driver.ClusterRegistry,MongoDB.Driver", "MongoDB.Driver.ClusterRegistry");
            feature.AddKnownType("MongoDB.Driver.RenderedCommand`1,MongoDB.Driver", "MongoDB.Driver.RenderedCommand`1'1");
            feature.AddKnownType("MongoDB.Driver.Command`1,MongoDB.Driver", "MongoDB.Driver.Command`1'1");
            feature.AddKnownType("MongoDB.Driver.BsonDocumentCommand`1,MongoDB.Driver", "MongoDB.Driver.BsonDocumentCommand`1'1");
            feature.AddKnownType("MongoDB.Driver.JsonCommand`1,MongoDB.Driver", "MongoDB.Driver.JsonCommand`1'1");
            feature.AddKnownType("MongoDB.Driver.ObjectCommand`1,MongoDB.Driver", "MongoDB.Driver.ObjectCommand`1'1");
            feature.AddKnownType("MongoDB.Driver.ConnectionMode,MongoDB.Driver", "MongoDB.Driver.ConnectionMode");
            feature.AddKnownType("MongoDB.Driver.CountOptions,MongoDB.Driver", "MongoDB.Driver.CountOptions");
            feature.AddKnownType("MongoDB.Driver.CreateCollectionOptions,MongoDB.Driver", "MongoDB.Driver.CreateCollectionOptions");
            feature.AddKnownType("MongoDB.Driver.CreateCollectionOptions`1,MongoDB.Driver", "MongoDB.Driver.CreateCollectionOptions`1'1");
            feature.AddKnownType("MongoDB.Driver.CreateIndexModel`1,MongoDB.Driver", "MongoDB.Driver.CreateIndexModel`1'1");
            feature.AddKnownType("MongoDB.Driver.CreateIndexOptions,MongoDB.Driver", "MongoDB.Driver.CreateIndexOptions");
            feature.AddKnownType("MongoDB.Driver.CreateIndexOptions`1,MongoDB.Driver", "MongoDB.Driver.CreateIndexOptions`1'1");
            feature.AddKnownType("MongoDB.Driver.CreateManyIndexesOptions,MongoDB.Driver", "MongoDB.Driver.CreateManyIndexesOptions");
            feature.AddKnownType("MongoDB.Driver.CreateOneIndexOptions,MongoDB.Driver", "MongoDB.Driver.CreateOneIndexOptions");
            feature.AddKnownType("MongoDB.Driver.CreateViewOptions`1,MongoDB.Driver", "MongoDB.Driver.CreateViewOptions`1'1");
            feature.AddKnownType("MongoDB.Driver.CursorType,MongoDB.Driver", "MongoDB.Driver.CursorType");
            feature.AddKnownType("MongoDB.Driver.DecryptedSecureString,MongoDB.Driver", "MongoDB.Driver.DecryptedSecureString");
            feature.AddKnownType("MongoDB.Driver.DeleteManyModel`1,MongoDB.Driver", "MongoDB.Driver.DeleteManyModel`1'1");
            feature.AddKnownType("MongoDB.Driver.DeleteOneModel`1,MongoDB.Driver", "MongoDB.Driver.DeleteOneModel`1'1");
            feature.AddKnownType("MongoDB.Driver.DeleteOptions,MongoDB.Driver", "MongoDB.Driver.DeleteOptions");
            feature.AddKnownType("MongoDB.Driver.DeleteResult,MongoDB.Driver", "MongoDB.Driver.DeleteResult");
            feature.AddKnownType("MongoDB.Driver.DeleteResult+Acknowledged,MongoDB.Driver", "MongoDB.Driver.MongoDB.Driver.DeleteResult.Acknowledged");
            feature.AddKnownType("MongoDB.Driver.DeleteResult+Unacknowledged,MongoDB.Driver", "MongoDB.Driver.MongoDB.Driver.DeleteResult.Unacknowledged");
            feature.AddKnownType("MongoDB.Driver.DensifyRange,MongoDB.Driver", "MongoDB.Driver.DensifyRange");
            feature.AddKnownType("MongoDB.Driver.DensifyBounds,MongoDB.Driver", "MongoDB.Driver.DensifyBounds");
            feature.AddKnownType("MongoDB.Driver.DensifyNumericRange`1,MongoDB.Driver", "MongoDB.Driver.DensifyNumericRange`1'1");
            feature.AddKnownType("MongoDB.Driver.DensifyNumericBounds`1,MongoDB.Driver", "MongoDB.Driver.DensifyNumericBounds`1'1");
            feature.AddKnownType("MongoDB.Driver.DensifyKeywordNumericBounds`1,MongoDB.Driver", "MongoDB.Driver.DensifyKeywordNumericBounds`1'1");
            feature.AddKnownType("MongoDB.Driver.DensifyLowerUpperNumericBounds`1,MongoDB.Driver", "MongoDB.Driver.DensifyLowerUpperNumericBounds`1'1");
            feature.AddKnownType("MongoDB.Driver.DensifyDateTimeRange,MongoDB.Driver", "MongoDB.Driver.DensifyDateTimeRange");
            feature.AddKnownType("MongoDB.Driver.DensifyDateTimeBounds,MongoDB.Driver", "MongoDB.Driver.DensifyDateTimeBounds");
            feature.AddKnownType("MongoDB.Driver.DensifyKeywordDateTimeBounds,MongoDB.Driver", "MongoDB.Driver.DensifyKeywordDateTimeBounds");
            feature.AddKnownType("MongoDB.Driver.DensifyLowerUpperDateTimeBounds,MongoDB.Driver", "MongoDB.Driver.DensifyLowerUpperDateTimeBounds");
            feature.AddKnownType("MongoDB.Driver.DensifyDateTimeUnit,MongoDB.Driver", "MongoDB.Driver.DensifyDateTimeUnit");
            feature.AddKnownType("MongoDB.Driver.DistinctOptions,MongoDB.Driver", "MongoDB.Driver.DistinctOptions");
            feature.AddKnownType("MongoDB.Driver.DocumentsWindow,MongoDB.Driver", "MongoDB.Driver.DocumentsWindow");
            feature.AddKnownType("MongoDB.Driver.DocumentsWindowBoundary,MongoDB.Driver", "MongoDB.Driver.DocumentsWindowBoundary");
            feature.AddKnownType("MongoDB.Driver.KeywordDocumentsWindowBoundary,MongoDB.Driver", "MongoDB.Driver.KeywordDocumentsWindowBoundary");
            feature.AddKnownType("MongoDB.Driver.PositionDocumentsWindowBoundary,MongoDB.Driver", "MongoDB.Driver.PositionDocumentsWindowBoundary");
            feature.AddKnownType("MongoDB.Driver.DropCollectionOptions,MongoDB.Driver", "MongoDB.Driver.DropCollectionOptions");
            feature.AddKnownType("MongoDB.Driver.DropIndexOptions,MongoDB.Driver", "MongoDB.Driver.DropIndexOptions");
            feature.AddKnownType("MongoDB.Driver.EstimatedDocumentCountOptions,MongoDB.Driver", "MongoDB.Driver.EstimatedDocumentCountOptions");
            feature.AddKnownType("MongoDB.Driver.ExpressionTranslationOptions,MongoDB.Driver", "MongoDB.Driver.ExpressionTranslationOptions");
            feature.AddKnownType("MongoDB.Driver.ExternalEvidence,MongoDB.Driver", "MongoDB.Driver.ExternalEvidence");
            feature.AddKnownType("MongoDB.Driver.RenderedFieldDefinition,MongoDB.Driver", "MongoDB.Driver.RenderedFieldDefinition");
            feature.AddKnownType("MongoDB.Driver.RenderedFieldDefinition`1,MongoDB.Driver", "MongoDB.Driver.RenderedFieldDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.FieldDefinition`1,MongoDB.Driver", "MongoDB.Driver.FieldDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.FieldDefinition`2,MongoDB.Driver", "MongoDB.Driver.FieldDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.ExpressionFieldDefinition`1,MongoDB.Driver", "MongoDB.Driver.ExpressionFieldDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.ExpressionFieldDefinition`2,MongoDB.Driver", "MongoDB.Driver.ExpressionFieldDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.StringFieldDefinition`1,MongoDB.Driver", "MongoDB.Driver.StringFieldDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.StringFieldDefinition`2,MongoDB.Driver", "MongoDB.Driver.StringFieldDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.UntypedFieldDefinitionAdapter`2,MongoDB.Driver", "MongoDB.Driver.UntypedFieldDefinitionAdapter`2'2");
            feature.AddKnownType("MongoDB.Driver.FieldValueSerializerHelper+ConvertIfPossibleSerializer`2,MongoDB.Driver", "MongoDB.Driver.ConvertIfPossibleSerializer`2'2");
            feature.AddKnownType("MongoDB.Driver.FieldValueSerializerHelper+EnumConvertingSerializer`2,MongoDB.Driver", "MongoDB.Driver.EnumConvertingSerializer`2'2");
            feature.AddKnownType("MongoDB.Driver.FieldValueSerializerHelper+IEnumerableSerializer`1,MongoDB.Driver", "MongoDB.Driver.IEnumerableSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.FieldValueSerializerHelper+NullableEnumConvertingSerializer`2,MongoDB.Driver", "MongoDB.Driver.NullableEnumConvertingSerializer`2'2");
            feature.AddKnownType("MongoDB.Driver.FilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.FilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.BsonDocumentFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.BsonDocumentFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.EmptyFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.EmptyFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.ExpressionFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.ExpressionFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.JsonFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.JsonFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.ObjectFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.ObjectFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.FilterDefinitionBuilder`1,MongoDB.Driver", "MongoDB.Driver.FilterDefinitionBuilder`1'1");
            feature.AddKnownType("MongoDB.Driver.AndFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.AndFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.ArrayOperatorFilterDefinition`2,MongoDB.Driver", "MongoDB.Driver.ArrayOperatorFilterDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.ElementMatchFilterDefinition`2,MongoDB.Driver", "MongoDB.Driver.ElementMatchFilterDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.ScalarElementMatchFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.ScalarElementMatchFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.GeometryOperatorFilterDefinition`2,MongoDB.Driver", "MongoDB.Driver.GeometryOperatorFilterDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.NearFilterDefinition`2,MongoDB.Driver", "MongoDB.Driver.NearFilterDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.NotFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.NotFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.DocumentOfTypeFilterDefinition`2,MongoDB.Driver", "MongoDB.Driver.DocumentOfTypeFilterDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.FieldOfTypeFilterDefinition`3,MongoDB.Driver", "MongoDB.Driver.FieldOfTypeFilterDefinition`3'3");
            feature.AddKnownType("MongoDB.Driver.OperatorFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.OperatorFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.OperatorFilterDefinition`2,MongoDB.Driver", "MongoDB.Driver.OperatorFilterDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.OrFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.OrFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.SimpleFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.SimpleFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.SimpleFilterDefinition`2,MongoDB.Driver", "MongoDB.Driver.SimpleFilterDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.SingleItemAsArrayOperatorFilterDefinition`2,MongoDB.Driver", "MongoDB.Driver.SingleItemAsArrayOperatorFilterDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.ArrayAsSingleItemOperatorFilterDefinition`2,MongoDB.Driver", "MongoDB.Driver.ArrayAsSingleItemOperatorFilterDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.ArrayAsSingleItemSimpleFilterDefinition`2,MongoDB.Driver", "MongoDB.Driver.ArrayAsSingleItemSimpleFilterDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.ArrayIndexExistsFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.ArrayIndexExistsFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.StringInOrNinFilterDefinition`2,MongoDB.Driver", "MongoDB.Driver.StringInOrNinFilterDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.StringArrayFieldInOrNinFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.StringArrayFieldInOrNinFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.StringFieldInOrNinFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.StringFieldInOrNinFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.UInt32GreaterThanFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.UInt32GreaterThanFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.UInt32LessThanFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.UInt32LessThanFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.UInt64GreaterThanFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.UInt64GreaterThanFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.UInt64LessThanFilterDefinition`1,MongoDB.Driver", "MongoDB.Driver.UInt64LessThanFilterDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.FilteredMongoCollectionBase`1,MongoDB.Driver", "MongoDB.Driver.FilteredMongoCollectionBase`1'1");
            feature.AddKnownType("MongoDB.Driver.FindFluent`2,MongoDB.Driver", "MongoDB.Driver.FindFluent`2'2");
            feature.AddKnownType("MongoDB.Driver.FindFluentBase`2,MongoDB.Driver", "MongoDB.Driver.FindFluentBase`2'2");
            feature.AddKnownType("MongoDB.Driver.FindOneAndDeleteOptions`2,MongoDB.Driver", "MongoDB.Driver.FindOneAndDeleteOptions`2'2");
            feature.AddKnownType("MongoDB.Driver.FindOneAndDeleteOptions`1,MongoDB.Driver", "MongoDB.Driver.FindOneAndDeleteOptions`1'1");
            feature.AddKnownType("MongoDB.Driver.FindOneAndReplaceOptions`2,MongoDB.Driver", "MongoDB.Driver.FindOneAndReplaceOptions`2'2");
            feature.AddKnownType("MongoDB.Driver.FindOneAndReplaceOptions`1,MongoDB.Driver", "MongoDB.Driver.FindOneAndReplaceOptions`1'1");
            feature.AddKnownType("MongoDB.Driver.FindOneAndUpdateOptions`2,MongoDB.Driver", "MongoDB.Driver.FindOneAndUpdateOptions`2'2");
            feature.AddKnownType("MongoDB.Driver.FindOneAndUpdateOptions`1,MongoDB.Driver", "MongoDB.Driver.FindOneAndUpdateOptions`1'1");
            feature.AddKnownType("MongoDB.Driver.FindOptionsBase,MongoDB.Driver", "MongoDB.Driver.FindOptionsBase");
            feature.AddKnownType("MongoDB.Driver.FindOptions,MongoDB.Driver", "MongoDB.Driver.FindOptions");
            feature.AddKnownType("MongoDB.Driver.FindOptions`2,MongoDB.Driver", "MongoDB.Driver.FindOptions`2'2");
            feature.AddKnownType("MongoDB.Driver.FindOptions`1,MongoDB.Driver", "MongoDB.Driver.FindOptions`1'1");
            feature.AddKnownType("MongoDB.Driver.GroupForLinq3Result`3,MongoDB.Driver", "MongoDB.Driver.GroupForLinq3Result`3'3");
            feature.AddKnownType("MongoDB.Driver.IAggregateFluent`1,MongoDB.Driver", "MongoDB.Driver.IAggregateFluent`1'1");
            feature.AddKnownType("MongoDB.Driver.IOrderedAggregateFluent`1,MongoDB.Driver", "MongoDB.Driver.IOrderedAggregateFluent`1'1");
            feature.AddKnownType("MongoDB.Driver.IClientSession,MongoDB.Driver", "MongoDB.Driver.IClientSession");
            feature.AddKnownType("MongoDB.Driver.IClientSessionHandle,MongoDB.Driver", "MongoDB.Driver.IClientSessionHandle");
            feature.AddKnownType("MongoDB.Driver.IFilteredMongoCollection`1,MongoDB.Driver", "MongoDB.Driver.IFilteredMongoCollection`1'1");
            feature.AddKnownType("MongoDB.Driver.IFindFluent`2,MongoDB.Driver", "MongoDB.Driver.IFindFluent`2'2");
            feature.AddKnownType("MongoDB.Driver.IOrderedFindFluent`2,MongoDB.Driver", "MongoDB.Driver.IOrderedFindFluent`2'2");
            feature.AddKnownType("MongoDB.Driver.IInheritableMongoClientSettings,MongoDB.Driver", "MongoDB.Driver.IInheritableMongoClientSettings");
            feature.AddKnownType("MongoDB.Driver.IMongoClient,MongoDB.Driver", "MongoDB.Driver.IMongoClient");
            feature.AddKnownType("MongoDB.Driver.IMongoCollection`1,MongoDB.Driver", "MongoDB.Driver.IMongoCollection`1'1");
            feature.AddKnownType("MongoDB.Driver.IMongoDatabase,MongoDB.Driver", "MongoDB.Driver.IMongoDatabase");
            feature.AddKnownType("MongoDB.Driver.IMongoIndexManager`1,MongoDB.Driver", "MongoDB.Driver.IMongoIndexManager`1'1");
            feature.AddKnownType("MongoDB.Driver.IndexKeysDefinition`1,MongoDB.Driver", "MongoDB.Driver.IndexKeysDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.BsonDocumentIndexKeysDefinition`1,MongoDB.Driver", "MongoDB.Driver.BsonDocumentIndexKeysDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.JsonIndexKeysDefinition`1,MongoDB.Driver", "MongoDB.Driver.JsonIndexKeysDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.IndexKeysDefinitionBuilder`1,MongoDB.Driver", "MongoDB.Driver.IndexKeysDefinitionBuilder`1'1");
            feature.AddKnownType("MongoDB.Driver.CombinedIndexKeysDefinition`1,MongoDB.Driver", "MongoDB.Driver.CombinedIndexKeysDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.DirectionalIndexKeyDefinition`1,MongoDB.Driver", "MongoDB.Driver.DirectionalIndexKeyDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoHaystackIndexKeyDefinition`1,MongoDB.Driver", "MongoDB.Driver.GeoHaystackIndexKeyDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.SimpleIndexKeyDefinition`1,MongoDB.Driver", "MongoDB.Driver.SimpleIndexKeyDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.WildcardIndexKeyDefinition`1,MongoDB.Driver", "MongoDB.Driver.WildcardIndexKeyDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.IndexOptionDefaults,MongoDB.Driver", "MongoDB.Driver.IndexOptionDefaults");
            feature.AddKnownType("MongoDB.Driver.InsertManyOptions,MongoDB.Driver", "MongoDB.Driver.InsertManyOptions");
            feature.AddKnownType("MongoDB.Driver.InsertOneModel`1,MongoDB.Driver", "MongoDB.Driver.InsertOneModel`1'1");
            feature.AddKnownType("MongoDB.Driver.InsertOneOptions,MongoDB.Driver", "MongoDB.Driver.InsertOneOptions");
            feature.AddKnownType("MongoDB.Driver.IOperationExecutor,MongoDB.Driver", "MongoDB.Driver.IOperationExecutor");
            feature.AddKnownType("MongoDB.Driver.IServerSession,MongoDB.Driver", "MongoDB.Driver.IServerSession");
            feature.AddKnownType("MongoDB.Driver.ISetWindowFieldsPartition`1,MongoDB.Driver", "MongoDB.Driver.ISetWindowFieldsPartition`1'1");
            feature.AddKnownType("MongoDB.Driver.ListCollectionNamesOptions,MongoDB.Driver", "MongoDB.Driver.ListCollectionNamesOptions");
            feature.AddKnownType("MongoDB.Driver.ListCollectionsOptions,MongoDB.Driver", "MongoDB.Driver.ListCollectionsOptions");
            feature.AddKnownType("MongoDB.Driver.ListDatabaseNamesOptions,MongoDB.Driver", "MongoDB.Driver.ListDatabaseNamesOptions");
            feature.AddKnownType("MongoDB.Driver.ListDatabasesOptions,MongoDB.Driver", "MongoDB.Driver.ListDatabasesOptions");
            feature.AddKnownType("MongoDB.Driver.ListIndexesOptions,MongoDB.Driver", "MongoDB.Driver.ListIndexesOptions");
            feature.AddKnownType("MongoDB.Driver.MapReduceOptions`2,MongoDB.Driver", "MongoDB.Driver.MapReduceOptions`2'2");
            feature.AddKnownType("MongoDB.Driver.MapReduceOutputOptions,MongoDB.Driver", "MongoDB.Driver.MapReduceOutputOptions");
            feature.AddKnownType("MongoDB.Driver.MapReduceOutputOptions+InlineOutput,MongoDB.Driver", "MongoDB.Driver.InlineOutput");
            feature.AddKnownType("MongoDB.Driver.MapReduceOutputOptions+CollectionOutput,MongoDB.Driver", "MongoDB.Driver.CollectionOutput");
            feature.AddKnownType("MongoDB.Driver.MergeStageWhenMatched,MongoDB.Driver", "MongoDB.Driver.MergeStageWhenMatched");
            feature.AddKnownType("MongoDB.Driver.MergeStageWhenNotMatched,MongoDB.Driver", "MongoDB.Driver.MergeStageWhenNotMatched");
            feature.AddKnownType("MongoDB.Driver.MergeStageOptions`1,MongoDB.Driver", "MongoDB.Driver.MergeStageOptions`1'1");
            feature.AddKnownType("MongoDB.Driver.MongoBulkWriteException,MongoDB.Driver", "MongoDB.Driver.MongoBulkWriteException");
            feature.AddKnownType("MongoDB.Driver.MongoBulkWriteException`1,MongoDB.Driver", "MongoDB.Driver.MongoBulkWriteException`1'1");
            feature.AddKnownType("MongoDB.Driver.MongoClient,MongoDB.Driver", "MongoDB.Driver.MongoClient");
            feature.AddKnownType("MongoDB.Driver.MongoClient+AreSessionsSupportedServerSelector,MongoDB.Driver", "MongoDB.Driver.AreSessionsSupportedServerSelector");
            feature.AddKnownType("MongoDB.Driver.MongoClientBase,MongoDB.Driver", "MongoDB.Driver.MongoClientBase");
            feature.AddKnownType("MongoDB.Driver.MongoClientSettings,MongoDB.Driver", "MongoDB.Driver.MongoClientSettings");
            feature.AddKnownType("MongoDB.Driver.MongoCollectionBase`1,MongoDB.Driver", "MongoDB.Driver.MongoCollectionBase`1'1");
            feature.AddKnownType("MongoDB.Driver.MongoCollectionImpl`1,MongoDB.Driver", "MongoDB.Driver.MongoCollectionImpl`1'1");
            feature.AddKnownType("MongoDB.Driver.MongoCollectionImpl`1+MongoIndexManager,MongoDB.Driver", "MongoDB.Driver.MongoIndexManager'1");
            feature.AddKnownType("MongoDB.Driver.MongoCollectionSettings,MongoDB.Driver", "MongoDB.Driver.MongoCollectionSettings");
            feature.AddKnownType("MongoDB.Driver.MongoCredential,MongoDB.Driver", "MongoDB.Driver.MongoCredential");
            feature.AddKnownType("MongoDB.Driver.MongoCredentialStore,MongoDB.Driver", "MongoDB.Driver.MongoCredentialStore");
            feature.AddKnownType("MongoDB.Driver.MongoDatabaseBase,MongoDB.Driver", "MongoDB.Driver.MongoDatabaseBase");
            feature.AddKnownType("MongoDB.Driver.MongoDatabaseImpl,MongoDB.Driver", "MongoDB.Driver.MongoDatabaseImpl");
            feature.AddKnownType("MongoDB.Driver.MongoDatabaseSettings,MongoDB.Driver", "MongoDB.Driver.MongoDatabaseSettings");
            feature.AddKnownType("MongoDB.Driver.MongoDBRef,MongoDB.Driver", "MongoDB.Driver.MongoDBRef");
            feature.AddKnownType("MongoDB.Driver.MongoDBRefSerializer,MongoDB.Driver", "MongoDB.Driver.MongoDBRefSerializer");
            feature.AddKnownType("MongoDB.Driver.MongoExternalAwsIdentity,MongoDB.Driver", "MongoDB.Driver.MongoExternalAwsIdentity");
            feature.AddKnownType("MongoDB.Driver.MongoExternalIdentity,MongoDB.Driver", "MongoDB.Driver.MongoExternalIdentity");
            feature.AddKnownType("MongoDB.Driver.MongoIdentity,MongoDB.Driver", "MongoDB.Driver.MongoIdentity");
            feature.AddKnownType("MongoDB.Driver.MongoIdentityEvidence,MongoDB.Driver", "MongoDB.Driver.MongoIdentityEvidence");
            feature.AddKnownType("MongoDB.Driver.MongoIndexManagerBase`1,MongoDB.Driver", "MongoDB.Driver.MongoIndexManagerBase`1'1");
            feature.AddKnownType("MongoDB.Driver.MongoInternalIdentity,MongoDB.Driver", "MongoDB.Driver.MongoInternalIdentity");
            feature.AddKnownType("MongoDB.Driver.MongoServerAddress,MongoDB.Driver", "MongoDB.Driver.MongoServerAddress");
            feature.AddKnownType("MongoDB.Driver.MongoUrl,MongoDB.Driver", "MongoDB.Driver.MongoUrl");
            feature.AddKnownType("MongoDB.Driver.MongoUrlBuilder,MongoDB.Driver", "MongoDB.Driver.MongoUrlBuilder");
            feature.AddKnownType("MongoDB.Driver.MongoWriteException,MongoDB.Driver", "MongoDB.Driver.MongoWriteException");
            feature.AddKnownType("MongoDB.Driver.MongoX509Identity,MongoDB.Driver", "MongoDB.Driver.MongoX509Identity");
            feature.AddKnownType("MongoDB.Driver.NoPipelineInput,MongoDB.Driver", "MongoDB.Driver.NoPipelineInput");
            feature.AddKnownType("MongoDB.Driver.NoPipelineInputSerializer,MongoDB.Driver", "MongoDB.Driver.NoPipelineInputSerializer");
            feature.AddKnownType("MongoDB.Driver.OfTypeMongoCollection`2,MongoDB.Driver", "MongoDB.Driver.OfTypeMongoCollection`2'2");
            feature.AddKnownType("MongoDB.Driver.OfTypeSerializer`2,MongoDB.Driver", "MongoDB.Driver.OfTypeSerializer`2'2");
            feature.AddKnownType("MongoDB.Driver.OperationExecutor,MongoDB.Driver", "MongoDB.Driver.OperationExecutor");
            feature.AddKnownType("MongoDB.Driver.PasswordEvidence,MongoDB.Driver", "MongoDB.Driver.PasswordEvidence");
            feature.AddKnownType("MongoDB.Driver.RenderedPipelineDefinition`1,MongoDB.Driver", "MongoDB.Driver.RenderedPipelineDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.PipelineDefinition`2,MongoDB.Driver", "MongoDB.Driver.PipelineDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.BsonDocumentStagePipelineDefinition`2,MongoDB.Driver", "MongoDB.Driver.BsonDocumentStagePipelineDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.PipelineStagePipelineDefinition`2,MongoDB.Driver", "MongoDB.Driver.PipelineStagePipelineDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.OptimizingPipelineDefinition`2,MongoDB.Driver", "MongoDB.Driver.OptimizingPipelineDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.AppendedStagePipelineDefinition`3,MongoDB.Driver", "MongoDB.Driver.AppendedStagePipelineDefinition`3'3");
            feature.AddKnownType("MongoDB.Driver.EmptyPipelineDefinition`1,MongoDB.Driver", "MongoDB.Driver.EmptyPipelineDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.PrependedStagePipelineDefinition`3,MongoDB.Driver", "MongoDB.Driver.PrependedStagePipelineDefinition`3'3");
            feature.AddKnownType("MongoDB.Driver.ReplaceOutputSerializerPipelineDefinition`3,MongoDB.Driver", "MongoDB.Driver.ReplaceOutputSerializerPipelineDefinition`3'3");
            feature.AddKnownType("MongoDB.Driver.IRenderedPipelineStageDefinition,MongoDB.Driver", "MongoDB.Driver.IRenderedPipelineStageDefinition");
            feature.AddKnownType("MongoDB.Driver.RenderedPipelineStageDefinition`1,MongoDB.Driver", "MongoDB.Driver.RenderedPipelineStageDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.IPipelineStageDefinition,MongoDB.Driver", "MongoDB.Driver.IPipelineStageDefinition");
            feature.AddKnownType("MongoDB.Driver.PipelineStageDefinition`2,MongoDB.Driver", "MongoDB.Driver.PipelineStageDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.BsonDocumentPipelineStageDefinition`2,MongoDB.Driver", "MongoDB.Driver.BsonDocumentPipelineStageDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.JsonPipelineStageDefinition`2,MongoDB.Driver", "MongoDB.Driver.JsonPipelineStageDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.DelegatedPipelineStageDefinition`2,MongoDB.Driver", "MongoDB.Driver.DelegatedPipelineStageDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.ExpressionBucketOutputProjection`3,MongoDB.Driver", "MongoDB.Driver.ExpressionBucketOutputProjection`3'3");
            feature.AddKnownType("MongoDB.Driver.GroupExpressionProjection`3,MongoDB.Driver", "MongoDB.Driver.GroupExpressionProjection`3'3");
            feature.AddKnownType("MongoDB.Driver.ProjectExpressionProjection`2,MongoDB.Driver", "MongoDB.Driver.ProjectExpressionProjection`2'2");
            feature.AddKnownType("MongoDB.Driver.SortPipelineStageDefinition`1,MongoDB.Driver", "MongoDB.Driver.SortPipelineStageDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.RenderedProjectionDefinition`1,MongoDB.Driver", "MongoDB.Driver.RenderedProjectionDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.ProjectionDefinition`1,MongoDB.Driver", "MongoDB.Driver.ProjectionDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.ProjectionDefinition`2,MongoDB.Driver", "MongoDB.Driver.ProjectionDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.BsonDocumentProjectionDefinition`1,MongoDB.Driver", "MongoDB.Driver.BsonDocumentProjectionDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.BsonDocumentProjectionDefinition`2,MongoDB.Driver", "MongoDB.Driver.BsonDocumentProjectionDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.FindExpressionProjectionDefinition`2,MongoDB.Driver", "MongoDB.Driver.FindExpressionProjectionDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.JsonProjectionDefinition`1,MongoDB.Driver", "MongoDB.Driver.JsonProjectionDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.JsonProjectionDefinition`2,MongoDB.Driver", "MongoDB.Driver.JsonProjectionDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.ObjectProjectionDefinition`1,MongoDB.Driver", "MongoDB.Driver.ObjectProjectionDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.ObjectProjectionDefinition`2,MongoDB.Driver", "MongoDB.Driver.ObjectProjectionDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.KnownResultTypeProjectionDefinitionAdapter`2,MongoDB.Driver", "MongoDB.Driver.KnownResultTypeProjectionDefinitionAdapter`2'2");
            feature.AddKnownType("MongoDB.Driver.ClientSideDeserializationProjectionDefinition`2,MongoDB.Driver", "MongoDB.Driver.ClientSideDeserializationProjectionDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.ProjectionDefinitionBuilder`1,MongoDB.Driver", "MongoDB.Driver.ProjectionDefinitionBuilder`1'1");
            feature.AddKnownType("MongoDB.Driver.CombinedProjectionDefinition`1,MongoDB.Driver", "MongoDB.Driver.CombinedProjectionDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.ElementMatchProjectionDefinition`2,MongoDB.Driver", "MongoDB.Driver.ElementMatchProjectionDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.PositionalOperatorProjectionDefinition`1,MongoDB.Driver", "MongoDB.Driver.PositionalOperatorProjectionDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.SingleFieldProjectionDefinition`1,MongoDB.Driver", "MongoDB.Driver.SingleFieldProjectionDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.RangeWindow,MongoDB.Driver", "MongoDB.Driver.RangeWindow");
            feature.AddKnownType("MongoDB.Driver.RangeWindowBoundary,MongoDB.Driver", "MongoDB.Driver.RangeWindowBoundary");
            feature.AddKnownType("MongoDB.Driver.KeywordRangeWindowBoundary,MongoDB.Driver", "MongoDB.Driver.KeywordRangeWindowBoundary");
            feature.AddKnownType("MongoDB.Driver.ValueRangeWindowBoundary,MongoDB.Driver", "MongoDB.Driver.ValueRangeWindowBoundary");
            feature.AddKnownType("MongoDB.Driver.ValueRangeWindowBoundary`1,MongoDB.Driver", "MongoDB.Driver.ValueRangeWindowBoundary`1'1");
            feature.AddKnownType("MongoDB.Driver.TimeRangeWindowBoundary,MongoDB.Driver", "MongoDB.Driver.TimeRangeWindowBoundary");
            feature.AddKnownType("MongoDB.Driver.ValueRangeWindowBoundaryConvertingValueSerializer`2,MongoDB.Driver", "MongoDB.Driver.ValueRangeWindowBoundaryConvertingValueSerializer`2'2");
            feature.AddKnownType("MongoDB.Driver.RenameCollectionOptions,MongoDB.Driver", "MongoDB.Driver.RenameCollectionOptions");
            feature.AddKnownType("MongoDB.Driver.ReplaceOneModel`1,MongoDB.Driver", "MongoDB.Driver.ReplaceOneModel`1'1");
            feature.AddKnownType("MongoDB.Driver.ReplaceOneResult,MongoDB.Driver", "MongoDB.Driver.ReplaceOneResult");
            feature.AddKnownType("MongoDB.Driver.ReplaceOneResult+Acknowledged,MongoDB.Driver", "MongoDB.Driver.MongoDB.Driver.ReplaceOneResult.Acknowledged");
            feature.AddKnownType("MongoDB.Driver.ReplaceOneResult+Unacknowledged,MongoDB.Driver", "MongoDB.Driver.MongoDB.Driver.ReplaceOneResult.Unacknowledged");
            feature.AddKnownType("MongoDB.Driver.ReplaceOptions,MongoDB.Driver", "MongoDB.Driver.ReplaceOptions");
            feature.AddKnownType("MongoDB.Driver.ReturnDocument,MongoDB.Driver", "MongoDB.Driver.ReturnDocument");
            feature.AddKnownType("MongoDB.Driver.ServerSession,MongoDB.Driver", "MongoDB.Driver.ServerSession");
            feature.AddKnownType("MongoDB.Driver.Setting`1,MongoDB.Driver", "MongoDB.Driver.Setting`1'1");
            feature.AddKnownType("MongoDB.Driver.SetWindowFieldsWindow,MongoDB.Driver", "MongoDB.Driver.SetWindowFieldsWindow");
            feature.AddKnownType("MongoDB.Driver.SortDirection,MongoDB.Driver", "MongoDB.Driver.SortDirection");
            feature.AddKnownType("MongoDB.Driver.SortDefinition`1,MongoDB.Driver", "MongoDB.Driver.SortDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.BsonDocumentSortDefinition`1,MongoDB.Driver", "MongoDB.Driver.BsonDocumentSortDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.JsonSortDefinition`1,MongoDB.Driver", "MongoDB.Driver.JsonSortDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.ObjectSortDefinition`1,MongoDB.Driver", "MongoDB.Driver.ObjectSortDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.SortDefinitionBuilder`1,MongoDB.Driver", "MongoDB.Driver.SortDefinitionBuilder`1'1");
            feature.AddKnownType("MongoDB.Driver.CombinedSortDefinition`1,MongoDB.Driver", "MongoDB.Driver.CombinedSortDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.DirectionalSortDefinition`1,MongoDB.Driver", "MongoDB.Driver.DirectionalSortDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.SslSettings,MongoDB.Driver", "MongoDB.Driver.SslSettings");
            feature.AddKnownType("MongoDB.Driver.SslSettings+X509CertificateCollectionEqualityComparer,MongoDB.Driver", "MongoDB.Driver.X509CertificateCollectionEqualityComparer");
            feature.AddKnownType("MongoDB.Driver.StringOrRegularExpression,MongoDB.Driver", "MongoDB.Driver.StringOrRegularExpression");
            feature.AddKnownType("MongoDB.Driver.TextSearchOptions,MongoDB.Driver", "MongoDB.Driver.TextSearchOptions");
            feature.AddKnownType("MongoDB.Driver.TransactionExecutor+CallbackOutcome`1,MongoDB.Driver", "MongoDB.Driver.CallbackOutcome`1'1");
            feature.AddKnownType("MongoDB.Driver.TransactionExecutor+CallbackOutcome`1+WithResult,MongoDB.Driver", "MongoDB.Driver.MongoDB.Driver.CallbackOutcome`1'1.WithResult'1");
            feature.AddKnownType("MongoDB.Driver.TransactionExecutor+CallbackOutcome`1+WithShouldRetryTransaction,MongoDB.Driver", "MongoDB.Driver.MongoDB.Driver.CallbackOutcome`1'1.WithShouldRetryTransaction'1");
            feature.AddKnownType("MongoDB.Driver.UpdateDefinition`1,MongoDB.Driver", "MongoDB.Driver.UpdateDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.PipelineUpdateDefinition`1,MongoDB.Driver", "MongoDB.Driver.PipelineUpdateDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.BsonDocumentUpdateDefinition`1,MongoDB.Driver", "MongoDB.Driver.BsonDocumentUpdateDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.JsonUpdateDefinition`1,MongoDB.Driver", "MongoDB.Driver.JsonUpdateDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.ObjectUpdateDefinition`1,MongoDB.Driver", "MongoDB.Driver.ObjectUpdateDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.UpdateDefinitionCurrentDateType,MongoDB.Driver", "MongoDB.Driver.UpdateDefinitionCurrentDateType");
            feature.AddKnownType("MongoDB.Driver.UpdateDefinitionBuilder`1,MongoDB.Driver", "MongoDB.Driver.UpdateDefinitionBuilder`1'1");
            feature.AddKnownType("MongoDB.Driver.AddToSetUpdateDefinition`2,MongoDB.Driver", "MongoDB.Driver.AddToSetUpdateDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.CombinedUpdateDefinition`1,MongoDB.Driver", "MongoDB.Driver.CombinedUpdateDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.BitwiseOperatorUpdateDefinition`2,MongoDB.Driver", "MongoDB.Driver.BitwiseOperatorUpdateDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.OperatorUpdateDefinition`1,MongoDB.Driver", "MongoDB.Driver.OperatorUpdateDefinition`1'1");
            feature.AddKnownType("MongoDB.Driver.OperatorUpdateDefinition`2,MongoDB.Driver", "MongoDB.Driver.OperatorUpdateDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.PullUpdateDefinition`2,MongoDB.Driver", "MongoDB.Driver.PullUpdateDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.PushUpdateDefinition`2,MongoDB.Driver", "MongoDB.Driver.PushUpdateDefinition`2'2");
            feature.AddKnownType("MongoDB.Driver.UpdateManyModel`1,MongoDB.Driver", "MongoDB.Driver.UpdateManyModel`1'1");
            feature.AddKnownType("MongoDB.Driver.UpdateOneModel`1,MongoDB.Driver", "MongoDB.Driver.UpdateOneModel`1'1");
            feature.AddKnownType("MongoDB.Driver.UpdateOptions,MongoDB.Driver", "MongoDB.Driver.UpdateOptions");
            feature.AddKnownType("MongoDB.Driver.UpdateResult,MongoDB.Driver", "MongoDB.Driver.UpdateResult");
            feature.AddKnownType("MongoDB.Driver.UpdateResult+Acknowledged,MongoDB.Driver", "MongoDB.Driver.MongoDB.Driver.UpdateResult.Acknowledged");
            feature.AddKnownType("MongoDB.Driver.UpdateResult+Unacknowledged,MongoDB.Driver", "MongoDB.Driver.MongoDB.Driver.UpdateResult.Unacknowledged");
            feature.AddKnownType("MongoDB.Driver.WriteConcernError,MongoDB.Driver", "MongoDB.Driver.WriteConcernError");
            feature.AddKnownType("MongoDB.Driver.WriteError,MongoDB.Driver", "MongoDB.Driver.WriteError");
            feature.AddKnownType("MongoDB.Driver.WriteModel`1,MongoDB.Driver", "MongoDB.Driver.WriteModel`1'1");
            feature.AddKnownType("MongoDB.Driver.WriteModelType,MongoDB.Driver", "MongoDB.Driver.WriteModelType");
            feature.AddKnownType("MongoDB.Driver.Encryption.AutoEncryptionLibMongoCryptController,MongoDB.Driver", "MongoDB.Driver.Encryption.AutoEncryptionLibMongoCryptController");
            feature.AddKnownType("MongoDB.Driver.Encryption.AutoEncryptionOptions,MongoDB.Driver", "MongoDB.Driver.Encryption.AutoEncryptionOptions");
            feature.AddKnownType("MongoDB.Driver.Encryption.ClientEncryption,MongoDB.Driver", "MongoDB.Driver.Encryption.ClientEncryption");
            feature.AddKnownType("MongoDB.Driver.Encryption.ClientEncryptionOptions,MongoDB.Driver", "MongoDB.Driver.Encryption.ClientEncryptionOptions");
            feature.AddKnownType("MongoDB.Driver.Encryption.DataKeyOptions,MongoDB.Driver", "MongoDB.Driver.Encryption.DataKeyOptions");
            feature.AddKnownType("MongoDB.Driver.Encryption.EncryptionAlgorithm,MongoDB.Driver", "MongoDB.Driver.Encryption.EncryptionAlgorithm");
            feature.AddKnownType("MongoDB.Driver.Encryption.EncryptOptions,MongoDB.Driver", "MongoDB.Driver.Encryption.EncryptOptions");
            feature.AddKnownType("MongoDB.Driver.Encryption.ExplicitEncryptionLibMongoCryptController,MongoDB.Driver", "MongoDB.Driver.Encryption.ExplicitEncryptionLibMongoCryptController");
            feature.AddKnownType("MongoDB.Driver.Encryption.LibMongoCryptControllerBase,MongoDB.Driver", "MongoDB.Driver.Encryption.LibMongoCryptControllerBase");
            feature.AddKnownType("MongoDB.Driver.Encryption.LibMongoCryptControllerBase+NetworkStreamFactory,MongoDB.Driver", "MongoDB.Driver.Encryption.NetworkStreamFactory");
            feature.AddKnownType("MongoDB.Driver.Encryption.MongocryptdFactory,MongoDB.Driver", "MongoDB.Driver.Encryption.MongocryptdFactory");
            feature.AddKnownType("MongoDB.Driver.Encryption.MongoEncryptionException,MongoDB.Driver", "MongoDB.Driver.Encryption.MongoEncryptionException");
            feature.AddKnownType("MongoDB.Driver.Encryption.NoopBinaryDocumentFieldCryptor,MongoDB.Driver", "MongoDB.Driver.Encryption.NoopBinaryDocumentFieldCryptor");
            feature.AddKnownType("MongoDB.Driver.Encryption.RewrapManyDataKeyOptions,MongoDB.Driver", "MongoDB.Driver.Encryption.RewrapManyDataKeyOptions");
            feature.AddKnownType("MongoDB.Driver.Encryption.RewrapManyDataKeyResult,MongoDB.Driver", "MongoDB.Driver.Encryption.RewrapManyDataKeyResult");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonBoundingBox`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonBoundingBox`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinateReferenceSystem,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinateReferenceSystem");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureArgs`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureArgs`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonNamedCoordinateReferenceSystem,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonNamedCoordinateReferenceSystem");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DCoordinatesSerializer,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DCoordinatesSerializer");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DGeographicCoordinatesSerializer,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DGeographicCoordinatesSerializer");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DProjectedCoordinatesSerializer,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DProjectedCoordinatesSerializer");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DCoordinatesSerializer,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DCoordinatesSerializer");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DGeographicCoordinatesSerializer,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DGeographicCoordinatesSerializer");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DProjectedCoordinatesSerializer,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DProjectedCoordinatesSerializer");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonBoundingBoxSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonBoundingBoxSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonCoordinateReferenceSystemSerializer,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonCoordinateReferenceSystemSerializer");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonCoordinatesSerializer,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonCoordinatesSerializer");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureCollectionSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureCollectionSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometryCollectionSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometryCollectionSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometrySerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometrySerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinearRingCoordinatesSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinearRingCoordinatesSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringCoordinatesSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringCoordinatesSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinkedCoordinateReferenceSystemSerializer,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinkedCoordinateReferenceSystemSerializer");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringCoordinatesSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringCoordinatesSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointCoordinatesSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointCoordinatesSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonCoordinatesSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonCoordinatesSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonNamedCoordinateReferenceSystemSerializer,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonNamedCoordinateReferenceSystemSerializer");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializerHelper`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializerHelper`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPointSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPointSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonCoordinatesSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonCoordinatesSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonSerializer`1,MongoDB.Driver", "MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.DateTimeUnit,MongoDB.Driver", "MongoDB.Driver.Linq.DateTimeUnit");
            feature.AddKnownType("MongoDB.Driver.Linq.UnitOnlyDayTimeUnit,MongoDB.Driver", "MongoDB.Driver.Linq.UnitOnlyDayTimeUnit");
            feature.AddKnownType("MongoDB.Driver.Linq.WeekWithStartOfWeekDayTimeUnit,MongoDB.Driver", "MongoDB.Driver.Linq.WeekWithStartOfWeekDayTimeUnit");
            feature.AddKnownType("MongoDB.Driver.Linq.ExponentialMovingAverageWeighting,MongoDB.Driver", "MongoDB.Driver.Linq.ExponentialMovingAverageWeighting");
            feature.AddKnownType("MongoDB.Driver.Linq.ExponentialMovingAverageAlphaWeighting,MongoDB.Driver", "MongoDB.Driver.Linq.ExponentialMovingAverageAlphaWeighting");
            feature.AddKnownType("MongoDB.Driver.Linq.ExponentialMovingAveragePositionalWeighting,MongoDB.Driver", "MongoDB.Driver.Linq.ExponentialMovingAveragePositionalWeighting");
            feature.AddKnownType("MongoDB.Driver.Linq.ExpressionNotSupportedException,MongoDB.Driver", "MongoDB.Driver.Linq.ExpressionNotSupportedException");
            feature.AddKnownType("MongoDB.Driver.Linq.IMongoQueryable,MongoDB.Driver", "MongoDB.Driver.Linq.IMongoQueryable");
            feature.AddKnownType("MongoDB.Driver.Linq.IMongoQueryable`1,MongoDB.Driver", "MongoDB.Driver.Linq.IMongoQueryable`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.IOrderedMongoQueryable`1,MongoDB.Driver", "MongoDB.Driver.Linq.IOrderedMongoQueryable`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.IMongoQueryProvider,MongoDB.Driver", "MongoDB.Driver.Linq.IMongoQueryProvider");
            feature.AddKnownType("MongoDB.Driver.Linq.AggregateQueryableExecutionModel`1,MongoDB.Driver", "MongoDB.Driver.Linq.AggregateQueryableExecutionModel`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.LinqProvider,MongoDB.Driver", "MongoDB.Driver.Linq.LinqProvider");
            feature.AddKnownType("MongoDB.Driver.Linq.LinqProviderAdapter,MongoDB.Driver", "MongoDB.Driver.Linq.LinqProviderAdapter");
            feature.AddKnownType("MongoDB.Driver.Linq.QueryableExecutionModel,MongoDB.Driver", "MongoDB.Driver.Linq.QueryableExecutionModel");
            feature.AddKnownType("MongoDB.Driver.Linq.WindowTimeUnit,MongoDB.Driver", "MongoDB.Driver.Linq.WindowTimeUnit");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.FieldExpressionFlattener,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.FieldExpressionFlattener");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.IResultTransformer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.IResultTransformer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.LinqProviderAdapterV2,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.LinqProviderAdapterV2");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.MongoQueryableImpl`2,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.MongoQueryableImpl`2'2");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.MongoQueryProviderImpl`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.MongoQueryProviderImpl`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.QueryableTranslation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.QueryableTranslation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.AccumulatorExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.AccumulatorExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.AccumulatorType,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.AccumulatorType");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.AggregateExpressionExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.AggregateExpressionExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ArrayIndexExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ArrayIndexExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.CollectionExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.CollectionExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ConcatExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ConcatExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.CorrelatedExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.CorrelatedExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.DefaultIfEmptyExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.DefaultIfEmptyExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.DistinctExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.DistinctExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.DocumentExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.DocumentExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ExceptExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ExceptExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ExpressionComparer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ExpressionComparer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ExpressionComparer+ScopedDictionary`2,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ScopedDictionary`2'2");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ExpressionReplacer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ExpressionReplacer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ExtensionExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ExtensionExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ExtensionExpressionType,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ExtensionExpressionType");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ExtensionExpressionVisitor,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ExtensionExpressionVisitor");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.FieldAsDocumentExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.FieldAsDocumentExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.FieldExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.FieldExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.GroupByExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.GroupByExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.GroupByWithResultSelectorExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.GroupByWithResultSelectorExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.GroupingKeyExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.GroupingKeyExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.GroupJoinExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.GroupJoinExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.IFieldExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.IFieldExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.IHasOutOfCurrentScopePrefix,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.IHasOutOfCurrentScopePrefix");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.InjectedFilterExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.InjectedFilterExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.IntersectExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.IntersectExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ISerializationExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ISerializationExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ISourcedExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ISourcedExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.JoinExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.JoinExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.OrderByClause,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.OrderByClause");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.OrderByExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.OrderByExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.PipelineExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.PipelineExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ReverseExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ReverseExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.SampleExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.SampleExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.SelectExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.SelectExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.SelectManyExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.SelectManyExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.SerializationExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.SerializationExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.SerializedConstantExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.SerializedConstantExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.SkipExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.SkipExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.TakeExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.TakeExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.UnionExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.UnionExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.WhereExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.WhereExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ZipExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ZipExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.AggregateResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.AggregateResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.AllResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.AllResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.AnyResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.AnyResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.ArrayResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.ArrayResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.AverageResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.AverageResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.ContainsResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.ContainsResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.CountResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.CountResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.FirstResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.FirstResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.HashSetResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.HashSetResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.LastResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.LastResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.ListResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.ListResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.MaxResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.MaxResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.MinResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.MinResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.SingleResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.SingleResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.StandardDeviationResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.StandardDeviationResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.SumResultOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Expressions.ResultOperators.SumResultOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.AccumulatorBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.AccumulatorBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.CompositeMethodCallBinder`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.CompositeMethodCallBinder`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.CorrelatedAccumulatorRemover,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.CorrelatedAccumulatorRemover");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.CorrelatedGroupRewriter,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.CorrelatedGroupRewriter");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.CorrelatedGroupRewriter+AccumulatorGatherer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.AccumulatorGatherer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.IBindingContext,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.IBindingContext");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.IMethodCallBinder`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.IMethodCallBinder`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.MethodInfoMethodCallBinder`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.MethodInfoMethodCallBinder`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.MultipleWhereMerger,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.MultipleWhereMerger");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.NameBasedMethodCallBinder`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.NameBasedMethodCallBinder`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.NameBasedMethodCallBinder`1+Registration,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Registration'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.OutOfCurrentScopePrefixCollector,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.OutOfCurrentScopePrefixCollector");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.PartialEvaluator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.PartialEvaluator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.PartialEvaluator+Nominator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Nominator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.PartialEvaluator+ReflectionEvaluator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.ReflectionEvaluator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.PipelineBinderBase`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.PipelineBinderBase`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.PipelineBindingContext,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.PipelineBindingContext");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.PreviouslyUsedSerializerFinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.PreviouslyUsedSerializerFinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.ProjectionMapping,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.ProjectionMapping");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.ProjectionMemberMapping,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.ProjectionMemberMapping");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.ProjectionMapper,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.ProjectionMapper");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.SerializationBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.SerializationBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.SerializerBuilder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.SerializerBuilder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.EmbeddedPipelineBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.EmbeddedPipelineBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.EmbeddedPipelineBindingContext,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.EmbeddedPipelineBindingContext");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.AggregateBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.AggregateBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.AllBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.AllBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.AnyBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.AnyBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.AsQueryableBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.AsQueryableBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.AverageBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.AverageBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ConcatBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ConcatBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ContainsBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ContainsBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.CountBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.CountBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.DefaultIfEmptyBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.DefaultIfEmptyBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.DistinctBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.DistinctBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ExceptBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ExceptBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.FirstBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.FirstBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.IntersectBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.IntersectBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.LastBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.LastBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.MaxBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.MaxBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.MinBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.MinBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.OfTypeBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.OfTypeBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ReverseBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ReverseBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.SelectBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.SelectBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.SkipBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.SkipBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.StandardDeviationBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.StandardDeviationBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.SumBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.SumBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.TakeBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.TakeBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ToArrayBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ToArrayBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ToHashSetBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ToHashSetBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ToListBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ToListBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.UnionBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.UnionBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.WhereBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.WhereBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ZipBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.EmbeddedPipeline.MethodCallBinders.ZipBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.PipelineBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.PipelineBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.AnyBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.AnyBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.AverageBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.AverageBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.CountBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.CountBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.DistinctBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.DistinctBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.FirstBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.FirstBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.GroupByBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.GroupByBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.GroupByBinder+Grouping`2,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.Grouping`2'2");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.GroupByBinder+GroupingDeserializer`2,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.GroupingDeserializer`2'2");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.GroupByWithResultSelectorBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.GroupByWithResultSelectorBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.JoinBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.JoinBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.JoinSerializer`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.JoinSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.JoinSerializer`1+FieldHidingBsonReader,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.FieldHidingBsonReader'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.JoinSerializer`1+FieldHidingBsonReader+FieldHiderBookmark,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.FieldHiderBookmark'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.MaxBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.MaxBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.MinBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.MinBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.OfTypeBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.OfTypeBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.OrderByBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.OrderByBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.SampleBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.SampleBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.SelectBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.SelectBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.SelectingResultOperatorBinderBase,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.SelectingResultOperatorBinderBase");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.SelectManyBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.SelectManyBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.SingleBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.SingleBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.SkipBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.SkipBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.StandardDeviationPopulationBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.StandardDeviationPopulationBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.StandardDeviationSampleBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.StandardDeviationSampleBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.SumBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.SumBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.TakeBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.TakeBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.ThenByBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.ThenByBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.WhereBinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Pipeline.MethodCallBinders.WhereBinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.CollectionConstructorTransformer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.CollectionConstructorTransformer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.ConstantOnRightTransformer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.ConstantOnRightTransformer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.EqualsAnyBooleanTransformer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.EqualsAnyBooleanTransformer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.ExpressionTransformerRegistry,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.ExpressionTransformerRegistry");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.FirstLastNormalizingTransformer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.FirstLastNormalizingTransformer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.IExpressionTransformer`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.IExpressionTransformer`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.NullableTransformer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.NullableTransformer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.SelectSelectCombiningTransformer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.SelectSelectCombiningTransformer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.VBCoalesceTransformer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.VBCoalesceTransformer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.VBCompareStringTransformer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.VBCompareStringTransformer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.VBInformationIsNothingTransformer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.VBInformationIsNothingTransformer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.VBNothingConversionRemovalTransformer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.VBNothingConversionRemovalTransformer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.VBStringIndexComparisonTransformer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Processors.Transformers.VBStringIndexComparisonTransformer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Translators.AggregateLanguageTranslator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Translators.AggregateLanguageTranslator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Translators.FieldNamePrefixer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Translators.FieldNamePrefixer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Translators.FindProjectionTranslator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Translators.FindProjectionTranslator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Translators.FindProjectionTranslator+SerializationExpressionGatherer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Translators.SerializationExpressionGatherer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Translators.FindProjectionTranslator+ProjectedObjectFieldReplacer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Translators.ProjectedObjectFieldReplacer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Translators.PredicateTranslator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Translators.PredicateTranslator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Translators.PredicateTranslator+DocumentToFieldConverter,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Translators.DocumentToFieldConverter");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Translators.ProjectedObject,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Translators.ProjectedObject");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Translators.ProjectedObjectDeserializer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Translators.ProjectedObjectDeserializer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq2Implementation.Translators.QueryableTranslator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq2Implementation.Translators.QueryableTranslator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.GroupExpressionStageDefinitions`3,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.GroupExpressionStageDefinitions`3'3");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.GroupExpressionStageDefinitions`3+GroupStageDefinition,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.GroupStageDefinition'3");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.GroupExpressionStageDefinitions`3+GroupStageDefinition+PseudoQueryProvider,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.PseudoQueryProvider'3");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.GroupExpressionStageDefinitions`3+GroupStageDefinition+PseudoSource,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.PseudoSource'3");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.GroupExpressionStageDefinitions`3+GroupStageDefinition+DummyIGroupingSerializer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.DummyIGroupingSerializer'3");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.GroupExpressionStageDefinitions`3+ProjectStageDefinition,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.ProjectStageDefinition'3");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.LinqProviderAdapterV3,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.LinqProviderAdapterV3");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.MongoQuery`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.MongoQuery`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.MongoQuery`2,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.MongoQuery`2'2");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.MongoQueryProvider,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.MongoQueryProvider");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.MongoQueryProvider`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.MongoQueryProvider`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.AstAccumulatorField,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.AstAccumulatorField");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.AstComputedField,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.AstComputedField");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.AstFindProjection`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.AstFindProjection`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.AstFindProjectionField,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.AstFindProjectionField");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.AstFindProjectionExcludeField,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.AstFindProjectionExcludeField");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.AstFindProjectionIncludeField,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.AstFindProjectionIncludeField");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.AstFindProjectionSerializer`2,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.AstFindProjectionSerializer`2'2");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.AstNode,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.AstNode");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.AstNodeType,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.AstNodeType");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.AstPipeline,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.AstPipeline");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.AstSortField,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.AstSortField");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.AstSortOrder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.AstSortOrder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.AstAscendingSortOrder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.AstAscendingSortOrder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.AstDescendingSortOrder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.AstDescendingSortOrder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.AstMetaTextScoreSortOrder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.AstMetaTextScoreSortOrder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.AstSortFields,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.AstSortFields");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.AstVarBinding,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.AstVarBinding");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.AstWindowField,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.AstWindowField");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstAccumulatorExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstAccumulatorExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstAndExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstAndExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstBinaryExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstBinaryExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstBinaryOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstBinaryOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstBinaryWindowExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstBinaryWindowExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstBinaryWindowOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstBinaryWindowOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstComputedArrayExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstComputedArrayExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstComputedDocumentExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstComputedDocumentExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstCondExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstCondExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstConstantExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstConstantExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstConvertExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstConvertExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstCustomAccumulatorExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstCustomAccumulatorExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateAddExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateAddExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateDiffExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateDiffExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateFromIsoWeekPartsExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateFromIsoWeekPartsExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateFromPartsExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateFromPartsExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateFromStringExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateFromStringExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDatePart,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDatePart");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDatePartExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDatePartExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateSubtractExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateSubtractExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateToPartsExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateToPartsExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateToStringExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateToStringExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateTruncExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDateTruncExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDerivativeOrIntegralWindowExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDerivativeOrIntegralWindowExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDerivativeOrIntegralWindowOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstDerivativeOrIntegralWindowOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstExponentialMovingAverageWindowExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstExponentialMovingAverageWindowExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstFieldPathExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstFieldPathExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstFilterExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstFilterExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstFunctionExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstFunctionExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstGetFieldExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstGetFieldExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstIndexOfArrayExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstIndexOfArrayExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstIndexOfBytesExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstIndexOfBytesExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstIndexOfCPExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstIndexOfCPExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstLetExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstLetExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstLTrimExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstLTrimExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstMapExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstMapExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstNaryExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstNaryExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstNaryOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstNaryOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstNullaryWindowExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstNullaryWindowExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstNullaryWindowOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstNullaryWindowOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstOrExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstOrExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstPickAccumulatorExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstPickAccumulatorExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstPickAccumulatorOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstPickAccumulatorOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstPickExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstPickExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstPickOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstPickOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstRangeExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstRangeExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstReduceExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstReduceExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstRegexExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstRegexExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstRegexOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstRegexOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstReplaceAllExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstReplaceAllExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstReplaceOneExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstReplaceOneExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstRTrimExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstRTrimExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstShiftWindowExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstShiftWindowExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstSliceExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstSliceExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstSortArrayExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstSortArrayExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstSwitchExpressionBranch,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstSwitchExpressionBranch");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstSwitchExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstSwitchExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstTernaryExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstTernaryExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstTernaryOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstTernaryOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstTrimExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstTrimExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstUnaryAccumulatorExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstUnaryAccumulatorExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstUnaryAccumulatorOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstUnaryAccumulatorOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstUnaryExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstUnaryExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstUnaryOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstUnaryOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstUnaryWindowExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstUnaryWindowExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstUnaryWindowOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstUnaryWindowOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstVarExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstVarExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstWindow,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstWindow");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstWindowExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstWindowExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstZipExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Expressions.AstZipExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstAllFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstAllFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstAndFilter,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstAndFilter");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstBitsAllClearFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstBitsAllClearFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstBitsAllSetFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstBitsAllSetFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstBitsAnyClearFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstBitsAnyClearFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstBitsAnySetFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstBitsAnySetFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstComparisonFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstComparisonFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstComparisonFilterOperator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstComparisonFilterOperator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstElemMatchFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstElemMatchFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstExistsFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstExistsFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstExprFilter,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstExprFilter");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstFieldOperationFilter,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstFieldOperationFilter");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstFilter,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstFilter");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstFilterField,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstFilterField");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstGeoIntersectsFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstGeoIntersectsFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstGeoWithinBoxFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstGeoWithinBoxFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstGeoWithinCenterFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstGeoWithinCenterFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstGeoWithinCenterSphereFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstGeoWithinCenterSphereFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstGeoWithinFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstGeoWithinFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstInFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstInFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstJsonSchemaFilter,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstJsonSchemaFilter");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstMatchesEverythingFilter,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstMatchesEverythingFilter");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstMatchesNothingFilter,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstMatchesNothingFilter");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstModFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstModFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstNearFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstNearFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstNearSphereFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstNearSphereFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstNinFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstNinFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstNorFilter,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstNorFilter");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstNotFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstNotFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstOrFilter,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstOrFilter");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstRawFilter,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstRawFilter");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstRegexFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstRegexFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstSizeFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstSizeFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstTextFilter,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstTextFilter");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstTypeFilterOperation,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstTypeFilterOperation");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstWhereFilter,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Filters.AstWhereFilter");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Optimizers.AstGroupPipelineOptimizer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Optimizers.AstGroupPipelineOptimizer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Optimizers.AstGroupPipelineOptimizer+AccumulatorSet,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Optimizers.AccumulatorSet");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Optimizers.AstGroupPipelineOptimizer+AccumulatorMover,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Optimizers.AccumulatorMover");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Optimizers.AstGroupPipelineOptimizer+UnableToRemoveReferenceToElementsException,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Optimizers.MongoDB.Driver.Linq.Linq3Implementation.Ast.Optimizers.AstGroupPipelineOptimizer.UnableToRemoveReferenceToElementsException");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Optimizers.AstSimplifier,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Optimizers.AstSimplifier");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstAddFieldsStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstAddFieldsStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstBucketAutoStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstBucketAutoStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstBucketStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstBucketStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstCollStatsStageCount,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstCollStatsStageCount");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstCollStatsStageLatencyStats,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstCollStatsStageLatencyStats");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstCollStatsStageQueryExecStats,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstCollStatsStageQueryExecStats");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstCollStatsStageStorageStats,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstCollStatsStageStorageStats");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstCollStatsStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstCollStatsStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstCountStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstCountStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstCurrentOpStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstCurrentOpStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstDensifyStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstDensifyStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstFacetStageFacet,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstFacetStageFacet");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstFacetStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstFacetStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstGeoNearStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstGeoNearStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstGraphLookupStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstGraphLookupStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstGroupStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstGroupStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstIndexStatsStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstIndexStatsStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstLimitStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstLimitStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstListLocalSessionsStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstListLocalSessionsStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstListSessionsStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstListSessionsStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstLookupStageMatch,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstLookupStageMatch");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstLookupStageEqualityMatch,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstLookupStageEqualityMatch");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstLookupStageUncorrelatedMatch,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstLookupStageUncorrelatedMatch");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstLookupStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstLookupStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstMatchStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstMatchStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstMergeStageWhenMatched,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstMergeStageWhenMatched");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstMergeStageWhenNotMatched,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstMergeStageWhenNotMatched");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstMergeStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstMergeStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstOutStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstOutStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstPlanCacheStatsStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstPlanCacheStatsStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstProjectStageSpecification,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstProjectStageSpecification");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstProjectStageExcludeFieldSpecification,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstProjectStageExcludeFieldSpecification");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstProjectStageIncludeFieldSpecification,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstProjectStageIncludeFieldSpecification");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstProjectStageSetFieldSpecification,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstProjectStageSetFieldSpecification");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstProjectStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstProjectStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstRedactStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstRedactStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstReplaceRootStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstReplaceRootStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstReplaceWithStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstReplaceWithStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstSampleStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstSampleStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstSetStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstSetStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstSetWindowFieldsStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstSetWindowFieldsStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstSkipStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstSkipStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstSortByCountStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstSortByCountStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstSortStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstSortStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstUnionWithStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstUnionWithStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstUniversalStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstUniversalStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstUnsetStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstUnsetStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstUnwindStage,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Stages.AstUnwindStage");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Visitors.AstNodeReplacer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Visitors.AstNodeReplacer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Ast.Visitors.AstNodeVisitor,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Ast.Visitors.AstNodeVisitor");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Misc.ExpressionReplacer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Misc.ExpressionReplacer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Misc.FieldInfo,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Misc.FieldInfo");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Misc.Grouping`2,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Misc.Grouping`2'2");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Misc.NameGenerator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Misc.NameGenerator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Misc.PartialEvaluator+SubtreeEvaluator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Misc.SubtreeEvaluator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Misc.PartialEvaluator+Nominator,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Misc.Nominator");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Misc.ReferenceEqualityComparer`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Misc.ReferenceEqualityComparer`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Misc.Symbol,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Misc.Symbol");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Misc.SymbolTable,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Misc.SymbolTable");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Serializers.EnumUnderlyingTypeSerializer`2,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Serializers.EnumUnderlyingTypeSerializer`2'2");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Serializers.IEnumerableSerializer`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Serializers.IEnumerableSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Serializers.IGroupingSerializer`2,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Serializers.IGroupingSerializer`2'2");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Serializers.ISetWindowFieldsPartitionSerializer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Serializers.ISetWindowFieldsPartitionSerializer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Serializers.ISetWindowFieldsPartitionSerializer`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Serializers.ISetWindowFieldsPartitionSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Serializers.IWrappedEnumerableSerializer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Serializers.IWrappedEnumerableSerializer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Serializers.IWrappedValueSerializer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Serializers.IWrappedValueSerializer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Serializers.WrappedValueSerializer`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Serializers.WrappedValueSerializer`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Serializers.KnownSerializers.KnownSerializerFinder,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Serializers.KnownSerializers.KnownSerializerFinder");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Serializers.KnownSerializers.KnownSerializersNode,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Serializers.KnownSerializers.KnownSerializersNode");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Serializers.KnownSerializers.KnownSerializersRegistry,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Serializers.KnownSerializers.KnownSerializersRegistry");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.TranslationContext,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.TranslationContext");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.TranslationContextData,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.TranslationContextData");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToAggregationExpressionTranslators.AggregationExpression,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToAggregationExpressionTranslators.AggregationExpression");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.AllMethodToExecutableQueryTranslator+AllFinalizer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.AllFinalizer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.AnyMethodToExecutableQueryTranslator+AnyFinalizer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.AnyFinalizer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.ContainsMethodToExecutableQueryTranslator+ContainsFinalizer,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.ContainsFinalizer");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.ExecutableQuery`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.ExecutableQuery`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.ExecutableQuery`2,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.ExecutableQuery`2'2");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.ExecutableQuery`3,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.ExecutableQuery`3'3");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.ExpressionToExecutableQueryTranslator+IdentityFinalizer`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.IdentityFinalizer`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.IExecutableQueryFinalizer`2,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.IExecutableQueryFinalizer`2'2");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.Finalizers.FirstFinalizer`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.Finalizers.FirstFinalizer`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.Finalizers.FirstOrDefaultFinalizer`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.Finalizers.FirstOrDefaultFinalizer`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.Finalizers.SingleFinalizer`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.Finalizers.SingleFinalizer`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.Finalizers.SingleOrDefaultFinalizer`1,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.Finalizers.SingleOrDefaultFinalizer`1'1");
            feature.AddKnownType("MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToFilterTranslators.MethodTranslators.StringExpressionToRegexFilterTranslator+Modifiers,MongoDB.Driver", "MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToFilterTranslators.MethodTranslators.Modifiers");
            feature.AddKnownType("MongoDB.Driver.Support.IndexMap,MongoDB.Driver", "MongoDB.Driver.Support.IndexMap");
            feature.AddKnownType("MongoDB.Driver.Support.IndexMap+RangeBased,MongoDB.Driver", "MongoDB.Driver.Support.MongoDB.Driver.Support.IndexMap.RangeBased");
            feature.AddKnownType("MongoDB.Driver.Support.IndexMap+DictionaryBased,MongoDB.Driver", "MongoDB.Driver.Support.MongoDB.Driver.Support.IndexMap.DictionaryBased");
            feature.AddKnownType("MongoDB.Libmongocrypt.Binary,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.Binary");
            feature.AddKnownType("MongoDB.Libmongocrypt.BinarySafeHandle,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.BinarySafeHandle");
            feature.AddKnownType("MongoDB.Libmongocrypt.CheckableSafeHandle,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.CheckableSafeHandle");
            feature.AddKnownType("MongoDB.Libmongocrypt.CryptMode,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.CryptMode");
            feature.AddKnownType("MongoDB.Libmongocrypt.ContextSafeHandle,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.ContextSafeHandle");
            feature.AddKnownType("MongoDB.Libmongocrypt.CryptClient,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.CryptClient");
            feature.AddKnownType("MongoDB.Libmongocrypt.CryptClientFactory,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.CryptClientFactory");
            feature.AddKnownType("MongoDB.Libmongocrypt.CryptContext,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.CryptContext");
            feature.AddKnownType("MongoDB.Libmongocrypt.CryptContext+StateCode,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.MongoDB.Libmongocrypt.CryptContext.StateCode");
            feature.AddKnownType("MongoDB.Libmongocrypt.CryptException,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.CryptException");
            feature.AddKnownType("MongoDB.Libmongocrypt.CryptOptions,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.CryptOptions");
            feature.AddKnownType("MongoDB.Libmongocrypt.IStatus,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.IStatus");
            feature.AddKnownType("MongoDB.Libmongocrypt.KmsCredentials,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.KmsCredentials");
            feature.AddKnownType("MongoDB.Libmongocrypt.KmsKeyId,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.KmsKeyId");
            feature.AddKnownType("MongoDB.Libmongocrypt.KmsRequest,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.KmsRequest");
            feature.AddKnownType("MongoDB.Libmongocrypt.KmsRequestCollection,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.KmsRequestCollection");
            feature.AddKnownType("MongoDB.Libmongocrypt.Library,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.Library");
            feature.AddKnownType("MongoDB.Libmongocrypt.Library+StatusType,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.StatusType");
            feature.AddKnownType("MongoDB.Libmongocrypt.Library+Delegates,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.Delegates");
            feature.AddKnownType("MongoDB.Libmongocrypt.LibraryLoader,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.LibraryLoader");
            feature.AddKnownType("MongoDB.Libmongocrypt.LibraryLoader+FunctionNotFoundException,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.MongoDB.Libmongocrypt.LibraryLoader.FunctionNotFoundException");
            feature.AddKnownType("MongoDB.Libmongocrypt.LibraryLoader+ISharedLibraryLoader,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.ISharedLibraryLoader");
            feature.AddKnownType("MongoDB.Libmongocrypt.LibraryLoader+DarwinLibraryLoader,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.DarwinLibraryLoader");
            feature.AddKnownType("MongoDB.Libmongocrypt.LibraryLoader+LinuxLibrary,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.LinuxLibrary");
            feature.AddKnownType("MongoDB.Libmongocrypt.LibraryLoader+WindowsLibrary,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.WindowsLibrary");
            feature.AddKnownType("MongoDB.Libmongocrypt.LibraryLoadingException,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.LibraryLoadingException");
            feature.AddKnownType("MongoDB.Libmongocrypt.LogLevel,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.LogLevel");
            feature.AddKnownType("MongoDB.Libmongocrypt.MongoCryptSafeHandle,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.MongoCryptSafeHandle");
            feature.AddKnownType("MongoDB.Libmongocrypt.OperatingSystemPlatform,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.OperatingSystemPlatform");
            feature.AddKnownType("MongoDB.Libmongocrypt.PinnedBinary,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.PinnedBinary");
            feature.AddKnownType("MongoDB.Libmongocrypt.Status,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.Status");
            feature.AddKnownType("MongoDB.Libmongocrypt.StatusSafeHandle,MongoDB.Libmongocrypt", "MongoDB.Libmongocrypt.StatusSafeHandle");
            feature.AddKnownType("Nest.IAggregate,Nest", "Nest.IAggregate");
            feature.AddKnownType("Nest.AggregateDictionary,Nest", "Nest.AggregateDictionary");
            feature.AddKnownType("Nest.AggregateDictionaryFormatter,Nest", "Nest.AggregateDictionaryFormatter");
            feature.AddKnownType("Nest.AggregateFormatter,Nest", "Nest.AggregateFormatter");
            feature.AddKnownType("Nest.IAggregation,Nest", "Nest.IAggregation");
            feature.AddKnownType("Nest.AggregationBase,Nest", "Nest.AggregationBase");
            feature.AddKnownType("Nest.AggregationCombinator,Nest", "Nest.AggregationCombinator");
            feature.AddKnownType("Nest.AggregationDictionary,Nest", "Nest.AggregationDictionary");
            feature.AddKnownType("Nest.AggregationDictionaryFormatter,Nest", "Nest.AggregationDictionaryFormatter");
            feature.AddKnownType("Nest.IAggregationContainer,Nest", "Nest.IAggregationContainer");
            feature.AddKnownType("Nest.AggregationContainer,Nest", "Nest.AggregationContainer");
            feature.AddKnownType("Nest.AggregationContainerDescriptor`1,Nest", "Nest.AggregationContainerDescriptor`1'1");
            feature.AddKnownType("Nest.IAdjacencyMatrixAggregation,Nest", "Nest.IAdjacencyMatrixAggregation");
            feature.AddKnownType("Nest.AdjacencyMatrixAggregation,Nest", "Nest.AdjacencyMatrixAggregation");
            feature.AddKnownType("Nest.AdjacencyMatrixAggregationDescriptor`1,Nest", "Nest.AdjacencyMatrixAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.IAutoDateHistogramAggregation,Nest", "Nest.IAutoDateHistogramAggregation");
            feature.AddKnownType("Nest.AutoDateHistogramAggregation,Nest", "Nest.AutoDateHistogramAggregation");
            feature.AddKnownType("Nest.AutoDateHistogramAggregationDescriptor`1,Nest", "Nest.AutoDateHistogramAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.AutoDateHistogramAggregate,Nest", "Nest.AutoDateHistogramAggregate");
            feature.AddKnownType("Nest.MinimumInterval,Nest", "Nest.MinimumInterval");
            feature.AddKnownType("Nest.IBucket,Nest", "Nest.IBucket");
            feature.AddKnownType("Nest.BucketBase,Nest", "Nest.BucketBase");
            feature.AddKnownType("Nest.BucketAggregateBase,Nest", "Nest.BucketAggregateBase");
            feature.AddKnownType("Nest.SingleBucketAggregate,Nest", "Nest.SingleBucketAggregate");
            feature.AddKnownType("Nest.MultiBucketAggregate`1,Nest", "Nest.MultiBucketAggregate`1'1");
            feature.AddKnownType("Nest.CompositeBucketAggregate,Nest", "Nest.CompositeBucketAggregate");
            feature.AddKnownType("Nest.BucketAggregate,Nest", "Nest.BucketAggregate");
            feature.AddKnownType("Nest.IBucketAggregation,Nest", "Nest.IBucketAggregation");
            feature.AddKnownType("Nest.BucketAggregationBase,Nest", "Nest.BucketAggregationBase");
            feature.AddKnownType("Nest.BucketAggregationDescriptorBase`3,Nest", "Nest.BucketAggregationDescriptorBase`3'3");
            feature.AddKnownType("Nest.IChildrenAggregation,Nest", "Nest.IChildrenAggregation");
            feature.AddKnownType("Nest.ChildrenAggregation,Nest", "Nest.ChildrenAggregation");
            feature.AddKnownType("Nest.ChildrenAggregationDescriptor`1,Nest", "Nest.ChildrenAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.ICompositeAggregation,Nest", "Nest.ICompositeAggregation");
            feature.AddKnownType("Nest.CompositeAggregation,Nest", "Nest.CompositeAggregation");
            feature.AddKnownType("Nest.CompositeAggregationDescriptor`1,Nest", "Nest.CompositeAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.ICompositeAggregationSource,Nest", "Nest.ICompositeAggregationSource");
            feature.AddKnownType("Nest.CompositeAggregationSourceBase,Nest", "Nest.CompositeAggregationSourceBase");
            feature.AddKnownType("Nest.CompositeAggregationSourcesDescriptor`1,Nest", "Nest.CompositeAggregationSourcesDescriptor`1'1");
            feature.AddKnownType("Nest.CompositeAggregationSourceDescriptorBase`3,Nest", "Nest.CompositeAggregationSourceDescriptorBase`3'3");
            feature.AddKnownType("Nest.CompositeAggregationSourceFormatter,Nest", "Nest.CompositeAggregationSourceFormatter");
            feature.AddKnownType("Nest.CompositeBucket,Nest", "Nest.CompositeBucket");
            feature.AddKnownType("Nest.CompositeKey,Nest", "Nest.CompositeKey");
            feature.AddKnownType("Nest.CompositeKeyFormatter,Nest", "Nest.CompositeKeyFormatter");
            feature.AddKnownType("Nest.IDateHistogramCompositeAggregationSource,Nest", "Nest.IDateHistogramCompositeAggregationSource");
            feature.AddKnownType("Nest.DateHistogramCompositeAggregationSource,Nest", "Nest.DateHistogramCompositeAggregationSource");
            feature.AddKnownType("Nest.DateHistogramCompositeAggregationSourceDescriptor`1,Nest", "Nest.DateHistogramCompositeAggregationSourceDescriptor`1'1");
            feature.AddKnownType("Nest.IGeoTileGridCompositeAggregationSource,Nest", "Nest.IGeoTileGridCompositeAggregationSource");
            feature.AddKnownType("Nest.GeoTileGridCompositeAggregationSource,Nest", "Nest.GeoTileGridCompositeAggregationSource");
            feature.AddKnownType("Nest.GeoTileGridCompositeAggregationSourceDescriptor`1,Nest", "Nest.GeoTileGridCompositeAggregationSourceDescriptor`1'1");
            feature.AddKnownType("Nest.IHistogramCompositeAggregationSource,Nest", "Nest.IHistogramCompositeAggregationSource");
            feature.AddKnownType("Nest.HistogramCompositeAggregationSource,Nest", "Nest.HistogramCompositeAggregationSource");
            feature.AddKnownType("Nest.HistogramCompositeAggregationSourceDescriptor`1,Nest", "Nest.HistogramCompositeAggregationSourceDescriptor`1'1");
            feature.AddKnownType("Nest.ITermsCompositeAggregationSource,Nest", "Nest.ITermsCompositeAggregationSource");
            feature.AddKnownType("Nest.TermsCompositeAggregationSource,Nest", "Nest.TermsCompositeAggregationSource");
            feature.AddKnownType("Nest.TermsCompositeAggregationSourceDescriptor`1,Nest", "Nest.TermsCompositeAggregationSourceDescriptor`1'1");
            feature.AddKnownType("Nest.IDateHistogramAggregation,Nest", "Nest.IDateHistogramAggregation");
            feature.AddKnownType("Nest.DateHistogramAggregation,Nest", "Nest.DateHistogramAggregation");
            feature.AddKnownType("Nest.DateHistogramAggregationDescriptor`1,Nest", "Nest.DateHistogramAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.DateHistogramBucket,Nest", "Nest.DateHistogramBucket");
            feature.AddKnownType("Nest.DateInterval,Nest", "Nest.DateInterval");
            feature.AddKnownType("Nest.IDateRangeAggregation,Nest", "Nest.IDateRangeAggregation");
            feature.AddKnownType("Nest.DateRangeAggregation,Nest", "Nest.DateRangeAggregation");
            feature.AddKnownType("Nest.DateRangeAggregationDescriptor`1,Nest", "Nest.DateRangeAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.IDateRangeExpression,Nest", "Nest.IDateRangeExpression");
            feature.AddKnownType("Nest.DateRangeExpression,Nest", "Nest.DateRangeExpression");
            feature.AddKnownType("Nest.DateRangeExpressionDescriptor,Nest", "Nest.DateRangeExpressionDescriptor");
            feature.AddKnownType("Nest.IDiversifiedSamplerAggregation,Nest", "Nest.IDiversifiedSamplerAggregation");
            feature.AddKnownType("Nest.DiversifiedSamplerAggregation,Nest", "Nest.DiversifiedSamplerAggregation");
            feature.AddKnownType("Nest.DiversifiedSamplerAggregationDescriptor`1,Nest", "Nest.DiversifiedSamplerAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.DiversifiedSamplerAggregationExecutionHint,Nest", "Nest.DiversifiedSamplerAggregationExecutionHint");
            feature.AddKnownType("Nest.FiltersBucketItem,Nest", "Nest.FiltersBucketItem");
            feature.AddKnownType("Nest.FiltersAggregate,Nest", "Nest.FiltersAggregate");
            feature.AddKnownType("Nest.IFiltersAggregation,Nest", "Nest.IFiltersAggregation");
            feature.AddKnownType("Nest.FiltersAggregation,Nest", "Nest.FiltersAggregation");
            feature.AddKnownType("Nest.FiltersAggregationDescriptor`1,Nest", "Nest.FiltersAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.INamedFiltersContainer,Nest", "Nest.INamedFiltersContainer");
            feature.AddKnownType("Nest.NamedFiltersContainer,Nest", "Nest.NamedFiltersContainer");
            feature.AddKnownType("Nest.NamedFiltersContainerDescriptor`1,Nest", "Nest.NamedFiltersContainerDescriptor`1'1");
            feature.AddKnownType("Nest.IFilterAggregation,Nest", "Nest.IFilterAggregation");
            feature.AddKnownType("Nest.FilterAggregation,Nest", "Nest.FilterAggregation");
            feature.AddKnownType("Nest.FilterAggregationDescriptor`1,Nest", "Nest.FilterAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.FilterAggregationFormatter,Nest", "Nest.FilterAggregationFormatter");
            feature.AddKnownType("Nest.IGeoDistanceAggregation,Nest", "Nest.IGeoDistanceAggregation");
            feature.AddKnownType("Nest.GeoDistanceAggregation,Nest", "Nest.GeoDistanceAggregation");
            feature.AddKnownType("Nest.GeoDistanceAggregationDescriptor`1,Nest", "Nest.GeoDistanceAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.IGeoHashGridAggregation,Nest", "Nest.IGeoHashGridAggregation");
            feature.AddKnownType("Nest.GeoHashGridAggregation,Nest", "Nest.GeoHashGridAggregation");
            feature.AddKnownType("Nest.GeoHashGridAggregationDescriptor`1,Nest", "Nest.GeoHashGridAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.GeoHashPrecision,Nest", "Nest.GeoHashPrecision");
            feature.AddKnownType("Nest.IGeoTileGridAggregation,Nest", "Nest.IGeoTileGridAggregation");
            feature.AddKnownType("Nest.GeoTileGridAggregation,Nest", "Nest.GeoTileGridAggregation");
            feature.AddKnownType("Nest.GeoTileGridAggregationDescriptor`1,Nest", "Nest.GeoTileGridAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.GeoTilePrecision,Nest", "Nest.GeoTilePrecision");
            feature.AddKnownType("Nest.IGlobalAggregation,Nest", "Nest.IGlobalAggregation");
            feature.AddKnownType("Nest.GlobalAggregation,Nest", "Nest.GlobalAggregation");
            feature.AddKnownType("Nest.GlobalAggregationDescriptor`1,Nest", "Nest.GlobalAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.ExtendedBounds`1,Nest", "Nest.ExtendedBounds`1'1");
            feature.AddKnownType("Nest.HardBounds`1,Nest", "Nest.HardBounds`1'1");
            feature.AddKnownType("Nest.IHistogramAggregation,Nest", "Nest.IHistogramAggregation");
            feature.AddKnownType("Nest.HistogramAggregation,Nest", "Nest.HistogramAggregation");
            feature.AddKnownType("Nest.HistogramAggregationDescriptor`1,Nest", "Nest.HistogramAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.ISortOrder,Nest", "Nest.ISortOrder");
            feature.AddKnownType("Nest.HistogramOrder,Nest", "Nest.HistogramOrder");
            feature.AddKnownType("Nest.IIpRangeAggregation,Nest", "Nest.IIpRangeAggregation");
            feature.AddKnownType("Nest.IpRangeAggregation,Nest", "Nest.IpRangeAggregation");
            feature.AddKnownType("Nest.IpRangeAggregationDescriptor`1,Nest", "Nest.IpRangeAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.IIpRangeAggregationRange,Nest", "Nest.IIpRangeAggregationRange");
            feature.AddKnownType("Nest.IpRangeAggregationRange,Nest", "Nest.IpRangeAggregationRange");
            feature.AddKnownType("Nest.IpRangeAggregationRangeDescriptor,Nest", "Nest.IpRangeAggregationRangeDescriptor");
            feature.AddKnownType("Nest.IpRangeBucket,Nest", "Nest.IpRangeBucket");
            feature.AddKnownType("Nest.KeyedBucket`1,Nest", "Nest.KeyedBucket`1'1");
            feature.AddKnownType("Nest.IMissingAggregation,Nest", "Nest.IMissingAggregation");
            feature.AddKnownType("Nest.MissingAggregation,Nest", "Nest.MissingAggregation");
            feature.AddKnownType("Nest.MissingAggregationDescriptor`1,Nest", "Nest.MissingAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.MultiTermsAggregate`1,Nest", "Nest.MultiTermsAggregate`1'1");
            feature.AddKnownType("Nest.IMultiTermsAggregation,Nest", "Nest.IMultiTermsAggregation");
            feature.AddKnownType("Nest.MultiTermsAggregation,Nest", "Nest.MultiTermsAggregation");
            feature.AddKnownType("Nest.MultiTermsAggregationDescriptor`1,Nest", "Nest.MultiTermsAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.MultiTermsBucket`1,Nest", "Nest.MultiTermsBucket`1'1");
            feature.AddKnownType("Nest.ITerm,Nest", "Nest.ITerm");
            feature.AddKnownType("Nest.Term,Nest", "Nest.Term");
            feature.AddKnownType("Nest.TermDescriptor`1,Nest", "Nest.TermDescriptor`1'1");
            feature.AddKnownType("Nest.INestedAggregation,Nest", "Nest.INestedAggregation");
            feature.AddKnownType("Nest.NestedAggregation,Nest", "Nest.NestedAggregation");
            feature.AddKnownType("Nest.NestedAggregationDescriptor`1,Nest", "Nest.NestedAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.IParentAggregation,Nest", "Nest.IParentAggregation");
            feature.AddKnownType("Nest.ParentAggregation,Nest", "Nest.ParentAggregation");
            feature.AddKnownType("Nest.ParentAggregationDescriptor`2,Nest", "Nest.ParentAggregationDescriptor`2'2");
            feature.AddKnownType("Nest.IRangeAggregation,Nest", "Nest.IRangeAggregation");
            feature.AddKnownType("Nest.RangeAggregation,Nest", "Nest.RangeAggregation");
            feature.AddKnownType("Nest.RangeAggregationDescriptor`1,Nest", "Nest.RangeAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.RangeBucket,Nest", "Nest.RangeBucket");
            feature.AddKnownType("Nest.IRareTermsAggregation,Nest", "Nest.IRareTermsAggregation");
            feature.AddKnownType("Nest.RareTermsAggregation,Nest", "Nest.RareTermsAggregation");
            feature.AddKnownType("Nest.RareTermsAggregationDescriptor`1,Nest", "Nest.RareTermsAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.RareTermsBucket`1,Nest", "Nest.RareTermsBucket`1'1");
            feature.AddKnownType("Nest.IReverseNestedAggregation,Nest", "Nest.IReverseNestedAggregation");
            feature.AddKnownType("Nest.ReverseNestedAggregation,Nest", "Nest.ReverseNestedAggregation");
            feature.AddKnownType("Nest.ReverseNestedAggregationDescriptor`1,Nest", "Nest.ReverseNestedAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.ISamplerAggregation,Nest", "Nest.ISamplerAggregation");
            feature.AddKnownType("Nest.SamplerAggregation,Nest", "Nest.SamplerAggregation");
            feature.AddKnownType("Nest.SamplerAggregationDescriptor`1,Nest", "Nest.SamplerAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.SamplerAggregationExecutionHint,Nest", "Nest.SamplerAggregationExecutionHint");
            feature.AddKnownType("Nest.IChiSquareHeuristic,Nest", "Nest.IChiSquareHeuristic");
            feature.AddKnownType("Nest.ChiSquareHeuristic,Nest", "Nest.ChiSquareHeuristic");
            feature.AddKnownType("Nest.ChiSquareHeuristicDescriptor,Nest", "Nest.ChiSquareHeuristicDescriptor");
            feature.AddKnownType("Nest.IGoogleNormalizedDistanceHeuristic,Nest", "Nest.IGoogleNormalizedDistanceHeuristic");
            feature.AddKnownType("Nest.GoogleNormalizedDistanceHeuristic,Nest", "Nest.GoogleNormalizedDistanceHeuristic");
            feature.AddKnownType("Nest.GoogleNormalizedDistanceHeuristicDescriptor,Nest", "Nest.GoogleNormalizedDistanceHeuristicDescriptor");
            feature.AddKnownType("Nest.IMutualInformationHeuristic,Nest", "Nest.IMutualInformationHeuristic");
            feature.AddKnownType("Nest.MutualInformationHeuristic,Nest", "Nest.MutualInformationHeuristic");
            feature.AddKnownType("Nest.MutualInformationHeuristicDescriptor,Nest", "Nest.MutualInformationHeuristicDescriptor");
            feature.AddKnownType("Nest.IPercentageScoreHeuristic,Nest", "Nest.IPercentageScoreHeuristic");
            feature.AddKnownType("Nest.PercentageScoreHeuristic,Nest", "Nest.PercentageScoreHeuristic");
            feature.AddKnownType("Nest.PercentageScoreHeuristicDescriptor,Nest", "Nest.PercentageScoreHeuristicDescriptor");
            feature.AddKnownType("Nest.IScriptedHeuristic,Nest", "Nest.IScriptedHeuristic");
            feature.AddKnownType("Nest.ScriptedHeuristic,Nest", "Nest.ScriptedHeuristic");
            feature.AddKnownType("Nest.ScriptedHeuristicDescriptor,Nest", "Nest.ScriptedHeuristicDescriptor");
            feature.AddKnownType("Nest.IncludeExclude,Nest", "Nest.IncludeExclude");
            feature.AddKnownType("Nest.IncludeExcludeFormatter,Nest", "Nest.IncludeExcludeFormatter");
            feature.AddKnownType("Nest.SignificantTermsAggregate`1,Nest", "Nest.SignificantTermsAggregate`1'1");
            feature.AddKnownType("Nest.ISignificantTermsAggregation,Nest", "Nest.ISignificantTermsAggregation");
            feature.AddKnownType("Nest.SignificantTermsAggregation,Nest", "Nest.SignificantTermsAggregation");
            feature.AddKnownType("Nest.SignificantTermsAggregationDescriptor`1,Nest", "Nest.SignificantTermsAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.SignificantTermsBucket`1,Nest", "Nest.SignificantTermsBucket`1'1");
            feature.AddKnownType("Nest.ISignificantTextAggregation,Nest", "Nest.ISignificantTextAggregation");
            feature.AddKnownType("Nest.SignificantTextAggregation,Nest", "Nest.SignificantTextAggregation");
            feature.AddKnownType("Nest.SignificantTextAggregationDescriptor`1,Nest", "Nest.SignificantTextAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.TermsAggregate`1,Nest", "Nest.TermsAggregate`1'1");
            feature.AddKnownType("Nest.ITermsAggregation,Nest", "Nest.ITermsAggregation");
            feature.AddKnownType("Nest.TermsAggregation,Nest", "Nest.TermsAggregation");
            feature.AddKnownType("Nest.TermsAggregationDescriptor`1,Nest", "Nest.TermsAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.TermsAggregationCollectMode,Nest", "Nest.TermsAggregationCollectMode");
            feature.AddKnownType("Nest.TermsAggregationExecutionHint,Nest", "Nest.TermsAggregationExecutionHint");
            feature.AddKnownType("Nest.TermsExclude,Nest", "Nest.TermsExclude");
            feature.AddKnownType("Nest.TermsExcludeFormatter,Nest", "Nest.TermsExcludeFormatter");
            feature.AddKnownType("Nest.TermsInclude,Nest", "Nest.TermsInclude");
            feature.AddKnownType("Nest.TermsIncludeFormatter,Nest", "Nest.TermsIncludeFormatter");
            feature.AddKnownType("Nest.TermsOrder,Nest", "Nest.TermsOrder");
            feature.AddKnownType("Nest.TermsOrderDescriptor`1,Nest", "Nest.TermsOrderDescriptor`1'1");
            feature.AddKnownType("Nest.IVariableWidthHistogramAggregation,Nest", "Nest.IVariableWidthHistogramAggregation");
            feature.AddKnownType("Nest.VariableWidthHistogramAggregation,Nest", "Nest.VariableWidthHistogramAggregation");
            feature.AddKnownType("Nest.VariableWidthHistogramAggregationDescriptor`1,Nest", "Nest.VariableWidthHistogramAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.VariableWidthHistogramBucket,Nest", "Nest.VariableWidthHistogramBucket");
            feature.AddKnownType("Nest.MatrixAggregateBase,Nest", "Nest.MatrixAggregateBase");
            feature.AddKnownType("Nest.IMatrixAggregation,Nest", "Nest.IMatrixAggregation");
            feature.AddKnownType("Nest.MatrixAggregationBase,Nest", "Nest.MatrixAggregationBase");
            feature.AddKnownType("Nest.MatrixAggregationDescriptorBase`3,Nest", "Nest.MatrixAggregationDescriptorBase`3'3");
            feature.AddKnownType("Nest.MatrixStatsField,Nest", "Nest.MatrixStatsField");
            feature.AddKnownType("Nest.MatrixStatsAggregate,Nest", "Nest.MatrixStatsAggregate");
            feature.AddKnownType("Nest.IMatrixStatsAggregation,Nest", "Nest.IMatrixStatsAggregation");
            feature.AddKnownType("Nest.MatrixStatsAggregation,Nest", "Nest.MatrixStatsAggregation");
            feature.AddKnownType("Nest.MatrixStatsAggregationDescriptor`1,Nest", "Nest.MatrixStatsAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.MatrixStatsMode,Nest", "Nest.MatrixStatsMode");
            feature.AddKnownType("Nest.IAverageAggregation,Nest", "Nest.IAverageAggregation");
            feature.AddKnownType("Nest.AverageAggregation,Nest", "Nest.AverageAggregation");
            feature.AddKnownType("Nest.AverageAggregationDescriptor`1,Nest", "Nest.AverageAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.BoxplotAggregate,Nest", "Nest.BoxplotAggregate");
            feature.AddKnownType("Nest.IBoxplotAggregation,Nest", "Nest.IBoxplotAggregation");
            feature.AddKnownType("Nest.BoxplotAggregation,Nest", "Nest.BoxplotAggregation");
            feature.AddKnownType("Nest.BoxplotAggregationDescriptor`1,Nest", "Nest.BoxplotAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.ICardinalityAggregation,Nest", "Nest.ICardinalityAggregation");
            feature.AddKnownType("Nest.CardinalityAggregation,Nest", "Nest.CardinalityAggregation");
            feature.AddKnownType("Nest.CardinalityAggregationDescriptor`1,Nest", "Nest.CardinalityAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.ExtendedStatsAggregate,Nest", "Nest.ExtendedStatsAggregate");
            feature.AddKnownType("Nest.StandardDeviationBounds,Nest", "Nest.StandardDeviationBounds");
            feature.AddKnownType("Nest.IExtendedStatsAggregation,Nest", "Nest.IExtendedStatsAggregation");
            feature.AddKnownType("Nest.ExtendedStatsAggregation,Nest", "Nest.ExtendedStatsAggregation");
            feature.AddKnownType("Nest.ExtendedStatsAggregationDescriptor`1,Nest", "Nest.ExtendedStatsAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.GeoBoundsAggregate,Nest", "Nest.GeoBoundsAggregate");
            feature.AddKnownType("Nest.GeoBounds,Nest", "Nest.GeoBounds");
            feature.AddKnownType("Nest.IGeoBoundsAggregation,Nest", "Nest.IGeoBoundsAggregation");
            feature.AddKnownType("Nest.GeoBoundsAggregation,Nest", "Nest.GeoBoundsAggregation");
            feature.AddKnownType("Nest.GeoBoundsAggregationDescriptor`1,Nest", "Nest.GeoBoundsAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.GeoCentroidAggregate,Nest", "Nest.GeoCentroidAggregate");
            feature.AddKnownType("Nest.IGeoCentroidAggregation,Nest", "Nest.IGeoCentroidAggregation");
            feature.AddKnownType("Nest.GeoCentroidAggregation,Nest", "Nest.GeoCentroidAggregation");
            feature.AddKnownType("Nest.GeoCentroidAggregationDescriptor`1,Nest", "Nest.GeoCentroidAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.GeoLineAggregate,Nest", "Nest.GeoLineAggregate");
            feature.AddKnownType("Nest.GeoLineProperties,Nest", "Nest.GeoLineProperties");
            feature.AddKnownType("Nest.IGeoLineAggregation,Nest", "Nest.IGeoLineAggregation");
            feature.AddKnownType("Nest.GeoLineAggregation,Nest", "Nest.GeoLineAggregation");
            feature.AddKnownType("Nest.GeoLinePoint,Nest", "Nest.GeoLinePoint");
            feature.AddKnownType("Nest.GeoLineSort,Nest", "Nest.GeoLineSort");
            feature.AddKnownType("Nest.GeoLineAggregationDescriptor`1,Nest", "Nest.GeoLineAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.IMaxAggregation,Nest", "Nest.IMaxAggregation");
            feature.AddKnownType("Nest.MaxAggregation,Nest", "Nest.MaxAggregation");
            feature.AddKnownType("Nest.MaxAggregationDescriptor`1,Nest", "Nest.MaxAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.IMedianAbsoluteDeviationAggregation,Nest", "Nest.IMedianAbsoluteDeviationAggregation");
            feature.AddKnownType("Nest.MedianAbsoluteDeviationAggregation,Nest", "Nest.MedianAbsoluteDeviationAggregation");
            feature.AddKnownType("Nest.MedianAbsoluteDeviationAggregationDescriptor`1,Nest", "Nest.MedianAbsoluteDeviationAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.MetricAggregateBase,Nest", "Nest.MetricAggregateBase");
            feature.AddKnownType("Nest.IMetricAggregation,Nest", "Nest.IMetricAggregation");
            feature.AddKnownType("Nest.IFormattableMetricAggregation,Nest", "Nest.IFormattableMetricAggregation");
            feature.AddKnownType("Nest.MetricAggregationBase,Nest", "Nest.MetricAggregationBase");
            feature.AddKnownType("Nest.FormattableMetricAggregationBase,Nest", "Nest.FormattableMetricAggregationBase");
            feature.AddKnownType("Nest.MetricAggregationDescriptorBase`3,Nest", "Nest.MetricAggregationDescriptorBase`3'3");
            feature.AddKnownType("Nest.FormattableMetricAggregationDescriptorBase`3,Nest", "Nest.FormattableMetricAggregationDescriptorBase`3'3");
            feature.AddKnownType("Nest.IMinAggregation,Nest", "Nest.IMinAggregation");
            feature.AddKnownType("Nest.MinAggregation,Nest", "Nest.MinAggregation");
            feature.AddKnownType("Nest.MinAggregationDescriptor`1,Nest", "Nest.MinAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.IPercentileRanksAggregation,Nest", "Nest.IPercentileRanksAggregation");
            feature.AddKnownType("Nest.PercentileRanksAggregation,Nest", "Nest.PercentileRanksAggregation");
            feature.AddKnownType("Nest.PercentileRanksAggregationDescriptor`1,Nest", "Nest.PercentileRanksAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.PercentileRanksAggregationFormatter,Nest", "Nest.PercentileRanksAggregationFormatter");
            feature.AddKnownType("Nest.IHDRHistogramMethod,Nest", "Nest.IHDRHistogramMethod");
            feature.AddKnownType("Nest.HDRHistogramMethod,Nest", "Nest.HDRHistogramMethod");
            feature.AddKnownType("Nest.HDRHistogramMethodDescriptor,Nest", "Nest.HDRHistogramMethodDescriptor");
            feature.AddKnownType("Nest.IPercentilesMethod,Nest", "Nest.IPercentilesMethod");
            feature.AddKnownType("Nest.PercentilesMethodDescriptor,Nest", "Nest.PercentilesMethodDescriptor");
            feature.AddKnownType("Nest.ITDigestMethod,Nest", "Nest.ITDigestMethod");
            feature.AddKnownType("Nest.TDigestMethod,Nest", "Nest.TDigestMethod");
            feature.AddKnownType("Nest.TDigestMethodDescriptor,Nest", "Nest.TDigestMethodDescriptor");
            feature.AddKnownType("Nest.IPercentilesAggregation,Nest", "Nest.IPercentilesAggregation");
            feature.AddKnownType("Nest.PercentilesAggregation,Nest", "Nest.PercentilesAggregation");
            feature.AddKnownType("Nest.PercentilesAggregationDescriptor`1,Nest", "Nest.PercentilesAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.PercentilesAggregationFormatter,Nest", "Nest.PercentilesAggregationFormatter");
            feature.AddKnownType("Nest.PercentileItem,Nest", "Nest.PercentileItem");
            feature.AddKnownType("Nest.PercentilesAggregate,Nest", "Nest.PercentilesAggregate");
            feature.AddKnownType("Nest.IRateAggregation,Nest", "Nest.IRateAggregation");
            feature.AddKnownType("Nest.RateAggregation,Nest", "Nest.RateAggregation");
            feature.AddKnownType("Nest.RateAggregationDescriptor`1,Nest", "Nest.RateAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.RateMode,Nest", "Nest.RateMode");
            feature.AddKnownType("Nest.ScriptedMetricAggregate,Nest", "Nest.ScriptedMetricAggregate");
            feature.AddKnownType("Nest.IScriptedMetricAggregation,Nest", "Nest.IScriptedMetricAggregation");
            feature.AddKnownType("Nest.ScriptedMetricAggregation,Nest", "Nest.ScriptedMetricAggregation");
            feature.AddKnownType("Nest.ScriptedMetricAggregationDescriptor`1,Nest", "Nest.ScriptedMetricAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.StatsAggregate,Nest", "Nest.StatsAggregate");
            feature.AddKnownType("Nest.IStatsAggregation,Nest", "Nest.IStatsAggregation");
            feature.AddKnownType("Nest.StatsAggregation,Nest", "Nest.StatsAggregation");
            feature.AddKnownType("Nest.StatsAggregationDescriptor`1,Nest", "Nest.StatsAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.StringStatsAggregate,Nest", "Nest.StringStatsAggregate");
            feature.AddKnownType("Nest.IStringStatsAggregation,Nest", "Nest.IStringStatsAggregation");
            feature.AddKnownType("Nest.StringStatsAggregation,Nest", "Nest.StringStatsAggregation");
            feature.AddKnownType("Nest.StringStatsAggregationDescriptor`1,Nest", "Nest.StringStatsAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.ISumAggregation,Nest", "Nest.ISumAggregation");
            feature.AddKnownType("Nest.SumAggregation,Nest", "Nest.SumAggregation");
            feature.AddKnownType("Nest.SumAggregationDescriptor`1,Nest", "Nest.SumAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.TopHitsAggregate,Nest", "Nest.TopHitsAggregate");
            feature.AddKnownType("Nest.ITopHitsAggregation,Nest", "Nest.ITopHitsAggregation");
            feature.AddKnownType("Nest.TopHitsAggregation,Nest", "Nest.TopHitsAggregation");
            feature.AddKnownType("Nest.TopHitsAggregationDescriptor`1,Nest", "Nest.TopHitsAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.TopMetricsAggregate,Nest", "Nest.TopMetricsAggregate");
            feature.AddKnownType("Nest.TopMetric,Nest", "Nest.TopMetric");
            feature.AddKnownType("Nest.ITopMetricsAggregation,Nest", "Nest.ITopMetricsAggregation");
            feature.AddKnownType("Nest.TopMetricsAggregation,Nest", "Nest.TopMetricsAggregation");
            feature.AddKnownType("Nest.TopMetricsAggregationDescriptor`1,Nest", "Nest.TopMetricsAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.ITopMetricsValue,Nest", "Nest.ITopMetricsValue");
            feature.AddKnownType("Nest.TopMetricsValue,Nest", "Nest.TopMetricsValue");
            feature.AddKnownType("Nest.TopMetricsValuesDescriptor`1,Nest", "Nest.TopMetricsValuesDescriptor`1'1");
            feature.AddKnownType("Nest.ITTestAggregation,Nest", "Nest.ITTestAggregation");
            feature.AddKnownType("Nest.TTestAggregation,Nest", "Nest.TTestAggregation");
            feature.AddKnownType("Nest.TTestAggregationDescriptor`1,Nest", "Nest.TTestAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.TTestType,Nest", "Nest.TTestType");
            feature.AddKnownType("Nest.ITTestPopulation,Nest", "Nest.ITTestPopulation");
            feature.AddKnownType("Nest.TTestPopulation,Nest", "Nest.TTestPopulation");
            feature.AddKnownType("Nest.TTestPopulationDescriptor`1,Nest", "Nest.TTestPopulationDescriptor`1'1");
            feature.AddKnownType("Nest.ValueAggregate,Nest", "Nest.ValueAggregate");
            feature.AddKnownType("Nest.IValueCountAggregation,Nest", "Nest.IValueCountAggregation");
            feature.AddKnownType("Nest.ValueCountAggregation,Nest", "Nest.ValueCountAggregation");
            feature.AddKnownType("Nest.ValueCountAggregationDescriptor`1,Nest", "Nest.ValueCountAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.IWeightedAverageAggregation,Nest", "Nest.IWeightedAverageAggregation");
            feature.AddKnownType("Nest.WeightedAverageAggregation,Nest", "Nest.WeightedAverageAggregation");
            feature.AddKnownType("Nest.WeightedAverageAggregationDescriptor`1,Nest", "Nest.WeightedAverageAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.IWeightedAverageValue,Nest", "Nest.IWeightedAverageValue");
            feature.AddKnownType("Nest.WeightedAverageValue,Nest", "Nest.WeightedAverageValue");
            feature.AddKnownType("Nest.WeightedAverageValueDescriptor`1,Nest", "Nest.WeightedAverageValueDescriptor`1'1");
            feature.AddKnownType("Nest.ValueType,Nest", "Nest.ValueType");
            feature.AddKnownType("Nest.IAverageBucketAggregation,Nest", "Nest.IAverageBucketAggregation");
            feature.AddKnownType("Nest.AverageBucketAggregation,Nest", "Nest.AverageBucketAggregation");
            feature.AddKnownType("Nest.AverageBucketAggregationDescriptor,Nest", "Nest.AverageBucketAggregationDescriptor");
            feature.AddKnownType("Nest.IBucketScriptAggregation,Nest", "Nest.IBucketScriptAggregation");
            feature.AddKnownType("Nest.BucketScriptAggregation,Nest", "Nest.BucketScriptAggregation");
            feature.AddKnownType("Nest.BucketScriptAggregationDescriptor,Nest", "Nest.BucketScriptAggregationDescriptor");
            feature.AddKnownType("Nest.IBucketSelectorAggregation,Nest", "Nest.IBucketSelectorAggregation");
            feature.AddKnownType("Nest.BucketSelectorAggregation,Nest", "Nest.BucketSelectorAggregation");
            feature.AddKnownType("Nest.BucketSelectorAggregationDescriptor,Nest", "Nest.BucketSelectorAggregationDescriptor");
            feature.AddKnownType("Nest.IBucketSortAggregation,Nest", "Nest.IBucketSortAggregation");
            feature.AddKnownType("Nest.BucketSortAggregation,Nest", "Nest.BucketSortAggregation");
            feature.AddKnownType("Nest.BucketSortAggregationDescriptor`1,Nest", "Nest.BucketSortAggregationDescriptor`1'1");
            feature.AddKnownType("Nest.IBucketsPath,Nest", "Nest.IBucketsPath");
            feature.AddKnownType("Nest.SingleBucketsPath,Nest", "Nest.SingleBucketsPath");
            feature.AddKnownType("Nest.IMultiBucketsPath,Nest", "Nest.IMultiBucketsPath");
            feature.AddKnownType("Nest.MultiBucketsPath,Nest", "Nest.MultiBucketsPath");
            feature.AddKnownType("Nest.MultiBucketsPathDescriptor,Nest", "Nest.MultiBucketsPathDescriptor");
            feature.AddKnownType("Nest.BucketsPathFormatter,Nest", "Nest.BucketsPathFormatter");
            feature.AddKnownType("Nest.ICumulativeCardinalityAggregation,Nest", "Nest.ICumulativeCardinalityAggregation");
            feature.AddKnownType("Nest.CumulativeCardinalityAggregation,Nest", "Nest.CumulativeCardinalityAggregation");
            feature.AddKnownType("Nest.CumulativeCardinalityAggregationDescriptor,Nest", "Nest.CumulativeCardinalityAggregationDescriptor");
            feature.AddKnownType("Nest.ICumulativeSumAggregation,Nest", "Nest.ICumulativeSumAggregation");
            feature.AddKnownType("Nest.CumulativeSumAggregation,Nest", "Nest.CumulativeSumAggregation");
            feature.AddKnownType("Nest.CumulativeSumAggregationDescriptor,Nest", "Nest.CumulativeSumAggregationDescriptor");
            feature.AddKnownType("Nest.IDerivativeAggregation,Nest", "Nest.IDerivativeAggregation");
            feature.AddKnownType("Nest.DerivativeAggregation,Nest", "Nest.DerivativeAggregation");
            feature.AddKnownType("Nest.DerivativeAggregationDescriptor,Nest", "Nest.DerivativeAggregationDescriptor");
            feature.AddKnownType("Nest.IExtendedStatsBucketAggregation,Nest", "Nest.IExtendedStatsBucketAggregation");
            feature.AddKnownType("Nest.ExtendedStatsBucketAggregation,Nest", "Nest.ExtendedStatsBucketAggregation");
            feature.AddKnownType("Nest.ExtendedStatsBucketAggregationDescriptor,Nest", "Nest.ExtendedStatsBucketAggregationDescriptor");
            feature.AddKnownType("Nest.GapPolicy,Nest", "Nest.GapPolicy");
            feature.AddKnownType("Nest.KeyedValueAggregate,Nest", "Nest.KeyedValueAggregate");
            feature.AddKnownType("Nest.IMaxBucketAggregation,Nest", "Nest.IMaxBucketAggregation");
            feature.AddKnownType("Nest.MaxBucketAggregation,Nest", "Nest.MaxBucketAggregation");
            feature.AddKnownType("Nest.MaxBucketAggregationDescriptor,Nest", "Nest.MaxBucketAggregationDescriptor");
            feature.AddKnownType("Nest.IMinBucketAggregation,Nest", "Nest.IMinBucketAggregation");
            feature.AddKnownType("Nest.MinBucketAggregation,Nest", "Nest.MinBucketAggregation");
            feature.AddKnownType("Nest.MinBucketAggregationDescriptor,Nest", "Nest.MinBucketAggregationDescriptor");
            feature.AddKnownType("Nest.IEwmaModel,Nest", "Nest.IEwmaModel");
            feature.AddKnownType("Nest.EwmaModel,Nest", "Nest.EwmaModel");
            feature.AddKnownType("Nest.EwmaModelDescriptor,Nest", "Nest.EwmaModelDescriptor");
            feature.AddKnownType("Nest.IHoltLinearModel,Nest", "Nest.IHoltLinearModel");
            feature.AddKnownType("Nest.HoltLinearModel,Nest", "Nest.HoltLinearModel");
            feature.AddKnownType("Nest.HoltLinearModelDescriptor,Nest", "Nest.HoltLinearModelDescriptor");
            feature.AddKnownType("Nest.HoltWintersType,Nest", "Nest.HoltWintersType");
            feature.AddKnownType("Nest.IHoltWintersModel,Nest", "Nest.IHoltWintersModel");
            feature.AddKnownType("Nest.HoltWintersModel,Nest", "Nest.HoltWintersModel");
            feature.AddKnownType("Nest.HoltWintersModelDescriptor,Nest", "Nest.HoltWintersModelDescriptor");
            feature.AddKnownType("Nest.IMovingAverageModel,Nest", "Nest.IMovingAverageModel");
            feature.AddKnownType("Nest.MovingAverageModelDescriptor,Nest", "Nest.MovingAverageModelDescriptor");
            feature.AddKnownType("Nest.ILinearModel,Nest", "Nest.ILinearModel");
            feature.AddKnownType("Nest.LinearModel,Nest", "Nest.LinearModel");
            feature.AddKnownType("Nest.LinearModelDescriptor,Nest", "Nest.LinearModelDescriptor");
            feature.AddKnownType("Nest.ISimpleModel,Nest", "Nest.ISimpleModel");
            feature.AddKnownType("Nest.SimpleModel,Nest", "Nest.SimpleModel");
            feature.AddKnownType("Nest.SimpleModelDescriptor,Nest", "Nest.SimpleModelDescriptor");
            feature.AddKnownType("Nest.IMovingAverageAggregation,Nest", "Nest.IMovingAverageAggregation");
            feature.AddKnownType("Nest.MovingAverageAggregation,Nest", "Nest.MovingAverageAggregation");
            feature.AddKnownType("Nest.MovingAverageAggregationDescriptor,Nest", "Nest.MovingAverageAggregationDescriptor");
            feature.AddKnownType("Nest.MovingAverageAggregationFormatter,Nest", "Nest.MovingAverageAggregationFormatter");
            feature.AddKnownType("Nest.IMovingFunctionAggregation,Nest", "Nest.IMovingFunctionAggregation");
            feature.AddKnownType("Nest.MovingFunctionAggregation,Nest", "Nest.MovingFunctionAggregation");
            feature.AddKnownType("Nest.MovingFunctionAggregationDescriptor,Nest", "Nest.MovingFunctionAggregationDescriptor");
            feature.AddKnownType("Nest.IMovingPercentilesAggregation,Nest", "Nest.IMovingPercentilesAggregation");
            feature.AddKnownType("Nest.MovingPercentilesAggregation,Nest", "Nest.MovingPercentilesAggregation");
            feature.AddKnownType("Nest.MovingPercentilesAggregationDescriptor,Nest", "Nest.MovingPercentilesAggregationDescriptor");
            feature.AddKnownType("Nest.INormalizeAggregation,Nest", "Nest.INormalizeAggregation");
            feature.AddKnownType("Nest.NormalizeAggregation,Nest", "Nest.NormalizeAggregation");
            feature.AddKnownType("Nest.NormalizeAggregationDescriptor,Nest", "Nest.NormalizeAggregationDescriptor");
            feature.AddKnownType("Nest.NormalizeMethod,Nest", "Nest.NormalizeMethod");
            feature.AddKnownType("Nest.IPercentilesBucketAggregation,Nest", "Nest.IPercentilesBucketAggregation");
            feature.AddKnownType("Nest.PercentilesBucketAggregation,Nest", "Nest.PercentilesBucketAggregation");
            feature.AddKnownType("Nest.PercentilesBucketAggregationDescriptor,Nest", "Nest.PercentilesBucketAggregationDescriptor");
            feature.AddKnownType("Nest.IPipelineAggregation,Nest", "Nest.IPipelineAggregation");
            feature.AddKnownType("Nest.PipelineAggregationBase,Nest", "Nest.PipelineAggregationBase");
            feature.AddKnownType("Nest.PipelineAggregationDescriptorBase`3,Nest", "Nest.PipelineAggregationDescriptorBase`3'3");
            feature.AddKnownType("Nest.ISerialDifferencingAggregation,Nest", "Nest.ISerialDifferencingAggregation");
            feature.AddKnownType("Nest.SerialDifferencingAggregation,Nest", "Nest.SerialDifferencingAggregation");
            feature.AddKnownType("Nest.SerialDifferencingAggregationDescriptor,Nest", "Nest.SerialDifferencingAggregationDescriptor");
            feature.AddKnownType("Nest.IStatsBucketAggregation,Nest", "Nest.IStatsBucketAggregation");
            feature.AddKnownType("Nest.StatsBucketAggregation,Nest", "Nest.StatsBucketAggregation");
            feature.AddKnownType("Nest.StatsBucketAggregationDescriptor,Nest", "Nest.StatsBucketAggregationDescriptor");
            feature.AddKnownType("Nest.ISumBucketAggregation,Nest", "Nest.ISumBucketAggregation");
            feature.AddKnownType("Nest.SumBucketAggregation,Nest", "Nest.SumBucketAggregation");
            feature.AddKnownType("Nest.SumBucketAggregationDescriptor,Nest", "Nest.SumBucketAggregationDescriptor");
            feature.AddKnownType("Nest.VerbatimDictionaryKeysBaseFormatter`3,Nest", "Nest.VerbatimDictionaryKeysBaseFormatter`3'3");
            feature.AddKnownType("Nest.VerbatimInterfaceReadOnlyDictionaryKeysPreservingNullFormatter`2,Nest", "Nest.VerbatimInterfaceReadOnlyDictionaryKeysPreservingNullFormatter`2'2");
            feature.AddKnownType("Nest.VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2,Nest", "Nest.VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2'2");
            feature.AddKnownType("Nest.VerbatimDictionaryKeysFormatter`2,Nest", "Nest.VerbatimDictionaryKeysFormatter`2'2");
            feature.AddKnownType("Nest.VerbatimDictionaryKeysFormatter`4,Nest", "Nest.VerbatimDictionaryKeysFormatter`4'4");
            feature.AddKnownType("Nest.VerbatimDictionaryInterfaceKeysFormatter`2,Nest", "Nest.VerbatimDictionaryInterfaceKeysFormatter`2'2");
            feature.AddKnownType("Nest.IAggregationVisitor,Nest", "Nest.IAggregationVisitor");
            feature.AddKnownType("Nest.AggregationVisitor,Nest", "Nest.AggregationVisitor");
            feature.AddKnownType("Nest.AggregationVisitorScope,Nest", "Nest.AggregationVisitorScope");
            feature.AddKnownType("Nest.AggregationWalker,Nest", "Nest.AggregationWalker");
            feature.AddKnownType("Nest.IAnalysis,Nest", "Nest.IAnalysis");
            feature.AddKnownType("Nest.Analysis,Nest", "Nest.Analysis");
            feature.AddKnownType("Nest.AnalysisDescriptor,Nest", "Nest.AnalysisDescriptor");
            feature.AddKnownType("Nest.IAnalyzer,Nest", "Nest.IAnalyzer");
            feature.AddKnownType("Nest.AnalyzerBase,Nest", "Nest.AnalyzerBase");
            feature.AddKnownType("Nest.AnalyzerDescriptorBase`2,Nest", "Nest.AnalyzerDescriptorBase`2'2");
            feature.AddKnownType("Nest.AnalyzerFormatter,Nest", "Nest.AnalyzerFormatter");
            feature.AddKnownType("Nest.IAnalyzers,Nest", "Nest.IAnalyzers");
            feature.AddKnownType("Nest.Analyzers,Nest", "Nest.Analyzers");
            feature.AddKnownType("Nest.AnalyzersDescriptor,Nest", "Nest.AnalyzersDescriptor");
            feature.AddKnownType("Nest.ICustomAnalyzer,Nest", "Nest.ICustomAnalyzer");
            feature.AddKnownType("Nest.CustomAnalyzer,Nest", "Nest.CustomAnalyzer");
            feature.AddKnownType("Nest.CustomAnalyzerDescriptor,Nest", "Nest.CustomAnalyzerDescriptor");
            feature.AddKnownType("Nest.IFingerprintAnalyzer,Nest", "Nest.IFingerprintAnalyzer");
            feature.AddKnownType("Nest.FingerprintAnalyzer,Nest", "Nest.FingerprintAnalyzer");
            feature.AddKnownType("Nest.FingerprintAnalyzerDescriptor,Nest", "Nest.FingerprintAnalyzerDescriptor");
            feature.AddKnownType("Nest.IKeywordAnalyzer,Nest", "Nest.IKeywordAnalyzer");
            feature.AddKnownType("Nest.KeywordAnalyzer,Nest", "Nest.KeywordAnalyzer");
            feature.AddKnownType("Nest.KeywordAnalyzerDescriptor,Nest", "Nest.KeywordAnalyzerDescriptor");
            feature.AddKnownType("Nest.ILanguageAnalyzer,Nest", "Nest.ILanguageAnalyzer");
            feature.AddKnownType("Nest.LanguageAnalyzer,Nest", "Nest.LanguageAnalyzer");
            feature.AddKnownType("Nest.LanguageAnalyzerDescriptor,Nest", "Nest.LanguageAnalyzerDescriptor");
            feature.AddKnownType("Nest.INoriAnalyzer,Nest", "Nest.INoriAnalyzer");
            feature.AddKnownType("Nest.NoriAnalyzer,Nest", "Nest.NoriAnalyzer");
            feature.AddKnownType("Nest.NoriAnalyzerDescriptor,Nest", "Nest.NoriAnalyzerDescriptor");
            feature.AddKnownType("Nest.IPatternAnalyzer,Nest", "Nest.IPatternAnalyzer");
            feature.AddKnownType("Nest.PatternAnalyzer,Nest", "Nest.PatternAnalyzer");
            feature.AddKnownType("Nest.PatternAnalyzerDescriptor,Nest", "Nest.PatternAnalyzerDescriptor");
            feature.AddKnownType("Nest.ISimpleAnalyzer,Nest", "Nest.ISimpleAnalyzer");
            feature.AddKnownType("Nest.SimpleAnalyzer,Nest", "Nest.SimpleAnalyzer");
            feature.AddKnownType("Nest.SimpleAnalyzerDescriptor,Nest", "Nest.SimpleAnalyzerDescriptor");
            feature.AddKnownType("Nest.ISnowballAnalyzer,Nest", "Nest.ISnowballAnalyzer");
            feature.AddKnownType("Nest.SnowballAnalyzer,Nest", "Nest.SnowballAnalyzer");
            feature.AddKnownType("Nest.SnowballAnalyzerDescriptor,Nest", "Nest.SnowballAnalyzerDescriptor");
            feature.AddKnownType("Nest.IStandardAnalyzer,Nest", "Nest.IStandardAnalyzer");
            feature.AddKnownType("Nest.StandardAnalyzer,Nest", "Nest.StandardAnalyzer");
            feature.AddKnownType("Nest.StandardAnalyzerDescriptor,Nest", "Nest.StandardAnalyzerDescriptor");
            feature.AddKnownType("Nest.IStopAnalyzer,Nest", "Nest.IStopAnalyzer");
            feature.AddKnownType("Nest.StopAnalyzer,Nest", "Nest.StopAnalyzer");
            feature.AddKnownType("Nest.StopAnalyzerDescriptor,Nest", "Nest.StopAnalyzerDescriptor");
            feature.AddKnownType("Nest.IWhitespaceAnalyzer,Nest", "Nest.IWhitespaceAnalyzer");
            feature.AddKnownType("Nest.WhitespaceAnalyzer,Nest", "Nest.WhitespaceAnalyzer");
            feature.AddKnownType("Nest.WhitespaceAnalyzerDescriptor,Nest", "Nest.WhitespaceAnalyzerDescriptor");
            feature.AddKnownType("Nest.ICharFilter,Nest", "Nest.ICharFilter");
            feature.AddKnownType("Nest.CharFilterBase,Nest", "Nest.CharFilterBase");
            feature.AddKnownType("Nest.CharFilterDescriptorBase`2,Nest", "Nest.CharFilterDescriptorBase`2'2");
            feature.AddKnownType("Nest.CharFilterFormatter,Nest", "Nest.CharFilterFormatter");
            feature.AddKnownType("Nest.ICharFilters,Nest", "Nest.ICharFilters");
            feature.AddKnownType("Nest.CharFilters,Nest", "Nest.CharFilters");
            feature.AddKnownType("Nest.CharFiltersDescriptor,Nest", "Nest.CharFiltersDescriptor");
            feature.AddKnownType("Nest.IHtmlStripCharFilter,Nest", "Nest.IHtmlStripCharFilter");
            feature.AddKnownType("Nest.HtmlStripCharFilter,Nest", "Nest.HtmlStripCharFilter");
            feature.AddKnownType("Nest.HtmlStripCharFilterDescriptor,Nest", "Nest.HtmlStripCharFilterDescriptor");
            feature.AddKnownType("Nest.IMappingCharFilter,Nest", "Nest.IMappingCharFilter");
            feature.AddKnownType("Nest.MappingCharFilter,Nest", "Nest.MappingCharFilter");
            feature.AddKnownType("Nest.MappingCharFilterDescriptor,Nest", "Nest.MappingCharFilterDescriptor");
            feature.AddKnownType("Nest.IPatternReplaceCharFilter,Nest", "Nest.IPatternReplaceCharFilter");
            feature.AddKnownType("Nest.PatternReplaceCharFilter,Nest", "Nest.PatternReplaceCharFilter");
            feature.AddKnownType("Nest.PatternReplaceCharFilterDescriptor,Nest", "Nest.PatternReplaceCharFilterDescriptor");
            feature.AddKnownType("Nest.Language,Nest", "Nest.Language");
            feature.AddKnownType("Nest.SnowballLanguage,Nest", "Nest.SnowballLanguage");
            feature.AddKnownType("Nest.ICustomNormalizer,Nest", "Nest.ICustomNormalizer");
            feature.AddKnownType("Nest.CustomNormalizer,Nest", "Nest.CustomNormalizer");
            feature.AddKnownType("Nest.CustomNormalizerDescriptor,Nest", "Nest.CustomNormalizerDescriptor");
            feature.AddKnownType("Nest.INormalizer,Nest", "Nest.INormalizer");
            feature.AddKnownType("Nest.NormalizerBase,Nest", "Nest.NormalizerBase");
            feature.AddKnownType("Nest.NormalizerDescriptorBase`2,Nest", "Nest.NormalizerDescriptorBase`2'2");
            feature.AddKnownType("Nest.NormalizerFormatter,Nest", "Nest.NormalizerFormatter");
            feature.AddKnownType("Nest.INormalizers,Nest", "Nest.INormalizers");
            feature.AddKnownType("Nest.Normalizers,Nest", "Nest.Normalizers");
            feature.AddKnownType("Nest.NormalizersDescriptor,Nest", "Nest.NormalizersDescriptor");
            feature.AddKnownType("Nest.IcuCollationAlternate,Nest", "Nest.IcuCollationAlternate");
            feature.AddKnownType("Nest.IcuCollationCaseFirst,Nest", "Nest.IcuCollationCaseFirst");
            feature.AddKnownType("Nest.IcuCollationDecomposition,Nest", "Nest.IcuCollationDecomposition");
            feature.AddKnownType("Nest.IcuCollationStrength,Nest", "Nest.IcuCollationStrength");
            feature.AddKnownType("Nest.IIcuAnalyzer,Nest", "Nest.IIcuAnalyzer");
            feature.AddKnownType("Nest.IcuAnalyzer,Nest", "Nest.IcuAnalyzer");
            feature.AddKnownType("Nest.IcuAnalyzerDescriptor,Nest", "Nest.IcuAnalyzerDescriptor");
            feature.AddKnownType("Nest.IIcuCollationTokenFilter,Nest", "Nest.IIcuCollationTokenFilter");
            feature.AddKnownType("Nest.IcuCollationTokenFilter,Nest", "Nest.IcuCollationTokenFilter");
            feature.AddKnownType("Nest.IcuCollationTokenFilterDescriptor,Nest", "Nest.IcuCollationTokenFilterDescriptor");
            feature.AddKnownType("Nest.IIcuFoldingTokenFilter,Nest", "Nest.IIcuFoldingTokenFilter");
            feature.AddKnownType("Nest.IcuFoldingTokenFilter,Nest", "Nest.IcuFoldingTokenFilter");
            feature.AddKnownType("Nest.IcuFoldingTokenFilterDescriptor,Nest", "Nest.IcuFoldingTokenFilterDescriptor");
            feature.AddKnownType("Nest.IIcuNormalizationCharFilter,Nest", "Nest.IIcuNormalizationCharFilter");
            feature.AddKnownType("Nest.IcuNormalizationCharFilter,Nest", "Nest.IcuNormalizationCharFilter");
            feature.AddKnownType("Nest.IcuNormalizationCharFilterDescriptor,Nest", "Nest.IcuNormalizationCharFilterDescriptor");
            feature.AddKnownType("Nest.IIcuNormalizationTokenFilter,Nest", "Nest.IIcuNormalizationTokenFilter");
            feature.AddKnownType("Nest.IcuNormalizationTokenFilter,Nest", "Nest.IcuNormalizationTokenFilter");
            feature.AddKnownType("Nest.IcuNormalizationTokenFilterDescriptor,Nest", "Nest.IcuNormalizationTokenFilterDescriptor");
            feature.AddKnownType("Nest.IIcuTokenizer,Nest", "Nest.IIcuTokenizer");
            feature.AddKnownType("Nest.IcuTokenizer,Nest", "Nest.IcuTokenizer");
            feature.AddKnownType("Nest.IcuTokenizerDescriptor,Nest", "Nest.IcuTokenizerDescriptor");
            feature.AddKnownType("Nest.IIcuTransformTokenFilter,Nest", "Nest.IIcuTransformTokenFilter");
            feature.AddKnownType("Nest.IcuTransformTokenFilter,Nest", "Nest.IcuTransformTokenFilter");
            feature.AddKnownType("Nest.IcuTransformTokenFilterDescriptor,Nest", "Nest.IcuTransformTokenFilterDescriptor");
            feature.AddKnownType("Nest.IcuNormalizationMode,Nest", "Nest.IcuNormalizationMode");
            feature.AddKnownType("Nest.IcuNormalizationType,Nest", "Nest.IcuNormalizationType");
            feature.AddKnownType("Nest.IcuTransformDirection,Nest", "Nest.IcuTransformDirection");
            feature.AddKnownType("Nest.IKuromojiAnalyzer,Nest", "Nest.IKuromojiAnalyzer");
            feature.AddKnownType("Nest.KuromojiAnalyzer,Nest", "Nest.KuromojiAnalyzer");
            feature.AddKnownType("Nest.KuromojiAnalyzerDescriptor,Nest", "Nest.KuromojiAnalyzerDescriptor");
            feature.AddKnownType("Nest.IKuromojiIterationMarkCharFilter,Nest", "Nest.IKuromojiIterationMarkCharFilter");
            feature.AddKnownType("Nest.KuromojiIterationMarkCharFilter,Nest", "Nest.KuromojiIterationMarkCharFilter");
            feature.AddKnownType("Nest.KuromojiIterationMarkCharFilterDescriptor,Nest", "Nest.KuromojiIterationMarkCharFilterDescriptor");
            feature.AddKnownType("Nest.IKuromojiPartOfSpeechTokenFilter,Nest", "Nest.IKuromojiPartOfSpeechTokenFilter");
            feature.AddKnownType("Nest.KuromojiPartOfSpeechTokenFilter,Nest", "Nest.KuromojiPartOfSpeechTokenFilter");
            feature.AddKnownType("Nest.KuromojiPartOfSpeechTokenFilterDescriptor,Nest", "Nest.KuromojiPartOfSpeechTokenFilterDescriptor");
            feature.AddKnownType("Nest.IKuromojiReadingFormTokenFilter,Nest", "Nest.IKuromojiReadingFormTokenFilter");
            feature.AddKnownType("Nest.KuromojiReadingFormTokenFilter,Nest", "Nest.KuromojiReadingFormTokenFilter");
            feature.AddKnownType("Nest.KuromojiReadingFormTokenFilterDescriptor,Nest", "Nest.KuromojiReadingFormTokenFilterDescriptor");
            feature.AddKnownType("Nest.IKuromojiStemmerTokenFilter,Nest", "Nest.IKuromojiStemmerTokenFilter");
            feature.AddKnownType("Nest.KuromojiStemmerTokenFilter,Nest", "Nest.KuromojiStemmerTokenFilter");
            feature.AddKnownType("Nest.KuromojiStemmerTokenFilterDescriptor,Nest", "Nest.KuromojiStemmerTokenFilterDescriptor");
            feature.AddKnownType("Nest.KuromojiTokenizationMode,Nest", "Nest.KuromojiTokenizationMode");
            feature.AddKnownType("Nest.IKuromojiTokenizer,Nest", "Nest.IKuromojiTokenizer");
            feature.AddKnownType("Nest.KuromojiTokenizer,Nest", "Nest.KuromojiTokenizer");
            feature.AddKnownType("Nest.KuromojiTokenizerDescriptor,Nest", "Nest.KuromojiTokenizerDescriptor");
            feature.AddKnownType("Nest.PhoneticEncoder,Nest", "Nest.PhoneticEncoder");
            feature.AddKnownType("Nest.PhoneticLanguage,Nest", "Nest.PhoneticLanguage");
            feature.AddKnownType("Nest.PhoneticNameType,Nest", "Nest.PhoneticNameType");
            feature.AddKnownType("Nest.PhoneticRuleType,Nest", "Nest.PhoneticRuleType");
            feature.AddKnownType("Nest.IPhoneticTokenFilter,Nest", "Nest.IPhoneticTokenFilter");
            feature.AddKnownType("Nest.PhoneticTokenFilter,Nest", "Nest.PhoneticTokenFilter");
            feature.AddKnownType("Nest.PhoneticTokenFilterDescriptor,Nest", "Nest.PhoneticTokenFilterDescriptor");
            feature.AddKnownType("Nest.StopWords,Nest", "Nest.StopWords");
            feature.AddKnownType("Nest.StopWordsFormatter,Nest", "Nest.StopWordsFormatter");
            feature.AddKnownType("Nest.IAsciiFoldingTokenFilter,Nest", "Nest.IAsciiFoldingTokenFilter");
            feature.AddKnownType("Nest.AsciiFoldingTokenFilter,Nest", "Nest.AsciiFoldingTokenFilter");
            feature.AddKnownType("Nest.AsciiFoldingTokenFilterDescriptor,Nest", "Nest.AsciiFoldingTokenFilterDescriptor");
            feature.AddKnownType("Nest.ICommonGramsTokenFilter,Nest", "Nest.ICommonGramsTokenFilter");
            feature.AddKnownType("Nest.CommonGramsTokenFilter,Nest", "Nest.CommonGramsTokenFilter");
            feature.AddKnownType("Nest.CommonGramsTokenFilterDescriptor,Nest", "Nest.CommonGramsTokenFilterDescriptor");
            feature.AddKnownType("Nest.ICompoundWordTokenFilter,Nest", "Nest.ICompoundWordTokenFilter");
            feature.AddKnownType("Nest.CompoundWordTokenFilterBase,Nest", "Nest.CompoundWordTokenFilterBase");
            feature.AddKnownType("Nest.CompoundWordTokenFilterDescriptorBase`2,Nest", "Nest.CompoundWordTokenFilterDescriptorBase`2'2");
            feature.AddKnownType("Nest.IDictionaryDecompounderTokenFilter,Nest", "Nest.IDictionaryDecompounderTokenFilter");
            feature.AddKnownType("Nest.DictionaryDecompounderTokenFilter,Nest", "Nest.DictionaryDecompounderTokenFilter");
            feature.AddKnownType("Nest.DictionaryDecompounderTokenFilterDescriptor,Nest", "Nest.DictionaryDecompounderTokenFilterDescriptor");
            feature.AddKnownType("Nest.IHyphenationDecompounderTokenFilter,Nest", "Nest.IHyphenationDecompounderTokenFilter");
            feature.AddKnownType("Nest.HyphenationDecompounderTokenFilter,Nest", "Nest.HyphenationDecompounderTokenFilter");
            feature.AddKnownType("Nest.HyphenationDecompounderTokenFilterDescriptor,Nest", "Nest.HyphenationDecompounderTokenFilterDescriptor");
            feature.AddKnownType("Nest.IConditionTokenFilter,Nest", "Nest.IConditionTokenFilter");
            feature.AddKnownType("Nest.ConditionTokenFilter,Nest", "Nest.ConditionTokenFilter");
            feature.AddKnownType("Nest.ConditionTokenFilterDescriptor,Nest", "Nest.ConditionTokenFilterDescriptor");
            feature.AddKnownType("Nest.DelimitedPayloadEncoding,Nest", "Nest.DelimitedPayloadEncoding");
            feature.AddKnownType("Nest.IDelimitedPayloadTokenFilter,Nest", "Nest.IDelimitedPayloadTokenFilter");
            feature.AddKnownType("Nest.DelimitedPayloadTokenFilter,Nest", "Nest.DelimitedPayloadTokenFilter");
            feature.AddKnownType("Nest.DelimitedPayloadTokenFilterDescriptor,Nest", "Nest.DelimitedPayloadTokenFilterDescriptor");
            feature.AddKnownType("Nest.EdgeNGramSide,Nest", "Nest.EdgeNGramSide");
            feature.AddKnownType("Nest.IEdgeNGramTokenFilter,Nest", "Nest.IEdgeNGramTokenFilter");
            feature.AddKnownType("Nest.EdgeNGramTokenFilter,Nest", "Nest.EdgeNGramTokenFilter");
            feature.AddKnownType("Nest.EdgeNGramTokenFilterDescriptor,Nest", "Nest.EdgeNGramTokenFilterDescriptor");
            feature.AddKnownType("Nest.IElisionTokenFilter,Nest", "Nest.IElisionTokenFilter");
            feature.AddKnownType("Nest.ElisionTokenFilter,Nest", "Nest.ElisionTokenFilter");
            feature.AddKnownType("Nest.ElisionTokenFilterDescriptor,Nest", "Nest.ElisionTokenFilterDescriptor");
            feature.AddKnownType("Nest.IFingerprintTokenFilter,Nest", "Nest.IFingerprintTokenFilter");
            feature.AddKnownType("Nest.FingerprintTokenFilter,Nest", "Nest.FingerprintTokenFilter");
            feature.AddKnownType("Nest.FingerprintTokenFilterDescriptor,Nest", "Nest.FingerprintTokenFilterDescriptor");
            feature.AddKnownType("Nest.IHunspellTokenFilter,Nest", "Nest.IHunspellTokenFilter");
            feature.AddKnownType("Nest.HunspellTokenFilter,Nest", "Nest.HunspellTokenFilter");
            feature.AddKnownType("Nest.HunspellTokenFilterDescriptor,Nest", "Nest.HunspellTokenFilterDescriptor");
            feature.AddKnownType("Nest.KeepTypesMode,Nest", "Nest.KeepTypesMode");
            feature.AddKnownType("Nest.IKeepTypesTokenFilter,Nest", "Nest.IKeepTypesTokenFilter");
            feature.AddKnownType("Nest.KeepTypesTokenFilter,Nest", "Nest.KeepTypesTokenFilter");
            feature.AddKnownType("Nest.KeepTypesTokenFilterDescriptor,Nest", "Nest.KeepTypesTokenFilterDescriptor");
            feature.AddKnownType("Nest.IKeepWordsTokenFilter,Nest", "Nest.IKeepWordsTokenFilter");
            feature.AddKnownType("Nest.KeepWordsTokenFilter,Nest", "Nest.KeepWordsTokenFilter");
            feature.AddKnownType("Nest.KeepWordsTokenFilterDescriptor,Nest", "Nest.KeepWordsTokenFilterDescriptor");
            feature.AddKnownType("Nest.IKeywordMarkerTokenFilter,Nest", "Nest.IKeywordMarkerTokenFilter");
            feature.AddKnownType("Nest.KeywordMarkerTokenFilter,Nest", "Nest.KeywordMarkerTokenFilter");
            feature.AddKnownType("Nest.KeywordMarkerTokenFilterDescriptor,Nest", "Nest.KeywordMarkerTokenFilterDescriptor");
            feature.AddKnownType("Nest.IKStemTokenFilter,Nest", "Nest.IKStemTokenFilter");
            feature.AddKnownType("Nest.KStemTokenFilter,Nest", "Nest.KStemTokenFilter");
            feature.AddKnownType("Nest.KStemTokenFilterDescriptor,Nest", "Nest.KStemTokenFilterDescriptor");
            feature.AddKnownType("Nest.ILengthTokenFilter,Nest", "Nest.ILengthTokenFilter");
            feature.AddKnownType("Nest.LengthTokenFilter,Nest", "Nest.LengthTokenFilter");
            feature.AddKnownType("Nest.LengthTokenFilterDescriptor,Nest", "Nest.LengthTokenFilterDescriptor");
            feature.AddKnownType("Nest.ILimitTokenCountTokenFilter,Nest", "Nest.ILimitTokenCountTokenFilter");
            feature.AddKnownType("Nest.LimitTokenCountTokenFilter,Nest", "Nest.LimitTokenCountTokenFilter");
            feature.AddKnownType("Nest.LimitTokenCountTokenFilterDescriptor,Nest", "Nest.LimitTokenCountTokenFilterDescriptor");
            feature.AddKnownType("Nest.ILowercaseTokenFilter,Nest", "Nest.ILowercaseTokenFilter");
            feature.AddKnownType("Nest.LowercaseTokenFilter,Nest", "Nest.LowercaseTokenFilter");
            feature.AddKnownType("Nest.LowercaseTokenFilterDescriptor,Nest", "Nest.LowercaseTokenFilterDescriptor");
            feature.AddKnownType("Nest.IMultiplexerTokenFilter,Nest", "Nest.IMultiplexerTokenFilter");
            feature.AddKnownType("Nest.MultiplexerTokenFilter,Nest", "Nest.MultiplexerTokenFilter");
            feature.AddKnownType("Nest.MultiplexerTokenFilterDescriptor,Nest", "Nest.MultiplexerTokenFilterDescriptor");
            feature.AddKnownType("Nest.INGramTokenFilter,Nest", "Nest.INGramTokenFilter");
            feature.AddKnownType("Nest.NGramTokenFilter,Nest", "Nest.NGramTokenFilter");
            feature.AddKnownType("Nest.NGramTokenFilterDescriptor,Nest", "Nest.NGramTokenFilterDescriptor");
            feature.AddKnownType("Nest.INoriPartOfSpeechTokenFilter,Nest", "Nest.INoriPartOfSpeechTokenFilter");
            feature.AddKnownType("Nest.NoriPartOfSpeechTokenFilter,Nest", "Nest.NoriPartOfSpeechTokenFilter");
            feature.AddKnownType("Nest.NoriPartOfSpeechTokenFilterDescriptor,Nest", "Nest.NoriPartOfSpeechTokenFilterDescriptor");
            feature.AddKnownType("Nest.IPatternCaptureTokenFilter,Nest", "Nest.IPatternCaptureTokenFilter");
            feature.AddKnownType("Nest.PatternCaptureTokenFilter,Nest", "Nest.PatternCaptureTokenFilter");
            feature.AddKnownType("Nest.PatternCaptureTokenFilterDescriptor,Nest", "Nest.PatternCaptureTokenFilterDescriptor");
            feature.AddKnownType("Nest.IPatternReplaceTokenFilter,Nest", "Nest.IPatternReplaceTokenFilter");
            feature.AddKnownType("Nest.PatternReplaceTokenFilter,Nest", "Nest.PatternReplaceTokenFilter");
            feature.AddKnownType("Nest.PatternReplaceTokenFilterDescriptor,Nest", "Nest.PatternReplaceTokenFilterDescriptor");
            feature.AddKnownType("Nest.IPorterStemTokenFilter,Nest", "Nest.IPorterStemTokenFilter");
            feature.AddKnownType("Nest.PorterStemTokenFilter,Nest", "Nest.PorterStemTokenFilter");
            feature.AddKnownType("Nest.PorterStemTokenFilterDescriptor,Nest", "Nest.PorterStemTokenFilterDescriptor");
            feature.AddKnownType("Nest.IPredicateTokenFilter,Nest", "Nest.IPredicateTokenFilter");
            feature.AddKnownType("Nest.PredicateTokenFilter,Nest", "Nest.PredicateTokenFilter");
            feature.AddKnownType("Nest.PredicateTokenFilterDescriptor,Nest", "Nest.PredicateTokenFilterDescriptor");
            feature.AddKnownType("Nest.IRemoveDuplicatesTokenFilter,Nest", "Nest.IRemoveDuplicatesTokenFilter");
            feature.AddKnownType("Nest.RemoveDuplicatesTokenFilter,Nest", "Nest.RemoveDuplicatesTokenFilter");
            feature.AddKnownType("Nest.RemoveDuplicatesTokenFilterDescriptor,Nest", "Nest.RemoveDuplicatesTokenFilterDescriptor");
            feature.AddKnownType("Nest.IReverseTokenFilter,Nest", "Nest.IReverseTokenFilter");
            feature.AddKnownType("Nest.ReverseTokenFilter,Nest", "Nest.ReverseTokenFilter");
            feature.AddKnownType("Nest.ReverseTokenFilterDescriptor,Nest", "Nest.ReverseTokenFilterDescriptor");
            feature.AddKnownType("Nest.IShingleTokenFilter,Nest", "Nest.IShingleTokenFilter");
            feature.AddKnownType("Nest.ShingleTokenFilter,Nest", "Nest.ShingleTokenFilter");
            feature.AddKnownType("Nest.ShingleTokenFilterDescriptor,Nest", "Nest.ShingleTokenFilterDescriptor");
            feature.AddKnownType("Nest.ISnowballTokenFilter,Nest", "Nest.ISnowballTokenFilter");
            feature.AddKnownType("Nest.SnowballTokenFilter,Nest", "Nest.SnowballTokenFilter");
            feature.AddKnownType("Nest.SnowballTokenFilterDescriptor,Nest", "Nest.SnowballTokenFilterDescriptor");
            feature.AddKnownType("Nest.IStemmerOverrideTokenFilter,Nest", "Nest.IStemmerOverrideTokenFilter");
            feature.AddKnownType("Nest.StemmerOverrideTokenFilter,Nest", "Nest.StemmerOverrideTokenFilter");
            feature.AddKnownType("Nest.StemmerOverrideTokenFilterDescriptor,Nest", "Nest.StemmerOverrideTokenFilterDescriptor");
            feature.AddKnownType("Nest.IStemmerTokenFilter,Nest", "Nest.IStemmerTokenFilter");
            feature.AddKnownType("Nest.StemmerTokenFilter,Nest", "Nest.StemmerTokenFilter");
            feature.AddKnownType("Nest.StemmerTokenFilterDescriptor,Nest", "Nest.StemmerTokenFilterDescriptor");
            feature.AddKnownType("Nest.IStopTokenFilter,Nest", "Nest.IStopTokenFilter");
            feature.AddKnownType("Nest.StopTokenFilter,Nest", "Nest.StopTokenFilter");
            feature.AddKnownType("Nest.StopTokenFilterDescriptor,Nest", "Nest.StopTokenFilterDescriptor");
            feature.AddKnownType("Nest.SynonymFormat,Nest", "Nest.SynonymFormat");
            feature.AddKnownType("Nest.ISynonymGraphTokenFilter,Nest", "Nest.ISynonymGraphTokenFilter");
            feature.AddKnownType("Nest.SynonymGraphTokenFilter,Nest", "Nest.SynonymGraphTokenFilter");
            feature.AddKnownType("Nest.SynonymGraphTokenFilterDescriptor,Nest", "Nest.SynonymGraphTokenFilterDescriptor");
            feature.AddKnownType("Nest.ISynonymTokenFilter,Nest", "Nest.ISynonymTokenFilter");
            feature.AddKnownType("Nest.SynonymTokenFilter,Nest", "Nest.SynonymTokenFilter");
            feature.AddKnownType("Nest.SynonymTokenFilterDescriptor,Nest", "Nest.SynonymTokenFilterDescriptor");
            feature.AddKnownType("Nest.ITokenFilter,Nest", "Nest.ITokenFilter");
            feature.AddKnownType("Nest.TokenFilterBase,Nest", "Nest.TokenFilterBase");
            feature.AddKnownType("Nest.TokenFilterDescriptorBase`2,Nest", "Nest.TokenFilterDescriptorBase`2'2");
            feature.AddKnownType("Nest.TokenFilterFormatter,Nest", "Nest.TokenFilterFormatter");
            feature.AddKnownType("Nest.ITokenFilters,Nest", "Nest.ITokenFilters");
            feature.AddKnownType("Nest.TokenFilters,Nest", "Nest.TokenFilters");
            feature.AddKnownType("Nest.TokenFiltersDescriptor,Nest", "Nest.TokenFiltersDescriptor");
            feature.AddKnownType("Nest.ITrimTokenFilter,Nest", "Nest.ITrimTokenFilter");
            feature.AddKnownType("Nest.TrimTokenFilter,Nest", "Nest.TrimTokenFilter");
            feature.AddKnownType("Nest.TrimTokenFilterDescriptor,Nest", "Nest.TrimTokenFilterDescriptor");
            feature.AddKnownType("Nest.ITruncateTokenFilter,Nest", "Nest.ITruncateTokenFilter");
            feature.AddKnownType("Nest.TruncateTokenFilter,Nest", "Nest.TruncateTokenFilter");
            feature.AddKnownType("Nest.TruncateTokenFilterDescriptor,Nest", "Nest.TruncateTokenFilterDescriptor");
            feature.AddKnownType("Nest.IUniqueTokenFilter,Nest", "Nest.IUniqueTokenFilter");
            feature.AddKnownType("Nest.UniqueTokenFilter,Nest", "Nest.UniqueTokenFilter");
            feature.AddKnownType("Nest.UniqueTokenFilterDescriptor,Nest", "Nest.UniqueTokenFilterDescriptor");
            feature.AddKnownType("Nest.IUppercaseTokenFilter,Nest", "Nest.IUppercaseTokenFilter");
            feature.AddKnownType("Nest.UppercaseTokenFilter,Nest", "Nest.UppercaseTokenFilter");
            feature.AddKnownType("Nest.UppercaseTokenFilterDescriptor,Nest", "Nest.UppercaseTokenFilterDescriptor");
            feature.AddKnownType("Nest.IWordDelimiterGraphTokenFilter,Nest", "Nest.IWordDelimiterGraphTokenFilter");
            feature.AddKnownType("Nest.WordDelimiterGraphTokenFilter,Nest", "Nest.WordDelimiterGraphTokenFilter");
            feature.AddKnownType("Nest.WordDelimiterGraphTokenFilterDescriptor,Nest", "Nest.WordDelimiterGraphTokenFilterDescriptor");
            feature.AddKnownType("Nest.IWordDelimiterTokenFilter,Nest", "Nest.IWordDelimiterTokenFilter");
            feature.AddKnownType("Nest.WordDelimiterTokenFilter,Nest", "Nest.WordDelimiterTokenFilter");
            feature.AddKnownType("Nest.WordDelimiterTokenFilterDescriptor,Nest", "Nest.WordDelimiterTokenFilterDescriptor");
            feature.AddKnownType("Nest.ICharGroupTokenizer,Nest", "Nest.ICharGroupTokenizer");
            feature.AddKnownType("Nest.CharGroupTokenizer,Nest", "Nest.CharGroupTokenizer");
            feature.AddKnownType("Nest.CharGroupTokenizerDescriptor,Nest", "Nest.CharGroupTokenizerDescriptor");
            feature.AddKnownType("Nest.IKeywordTokenizer,Nest", "Nest.IKeywordTokenizer");
            feature.AddKnownType("Nest.KeywordTokenizer,Nest", "Nest.KeywordTokenizer");
            feature.AddKnownType("Nest.KeywordTokenizerDescriptor,Nest", "Nest.KeywordTokenizerDescriptor");
            feature.AddKnownType("Nest.ILetterTokenizer,Nest", "Nest.ILetterTokenizer");
            feature.AddKnownType("Nest.LetterTokenizer,Nest", "Nest.LetterTokenizer");
            feature.AddKnownType("Nest.LetterTokenizerDescriptor,Nest", "Nest.LetterTokenizerDescriptor");
            feature.AddKnownType("Nest.ILowercaseTokenizer,Nest", "Nest.ILowercaseTokenizer");
            feature.AddKnownType("Nest.LowercaseTokenizer,Nest", "Nest.LowercaseTokenizer");
            feature.AddKnownType("Nest.LowercaseTokenizerDescriptor,Nest", "Nest.LowercaseTokenizerDescriptor");
            feature.AddKnownType("Nest.IEdgeNGramTokenizer,Nest", "Nest.IEdgeNGramTokenizer");
            feature.AddKnownType("Nest.EdgeNGramTokenizer,Nest", "Nest.EdgeNGramTokenizer");
            feature.AddKnownType("Nest.EdgeNGramTokenizerDescriptor,Nest", "Nest.EdgeNGramTokenizerDescriptor");
            feature.AddKnownType("Nest.INGramTokenizer,Nest", "Nest.INGramTokenizer");
            feature.AddKnownType("Nest.NGramTokenizer,Nest", "Nest.NGramTokenizer");
            feature.AddKnownType("Nest.NGramTokenizerDescriptor,Nest", "Nest.NGramTokenizerDescriptor");
            feature.AddKnownType("Nest.TokenChar,Nest", "Nest.TokenChar");
            feature.AddKnownType("Nest.NoriDecompoundMode,Nest", "Nest.NoriDecompoundMode");
            feature.AddKnownType("Nest.INoriTokenizer,Nest", "Nest.INoriTokenizer");
            feature.AddKnownType("Nest.NoriTokenizer,Nest", "Nest.NoriTokenizer");
            feature.AddKnownType("Nest.NoriTokenizerDescriptor,Nest", "Nest.NoriTokenizerDescriptor");
            feature.AddKnownType("Nest.IPathHierarchyTokenizer,Nest", "Nest.IPathHierarchyTokenizer");
            feature.AddKnownType("Nest.PathHierarchyTokenizer,Nest", "Nest.PathHierarchyTokenizer");
            feature.AddKnownType("Nest.PathHierarchyTokenizerDescriptor,Nest", "Nest.PathHierarchyTokenizerDescriptor");
            feature.AddKnownType("Nest.IPatternTokenizer,Nest", "Nest.IPatternTokenizer");
            feature.AddKnownType("Nest.PatternTokenizer,Nest", "Nest.PatternTokenizer");
            feature.AddKnownType("Nest.PatternTokenizerDescriptor,Nest", "Nest.PatternTokenizerDescriptor");
            feature.AddKnownType("Nest.ISimplePatternSplitTokenizer,Nest", "Nest.ISimplePatternSplitTokenizer");
            feature.AddKnownType("Nest.SimplePatternSplitTokenizer,Nest", "Nest.SimplePatternSplitTokenizer");
            feature.AddKnownType("Nest.SimplePatternSplitTokenizerDescriptor,Nest", "Nest.SimplePatternSplitTokenizerDescriptor");
            feature.AddKnownType("Nest.ISimplePatternTokenizer,Nest", "Nest.ISimplePatternTokenizer");
            feature.AddKnownType("Nest.SimplePatternTokenizer,Nest", "Nest.SimplePatternTokenizer");
            feature.AddKnownType("Nest.SimplePatternTokenizerDescriptor,Nest", "Nest.SimplePatternTokenizerDescriptor");
            feature.AddKnownType("Nest.IStandardTokenizer,Nest", "Nest.IStandardTokenizer");
            feature.AddKnownType("Nest.StandardTokenizer,Nest", "Nest.StandardTokenizer");
            feature.AddKnownType("Nest.StandardTokenizerDescriptor,Nest", "Nest.StandardTokenizerDescriptor");
            feature.AddKnownType("Nest.ITokenizer,Nest", "Nest.ITokenizer");
            feature.AddKnownType("Nest.TokenizerBase,Nest", "Nest.TokenizerBase");
            feature.AddKnownType("Nest.TokenizerDescriptorBase`2,Nest", "Nest.TokenizerDescriptorBase`2'2");
            feature.AddKnownType("Nest.TokenizerFormatter,Nest", "Nest.TokenizerFormatter");
            feature.AddKnownType("Nest.ITokenizers,Nest", "Nest.ITokenizers");
            feature.AddKnownType("Nest.Tokenizers,Nest", "Nest.Tokenizers");
            feature.AddKnownType("Nest.TokenizersDescriptor,Nest", "Nest.TokenizersDescriptor");
            feature.AddKnownType("Nest.IUaxEmailUrlTokenizer,Nest", "Nest.IUaxEmailUrlTokenizer");
            feature.AddKnownType("Nest.UaxEmailUrlTokenizer,Nest", "Nest.UaxEmailUrlTokenizer");
            feature.AddKnownType("Nest.UaxEmailUrlTokenizerDescriptor,Nest", "Nest.UaxEmailUrlTokenizerDescriptor");
            feature.AddKnownType("Nest.IWhitespaceTokenizer,Nest", "Nest.IWhitespaceTokenizer");
            feature.AddKnownType("Nest.WhitespaceTokenizer,Nest", "Nest.WhitespaceTokenizer");
            feature.AddKnownType("Nest.WhitespaceTokenizerDescriptor,Nest", "Nest.WhitespaceTokenizerDescriptor");
            feature.AddKnownType("Nest.CatAliasesRecord,Nest", "Nest.CatAliasesRecord");
            feature.AddKnownType("Nest.ICatAliasesRequest,Nest", "Nest.ICatAliasesRequest");
            feature.AddKnownType("Nest.CatAliasesRequest,Nest", "Nest.CatAliasesRequest");
            feature.AddKnownType("Nest.CatAliasesDescriptor,Nest", "Nest.CatAliasesDescriptor");
            feature.AddKnownType("Nest.CatAllocationRecord,Nest", "Nest.CatAllocationRecord");
            feature.AddKnownType("Nest.ICatAllocationRequest,Nest", "Nest.ICatAllocationRequest");
            feature.AddKnownType("Nest.CatAllocationRequest,Nest", "Nest.CatAllocationRequest");
            feature.AddKnownType("Nest.CatAllocationDescriptor,Nest", "Nest.CatAllocationDescriptor");
            feature.AddKnownType("Nest.CatCountRecord,Nest", "Nest.CatCountRecord");
            feature.AddKnownType("Nest.ICatCountRequest,Nest", "Nest.ICatCountRequest");
            feature.AddKnownType("Nest.CatCountRequest,Nest", "Nest.CatCountRequest");
            feature.AddKnownType("Nest.CatCountDescriptor,Nest", "Nest.CatCountDescriptor");
            feature.AddKnownType("Nest.CatDatafeedsRecord,Nest", "Nest.CatDatafeedsRecord");
            feature.AddKnownType("Nest.ICatDatafeedsRequest,Nest", "Nest.ICatDatafeedsRequest");
            feature.AddKnownType("Nest.CatDatafeedsRequest,Nest", "Nest.CatDatafeedsRequest");
            feature.AddKnownType("Nest.CatDatafeedsDescriptor,Nest", "Nest.CatDatafeedsDescriptor");
            feature.AddKnownType("Nest.CatDataFrameAnalyticsRecord,Nest", "Nest.CatDataFrameAnalyticsRecord");
            feature.AddKnownType("Nest.ICatDataFrameAnalyticsRequest,Nest", "Nest.ICatDataFrameAnalyticsRequest");
            feature.AddKnownType("Nest.CatDataFrameAnalyticsRequest,Nest", "Nest.CatDataFrameAnalyticsRequest");
            feature.AddKnownType("Nest.CatDataFrameAnalyticsDescriptor,Nest", "Nest.CatDataFrameAnalyticsDescriptor");
            feature.AddKnownType("Nest.CatFielddataRecord,Nest", "Nest.CatFielddataRecord");
            feature.AddKnownType("Nest.CatFielddataRecordFormatter,Nest", "Nest.CatFielddataRecordFormatter");
            feature.AddKnownType("Nest.ICatFielddataRequest,Nest", "Nest.ICatFielddataRequest");
            feature.AddKnownType("Nest.CatFielddataRequest,Nest", "Nest.CatFielddataRequest");
            feature.AddKnownType("Nest.CatFielddataDescriptor,Nest", "Nest.CatFielddataDescriptor");
            feature.AddKnownType("Nest.CatHealthRecord,Nest", "Nest.CatHealthRecord");
            feature.AddKnownType("Nest.ICatHealthRequest,Nest", "Nest.ICatHealthRequest");
            feature.AddKnownType("Nest.CatHealthRequest,Nest", "Nest.CatHealthRequest");
            feature.AddKnownType("Nest.CatHealthDescriptor,Nest", "Nest.CatHealthDescriptor");
            feature.AddKnownType("Nest.CatHelpResponseBuilder,Nest", "Nest.CatHelpResponseBuilder");
            feature.AddKnownType("Nest.CatHelpRecord,Nest", "Nest.CatHelpRecord");
            feature.AddKnownType("Nest.ICatHelpRequest,Nest", "Nest.ICatHelpRequest");
            feature.AddKnownType("Nest.CatHelpRequest,Nest", "Nest.CatHelpRequest");
            feature.AddKnownType("Nest.CatHelpDescriptor,Nest", "Nest.CatHelpDescriptor");
            feature.AddKnownType("Nest.CatIndicesRecord,Nest", "Nest.CatIndicesRecord");
            feature.AddKnownType("Nest.ICatIndicesRequest,Nest", "Nest.ICatIndicesRequest");
            feature.AddKnownType("Nest.CatIndicesRequest,Nest", "Nest.CatIndicesRequest");
            feature.AddKnownType("Nest.CatIndicesDescriptor,Nest", "Nest.CatIndicesDescriptor");
            feature.AddKnownType("Nest.CatJobsRecord,Nest", "Nest.CatJobsRecord");
            feature.AddKnownType("Nest.ICatJobsRequest,Nest", "Nest.ICatJobsRequest");
            feature.AddKnownType("Nest.CatJobsRequest,Nest", "Nest.CatJobsRequest");
            feature.AddKnownType("Nest.CatJobsDescriptor,Nest", "Nest.CatJobsDescriptor");
            feature.AddKnownType("Nest.ModelCategorizationStatus,Nest", "Nest.ModelCategorizationStatus");
            feature.AddKnownType("Nest.ModelMemoryStatus,Nest", "Nest.ModelMemoryStatus");
            feature.AddKnownType("Nest.CatMasterRecord,Nest", "Nest.CatMasterRecord");
            feature.AddKnownType("Nest.ICatMasterRequest,Nest", "Nest.ICatMasterRequest");
            feature.AddKnownType("Nest.CatMasterRequest,Nest", "Nest.CatMasterRequest");
            feature.AddKnownType("Nest.CatMasterDescriptor,Nest", "Nest.CatMasterDescriptor");
            feature.AddKnownType("Nest.CatNodeAttributesRecord,Nest", "Nest.CatNodeAttributesRecord");
            feature.AddKnownType("Nest.ICatNodeAttributesRequest,Nest", "Nest.ICatNodeAttributesRequest");
            feature.AddKnownType("Nest.CatNodeAttributesRequest,Nest", "Nest.CatNodeAttributesRequest");
            feature.AddKnownType("Nest.CatNodeAttributesDescriptor,Nest", "Nest.CatNodeAttributesDescriptor");
            feature.AddKnownType("Nest.CatNodesRecord,Nest", "Nest.CatNodesRecord");
            feature.AddKnownType("Nest.ICatNodesRequest,Nest", "Nest.ICatNodesRequest");
            feature.AddKnownType("Nest.CatNodesRequest,Nest", "Nest.CatNodesRequest");
            feature.AddKnownType("Nest.CatNodesDescriptor,Nest", "Nest.CatNodesDescriptor");
            feature.AddKnownType("Nest.CatPendingTasksRecord,Nest", "Nest.CatPendingTasksRecord");
            feature.AddKnownType("Nest.ICatPendingTasksRequest,Nest", "Nest.ICatPendingTasksRequest");
            feature.AddKnownType("Nest.CatPendingTasksRequest,Nest", "Nest.CatPendingTasksRequest");
            feature.AddKnownType("Nest.CatPendingTasksDescriptor,Nest", "Nest.CatPendingTasksDescriptor");
            feature.AddKnownType("Nest.CatPluginsRecord,Nest", "Nest.CatPluginsRecord");
            feature.AddKnownType("Nest.ICatPluginsRequest,Nest", "Nest.ICatPluginsRequest");
            feature.AddKnownType("Nest.CatPluginsRequest,Nest", "Nest.CatPluginsRequest");
            feature.AddKnownType("Nest.CatPluginsDescriptor,Nest", "Nest.CatPluginsDescriptor");
            feature.AddKnownType("Nest.CatRecoveryRecord,Nest", "Nest.CatRecoveryRecord");
            feature.AddKnownType("Nest.ICatRecoveryRequest,Nest", "Nest.ICatRecoveryRequest");
            feature.AddKnownType("Nest.CatRecoveryRequest,Nest", "Nest.CatRecoveryRequest");
            feature.AddKnownType("Nest.CatRecoveryDescriptor,Nest", "Nest.CatRecoveryDescriptor");
            feature.AddKnownType("Nest.CatRepositoriesRecord,Nest", "Nest.CatRepositoriesRecord");
            feature.AddKnownType("Nest.ICatRepositoriesRequest,Nest", "Nest.ICatRepositoriesRequest");
            feature.AddKnownType("Nest.CatRepositoriesRequest,Nest", "Nest.CatRepositoriesRequest");
            feature.AddKnownType("Nest.CatRepositoriesDescriptor,Nest", "Nest.CatRepositoriesDescriptor");
            feature.AddKnownType("Nest.CatResponse`1,Nest", "Nest.CatResponse`1'1");
            feature.AddKnownType("Nest.CatResponseBuilder`1,Nest", "Nest.CatResponseBuilder`1'1");
            feature.AddKnownType("Nest.CatSegmentsRecord,Nest", "Nest.CatSegmentsRecord");
            feature.AddKnownType("Nest.ICatSegmentsRequest,Nest", "Nest.ICatSegmentsRequest");
            feature.AddKnownType("Nest.CatSegmentsRequest,Nest", "Nest.CatSegmentsRequest");
            feature.AddKnownType("Nest.CatSegmentsDescriptor,Nest", "Nest.CatSegmentsDescriptor");
            feature.AddKnownType("Nest.CatShardsRecord,Nest", "Nest.CatShardsRecord");
            feature.AddKnownType("Nest.ICatShardsRequest,Nest", "Nest.ICatShardsRequest");
            feature.AddKnownType("Nest.CatShardsRequest,Nest", "Nest.CatShardsRequest");
            feature.AddKnownType("Nest.CatShardsDescriptor,Nest", "Nest.CatShardsDescriptor");
            feature.AddKnownType("Nest.CatSnapshotsRecord,Nest", "Nest.CatSnapshotsRecord");
            feature.AddKnownType("Nest.ICatSnapshotsRequest,Nest", "Nest.ICatSnapshotsRequest");
            feature.AddKnownType("Nest.CatSnapshotsRequest,Nest", "Nest.CatSnapshotsRequest");
            feature.AddKnownType("Nest.CatSnapshotsDescriptor,Nest", "Nest.CatSnapshotsDescriptor");
            feature.AddKnownType("Nest.CatTasksRecord,Nest", "Nest.CatTasksRecord");
            feature.AddKnownType("Nest.ICatTasksRequest,Nest", "Nest.ICatTasksRequest");
            feature.AddKnownType("Nest.CatTasksRequest,Nest", "Nest.CatTasksRequest");
            feature.AddKnownType("Nest.CatTasksDescriptor,Nest", "Nest.CatTasksDescriptor");
            feature.AddKnownType("Nest.CatTemplatesRecord,Nest", "Nest.CatTemplatesRecord");
            feature.AddKnownType("Nest.ICatTemplatesRequest,Nest", "Nest.ICatTemplatesRequest");
            feature.AddKnownType("Nest.CatTemplatesRequest,Nest", "Nest.CatTemplatesRequest");
            feature.AddKnownType("Nest.CatTemplatesDescriptor,Nest", "Nest.CatTemplatesDescriptor");
            feature.AddKnownType("Nest.CatThreadPoolRecord,Nest", "Nest.CatThreadPoolRecord");
            feature.AddKnownType("Nest.ICatThreadPoolRequest,Nest", "Nest.ICatThreadPoolRequest");
            feature.AddKnownType("Nest.CatThreadPoolRequest,Nest", "Nest.CatThreadPoolRequest");
            feature.AddKnownType("Nest.CatThreadPoolDescriptor,Nest", "Nest.CatThreadPoolDescriptor");
            feature.AddKnownType("Nest.CatTrainedModelsRecord,Nest", "Nest.CatTrainedModelsRecord");
            feature.AddKnownType("Nest.ICatTrainedModelsRequest,Nest", "Nest.ICatTrainedModelsRequest");
            feature.AddKnownType("Nest.CatTrainedModelsRequest,Nest", "Nest.CatTrainedModelsRequest");
            feature.AddKnownType("Nest.CatTrainedModelsDescriptor,Nest", "Nest.CatTrainedModelsDescriptor");
            feature.AddKnownType("Nest.CatTransformsRecord,Nest", "Nest.CatTransformsRecord");
            feature.AddKnownType("Nest.ICatTransformsRequest,Nest", "Nest.ICatTransformsRequest");
            feature.AddKnownType("Nest.CatTransformsRequest,Nest", "Nest.CatTransformsRequest");
            feature.AddKnownType("Nest.CatTransformsDescriptor,Nest", "Nest.CatTransformsDescriptor");
            feature.AddKnownType("Nest.TransformState,Nest", "Nest.TransformState");
            feature.AddKnownType("Nest.TransformType,Nest", "Nest.TransformType");
            feature.AddKnownType("Nest.ICatRecord,Nest", "Nest.ICatRecord");
            feature.AddKnownType("Nest.IClusterAllocationExplainRequest,Nest", "Nest.IClusterAllocationExplainRequest");
            feature.AddKnownType("Nest.ClusterAllocationExplainRequest,Nest", "Nest.ClusterAllocationExplainRequest");
            feature.AddKnownType("Nest.ClusterAllocationExplainDescriptor,Nest", "Nest.ClusterAllocationExplainDescriptor");
            feature.AddKnownType("Nest.ClusterAllocationExplainResponse,Nest", "Nest.ClusterAllocationExplainResponse");
            feature.AddKnownType("Nest.CurrentNode,Nest", "Nest.CurrentNode");
            feature.AddKnownType("Nest.AllocationExplainDecision,Nest", "Nest.AllocationExplainDecision");
            feature.AddKnownType("Nest.NodeAllocationExplanation,Nest", "Nest.NodeAllocationExplanation");
            feature.AddKnownType("Nest.Decision,Nest", "Nest.Decision");
            feature.AddKnownType("Nest.StoreCopy,Nest", "Nest.StoreCopy");
            feature.AddKnownType("Nest.AllocationStore,Nest", "Nest.AllocationStore");
            feature.AddKnownType("Nest.AllocationDecision,Nest", "Nest.AllocationDecision");
            feature.AddKnownType("Nest.UnassignedInformation,Nest", "Nest.UnassignedInformation");
            feature.AddKnownType("Nest.ShardAllocationExplanation,Nest", "Nest.ShardAllocationExplanation");
            feature.AddKnownType("Nest.UnassignedInformationReason,Nest", "Nest.UnassignedInformationReason");
            feature.AddKnownType("Nest.ClusterStatus,Nest", "Nest.ClusterStatus");
            feature.AddKnownType("Nest.IClusterHealthRequest,Nest", "Nest.IClusterHealthRequest");
            feature.AddKnownType("Nest.ClusterHealthRequest,Nest", "Nest.ClusterHealthRequest");
            feature.AddKnownType("Nest.ClusterHealthDescriptor,Nest", "Nest.ClusterHealthDescriptor");
            feature.AddKnownType("Nest.ClusterHealthResponse,Nest", "Nest.ClusterHealthResponse");
            feature.AddKnownType("Nest.IndexHealthStats,Nest", "Nest.IndexHealthStats");
            feature.AddKnownType("Nest.ShardHealthStats,Nest", "Nest.ShardHealthStats");
            feature.AddKnownType("Nest.IClusterPendingTasksRequest,Nest", "Nest.IClusterPendingTasksRequest");
            feature.AddKnownType("Nest.ClusterPendingTasksRequest,Nest", "Nest.ClusterPendingTasksRequest");
            feature.AddKnownType("Nest.ClusterPendingTasksDescriptor,Nest", "Nest.ClusterPendingTasksDescriptor");
            feature.AddKnownType("Nest.ClusterPendingTasksResponse,Nest", "Nest.ClusterPendingTasksResponse");
            feature.AddKnownType("Nest.PendingTask,Nest", "Nest.PendingTask");
            feature.AddKnownType("Nest.ClusterRerouteDecision,Nest", "Nest.ClusterRerouteDecision");
            feature.AddKnownType("Nest.ClusterRerouteExplanation,Nest", "Nest.ClusterRerouteExplanation");
            feature.AddKnownType("Nest.ClusterRerouteParameters,Nest", "Nest.ClusterRerouteParameters");
            feature.AddKnownType("Nest.IClusterRerouteRequest,Nest", "Nest.IClusterRerouteRequest");
            feature.AddKnownType("Nest.ClusterRerouteRequest,Nest", "Nest.ClusterRerouteRequest");
            feature.AddKnownType("Nest.ClusterRerouteDescriptor,Nest", "Nest.ClusterRerouteDescriptor");
            feature.AddKnownType("Nest.ClusterRerouteResponse,Nest", "Nest.ClusterRerouteResponse");
            feature.AddKnownType("Nest.IAllocateClusterRerouteCommand,Nest", "Nest.IAllocateClusterRerouteCommand");
            feature.AddKnownType("Nest.IAllocateReplicaClusterRerouteCommand,Nest", "Nest.IAllocateReplicaClusterRerouteCommand");
            feature.AddKnownType("Nest.IAllocateEmptyPrimaryRerouteCommand,Nest", "Nest.IAllocateEmptyPrimaryRerouteCommand");
            feature.AddKnownType("Nest.IAllocateStalePrimaryRerouteCommand,Nest", "Nest.IAllocateStalePrimaryRerouteCommand");
            feature.AddKnownType("Nest.AllocateClusterRerouteCommandBase,Nest", "Nest.AllocateClusterRerouteCommandBase");
            feature.AddKnownType("Nest.AllocateReplicaClusterRerouteCommand,Nest", "Nest.AllocateReplicaClusterRerouteCommand");
            feature.AddKnownType("Nest.AllocateEmptyPrimaryRerouteCommand,Nest", "Nest.AllocateEmptyPrimaryRerouteCommand");
            feature.AddKnownType("Nest.AllocateStalePrimaryRerouteCommand,Nest", "Nest.AllocateStalePrimaryRerouteCommand");
            feature.AddKnownType("Nest.AllocateClusterRerouteCommandDescriptorBase`2,Nest", "Nest.AllocateClusterRerouteCommandDescriptorBase`2'2");
            feature.AddKnownType("Nest.AllocateReplicaClusterRerouteCommandDescriptor,Nest", "Nest.AllocateReplicaClusterRerouteCommandDescriptor");
            feature.AddKnownType("Nest.AllocateEmptyPrimaryRerouteCommandDescriptor,Nest", "Nest.AllocateEmptyPrimaryRerouteCommandDescriptor");
            feature.AddKnownType("Nest.AllocateStalePrimaryRerouteCommandDescriptor,Nest", "Nest.AllocateStalePrimaryRerouteCommandDescriptor");
            feature.AddKnownType("Nest.ICancelClusterRerouteCommand,Nest", "Nest.ICancelClusterRerouteCommand");
            feature.AddKnownType("Nest.CancelClusterRerouteCommand,Nest", "Nest.CancelClusterRerouteCommand");
            feature.AddKnownType("Nest.CancelClusterRerouteCommandDescriptor,Nest", "Nest.CancelClusterRerouteCommandDescriptor");
            feature.AddKnownType("Nest.ClusterRerouteCommandFormatter,Nest", "Nest.ClusterRerouteCommandFormatter");
            feature.AddKnownType("Nest.IClusterRerouteCommand,Nest", "Nest.IClusterRerouteCommand");
            feature.AddKnownType("Nest.IMoveClusterRerouteCommand,Nest", "Nest.IMoveClusterRerouteCommand");
            feature.AddKnownType("Nest.MoveClusterRerouteCommand,Nest", "Nest.MoveClusterRerouteCommand");
            feature.AddKnownType("Nest.MoveClusterRerouteCommandDescriptor,Nest", "Nest.MoveClusterRerouteCommandDescriptor");
            feature.AddKnownType("Nest.IClusterGetSettingsRequest,Nest", "Nest.IClusterGetSettingsRequest");
            feature.AddKnownType("Nest.ClusterGetSettingsRequest,Nest", "Nest.ClusterGetSettingsRequest");
            feature.AddKnownType("Nest.ClusterGetSettingsDescriptor,Nest", "Nest.ClusterGetSettingsDescriptor");
            feature.AddKnownType("Nest.ClusterGetSettingsResponse,Nest", "Nest.ClusterGetSettingsResponse");
            feature.AddKnownType("Nest.IClusterPutSettingsRequest,Nest", "Nest.IClusterPutSettingsRequest");
            feature.AddKnownType("Nest.ClusterPutSettingsRequest,Nest", "Nest.ClusterPutSettingsRequest");
            feature.AddKnownType("Nest.ClusterPutSettingsDescriptor,Nest", "Nest.ClusterPutSettingsDescriptor");
            feature.AddKnownType("Nest.ClusterPutSettingsResponse,Nest", "Nest.ClusterPutSettingsResponse");
            feature.AddKnownType("Nest.RemoteClusterConfiguration,Nest", "Nest.RemoteClusterConfiguration");
            feature.AddKnownType("Nest.IClusterStateRequest,Nest", "Nest.IClusterStateRequest");
            feature.AddKnownType("Nest.ClusterStateRequest,Nest", "Nest.ClusterStateRequest");
            feature.AddKnownType("Nest.ClusterStateDescriptor,Nest", "Nest.ClusterStateDescriptor");
            feature.AddKnownType("Nest.ClusterStateResponse,Nest", "Nest.ClusterStateResponse");
            feature.AddKnownType("Nest.ClusterIndicesStats,Nest", "Nest.ClusterIndicesStats");
            feature.AddKnownType("Nest.ClusterIndicesShardsStats,Nest", "Nest.ClusterIndicesShardsStats");
            feature.AddKnownType("Nest.ClusterIndicesShardsIndexStats,Nest", "Nest.ClusterIndicesShardsIndexStats");
            feature.AddKnownType("Nest.ClusterShardMetrics,Nest", "Nest.ClusterShardMetrics");
            feature.AddKnownType("Nest.ClusterNodesStats,Nest", "Nest.ClusterNodesStats");
            feature.AddKnownType("Nest.NodePackagingType,Nest", "Nest.NodePackagingType");
            feature.AddKnownType("Nest.ClusterNetworkTypes,Nest", "Nest.ClusterNetworkTypes");
            feature.AddKnownType("Nest.ClusterFileSystem,Nest", "Nest.ClusterFileSystem");
            feature.AddKnownType("Nest.ClusterJvm,Nest", "Nest.ClusterJvm");
            feature.AddKnownType("Nest.ClusterJvmVersion,Nest", "Nest.ClusterJvmVersion");
            feature.AddKnownType("Nest.ClusterJvmMemory,Nest", "Nest.ClusterJvmMemory");
            feature.AddKnownType("Nest.ClusterProcess,Nest", "Nest.ClusterProcess");
            feature.AddKnownType("Nest.ClusterProcessCpu,Nest", "Nest.ClusterProcessCpu");
            feature.AddKnownType("Nest.ClusterProcessOpenFileDescriptors,Nest", "Nest.ClusterProcessOpenFileDescriptors");
            feature.AddKnownType("Nest.ClusterOperatingSystemStats,Nest", "Nest.ClusterOperatingSystemStats");
            feature.AddKnownType("Nest.OperatingSystemMemoryInfo,Nest", "Nest.OperatingSystemMemoryInfo");
            feature.AddKnownType("Nest.ClusterOperatingSystemName,Nest", "Nest.ClusterOperatingSystemName");
            feature.AddKnownType("Nest.ClusterNodeCount,Nest", "Nest.ClusterNodeCount");
            feature.AddKnownType("Nest.ClusterIngestStats,Nest", "Nest.ClusterIngestStats");
            feature.AddKnownType("Nest.ClusterProcessorStats,Nest", "Nest.ClusterProcessorStats");
            feature.AddKnownType("Nest.ArchitectureStats,Nest", "Nest.ArchitectureStats");
            feature.AddKnownType("Nest.IClusterStatsRequest,Nest", "Nest.IClusterStatsRequest");
            feature.AddKnownType("Nest.ClusterStatsRequest,Nest", "Nest.ClusterStatsRequest");
            feature.AddKnownType("Nest.ClusterStatsDescriptor,Nest", "Nest.ClusterStatsDescriptor");
            feature.AddKnownType("Nest.ClusterStatsResponse,Nest", "Nest.ClusterStatsResponse");
            feature.AddKnownType("Nest.IComponentTemplateExistsRequest,Nest", "Nest.IComponentTemplateExistsRequest");
            feature.AddKnownType("Nest.ComponentTemplateExistsRequest,Nest", "Nest.ComponentTemplateExistsRequest");
            feature.AddKnownType("Nest.ComponentTemplateExistsDescriptor,Nest", "Nest.ComponentTemplateExistsDescriptor");
            feature.AddKnownType("Nest.ComponentTemplateExistsResponse,Nest", "Nest.ComponentTemplateExistsResponse");
            feature.AddKnownType("Nest.IDeleteComponentTemplateRequest,Nest", "Nest.IDeleteComponentTemplateRequest");
            feature.AddKnownType("Nest.DeleteComponentTemplateRequest,Nest", "Nest.DeleteComponentTemplateRequest");
            feature.AddKnownType("Nest.DeleteComponentTemplateDescriptor,Nest", "Nest.DeleteComponentTemplateDescriptor");
            feature.AddKnownType("Nest.DeleteComponentTemplateResponse,Nest", "Nest.DeleteComponentTemplateResponse");
            feature.AddKnownType("Nest.IGetComponentTemplateRequest,Nest", "Nest.IGetComponentTemplateRequest");
            feature.AddKnownType("Nest.GetComponentTemplateRequest,Nest", "Nest.GetComponentTemplateRequest");
            feature.AddKnownType("Nest.GetComponentTemplateDescriptor,Nest", "Nest.GetComponentTemplateDescriptor");
            feature.AddKnownType("Nest.GetComponentTemplateResponse,Nest", "Nest.GetComponentTemplateResponse");
            feature.AddKnownType("Nest.IPutComponentTemplateRequest,Nest", "Nest.IPutComponentTemplateRequest");
            feature.AddKnownType("Nest.PutComponentTemplateRequest,Nest", "Nest.PutComponentTemplateRequest");
            feature.AddKnownType("Nest.PutComponentTemplateDescriptor,Nest", "Nest.PutComponentTemplateDescriptor");
            feature.AddKnownType("Nest.PutComponentTemplateResponse,Nest", "Nest.PutComponentTemplateResponse");
            feature.AddKnownType("Nest.NamedComponentTemplate,Nest", "Nest.NamedComponentTemplate");
            feature.AddKnownType("Nest.ComponentTemplate,Nest", "Nest.ComponentTemplate");
            feature.AddKnownType("Nest.ITemplate,Nest", "Nest.ITemplate");
            feature.AddKnownType("Nest.Template,Nest", "Nest.Template");
            feature.AddKnownType("Nest.TemplateDescriptor,Nest", "Nest.TemplateDescriptor");
            feature.AddKnownType("Nest.NodeHotThreadsResponseBuilder,Nest", "Nest.NodeHotThreadsResponseBuilder");
            feature.AddKnownType("Nest.INodesHotThreadsRequest,Nest", "Nest.INodesHotThreadsRequest");
            feature.AddKnownType("Nest.NodesHotThreadsRequest,Nest", "Nest.NodesHotThreadsRequest");
            feature.AddKnownType("Nest.NodesHotThreadsDescriptor,Nest", "Nest.NodesHotThreadsDescriptor");
            feature.AddKnownType("Nest.NodesHotThreadsResponse,Nest", "Nest.NodesHotThreadsResponse");
            feature.AddKnownType("Nest.HotThreadInformation,Nest", "Nest.HotThreadInformation");
            feature.AddKnownType("Nest.NodeInfo,Nest", "Nest.NodeInfo");
            feature.AddKnownType("Nest.NodeOperatingSystemInfo,Nest", "Nest.NodeOperatingSystemInfo");
            feature.AddKnownType("Nest.ClusterOperatingSystemPrettyNane,Nest", "Nest.ClusterOperatingSystemPrettyNane");
            feature.AddKnownType("Nest.NodeInfoOSCPU,Nest", "Nest.NodeInfoOSCPU");
            feature.AddKnownType("Nest.NodeInfoMemory,Nest", "Nest.NodeInfoMemory");
            feature.AddKnownType("Nest.NodeProcessInfo,Nest", "Nest.NodeProcessInfo");
            feature.AddKnownType("Nest.NodeJvmInfo,Nest", "Nest.NodeJvmInfo");
            feature.AddKnownType("Nest.NodeInfoJvmMemory,Nest", "Nest.NodeInfoJvmMemory");
            feature.AddKnownType("Nest.NodeThreadPoolInfo,Nest", "Nest.NodeThreadPoolInfo");
            feature.AddKnownType("Nest.NodeInfoNetwork,Nest", "Nest.NodeInfoNetwork");
            feature.AddKnownType("Nest.NodeInfoNetworkInterface,Nest", "Nest.NodeInfoNetworkInterface");
            feature.AddKnownType("Nest.NodeInfoTransport,Nest", "Nest.NodeInfoTransport");
            feature.AddKnownType("Nest.NodeInfoHttp,Nest", "Nest.NodeInfoHttp");
            feature.AddKnownType("Nest.NodeRole,Nest", "Nest.NodeRole");
            feature.AddKnownType("Nest.INodesInfoRequest,Nest", "Nest.INodesInfoRequest");
            feature.AddKnownType("Nest.NodesInfoRequest,Nest", "Nest.NodesInfoRequest");
            feature.AddKnownType("Nest.NodesInfoDescriptor,Nest", "Nest.NodesInfoDescriptor");
            feature.AddKnownType("Nest.NodesInfoResponse,Nest", "Nest.NodesInfoResponse");
            feature.AddKnownType("Nest.NodesResponseBase,Nest", "Nest.NodesResponseBase");
            feature.AddKnownType("Nest.NodeStatistics,Nest", "Nest.NodeStatistics");
            feature.AddKnownType("Nest.AdaptiveSelectionStats,Nest", "Nest.AdaptiveSelectionStats");
            feature.AddKnownType("Nest.INodesStatsRequest,Nest", "Nest.INodesStatsRequest");
            feature.AddKnownType("Nest.NodesStatsRequest,Nest", "Nest.NodesStatsRequest");
            feature.AddKnownType("Nest.NodesStatsDescriptor,Nest", "Nest.NodesStatsDescriptor");
            feature.AddKnownType("Nest.NodeStats,Nest", "Nest.NodeStats");
            feature.AddKnownType("Nest.ScriptCacheStats,Nest", "Nest.ScriptCacheStats");
            feature.AddKnownType("Nest.ContextScriptStats,Nest", "Nest.ContextScriptStats");
            feature.AddKnownType("Nest.ScriptStats,Nest", "Nest.ScriptStats");
            feature.AddKnownType("Nest.BreakerStats,Nest", "Nest.BreakerStats");
            feature.AddKnownType("Nest.OperatingSystemStats,Nest", "Nest.OperatingSystemStats");
            feature.AddKnownType("Nest.OperatingSystemStats+CPUStats,Nest", "Nest.Nest.OperatingSystemStats.CPUStats");
            feature.AddKnownType("Nest.OperatingSystemStats+CPUStats+LoadAverageStats,Nest", "Nest.Nest.Nest.OperatingSystemStats.CPUStats.LoadAverageStats");
            feature.AddKnownType("Nest.OperatingSystemStats+MemoryStats,Nest", "Nest.Nest.OperatingSystemStats.MemoryStats");
            feature.AddKnownType("Nest.OperatingSystemStats+ExtendedMemoryStats,Nest", "Nest.Nest.OperatingSystemStats.ExtendedMemoryStats");
            feature.AddKnownType("Nest.ProcessStats,Nest", "Nest.ProcessStats");
            feature.AddKnownType("Nest.ProcessStats+CPUStats,Nest", "Nest.Nest.ProcessStats.CPUStats");
            feature.AddKnownType("Nest.ProcessStats+MemoryStats,Nest", "Nest.Nest.ProcessStats.MemoryStats");
            feature.AddKnownType("Nest.NodeJvmStats,Nest", "Nest.NodeJvmStats");
            feature.AddKnownType("Nest.NodeJvmStats+JvmClassesStats,Nest", "Nest.Nest.NodeJvmStats.JvmClassesStats");
            feature.AddKnownType("Nest.NodeJvmStats+MemoryStats,Nest", "Nest.Nest.NodeJvmStats.MemoryStats");
            feature.AddKnownType("Nest.NodeJvmStats+MemoryStats+JvmPool,Nest", "Nest.Nest.Nest.NodeJvmStats.MemoryStats.JvmPool");
            feature.AddKnownType("Nest.NodeJvmStats+ThreadStats,Nest", "Nest.Nest.NodeJvmStats.ThreadStats");
            feature.AddKnownType("Nest.NodeJvmStats+GarbageCollectionStats,Nest", "Nest.Nest.NodeJvmStats.GarbageCollectionStats");
            feature.AddKnownType("Nest.NodeJvmStats+GarbageCollectionGenerationStats,Nest", "Nest.Nest.NodeJvmStats.GarbageCollectionGenerationStats");
            feature.AddKnownType("Nest.NodeJvmStats+NodeBufferPool,Nest", "Nest.Nest.NodeJvmStats.NodeBufferPool");
            feature.AddKnownType("Nest.ThreadCountStats,Nest", "Nest.ThreadCountStats");
            feature.AddKnownType("Nest.FileSystemStats,Nest", "Nest.FileSystemStats");
            feature.AddKnownType("Nest.FileSystemStats+IoStatsContainer,Nest", "Nest.Nest.FileSystemStats.IoStatsContainer");
            feature.AddKnownType("Nest.FileSystemStats+IoStatistics,Nest", "Nest.Nest.FileSystemStats.IoStatistics");
            feature.AddKnownType("Nest.FileSystemStats+DeviceIoStats,Nest", "Nest.Nest.FileSystemStats.DeviceIoStats");
            feature.AddKnownType("Nest.FileSystemStats+TotalFileSystemStats,Nest", "Nest.Nest.FileSystemStats.TotalFileSystemStats");
            feature.AddKnownType("Nest.FileSystemStats+DataPathStats,Nest", "Nest.Nest.FileSystemStats.DataPathStats");
            feature.AddKnownType("Nest.TransportStats,Nest", "Nest.TransportStats");
            feature.AddKnownType("Nest.HttpStats,Nest", "Nest.HttpStats");
            feature.AddKnownType("Nest.IndexingPressureStats,Nest", "Nest.IndexingPressureStats");
            feature.AddKnownType("Nest.IndexingPressureMemoryStats,Nest", "Nest.IndexingPressureMemoryStats");
            feature.AddKnownType("Nest.IndexingLoad,Nest", "Nest.IndexingLoad");
            feature.AddKnownType("Nest.TotalIndexingLoad,Nest", "Nest.TotalIndexingLoad");
            feature.AddKnownType("Nest.NodesStatsResponse,Nest", "Nest.NodesStatsResponse");
            feature.AddKnownType("Nest.IngestStats,Nest", "Nest.IngestStats");
            feature.AddKnownType("Nest.KeyedProcessorStats,Nest", "Nest.KeyedProcessorStats");
            feature.AddKnownType("Nest.KeyedProcessorStatsFormatter,Nest", "Nest.KeyedProcessorStatsFormatter");
            feature.AddKnownType("Nest.ProcessorStats,Nest", "Nest.ProcessorStats");
            feature.AddKnownType("Nest.NodeIngestStats,Nest", "Nest.NodeIngestStats");
            feature.AddKnownType("Nest.INodesUsageRequest,Nest", "Nest.INodesUsageRequest");
            feature.AddKnownType("Nest.NodesUsageRequest,Nest", "Nest.NodesUsageRequest");
            feature.AddKnownType("Nest.NodesUsageDescriptor,Nest", "Nest.NodesUsageDescriptor");
            feature.AddKnownType("Nest.NodeUsageInformation,Nest", "Nest.NodeUsageInformation");
            feature.AddKnownType("Nest.NodesUsageResponse,Nest", "Nest.NodesUsageResponse");
            feature.AddKnownType("Nest.IPingRequest,Nest", "Nest.IPingRequest");
            feature.AddKnownType("Nest.PingRequest,Nest", "Nest.PingRequest");
            feature.AddKnownType("Nest.PingDescriptor,Nest", "Nest.PingDescriptor");
            feature.AddKnownType("Nest.PingResponse,Nest", "Nest.PingResponse");
            feature.AddKnownType("Nest.IReloadSecureSettingsRequest,Nest", "Nest.IReloadSecureSettingsRequest");
            feature.AddKnownType("Nest.ReloadSecureSettingsRequest,Nest", "Nest.ReloadSecureSettingsRequest");
            feature.AddKnownType("Nest.ReloadSecureSettingsDescriptor,Nest", "Nest.ReloadSecureSettingsDescriptor");
            feature.AddKnownType("Nest.ReloadSecureSettingsResponse,Nest", "Nest.ReloadSecureSettingsResponse");
            feature.AddKnownType("Nest.IRemoteInfoRequest,Nest", "Nest.IRemoteInfoRequest");
            feature.AddKnownType("Nest.RemoteInfoRequest,Nest", "Nest.RemoteInfoRequest");
            feature.AddKnownType("Nest.RemoteInfoDescriptor,Nest", "Nest.RemoteInfoDescriptor");
            feature.AddKnownType("Nest.RemoteInfoResponse,Nest", "Nest.RemoteInfoResponse");
            feature.AddKnownType("Nest.RemoteInfo,Nest", "Nest.RemoteInfo");
            feature.AddKnownType("Nest.IRootNodeInfoRequest,Nest", "Nest.IRootNodeInfoRequest");
            feature.AddKnownType("Nest.RootNodeInfoRequest,Nest", "Nest.RootNodeInfoRequest");
            feature.AddKnownType("Nest.RootNodeInfoDescriptor,Nest", "Nest.RootNodeInfoDescriptor");
            feature.AddKnownType("Nest.RootNodeInfoResponse,Nest", "Nest.RootNodeInfoResponse");
            feature.AddKnownType("Nest.ICancelTasksRequest,Nest", "Nest.ICancelTasksRequest");
            feature.AddKnownType("Nest.CancelTasksRequest,Nest", "Nest.CancelTasksRequest");
            feature.AddKnownType("Nest.CancelTasksDescriptor,Nest", "Nest.CancelTasksDescriptor");
            feature.AddKnownType("Nest.CancelTasksResponse,Nest", "Nest.CancelTasksResponse");
            feature.AddKnownType("Nest.IGetTaskRequest,Nest", "Nest.IGetTaskRequest");
            feature.AddKnownType("Nest.GetTaskRequest,Nest", "Nest.GetTaskRequest");
            feature.AddKnownType("Nest.GetTaskDescriptor,Nest", "Nest.GetTaskDescriptor");
            feature.AddKnownType("Nest.GetTaskResponse,Nest", "Nest.GetTaskResponse");
            feature.AddKnownType("Nest.TaskInfo,Nest", "Nest.TaskInfo");
            feature.AddKnownType("Nest.IListTasksRequest,Nest", "Nest.IListTasksRequest");
            feature.AddKnownType("Nest.ListTasksRequest,Nest", "Nest.ListTasksRequest");
            feature.AddKnownType("Nest.ListTasksDescriptor,Nest", "Nest.ListTasksDescriptor");
            feature.AddKnownType("Nest.ListTasksResponse,Nest", "Nest.ListTasksResponse");
            feature.AddKnownType("Nest.TaskExecutingNode,Nest", "Nest.TaskExecutingNode");
            feature.AddKnownType("Nest.TaskState,Nest", "Nest.TaskState");
            feature.AddKnownType("Nest.TaskStatus,Nest", "Nest.TaskStatus");
            feature.AddKnownType("Nest.TaskRetries,Nest", "Nest.TaskRetries");
            feature.AddKnownType("Nest.IDeleteVotingConfigExclusionsRequest,Nest", "Nest.IDeleteVotingConfigExclusionsRequest");
            feature.AddKnownType("Nest.DeleteVotingConfigExclusionsRequest,Nest", "Nest.DeleteVotingConfigExclusionsRequest");
            feature.AddKnownType("Nest.DeleteVotingConfigExclusionsDescriptor,Nest", "Nest.DeleteVotingConfigExclusionsDescriptor");
            feature.AddKnownType("Nest.DeleteVotingConfigExclusionsResponseBuilder,Nest", "Nest.DeleteVotingConfigExclusionsResponseBuilder");
            feature.AddKnownType("Nest.DeleteVotingConfigExclusionsResponse,Nest", "Nest.DeleteVotingConfigExclusionsResponse");
            feature.AddKnownType("Nest.IPostVotingConfigExclusionsRequest,Nest", "Nest.IPostVotingConfigExclusionsRequest");
            feature.AddKnownType("Nest.PostVotingConfigExclusionsRequest,Nest", "Nest.PostVotingConfigExclusionsRequest");
            feature.AddKnownType("Nest.PostVotingConfigExclusionsDescriptor,Nest", "Nest.PostVotingConfigExclusionsDescriptor");
            feature.AddKnownType("Nest.PostVotingConfigExclusionsResponseBuilder,Nest", "Nest.PostVotingConfigExclusionsResponseBuilder");
            feature.AddKnownType("Nest.PostVotingConfigExclusionsResponse,Nest", "Nest.PostVotingConfigExclusionsResponse");
            feature.AddKnownType("Nest.ClrPropertyMappingBase`1,Nest", "Nest.ClrPropertyMappingBase`1'1");
            feature.AddKnownType("Nest.IClrPropertyMapping`1,Nest", "Nest.IClrPropertyMapping`1'1");
            feature.AddKnownType("Nest.IgnoreClrPropertyMapping`1,Nest", "Nest.IgnoreClrPropertyMapping`1'1");
            feature.AddKnownType("Nest.RenameClrPropertyMapping`1,Nest", "Nest.RenameClrPropertyMapping`1'1");
            feature.AddKnownType("Nest.IClrTypeMapping,Nest", "Nest.IClrTypeMapping");
            feature.AddKnownType("Nest.IClrTypeMapping`1,Nest", "Nest.IClrTypeMapping`1'1");
            feature.AddKnownType("Nest.ClrTypeMapping,Nest", "Nest.ClrTypeMapping");
            feature.AddKnownType("Nest.ClrTypeMapping`1,Nest", "Nest.ClrTypeMapping`1'1");
            feature.AddKnownType("Nest.ClrTypeMappingDescriptor,Nest", "Nest.ClrTypeMappingDescriptor");
            feature.AddKnownType("Nest.ClrTypeMappingDescriptor`1,Nest", "Nest.ClrTypeMappingDescriptor`1'1");
            feature.AddKnownType("Nest.ConnectionSettings,Nest", "Nest.ConnectionSettings");
            feature.AddKnownType("Nest.ConnectionSettingsBase`1,Nest", "Nest.ConnectionSettingsBase`1'1");
            feature.AddKnownType("Nest.IConnectionSettingsValues,Nest", "Nest.IConnectionSettingsValues");
            feature.AddKnownType("Nest.MemberInfoResolver,Nest", "Nest.MemberInfoResolver");
            feature.AddKnownType("Nest.IIsADictionary,Nest", "Nest.IIsADictionary");
            feature.AddKnownType("Nest.IIsADictionary`2,Nest", "Nest.IIsADictionary`2'2");
            feature.AddKnownType("Nest.IsADictionaryBase`2,Nest", "Nest.IsADictionaryBase`2'2");
            feature.AddKnownType("Nest.IsADictionaryDescriptorBase`4,Nest", "Nest.IsADictionaryDescriptorBase`4'4");
            feature.AddKnownType("Nest.IIsAReadOnlyDictionary,Nest", "Nest.IIsAReadOnlyDictionary");
            feature.AddKnownType("Nest.IIsAReadOnlyDictionary`2,Nest", "Nest.IIsAReadOnlyDictionary`2'2");
            feature.AddKnownType("Nest.IsAReadOnlyDictionaryBase`2,Nest", "Nest.IsAReadOnlyDictionaryBase`2'2");
            feature.AddKnownType("Nest.IPerFieldAnalyzer,Nest", "Nest.IPerFieldAnalyzer");
            feature.AddKnownType("Nest.PerFieldAnalyzer,Nest", "Nest.PerFieldAnalyzer");
            feature.AddKnownType("Nest.PerFieldAnalyzer`1,Nest", "Nest.PerFieldAnalyzer`1'1");
            feature.AddKnownType("Nest.PerFieldAnalyzerDescriptor`1,Nest", "Nest.PerFieldAnalyzerDescriptor`1'1");
            feature.AddKnownType("Nest.ExpressionExtensions+SuffixExpressionVisitor,Nest", "Nest.SuffixExpressionVisitor");
            feature.AddKnownType("Nest.FieldValues,Nest", "Nest.FieldValues");
            feature.AddKnownType("Nest.FieldValuesFormatter,Nest", "Nest.FieldValuesFormatter");
            feature.AddKnownType("Nest.IDescriptor,Nest", "Nest.IDescriptor");
            feature.AddKnownType("Nest.DescriptorBase`2,Nest", "Nest.DescriptorBase`2'2");
            feature.AddKnownType("Nest.FluentDictionary`2,Nest", "Nest.FluentDictionary`2'2");
            feature.AddKnownType("Nest.IPromise`1,Nest", "Nest.IPromise`1'1");
            feature.AddKnownType("Nest.DescriptorPromiseBase`2,Nest", "Nest.DescriptorPromiseBase`2'2");
            feature.AddKnownType("Nest.ISelector,Nest", "Nest.ISelector");
            feature.AddKnownType("Nest.SelectorBase,Nest", "Nest.SelectorBase");
            feature.AddKnownType("Nest.MapsApiAttribute,Nest", "Nest.MapsApiAttribute");
            feature.AddKnownType("Nest.ResponseBuilderWithGeneric,Nest", "Nest.ResponseBuilderWithGeneric");
            feature.AddKnownType("Nest.IDocumentPath,Nest", "Nest.IDocumentPath");
            feature.AddKnownType("Nest.DocumentPath`1,Nest", "Nest.DocumentPath`1'1");
            feature.AddKnownType("Nest.Fields,Nest", "Nest.Fields");
            feature.AddKnownType("Nest.FieldsDescriptor`1,Nest", "Nest.FieldsDescriptor`1'1");
            feature.AddKnownType("Nest.FieldsFormatter,Nest", "Nest.FieldsFormatter");
            feature.AddKnownType("Nest.Field,Nest", "Nest.Field");
            feature.AddKnownType("Nest.FieldExpressionVisitor,Nest", "Nest.FieldExpressionVisitor");
            feature.AddKnownType("Nest.FieldFormatter,Nest", "Nest.FieldFormatter");
            feature.AddKnownType("Nest.FieldResolver,Nest", "Nest.FieldResolver");
            feature.AddKnownType("Nest.ToStringExpressionVisitor,Nest", "Nest.ToStringExpressionVisitor");
            feature.AddKnownType("Nest.Id,Nest", "Nest.Id");
            feature.AddKnownType("Nest.IdFormatter,Nest", "Nest.IdFormatter");
            feature.AddKnownType("Nest.IdStringFormatter,Nest", "Nest.IdStringFormatter");
            feature.AddKnownType("Nest.IdResolver,Nest", "Nest.IdResolver");
            feature.AddKnownType("Nest.Ids,Nest", "Nest.Ids");
            feature.AddKnownType("Nest.IndexName,Nest", "Nest.IndexName");
            feature.AddKnownType("Nest.IndexNameFormatter,Nest", "Nest.IndexNameFormatter");
            feature.AddKnownType("Nest.IndexNameResolver,Nest", "Nest.IndexNameResolver");
            feature.AddKnownType("Nest.IndexUuid,Nest", "Nest.IndexUuid");
            feature.AddKnownType("Nest.Indices,Nest", "Nest.Indices");
            feature.AddKnownType("Nest.Indices+AllIndicesMarker,Nest", "Nest.Nest.Indices.AllIndicesMarker");
            feature.AddKnownType("Nest.Indices+ManyIndices,Nest", "Nest.Nest.Indices.ManyIndices");
            feature.AddKnownType("Nest.IndicesFormatter,Nest", "Nest.IndicesFormatter");
            feature.AddKnownType("Nest.IndicesMultiSyntaxFormatter,Nest", "Nest.IndicesMultiSyntaxFormatter");
            feature.AddKnownType("Nest.Inferrer,Nest", "Nest.Inferrer");
            feature.AddKnownType("Nest.Routing,Nest", "Nest.Routing");
            feature.AddKnownType("Nest.RoutingFormatter,Nest", "Nest.RoutingFormatter");
            feature.AddKnownType("Nest.RoutingResolver,Nest", "Nest.RoutingResolver");
            feature.AddKnownType("Nest.LongId,Nest", "Nest.LongId");
            feature.AddKnownType("Nest.IndexMetrics,Nest", "Nest.IndexMetrics");
            feature.AddKnownType("Nest.Metrics,Nest", "Nest.Metrics");
            feature.AddKnownType("Nest.Name,Nest", "Nest.Name");
            feature.AddKnownType("Nest.Names,Nest", "Nest.Names");
            feature.AddKnownType("Nest.NodeIds,Nest", "Nest.NodeIds");
            feature.AddKnownType("Nest.PropertyName,Nest", "Nest.PropertyName");
            feature.AddKnownType("Nest.PropertyNameFormatter,Nest", "Nest.PropertyNameFormatter");
            feature.AddKnownType("Nest.RelationName,Nest", "Nest.RelationName");
            feature.AddKnownType("Nest.RelationNameFormatter,Nest", "Nest.RelationNameFormatter");
            feature.AddKnownType("Nest.RelationNameResolver,Nest", "Nest.RelationNameResolver");
            feature.AddKnownType("Nest.TaskId,Nest", "Nest.TaskId");
            feature.AddKnownType("Nest.TaskIdFormatter,Nest", "Nest.TaskIdFormatter");
            feature.AddKnownType("Nest.Timestamp,Nest", "Nest.Timestamp");
            feature.AddKnownType("Nest.ILazyDocument,Nest", "Nest.ILazyDocument");
            feature.AddKnownType("Nest.LazyDocument,Nest", "Nest.LazyDocument");
            feature.AddKnownType("Nest.LazyDocumentInterfaceFormatter,Nest", "Nest.LazyDocumentInterfaceFormatter");
            feature.AddKnownType("Nest.LazyDocumentFormatter,Nest", "Nest.LazyDocumentFormatter");
            feature.AddKnownType("Nest.CoordinatedRequestObserverBase`1,Nest", "Nest.CoordinatedRequestObserverBase`1'1");
            feature.AddKnownType("Nest.GetEnumerator`1,Nest", "Nest.GetEnumerator`1'1");
            feature.AddKnownType("Nest.GetEnumerator`1+AnonymousEnumerable`1,Nest", "Nest.AnonymousEnumerable`1'2");
            feature.AddKnownType("Nest.PartitionHelper`1,Nest", "Nest.PartitionHelper`1'1");
            feature.AddKnownType("Nest.ProducerConsumerBackPressure,Nest", "Nest.ProducerConsumerBackPressure");
            feature.AddKnownType("Nest.ApiUrls,Nest", "Nest.ApiUrls");
            feature.AddKnownType("Nest.IProxyRequest,Nest", "Nest.IProxyRequest");
            feature.AddKnownType("Nest.IDocumentRequest,Nest", "Nest.IDocumentRequest");
            feature.AddKnownType("Nest.IRequest,Nest", "Nest.IRequest");
            feature.AddKnownType("Nest.IRequest`1,Nest", "Nest.IRequest`1'1");
            feature.AddKnownType("Nest.RequestBase`1,Nest", "Nest.RequestBase`1'1");
            feature.AddKnownType("Nest.PlainRequestBase`1,Nest", "Nest.PlainRequestBase`1'1");
            feature.AddKnownType("Nest.RequestDescriptorBase`3,Nest", "Nest.RequestDescriptorBase`3'3");
            feature.AddKnownType("Nest.ResolvedRouteValues,Nest", "Nest.ResolvedRouteValues");
            feature.AddKnownType("Nest.RouteValues,Nest", "Nest.RouteValues");
            feature.AddKnownType("Nest.UrlLookup,Nest", "Nest.UrlLookup");
            feature.AddKnownType("Nest.AcknowledgedResponseBase,Nest", "Nest.AcknowledgedResponseBase");
            feature.AddKnownType("Nest.IDictionaryResponse`2,Nest", "Nest.IDictionaryResponse`2'2");
            feature.AddKnownType("Nest.DictionaryResponseBase`2,Nest", "Nest.DictionaryResponseBase`2'2");
            feature.AddKnownType("Nest.ResponseFormatterHelpers,Nest", "Nest.ResponseFormatterHelpers");
            feature.AddKnownType("Nest.DictionaryResponseFormatter`3,Nest", "Nest.DictionaryResponseFormatter`3'3");
            feature.AddKnownType("Nest.IDynamicResponse,Nest", "Nest.IDynamicResponse");
            feature.AddKnownType("Nest.DynamicResponseBase,Nest", "Nest.DynamicResponseBase");
            feature.AddKnownType("Nest.DynamicResponseFormatter`1,Nest", "Nest.DynamicResponseFormatter`1'1");
            feature.AddKnownType("Nest.ElasticsearchVersionInfo,Nest", "Nest.ElasticsearchVersionInfo");
            feature.AddKnownType("Nest.IndicesResponseBase,Nest", "Nest.IndicesResponseBase");
            feature.AddKnownType("Nest.ResolvableDictionaryProxy`2,Nest", "Nest.ResolvableDictionaryProxy`2'2");
            feature.AddKnownType("Nest.ResolvableDictionaryFormatterBase`3,Nest", "Nest.ResolvableDictionaryFormatterBase`3'3");
            feature.AddKnownType("Nest.ResolvableReadOnlyDictionaryFormatter`2,Nest", "Nest.ResolvableReadOnlyDictionaryFormatter`2'2");
            feature.AddKnownType("Nest.ResolvableDictionaryResponseFormatter`3,Nest", "Nest.ResolvableDictionaryResponseFormatter`3'3");
            feature.AddKnownType("Nest.IResponse,Nest", "Nest.IResponse");
            feature.AddKnownType("Nest.ResponseBase,Nest", "Nest.ResponseBase");
            feature.AddKnownType("Nest.ShardsOperationResponseBase,Nest", "Nest.ShardsOperationResponseBase");
            feature.AddKnownType("Nest.IgnoreAttribute,Nest", "Nest.IgnoreAttribute");
            feature.AddKnownType("Nest.MachineLearningDateTimeAttribute,Nest", "Nest.MachineLearningDateTimeAttribute");
            feature.AddKnownType("Nest.MachineLearningDateTimeOffsetFormatter,Nest", "Nest.MachineLearningDateTimeOffsetFormatter");
            feature.AddKnownType("Nest.MachineLearningDateTimeFormatter,Nest", "Nest.MachineLearningDateTimeFormatter");
            feature.AddKnownType("Nest.PropertyNameAttribute,Nest", "Nest.PropertyNameAttribute");
            feature.AddKnownType("Nest.StringTimeSpanAttribute,Nest", "Nest.StringTimeSpanAttribute");
            feature.AddKnownType("Nest.DefaultHighLevelSerializer,Nest", "Nest.DefaultHighLevelSerializer");
            feature.AddKnownType("Nest.CompositeFormatter`3,Nest", "Nest.CompositeFormatter`3'3");
            feature.AddKnownType("Nest.NullableDateTimeEpochMillisecondsFormatter,Nest", "Nest.NullableDateTimeEpochMillisecondsFormatter");
            feature.AddKnownType("Nest.DateTimeOffsetEpochMillisecondsFormatter,Nest", "Nest.DateTimeOffsetEpochMillisecondsFormatter");
            feature.AddKnownType("Nest.NullableDateTimeOffsetEpochMillisecondsFormatter,Nest", "Nest.NullableDateTimeOffsetEpochMillisecondsFormatter");
            feature.AddKnownType("Nest.IndicesBoostFormatter,Nest", "Nest.IndicesBoostFormatter");
            feature.AddKnownType("Nest.InterfaceGenericDictionaryResolver,Nest", "Nest.InterfaceGenericDictionaryResolver");
            feature.AddKnownType("Nest.InterfaceGenericReadOnlyDictionaryResolver,Nest", "Nest.InterfaceGenericReadOnlyDictionaryResolver");
            feature.AddKnownType("Nest.InterfaceDictionaryFormatterBase`3,Nest", "Nest.InterfaceDictionaryFormatterBase`3'3");
            feature.AddKnownType("Nest.InterfaceReadOnlyDictionaryFormatter`3,Nest", "Nest.InterfaceReadOnlyDictionaryFormatter`3'3");
            feature.AddKnownType("Nest.InterfaceDictionaryFormatter`3,Nest", "Nest.InterfaceDictionaryFormatter`3'3");
            feature.AddKnownType("Nest.IntStringFormatter,Nest", "Nest.IntStringFormatter");
            feature.AddKnownType("Nest.IsADictionaryFormatterResolver,Nest", "Nest.IsADictionaryFormatterResolver");
            feature.AddKnownType("Nest.IsADictionaryBaseFormatter`3,Nest", "Nest.IsADictionaryBaseFormatter`3'3");
            feature.AddKnownType("Nest.JsonNetCompatibleUriFormatter,Nest", "Nest.JsonNetCompatibleUriFormatter");
            feature.AddKnownType("Nest.IJsonFormatterResolverWithSettings,Nest", "Nest.IJsonFormatterResolverWithSettings");
            feature.AddKnownType("Nest.NestFormatterResolver,Nest", "Nest.NestFormatterResolver");
            feature.AddKnownType("Nest.NestFormatterResolver+InnerResolver,Nest", "Nest.InnerResolver");
            feature.AddKnownType("Nest.NullableDateTimeOffsetEpochSecondsFormatter,Nest", "Nest.NullableDateTimeOffsetEpochSecondsFormatter");
            feature.AddKnownType("Nest.NullableStringLongFormatter,Nest", "Nest.NullableStringLongFormatter");
            feature.AddKnownType("Nest.NullableStringBooleanFormatter,Nest", "Nest.NullableStringBooleanFormatter");
            feature.AddKnownType("Nest.StringLongFormatter,Nest", "Nest.StringLongFormatter");
            feature.AddKnownType("Nest.StringIntFormatter,Nest", "Nest.StringIntFormatter");
            feature.AddKnownType("Nest.NullableStringIntFormatter,Nest", "Nest.NullableStringIntFormatter");
            feature.AddKnownType("Nest.NullableStringDoubleFormatter,Nest", "Nest.NullableStringDoubleFormatter");
            feature.AddKnownType("Nest.StringDoubleFormatter,Nest", "Nest.StringDoubleFormatter");
            feature.AddKnownType("Nest.NullableTimeSpanTicksFormatter,Nest", "Nest.NullableTimeSpanTicksFormatter");
            feature.AddKnownType("Nest.ProxyRequestFormatterBase`2,Nest", "Nest.ProxyRequestFormatterBase`2'2");
            feature.AddKnownType("Nest.ReadAsAttribute,Nest", "Nest.ReadAsAttribute");
            feature.AddKnownType("Nest.ReadAsFormatterResolver,Nest", "Nest.ReadAsFormatterResolver");
            feature.AddKnownType("Nest.ReadAsFormatter`2,Nest", "Nest.ReadAsFormatter`2'2");
            feature.AddKnownType("Nest.SingleOrEnumerableFormatter`1,Nest", "Nest.SingleOrEnumerableFormatter`1'1");
            feature.AddKnownType("Nest.SerializeAsSingleFormatter`1,Nest", "Nest.SerializeAsSingleFormatter`1'1");
            feature.AddKnownType("Nest.SortOrderFormatter`1,Nest", "Nest.SortOrderFormatter`1'1");
            feature.AddKnownType("Nest.CollapsedSourceFormatter`1,Nest", "Nest.CollapsedSourceFormatter`1'1");
            feature.AddKnownType("Nest.SourceFormatter`1,Nest", "Nest.SourceFormatter`1'1");
            feature.AddKnownType("Nest.TimeSpanTicksFormatter,Nest", "Nest.TimeSpanTicksFormatter");
            feature.AddKnownType("Nest.UnionListFormatter`3,Nest", "Nest.UnionListFormatter`3'3");
            feature.AddKnownType("Nest.VerbatimDictionaryInterfaceKeysPreservingNullFormatter`2,Nest", "Nest.VerbatimDictionaryInterfaceKeysPreservingNullFormatter`2'2");
            feature.AddKnownType("Nest.VerbatimDictionaryKeysPreservingNullFormatter`2,Nest", "Nest.VerbatimDictionaryKeysPreservingNullFormatter`2'2");
            feature.AddKnownType("Nest.IPropertyMapping,Nest", "Nest.IPropertyMapping");
            feature.AddKnownType("Nest.PropertyMapping,Nest", "Nest.PropertyMapping");
            feature.AddKnownType("Nest.IPropertyMappingProvider,Nest", "Nest.IPropertyMappingProvider");
            feature.AddKnownType("Nest.PropertyMappingProvider,Nest", "Nest.PropertyMappingProvider");
            feature.AddKnownType("Nest.SourceWriteFormatter`1,Nest", "Nest.SourceWriteFormatter`1'1");
            feature.AddKnownType("Nest.StatefulSerializerExtensions+StatefulFormatterResolver`1,Nest", "Nest.StatefulFormatterResolver`1'1");
            feature.AddKnownType("Nest.Union`2,Nest", "Nest.Union`2'2");
            feature.AddKnownType("Nest.UnionFormatter`2,Nest", "Nest.UnionFormatter`2'2");
            feature.AddKnownType("Nest.AlternativeEnumMemberAttribute,Nest", "Nest.AlternativeEnumMemberAttribute");
            feature.AddKnownType("Nest.IDateMath,Nest", "Nest.IDateMath");
            feature.AddKnownType("Nest.DateMath,Nest", "Nest.DateMath");
            feature.AddKnownType("Nest.DateMathFormatter,Nest", "Nest.DateMathFormatter");
            feature.AddKnownType("Nest.DateMathExpression,Nest", "Nest.DateMathExpression");
            feature.AddKnownType("Nest.DateMathExpressionFormatter,Nest", "Nest.DateMathExpressionFormatter");
            feature.AddKnownType("Nest.DateMathOperation,Nest", "Nest.DateMathOperation");
            feature.AddKnownType("Nest.DateMathTime,Nest", "Nest.DateMathTime");
            feature.AddKnownType("Nest.DateMathTimeFormatter,Nest", "Nest.DateMathTimeFormatter");
            feature.AddKnownType("Nest.DateMathTimeUnit,Nest", "Nest.DateMathTimeUnit");
            feature.AddKnownType("Nest.Fuzziness,Nest", "Nest.Fuzziness");
            feature.AddKnownType("Nest.FuzzinessInterfaceFormatter,Nest", "Nest.FuzzinessInterfaceFormatter");
            feature.AddKnownType("Nest.FuzzinessFormatter,Nest", "Nest.FuzzinessFormatter");
            feature.AddKnownType("Nest.IFuzziness,Nest", "Nest.IFuzziness");
            feature.AddKnownType("Nest.Distance,Nest", "Nest.Distance");
            feature.AddKnownType("Nest.DistanceFormatter,Nest", "Nest.DistanceFormatter");
            feature.AddKnownType("Nest.DistanceUnit,Nest", "Nest.DistanceUnit");
            feature.AddKnownType("Nest.GeoDistanceType,Nest", "Nest.GeoDistanceType");
            feature.AddKnownType("Nest.GeoShapeRelation,Nest", "Nest.GeoShapeRelation");
            feature.AddKnownType("Nest.ShardStatistics,Nest", "Nest.ShardStatistics");
            feature.AddKnownType("Nest.ClusterStatistics,Nest", "Nest.ClusterStatistics");
            feature.AddKnownType("Nest.MinimumShouldMatch,Nest", "Nest.MinimumShouldMatch");
            feature.AddKnownType("Nest.MinimumShouldMatchFormatter,Nest", "Nest.MinimumShouldMatchFormatter");
            feature.AddKnownType("Nest.IAggregationRange,Nest", "Nest.IAggregationRange");
            feature.AddKnownType("Nest.AggregationRange,Nest", "Nest.AggregationRange");
            feature.AddKnownType("Nest.AggregationRangeDescriptor,Nest", "Nest.AggregationRangeDescriptor");
            feature.AddKnownType("Nest.DateRange,Nest", "Nest.DateRange");
            feature.AddKnownType("Nest.DoubleRange,Nest", "Nest.DoubleRange");
            feature.AddKnownType("Nest.FloatRange,Nest", "Nest.FloatRange");
            feature.AddKnownType("Nest.IntegerRange,Nest", "Nest.IntegerRange");
            feature.AddKnownType("Nest.LongRange,Nest", "Nest.LongRange");
            feature.AddKnownType("Nest.IpAddressRange,Nest", "Nest.IpAddressRange");
            feature.AddKnownType("Nest.IIndexedScript,Nest", "Nest.IIndexedScript");
            feature.AddKnownType("Nest.IndexedScript,Nest", "Nest.IndexedScript");
            feature.AddKnownType("Nest.IndexedScriptDescriptor,Nest", "Nest.IndexedScriptDescriptor");
            feature.AddKnownType("Nest.IInlineScript,Nest", "Nest.IInlineScript");
            feature.AddKnownType("Nest.InlineScript,Nest", "Nest.InlineScript");
            feature.AddKnownType("Nest.InlineScriptDescriptor,Nest", "Nest.InlineScriptDescriptor");
            feature.AddKnownType("Nest.OnScriptError,Nest", "Nest.OnScriptError");
            feature.AddKnownType("Nest.IScript,Nest", "Nest.IScript");
            feature.AddKnownType("Nest.ScriptBase,Nest", "Nest.ScriptBase");
            feature.AddKnownType("Nest.ScriptDescriptorBase`2,Nest", "Nest.ScriptDescriptorBase`2'2");
            feature.AddKnownType("Nest.ScriptDescriptor,Nest", "Nest.ScriptDescriptor");
            feature.AddKnownType("Nest.IScriptField,Nest", "Nest.IScriptField");
            feature.AddKnownType("Nest.ScriptField,Nest", "Nest.ScriptField");
            feature.AddKnownType("Nest.ScriptFieldDescriptor,Nest", "Nest.ScriptFieldDescriptor");
            feature.AddKnownType("Nest.IScriptFields,Nest", "Nest.IScriptFields");
            feature.AddKnownType("Nest.ScriptFields,Nest", "Nest.ScriptFields");
            feature.AddKnownType("Nest.ScriptFieldsDescriptor,Nest", "Nest.ScriptFieldsDescriptor");
            feature.AddKnownType("Nest.ScriptFormatter,Nest", "Nest.ScriptFormatter");
            feature.AddKnownType("Nest.ShapeRelation,Nest", "Nest.ShapeRelation");
            feature.AddKnownType("Nest.SortFormatter,Nest", "Nest.SortFormatter");
            feature.AddKnownType("Nest.CompletionStats,Nest", "Nest.CompletionStats");
            feature.AddKnownType("Nest.DocStats,Nest", "Nest.DocStats");
            feature.AddKnownType("Nest.FielddataStats,Nest", "Nest.FielddataStats");
            feature.AddKnownType("Nest.FlushStats,Nest", "Nest.FlushStats");
            feature.AddKnownType("Nest.GetStats,Nest", "Nest.GetStats");
            feature.AddKnownType("Nest.IndexingStats,Nest", "Nest.IndexingStats");
            feature.AddKnownType("Nest.MergesStats,Nest", "Nest.MergesStats");
            feature.AddKnownType("Nest.PluginStats,Nest", "Nest.PluginStats");
            feature.AddKnownType("Nest.QueryCacheStats,Nest", "Nest.QueryCacheStats");
            feature.AddKnownType("Nest.RecoveryStats,Nest", "Nest.RecoveryStats");
            feature.AddKnownType("Nest.RefreshStats,Nest", "Nest.RefreshStats");
            feature.AddKnownType("Nest.RequestCacheStats,Nest", "Nest.RequestCacheStats");
            feature.AddKnownType("Nest.SearchStats,Nest", "Nest.SearchStats");
            feature.AddKnownType("Nest.SegmentsStats,Nest", "Nest.SegmentsStats");
            feature.AddKnownType("Nest.StoreStats,Nest", "Nest.StoreStats");
            feature.AddKnownType("Nest.TranslogStats,Nest", "Nest.TranslogStats");
            feature.AddKnownType("Nest.WarmerStats,Nest", "Nest.WarmerStats");
            feature.AddKnownType("Nest.Time,Nest", "Nest.Time");
            feature.AddKnownType("Nest.TimeFormatter,Nest", "Nest.TimeFormatter");
            feature.AddKnownType("Nest.TimeUnit,Nest", "Nest.TimeUnit");
            feature.AddKnownType("Nest.NativeMethods+Windows+RTL_OSVERSIONINFOEX,Nest", "Nest.RTL_OSVERSIONINFOEX");
            feature.AddKnownType("Nest.IDeleteDanglingIndexRequest,Nest", "Nest.IDeleteDanglingIndexRequest");
            feature.AddKnownType("Nest.DeleteDanglingIndexRequest,Nest", "Nest.DeleteDanglingIndexRequest");
            feature.AddKnownType("Nest.DeleteDanglingIndexDescriptor,Nest", "Nest.DeleteDanglingIndexDescriptor");
            feature.AddKnownType("Nest.DeleteDanglingIndexResponse,Nest", "Nest.DeleteDanglingIndexResponse");
            feature.AddKnownType("Nest.IImportDanglingIndexRequest,Nest", "Nest.IImportDanglingIndexRequest");
            feature.AddKnownType("Nest.ImportDanglingIndexRequest,Nest", "Nest.ImportDanglingIndexRequest");
            feature.AddKnownType("Nest.ImportDanglingIndexDescriptor,Nest", "Nest.ImportDanglingIndexDescriptor");
            feature.AddKnownType("Nest.ImportDanglingIndexResponse,Nest", "Nest.ImportDanglingIndexResponse");
            feature.AddKnownType("Nest.IListDanglingIndicesRequest,Nest", "Nest.IListDanglingIndicesRequest");
            feature.AddKnownType("Nest.ListDanglingIndicesRequest,Nest", "Nest.ListDanglingIndicesRequest");
            feature.AddKnownType("Nest.ListDanglingIndicesDescriptor,Nest", "Nest.ListDanglingIndicesDescriptor");
            feature.AddKnownType("Nest.ListDanglingIndicesResponse,Nest", "Nest.ListDanglingIndicesResponse");
            feature.AddKnownType("Nest.AggregatedDanglingIndexInfo,Nest", "Nest.AggregatedDanglingIndexInfo");
            feature.AddKnownType("Nest.AsyncSearchDeleteDescriptor,Nest", "Nest.AsyncSearchDeleteDescriptor");
            feature.AddKnownType("Nest.AsyncSearchGetDescriptor,Nest", "Nest.AsyncSearchGetDescriptor");
            feature.AddKnownType("Nest.AsyncSearchStatusDescriptor,Nest", "Nest.AsyncSearchStatusDescriptor");
            feature.AddKnownType("Nest.AsyncSearchSubmitDescriptor`1,Nest", "Nest.AsyncSearchSubmitDescriptor`1'1");
            feature.AddKnownType("Nest.DeleteAutoFollowPatternDescriptor,Nest", "Nest.DeleteAutoFollowPatternDescriptor");
            feature.AddKnownType("Nest.CreateFollowIndexDescriptor,Nest", "Nest.CreateFollowIndexDescriptor");
            feature.AddKnownType("Nest.FollowInfoDescriptor,Nest", "Nest.FollowInfoDescriptor");
            feature.AddKnownType("Nest.FollowIndexStatsDescriptor,Nest", "Nest.FollowIndexStatsDescriptor");
            feature.AddKnownType("Nest.ForgetFollowerIndexDescriptor,Nest", "Nest.ForgetFollowerIndexDescriptor");
            feature.AddKnownType("Nest.GetAutoFollowPatternDescriptor,Nest", "Nest.GetAutoFollowPatternDescriptor");
            feature.AddKnownType("Nest.PauseAutoFollowPatternDescriptor,Nest", "Nest.PauseAutoFollowPatternDescriptor");
            feature.AddKnownType("Nest.PauseFollowIndexDescriptor,Nest", "Nest.PauseFollowIndexDescriptor");
            feature.AddKnownType("Nest.CreateAutoFollowPatternDescriptor,Nest", "Nest.CreateAutoFollowPatternDescriptor");
            feature.AddKnownType("Nest.ResumeAutoFollowPatternDescriptor,Nest", "Nest.ResumeAutoFollowPatternDescriptor");
            feature.AddKnownType("Nest.ResumeFollowIndexDescriptor,Nest", "Nest.ResumeFollowIndexDescriptor");
            feature.AddKnownType("Nest.CcrStatsDescriptor,Nest", "Nest.CcrStatsDescriptor");
            feature.AddKnownType("Nest.UnfollowIndexDescriptor,Nest", "Nest.UnfollowIndexDescriptor");
            feature.AddKnownType("Nest.DeleteEnrichPolicyDescriptor,Nest", "Nest.DeleteEnrichPolicyDescriptor");
            feature.AddKnownType("Nest.ExecuteEnrichPolicyDescriptor,Nest", "Nest.ExecuteEnrichPolicyDescriptor");
            feature.AddKnownType("Nest.GetEnrichPolicyDescriptor,Nest", "Nest.GetEnrichPolicyDescriptor");
            feature.AddKnownType("Nest.PutEnrichPolicyDescriptor`1,Nest", "Nest.PutEnrichPolicyDescriptor`1'1");
            feature.AddKnownType("Nest.EnrichStatsDescriptor,Nest", "Nest.EnrichStatsDescriptor");
            feature.AddKnownType("Nest.EqlDeleteDescriptor,Nest", "Nest.EqlDeleteDescriptor");
            feature.AddKnownType("Nest.EqlGetDescriptor,Nest", "Nest.EqlGetDescriptor");
            feature.AddKnownType("Nest.EqlSearchStatusDescriptor,Nest", "Nest.EqlSearchStatusDescriptor");
            feature.AddKnownType("Nest.EqlSearchDescriptor`1,Nest", "Nest.EqlSearchDescriptor`1'1");
            feature.AddKnownType("Nest.GraphExploreDescriptor`1,Nest", "Nest.GraphExploreDescriptor`1'1");
            feature.AddKnownType("Nest.DeleteLifecycleDescriptor,Nest", "Nest.DeleteLifecycleDescriptor");
            feature.AddKnownType("Nest.ExplainLifecycleDescriptor,Nest", "Nest.ExplainLifecycleDescriptor");
            feature.AddKnownType("Nest.GetLifecycleDescriptor,Nest", "Nest.GetLifecycleDescriptor");
            feature.AddKnownType("Nest.GetIlmStatusDescriptor,Nest", "Nest.GetIlmStatusDescriptor");
            feature.AddKnownType("Nest.MigrateToDataTiersDescriptor,Nest", "Nest.MigrateToDataTiersDescriptor");
            feature.AddKnownType("Nest.MoveToStepDescriptor,Nest", "Nest.MoveToStepDescriptor");
            feature.AddKnownType("Nest.PutLifecycleDescriptor,Nest", "Nest.PutLifecycleDescriptor");
            feature.AddKnownType("Nest.RemovePolicyDescriptor,Nest", "Nest.RemovePolicyDescriptor");
            feature.AddKnownType("Nest.RetryIlmDescriptor,Nest", "Nest.RetryIlmDescriptor");
            feature.AddKnownType("Nest.StartIlmDescriptor,Nest", "Nest.StartIlmDescriptor");
            feature.AddKnownType("Nest.StopIlmDescriptor,Nest", "Nest.StopIlmDescriptor");
            feature.AddKnownType("Nest.AddIndexBlockDescriptor,Nest", "Nest.AddIndexBlockDescriptor");
            feature.AddKnownType("Nest.AnalyzeDescriptor,Nest", "Nest.AnalyzeDescriptor");
            feature.AddKnownType("Nest.ClearCacheDescriptor,Nest", "Nest.ClearCacheDescriptor");
            feature.AddKnownType("Nest.CloneIndexDescriptor,Nest", "Nest.CloneIndexDescriptor");
            feature.AddKnownType("Nest.CloseIndexDescriptor,Nest", "Nest.CloseIndexDescriptor");
            feature.AddKnownType("Nest.CreateIndexDescriptor,Nest", "Nest.CreateIndexDescriptor");
            feature.AddKnownType("Nest.CreateDataStreamDescriptor,Nest", "Nest.CreateDataStreamDescriptor");
            feature.AddKnownType("Nest.DataStreamsStatsDescriptor,Nest", "Nest.DataStreamsStatsDescriptor");
            feature.AddKnownType("Nest.DeleteIndexDescriptor,Nest", "Nest.DeleteIndexDescriptor");
            feature.AddKnownType("Nest.DeleteAliasDescriptor,Nest", "Nest.DeleteAliasDescriptor");
            feature.AddKnownType("Nest.DeleteDataStreamDescriptor,Nest", "Nest.DeleteDataStreamDescriptor");
            feature.AddKnownType("Nest.DeleteIndexTemplateV2Descriptor,Nest", "Nest.DeleteIndexTemplateV2Descriptor");
            feature.AddKnownType("Nest.DeleteIndexTemplateDescriptor,Nest", "Nest.DeleteIndexTemplateDescriptor");
            feature.AddKnownType("Nest.IndexExistsDescriptor,Nest", "Nest.IndexExistsDescriptor");
            feature.AddKnownType("Nest.AliasExistsDescriptor,Nest", "Nest.AliasExistsDescriptor");
            feature.AddKnownType("Nest.IndexTemplateV2ExistsDescriptor,Nest", "Nest.IndexTemplateV2ExistsDescriptor");
            feature.AddKnownType("Nest.IndexTemplateExistsDescriptor,Nest", "Nest.IndexTemplateExistsDescriptor");
            feature.AddKnownType("Nest.TypeExistsDescriptor,Nest", "Nest.TypeExistsDescriptor");
            feature.AddKnownType("Nest.FlushDescriptor,Nest", "Nest.FlushDescriptor");
            feature.AddKnownType("Nest.SyncedFlushDescriptor,Nest", "Nest.SyncedFlushDescriptor");
            feature.AddKnownType("Nest.ForceMergeDescriptor,Nest", "Nest.ForceMergeDescriptor");
            feature.AddKnownType("Nest.FreezeIndexDescriptor,Nest", "Nest.FreezeIndexDescriptor");
            feature.AddKnownType("Nest.GetIndexDescriptor,Nest", "Nest.GetIndexDescriptor");
            feature.AddKnownType("Nest.GetAliasDescriptor,Nest", "Nest.GetAliasDescriptor");
            feature.AddKnownType("Nest.GetDataStreamDescriptor,Nest", "Nest.GetDataStreamDescriptor");
            feature.AddKnownType("Nest.GetFieldMappingDescriptor`1,Nest", "Nest.GetFieldMappingDescriptor`1'1");
            feature.AddKnownType("Nest.GetIndexTemplateV2Descriptor,Nest", "Nest.GetIndexTemplateV2Descriptor");
            feature.AddKnownType("Nest.GetMappingDescriptor`1,Nest", "Nest.GetMappingDescriptor`1'1");
            feature.AddKnownType("Nest.GetIndexSettingsDescriptor,Nest", "Nest.GetIndexSettingsDescriptor");
            feature.AddKnownType("Nest.GetIndexTemplateDescriptor,Nest", "Nest.GetIndexTemplateDescriptor");
            feature.AddKnownType("Nest.MigrateToDataStreamDescriptor,Nest", "Nest.MigrateToDataStreamDescriptor");
            feature.AddKnownType("Nest.OpenIndexDescriptor,Nest", "Nest.OpenIndexDescriptor");
            feature.AddKnownType("Nest.PromoteDataStreamDescriptor,Nest", "Nest.PromoteDataStreamDescriptor");
            feature.AddKnownType("Nest.PutAliasDescriptor,Nest", "Nest.PutAliasDescriptor");
            feature.AddKnownType("Nest.PutIndexTemplateV2Descriptor,Nest", "Nest.PutIndexTemplateV2Descriptor");
            feature.AddKnownType("Nest.PutMappingDescriptor`1,Nest", "Nest.PutMappingDescriptor`1'1");
            feature.AddKnownType("Nest.UpdateIndexSettingsDescriptor,Nest", "Nest.UpdateIndexSettingsDescriptor");
            feature.AddKnownType("Nest.PutIndexTemplateDescriptor,Nest", "Nest.PutIndexTemplateDescriptor");
            feature.AddKnownType("Nest.RecoveryStatusDescriptor,Nest", "Nest.RecoveryStatusDescriptor");
            feature.AddKnownType("Nest.RefreshDescriptor,Nest", "Nest.RefreshDescriptor");
            feature.AddKnownType("Nest.ReloadSearchAnalyzersDescriptor,Nest", "Nest.ReloadSearchAnalyzersDescriptor");
            feature.AddKnownType("Nest.ResolveIndexDescriptor,Nest", "Nest.ResolveIndexDescriptor");
            feature.AddKnownType("Nest.RolloverIndexDescriptor,Nest", "Nest.RolloverIndexDescriptor");
            feature.AddKnownType("Nest.SegmentsDescriptor,Nest", "Nest.SegmentsDescriptor");
            feature.AddKnownType("Nest.IndicesShardStoresDescriptor,Nest", "Nest.IndicesShardStoresDescriptor");
            feature.AddKnownType("Nest.ShrinkIndexDescriptor,Nest", "Nest.ShrinkIndexDescriptor");
            feature.AddKnownType("Nest.SplitIndexDescriptor,Nest", "Nest.SplitIndexDescriptor");
            feature.AddKnownType("Nest.IndicesStatsDescriptor,Nest", "Nest.IndicesStatsDescriptor");
            feature.AddKnownType("Nest.UnfreezeIndexDescriptor,Nest", "Nest.UnfreezeIndexDescriptor");
            feature.AddKnownType("Nest.BulkAliasDescriptor,Nest", "Nest.BulkAliasDescriptor");
            feature.AddKnownType("Nest.ValidateQueryDescriptor`1,Nest", "Nest.ValidateQueryDescriptor`1'1");
            feature.AddKnownType("Nest.DeletePipelineDescriptor,Nest", "Nest.DeletePipelineDescriptor");
            feature.AddKnownType("Nest.GetPipelineDescriptor,Nest", "Nest.GetPipelineDescriptor");
            feature.AddKnownType("Nest.GrokProcessorPatternsDescriptor,Nest", "Nest.GrokProcessorPatternsDescriptor");
            feature.AddKnownType("Nest.PutPipelineDescriptor,Nest", "Nest.PutPipelineDescriptor");
            feature.AddKnownType("Nest.SimulatePipelineDescriptor,Nest", "Nest.SimulatePipelineDescriptor");
            feature.AddKnownType("Nest.DeleteLicenseDescriptor,Nest", "Nest.DeleteLicenseDescriptor");
            feature.AddKnownType("Nest.GetLicenseDescriptor,Nest", "Nest.GetLicenseDescriptor");
            feature.AddKnownType("Nest.GetBasicLicenseStatusDescriptor,Nest", "Nest.GetBasicLicenseStatusDescriptor");
            feature.AddKnownType("Nest.GetTrialLicenseStatusDescriptor,Nest", "Nest.GetTrialLicenseStatusDescriptor");
            feature.AddKnownType("Nest.PostLicenseDescriptor,Nest", "Nest.PostLicenseDescriptor");
            feature.AddKnownType("Nest.StartBasicLicenseDescriptor,Nest", "Nest.StartBasicLicenseDescriptor");
            feature.AddKnownType("Nest.StartTrialLicenseDescriptor,Nest", "Nest.StartTrialLicenseDescriptor");
            feature.AddKnownType("Nest.CloseJobDescriptor,Nest", "Nest.CloseJobDescriptor");
            feature.AddKnownType("Nest.DeleteCalendarDescriptor,Nest", "Nest.DeleteCalendarDescriptor");
            feature.AddKnownType("Nest.DeleteCalendarEventDescriptor,Nest", "Nest.DeleteCalendarEventDescriptor");
            feature.AddKnownType("Nest.DeleteCalendarJobDescriptor,Nest", "Nest.DeleteCalendarJobDescriptor");
            feature.AddKnownType("Nest.DeleteDatafeedDescriptor,Nest", "Nest.DeleteDatafeedDescriptor");
            feature.AddKnownType("Nest.DeleteExpiredDataDescriptor,Nest", "Nest.DeleteExpiredDataDescriptor");
            feature.AddKnownType("Nest.DeleteFilterDescriptor,Nest", "Nest.DeleteFilterDescriptor");
            feature.AddKnownType("Nest.DeleteForecastDescriptor,Nest", "Nest.DeleteForecastDescriptor");
            feature.AddKnownType("Nest.DeleteJobDescriptor,Nest", "Nest.DeleteJobDescriptor");
            feature.AddKnownType("Nest.DeleteModelSnapshotDescriptor,Nest", "Nest.DeleteModelSnapshotDescriptor");
            feature.AddKnownType("Nest.EstimateModelMemoryDescriptor`1,Nest", "Nest.EstimateModelMemoryDescriptor`1'1");
            feature.AddKnownType("Nest.FlushJobDescriptor,Nest", "Nest.FlushJobDescriptor");
            feature.AddKnownType("Nest.ForecastJobDescriptor,Nest", "Nest.ForecastJobDescriptor");
            feature.AddKnownType("Nest.GetBucketsDescriptor,Nest", "Nest.GetBucketsDescriptor");
            feature.AddKnownType("Nest.GetCalendarEventsDescriptor,Nest", "Nest.GetCalendarEventsDescriptor");
            feature.AddKnownType("Nest.GetCalendarsDescriptor,Nest", "Nest.GetCalendarsDescriptor");
            feature.AddKnownType("Nest.GetCategoriesDescriptor,Nest", "Nest.GetCategoriesDescriptor");
            feature.AddKnownType("Nest.GetDatafeedStatsDescriptor,Nest", "Nest.GetDatafeedStatsDescriptor");
            feature.AddKnownType("Nest.GetDatafeedsDescriptor,Nest", "Nest.GetDatafeedsDescriptor");
            feature.AddKnownType("Nest.GetFiltersDescriptor,Nest", "Nest.GetFiltersDescriptor");
            feature.AddKnownType("Nest.GetInfluencersDescriptor,Nest", "Nest.GetInfluencersDescriptor");
            feature.AddKnownType("Nest.GetJobStatsDescriptor,Nest", "Nest.GetJobStatsDescriptor");
            feature.AddKnownType("Nest.GetJobsDescriptor,Nest", "Nest.GetJobsDescriptor");
            feature.AddKnownType("Nest.GetModelSnapshotsDescriptor,Nest", "Nest.GetModelSnapshotsDescriptor");
            feature.AddKnownType("Nest.GetOverallBucketsDescriptor,Nest", "Nest.GetOverallBucketsDescriptor");
            feature.AddKnownType("Nest.GetAnomalyRecordsDescriptor,Nest", "Nest.GetAnomalyRecordsDescriptor");
            feature.AddKnownType("Nest.MachineLearningInfoDescriptor,Nest", "Nest.MachineLearningInfoDescriptor");
            feature.AddKnownType("Nest.OpenJobDescriptor,Nest", "Nest.OpenJobDescriptor");
            feature.AddKnownType("Nest.PostCalendarEventsDescriptor,Nest", "Nest.PostCalendarEventsDescriptor");
            feature.AddKnownType("Nest.PostJobDataDescriptor,Nest", "Nest.PostJobDataDescriptor");
            feature.AddKnownType("Nest.PreviewDatafeedDescriptor,Nest", "Nest.PreviewDatafeedDescriptor");
            feature.AddKnownType("Nest.PutCalendarDescriptor,Nest", "Nest.PutCalendarDescriptor");
            feature.AddKnownType("Nest.PutCalendarJobDescriptor,Nest", "Nest.PutCalendarJobDescriptor");
            feature.AddKnownType("Nest.PutDatafeedDescriptor`1,Nest", "Nest.PutDatafeedDescriptor`1'1");
            feature.AddKnownType("Nest.PutFilterDescriptor,Nest", "Nest.PutFilterDescriptor");
            feature.AddKnownType("Nest.PutJobDescriptor`1,Nest", "Nest.PutJobDescriptor`1'1");
            feature.AddKnownType("Nest.RevertModelSnapshotDescriptor,Nest", "Nest.RevertModelSnapshotDescriptor");
            feature.AddKnownType("Nest.SetUpgradeModeDescriptor,Nest", "Nest.SetUpgradeModeDescriptor");
            feature.AddKnownType("Nest.StartDatafeedDescriptor,Nest", "Nest.StartDatafeedDescriptor");
            feature.AddKnownType("Nest.StopDatafeedDescriptor,Nest", "Nest.StopDatafeedDescriptor");
            feature.AddKnownType("Nest.UpdateDatafeedDescriptor`1,Nest", "Nest.UpdateDatafeedDescriptor`1'1");
            feature.AddKnownType("Nest.UpdateFilterDescriptor,Nest", "Nest.UpdateFilterDescriptor");
            feature.AddKnownType("Nest.UpdateJobDescriptor`1,Nest", "Nest.UpdateJobDescriptor`1'1");
            feature.AddKnownType("Nest.UpdateModelSnapshotDescriptor,Nest", "Nest.UpdateModelSnapshotDescriptor");
            feature.AddKnownType("Nest.ValidateJobDescriptor`1,Nest", "Nest.ValidateJobDescriptor`1'1");
            feature.AddKnownType("Nest.ValidateDetectorDescriptor`1,Nest", "Nest.ValidateDetectorDescriptor`1'1");
            feature.AddKnownType("Nest.DeprecationInfoDescriptor,Nest", "Nest.DeprecationInfoDescriptor");
            feature.AddKnownType("Nest.BulkDescriptor,Nest", "Nest.BulkDescriptor");
            feature.AddKnownType("Nest.ClearScrollDescriptor,Nest", "Nest.ClearScrollDescriptor");
            feature.AddKnownType("Nest.ClosePointInTimeDescriptor,Nest", "Nest.ClosePointInTimeDescriptor");
            feature.AddKnownType("Nest.CountDescriptor`1,Nest", "Nest.CountDescriptor`1'1");
            feature.AddKnownType("Nest.CreateDescriptor`1,Nest", "Nest.CreateDescriptor`1'1");
            feature.AddKnownType("Nest.DeleteDescriptor`1,Nest", "Nest.DeleteDescriptor`1'1");
            feature.AddKnownType("Nest.DeleteByQueryDescriptor`1,Nest", "Nest.DeleteByQueryDescriptor`1'1");
            feature.AddKnownType("Nest.DeleteByQueryRethrottleDescriptor,Nest", "Nest.DeleteByQueryRethrottleDescriptor");
            feature.AddKnownType("Nest.DeleteScriptDescriptor,Nest", "Nest.DeleteScriptDescriptor");
            feature.AddKnownType("Nest.DocumentExistsDescriptor`1,Nest", "Nest.DocumentExistsDescriptor`1'1");
            feature.AddKnownType("Nest.SourceExistsDescriptor`1,Nest", "Nest.SourceExistsDescriptor`1'1");
            feature.AddKnownType("Nest.ExplainDescriptor`1,Nest", "Nest.ExplainDescriptor`1'1");
            feature.AddKnownType("Nest.FieldCapabilitiesDescriptor,Nest", "Nest.FieldCapabilitiesDescriptor");
            feature.AddKnownType("Nest.GetDescriptor`1,Nest", "Nest.GetDescriptor`1'1");
            feature.AddKnownType("Nest.GetScriptDescriptor,Nest", "Nest.GetScriptDescriptor");
            feature.AddKnownType("Nest.SourceDescriptor`1,Nest", "Nest.SourceDescriptor`1'1");
            feature.AddKnownType("Nest.IndexDescriptor`1,Nest", "Nest.IndexDescriptor`1'1");
            feature.AddKnownType("Nest.MultiGetDescriptor,Nest", "Nest.MultiGetDescriptor");
            feature.AddKnownType("Nest.MultiSearchDescriptor,Nest", "Nest.MultiSearchDescriptor");
            feature.AddKnownType("Nest.MultiSearchTemplateDescriptor,Nest", "Nest.MultiSearchTemplateDescriptor");
            feature.AddKnownType("Nest.MultiTermVectorsDescriptor,Nest", "Nest.MultiTermVectorsDescriptor");
            feature.AddKnownType("Nest.OpenPointInTimeDescriptor,Nest", "Nest.OpenPointInTimeDescriptor");
            feature.AddKnownType("Nest.PutScriptDescriptor,Nest", "Nest.PutScriptDescriptor");
            feature.AddKnownType("Nest.ReindexOnServerDescriptor,Nest", "Nest.ReindexOnServerDescriptor");
            feature.AddKnownType("Nest.ReindexRethrottleDescriptor,Nest", "Nest.ReindexRethrottleDescriptor");
            feature.AddKnownType("Nest.RenderSearchTemplateDescriptor,Nest", "Nest.RenderSearchTemplateDescriptor");
            feature.AddKnownType("Nest.ExecutePainlessScriptDescriptor,Nest", "Nest.ExecutePainlessScriptDescriptor");
            feature.AddKnownType("Nest.ScrollDescriptor`1,Nest", "Nest.ScrollDescriptor`1'1");
            feature.AddKnownType("Nest.SearchDescriptor`1,Nest", "Nest.SearchDescriptor`1'1");
            feature.AddKnownType("Nest.SearchShardsDescriptor`1,Nest", "Nest.SearchShardsDescriptor`1'1");
            feature.AddKnownType("Nest.SearchTemplateDescriptor`1,Nest", "Nest.SearchTemplateDescriptor`1'1");
            feature.AddKnownType("Nest.TermVectorsDescriptor`1,Nest", "Nest.TermVectorsDescriptor`1'1");
            feature.AddKnownType("Nest.UpdateDescriptor`2,Nest", "Nest.UpdateDescriptor`2'2");
            feature.AddKnownType("Nest.UpdateByQueryDescriptor`1,Nest", "Nest.UpdateByQueryDescriptor`1'1");
            feature.AddKnownType("Nest.UpdateByQueryRethrottleDescriptor,Nest", "Nest.UpdateByQueryRethrottleDescriptor");
            feature.AddKnownType("Nest.DeleteRollupJobDescriptor,Nest", "Nest.DeleteRollupJobDescriptor");
            feature.AddKnownType("Nest.GetRollupJobDescriptor,Nest", "Nest.GetRollupJobDescriptor");
            feature.AddKnownType("Nest.GetRollupCapabilitiesDescriptor,Nest", "Nest.GetRollupCapabilitiesDescriptor");
            feature.AddKnownType("Nest.GetRollupIndexCapabilitiesDescriptor,Nest", "Nest.GetRollupIndexCapabilitiesDescriptor");
            feature.AddKnownType("Nest.CreateRollupJobDescriptor`1,Nest", "Nest.CreateRollupJobDescriptor`1'1");
            feature.AddKnownType("Nest.RollupSearchDescriptor`1,Nest", "Nest.RollupSearchDescriptor`1'1");
            feature.AddKnownType("Nest.StartRollupJobDescriptor,Nest", "Nest.StartRollupJobDescriptor");
            feature.AddKnownType("Nest.StopRollupJobDescriptor,Nest", "Nest.StopRollupJobDescriptor");
            feature.AddKnownType("Nest.AuthenticateDescriptor,Nest", "Nest.AuthenticateDescriptor");
            feature.AddKnownType("Nest.ChangePasswordDescriptor,Nest", "Nest.ChangePasswordDescriptor");
            feature.AddKnownType("Nest.ClearApiKeyCacheDescriptor,Nest", "Nest.ClearApiKeyCacheDescriptor");
            feature.AddKnownType("Nest.ClearCachedPrivilegesDescriptor,Nest", "Nest.ClearCachedPrivilegesDescriptor");
            feature.AddKnownType("Nest.ClearCachedRealmsDescriptor,Nest", "Nest.ClearCachedRealmsDescriptor");
            feature.AddKnownType("Nest.ClearCachedRolesDescriptor,Nest", "Nest.ClearCachedRolesDescriptor");
            feature.AddKnownType("Nest.CreateApiKeyDescriptor,Nest", "Nest.CreateApiKeyDescriptor");
            feature.AddKnownType("Nest.DeletePrivilegesDescriptor,Nest", "Nest.DeletePrivilegesDescriptor");
            feature.AddKnownType("Nest.DeleteRoleDescriptor,Nest", "Nest.DeleteRoleDescriptor");
            feature.AddKnownType("Nest.DeleteRoleMappingDescriptor,Nest", "Nest.DeleteRoleMappingDescriptor");
            feature.AddKnownType("Nest.DeleteUserDescriptor,Nest", "Nest.DeleteUserDescriptor");
            feature.AddKnownType("Nest.DisableUserDescriptor,Nest", "Nest.DisableUserDescriptor");
            feature.AddKnownType("Nest.EnableUserDescriptor,Nest", "Nest.EnableUserDescriptor");
            feature.AddKnownType("Nest.GetApiKeyDescriptor,Nest", "Nest.GetApiKeyDescriptor");
            feature.AddKnownType("Nest.GetBuiltinPrivilegesDescriptor,Nest", "Nest.GetBuiltinPrivilegesDescriptor");
            feature.AddKnownType("Nest.GetPrivilegesDescriptor,Nest", "Nest.GetPrivilegesDescriptor");
            feature.AddKnownType("Nest.GetRoleDescriptor,Nest", "Nest.GetRoleDescriptor");
            feature.AddKnownType("Nest.GetRoleMappingDescriptor,Nest", "Nest.GetRoleMappingDescriptor");
            feature.AddKnownType("Nest.GetUserAccessTokenDescriptor,Nest", "Nest.GetUserAccessTokenDescriptor");
            feature.AddKnownType("Nest.GetUserDescriptor,Nest", "Nest.GetUserDescriptor");
            feature.AddKnownType("Nest.GetUserPrivilegesDescriptor,Nest", "Nest.GetUserPrivilegesDescriptor");
            feature.AddKnownType("Nest.GrantApiKeyDescriptor,Nest", "Nest.GrantApiKeyDescriptor");
            feature.AddKnownType("Nest.HasPrivilegesDescriptor,Nest", "Nest.HasPrivilegesDescriptor");
            feature.AddKnownType("Nest.InvalidateApiKeyDescriptor,Nest", "Nest.InvalidateApiKeyDescriptor");
            feature.AddKnownType("Nest.InvalidateUserAccessTokenDescriptor,Nest", "Nest.InvalidateUserAccessTokenDescriptor");
            feature.AddKnownType("Nest.PutPrivilegesDescriptor,Nest", "Nest.PutPrivilegesDescriptor");
            feature.AddKnownType("Nest.PutRoleDescriptor,Nest", "Nest.PutRoleDescriptor");
            feature.AddKnownType("Nest.PutRoleMappingDescriptor,Nest", "Nest.PutRoleMappingDescriptor");
            feature.AddKnownType("Nest.PutUserDescriptor,Nest", "Nest.PutUserDescriptor");
            feature.AddKnownType("Nest.GetCertificatesDescriptor,Nest", "Nest.GetCertificatesDescriptor");
            feature.AddKnownType("Nest.CleanupRepositoryDescriptor,Nest", "Nest.CleanupRepositoryDescriptor");
            feature.AddKnownType("Nest.CloneSnapshotDescriptor,Nest", "Nest.CloneSnapshotDescriptor");
            feature.AddKnownType("Nest.SnapshotDescriptor,Nest", "Nest.SnapshotDescriptor");
            feature.AddKnownType("Nest.CreateRepositoryDescriptor,Nest", "Nest.CreateRepositoryDescriptor");
            feature.AddKnownType("Nest.DeleteSnapshotDescriptor,Nest", "Nest.DeleteSnapshotDescriptor");
            feature.AddKnownType("Nest.DeleteRepositoryDescriptor,Nest", "Nest.DeleteRepositoryDescriptor");
            feature.AddKnownType("Nest.GetSnapshotDescriptor,Nest", "Nest.GetSnapshotDescriptor");
            feature.AddKnownType("Nest.GetRepositoryDescriptor,Nest", "Nest.GetRepositoryDescriptor");
            feature.AddKnownType("Nest.AnalyzeRepositoryDescriptor,Nest", "Nest.AnalyzeRepositoryDescriptor");
            feature.AddKnownType("Nest.RestoreDescriptor,Nest", "Nest.RestoreDescriptor");
            feature.AddKnownType("Nest.SnapshotStatusDescriptor,Nest", "Nest.SnapshotStatusDescriptor");
            feature.AddKnownType("Nest.VerifyRepositoryDescriptor,Nest", "Nest.VerifyRepositoryDescriptor");
            feature.AddKnownType("Nest.DeleteSnapshotLifecycleDescriptor,Nest", "Nest.DeleteSnapshotLifecycleDescriptor");
            feature.AddKnownType("Nest.ExecuteSnapshotLifecycleDescriptor,Nest", "Nest.ExecuteSnapshotLifecycleDescriptor");
            feature.AddKnownType("Nest.ExecuteRetentionDescriptor,Nest", "Nest.ExecuteRetentionDescriptor");
            feature.AddKnownType("Nest.GetSnapshotLifecycleDescriptor,Nest", "Nest.GetSnapshotLifecycleDescriptor");
            feature.AddKnownType("Nest.GetSnapshotLifecycleStatsDescriptor,Nest", "Nest.GetSnapshotLifecycleStatsDescriptor");
            feature.AddKnownType("Nest.GetSnapshotLifecycleManagementStatusDescriptor,Nest", "Nest.GetSnapshotLifecycleManagementStatusDescriptor");
            feature.AddKnownType("Nest.PutSnapshotLifecycleDescriptor,Nest", "Nest.PutSnapshotLifecycleDescriptor");
            feature.AddKnownType("Nest.StartSnapshotLifecycleManagementDescriptor,Nest", "Nest.StartSnapshotLifecycleManagementDescriptor");
            feature.AddKnownType("Nest.StopSnapshotLifecycleManagementDescriptor,Nest", "Nest.StopSnapshotLifecycleManagementDescriptor");
            feature.AddKnownType("Nest.ClearSqlCursorDescriptor,Nest", "Nest.ClearSqlCursorDescriptor");
            feature.AddKnownType("Nest.SqlDeleteDescriptor,Nest", "Nest.SqlDeleteDescriptor");
            feature.AddKnownType("Nest.SqlGetDescriptor,Nest", "Nest.SqlGetDescriptor");
            feature.AddKnownType("Nest.SqlSearchStatusDescriptor,Nest", "Nest.SqlSearchStatusDescriptor");
            feature.AddKnownType("Nest.QuerySqlDescriptor,Nest", "Nest.QuerySqlDescriptor");
            feature.AddKnownType("Nest.TranslateSqlDescriptor,Nest", "Nest.TranslateSqlDescriptor");
            feature.AddKnownType("Nest.DeleteTransformDescriptor,Nest", "Nest.DeleteTransformDescriptor");
            feature.AddKnownType("Nest.GetTransformDescriptor,Nest", "Nest.GetTransformDescriptor");
            feature.AddKnownType("Nest.GetTransformStatsDescriptor,Nest", "Nest.GetTransformStatsDescriptor");
            feature.AddKnownType("Nest.PreviewTransformDescriptor`1,Nest", "Nest.PreviewTransformDescriptor`1'1");
            feature.AddKnownType("Nest.PutTransformDescriptor`1,Nest", "Nest.PutTransformDescriptor`1'1");
            feature.AddKnownType("Nest.StartTransformDescriptor,Nest", "Nest.StartTransformDescriptor");
            feature.AddKnownType("Nest.StopTransformDescriptor,Nest", "Nest.StopTransformDescriptor");
            feature.AddKnownType("Nest.UpdateTransformDescriptor`1,Nest", "Nest.UpdateTransformDescriptor`1'1");
            feature.AddKnownType("Nest.AcknowledgeWatchDescriptor,Nest", "Nest.AcknowledgeWatchDescriptor");
            feature.AddKnownType("Nest.ActivateWatchDescriptor,Nest", "Nest.ActivateWatchDescriptor");
            feature.AddKnownType("Nest.DeactivateWatchDescriptor,Nest", "Nest.DeactivateWatchDescriptor");
            feature.AddKnownType("Nest.DeleteWatchDescriptor,Nest", "Nest.DeleteWatchDescriptor");
            feature.AddKnownType("Nest.ExecuteWatchDescriptor,Nest", "Nest.ExecuteWatchDescriptor");
            feature.AddKnownType("Nest.GetWatchDescriptor,Nest", "Nest.GetWatchDescriptor");
            feature.AddKnownType("Nest.PutWatchDescriptor,Nest", "Nest.PutWatchDescriptor");
            feature.AddKnownType("Nest.QueryWatchesDescriptor,Nest", "Nest.QueryWatchesDescriptor");
            feature.AddKnownType("Nest.StartWatcherDescriptor,Nest", "Nest.StartWatcherDescriptor");
            feature.AddKnownType("Nest.WatcherStatsDescriptor,Nest", "Nest.WatcherStatsDescriptor");
            feature.AddKnownType("Nest.StopWatcherDescriptor,Nest", "Nest.StopWatcherDescriptor");
            feature.AddKnownType("Nest.XPackInfoDescriptor,Nest", "Nest.XPackInfoDescriptor");
            feature.AddKnownType("Nest.XPackUsageDescriptor,Nest", "Nest.XPackUsageDescriptor");
            feature.AddKnownType("Nest.BulkAllObservable`1,Nest", "Nest.BulkAllObservable`1'1");
            feature.AddKnownType("Nest.BulkAllObserver,Nest", "Nest.BulkAllObserver");
            feature.AddKnownType("Nest.IBulkAllRequest`1,Nest", "Nest.IBulkAllRequest`1'1");
            feature.AddKnownType("Nest.BulkAllRequest`1,Nest", "Nest.BulkAllRequest`1'1");
            feature.AddKnownType("Nest.BulkAllDescriptor`1,Nest", "Nest.BulkAllDescriptor`1'1");
            feature.AddKnownType("Nest.BulkAllResponse,Nest", "Nest.BulkAllResponse");
            feature.AddKnownType("Nest.IElasticClient,Nest", "Nest.IElasticClient");
            feature.AddKnownType("Nest.ElasticClient,Nest", "Nest.ElasticClient");
            feature.AddKnownType("Nest.BulkIndexByScrollFailure,Nest", "Nest.BulkIndexByScrollFailure");
            feature.AddKnownType("Nest.IBulkCreateOperation`1,Nest", "Nest.IBulkCreateOperation`1'1");
            feature.AddKnownType("Nest.BulkCreateOperation`1,Nest", "Nest.BulkCreateOperation`1'1");
            feature.AddKnownType("Nest.BulkCreateDescriptor`1,Nest", "Nest.BulkCreateDescriptor`1'1");
            feature.AddKnownType("Nest.IBulkDeleteOperation`1,Nest", "Nest.IBulkDeleteOperation`1'1");
            feature.AddKnownType("Nest.BulkDeleteOperation`1,Nest", "Nest.BulkDeleteOperation`1'1");
            feature.AddKnownType("Nest.BulkDeleteDescriptor`1,Nest", "Nest.BulkDeleteDescriptor`1'1");
            feature.AddKnownType("Nest.IBulkIndexOperation`1,Nest", "Nest.IBulkIndexOperation`1'1");
            feature.AddKnownType("Nest.BulkIndexOperation`1,Nest", "Nest.BulkIndexOperation`1'1");
            feature.AddKnownType("Nest.BulkIndexDescriptor`1,Nest", "Nest.BulkIndexDescriptor`1'1");
            feature.AddKnownType("Nest.BulkOperationBase,Nest", "Nest.BulkOperationBase");
            feature.AddKnownType("Nest.BulkOperationDescriptorBase`2,Nest", "Nest.BulkOperationDescriptorBase`2'2");
            feature.AddKnownType("Nest.BulkOperationsCollection`1,Nest", "Nest.BulkOperationsCollection`1'1");
            feature.AddKnownType("Nest.IBulkUpdateOperation`2,Nest", "Nest.IBulkUpdateOperation`2'2");
            feature.AddKnownType("Nest.BulkUpdateOperation`2,Nest", "Nest.BulkUpdateOperation`2'2");
            feature.AddKnownType("Nest.BulkUpdateDescriptor`2,Nest", "Nest.BulkUpdateDescriptor`2'2");
            feature.AddKnownType("Nest.BulkUpdateBody`2,Nest", "Nest.BulkUpdateBody`2'2");
            feature.AddKnownType("Nest.IBulkOperation,Nest", "Nest.IBulkOperation");
            feature.AddKnownType("Nest.IBulkRequest,Nest", "Nest.IBulkRequest");
            feature.AddKnownType("Nest.BulkRequest,Nest", "Nest.BulkRequest");
            feature.AddKnownType("Nest.BulkRequestFormatter,Nest", "Nest.BulkRequestFormatter");
            feature.AddKnownType("Nest.BulkResponse,Nest", "Nest.BulkResponse");
            feature.AddKnownType("Nest.BulkCreateResponseItem,Nest", "Nest.BulkCreateResponseItem");
            feature.AddKnownType("Nest.BulkDeleteResponseItem,Nest", "Nest.BulkDeleteResponseItem");
            feature.AddKnownType("Nest.BulkIndexResponseItem,Nest", "Nest.BulkIndexResponseItem");
            feature.AddKnownType("Nest.BulkResponseItemBase,Nest", "Nest.BulkResponseItemBase");
            feature.AddKnownType("Nest.BulkResponseItemFormatter,Nest", "Nest.BulkResponseItemFormatter");
            feature.AddKnownType("Nest.BulkUpdateResponseItem,Nest", "Nest.BulkUpdateResponseItem");
            feature.AddKnownType("Nest.ConcreteBulkIndexResponseItemFormatter`1,Nest", "Nest.ConcreteBulkIndexResponseItemFormatter`1'1");
            feature.AddKnownType("Nest.IDeleteByQueryRethrottleRequest,Nest", "Nest.IDeleteByQueryRethrottleRequest");
            feature.AddKnownType("Nest.DeleteByQueryRethrottleRequest,Nest", "Nest.DeleteByQueryRethrottleRequest");
            feature.AddKnownType("Nest.IDeleteByQueryRequest,Nest", "Nest.IDeleteByQueryRequest");
            feature.AddKnownType("Nest.IDeleteByQueryRequest`1,Nest", "Nest.IDeleteByQueryRequest`1'1");
            feature.AddKnownType("Nest.DeleteByQueryRequest,Nest", "Nest.DeleteByQueryRequest");
            feature.AddKnownType("Nest.DeleteByQueryRequest`1,Nest", "Nest.DeleteByQueryRequest`1'1");
            feature.AddKnownType("Nest.DeleteByQueryResponse,Nest", "Nest.DeleteByQueryResponse");
            feature.AddKnownType("Nest.IMultiGetOperation,Nest", "Nest.IMultiGetOperation");
            feature.AddKnownType("Nest.MultiGetOperation`1,Nest", "Nest.MultiGetOperation`1'1");
            feature.AddKnownType("Nest.MultiGetOperationDescriptor`1,Nest", "Nest.MultiGetOperationDescriptor`1'1");
            feature.AddKnownType("Nest.IMultiGetRequest,Nest", "Nest.IMultiGetRequest");
            feature.AddKnownType("Nest.MultiGetRequest,Nest", "Nest.MultiGetRequest");
            feature.AddKnownType("Nest.MultiGetRequestFormatter,Nest", "Nest.MultiGetRequestFormatter");
            feature.AddKnownType("Nest.MultiGetResponseBuilder,Nest", "Nest.MultiGetResponseBuilder");
            feature.AddKnownType("Nest.IMultiGetHit`1,Nest", "Nest.IMultiGetHit`1'1");
            feature.AddKnownType("Nest.MultiGetHit`1,Nest", "Nest.MultiGetHit`1'1");
            feature.AddKnownType("Nest.MultiGetResponseFormatter,Nest", "Nest.MultiGetResponseFormatter");
            feature.AddKnownType("Nest.MultiGetResponseFormatter+MultiHitTuple,Nest", "Nest.MultiHitTuple");
            feature.AddKnownType("Nest.MultiGetResponse,Nest", "Nest.MultiGetResponse");
            feature.AddKnownType("Nest.IMultiTermVectorOperation,Nest", "Nest.IMultiTermVectorOperation");
            feature.AddKnownType("Nest.MultiTermVectorOperation`1,Nest", "Nest.MultiTermVectorOperation`1'1");
            feature.AddKnownType("Nest.MultiTermVectorOperationDescriptor`1,Nest", "Nest.MultiTermVectorOperationDescriptor`1'1");
            feature.AddKnownType("Nest.IMultiTermVectorsRequest,Nest", "Nest.IMultiTermVectorsRequest");
            feature.AddKnownType("Nest.MultiTermVectorsRequest,Nest", "Nest.MultiTermVectorsRequest");
            feature.AddKnownType("Nest.MultiTermVectorsResponse,Nest", "Nest.MultiTermVectorsResponse");
            feature.AddKnownType("Nest.IReindexDestination,Nest", "Nest.IReindexDestination");
            feature.AddKnownType("Nest.ReindexDestination,Nest", "Nest.ReindexDestination");
            feature.AddKnownType("Nest.ReindexDestinationDescriptor,Nest", "Nest.ReindexDestinationDescriptor");
            feature.AddKnownType("Nest.IReindexOnServerRequest,Nest", "Nest.IReindexOnServerRequest");
            feature.AddKnownType("Nest.ReindexOnServerRequest,Nest", "Nest.ReindexOnServerRequest");
            feature.AddKnownType("Nest.ReindexOnServerResponse,Nest", "Nest.ReindexOnServerResponse");
            feature.AddKnownType("Nest.ReindexRouting,Nest", "Nest.ReindexRouting");
            feature.AddKnownType("Nest.ReindexRoutingFormatter,Nest", "Nest.ReindexRoutingFormatter");
            feature.AddKnownType("Nest.IReindexSource,Nest", "Nest.IReindexSource");
            feature.AddKnownType("Nest.ReindexSource,Nest", "Nest.ReindexSource");
            feature.AddKnownType("Nest.ReindexSourceDescriptor,Nest", "Nest.ReindexSourceDescriptor");
            feature.AddKnownType("Nest.IRemoteSource,Nest", "Nest.IRemoteSource");
            feature.AddKnownType("Nest.RemoteSource,Nest", "Nest.RemoteSource");
            feature.AddKnownType("Nest.RemoteSourceDescriptor,Nest", "Nest.RemoteSourceDescriptor");
            feature.AddKnownType("Nest.ReindexNode,Nest", "Nest.ReindexNode");
            feature.AddKnownType("Nest.ReindexTask,Nest", "Nest.ReindexTask");
            feature.AddKnownType("Nest.ReindexStatus,Nest", "Nest.ReindexStatus");
            feature.AddKnownType("Nest.IReindexRethrottleRequest,Nest", "Nest.IReindexRethrottleRequest");
            feature.AddKnownType("Nest.ReindexRethrottleRequest,Nest", "Nest.ReindexRethrottleRequest");
            feature.AddKnownType("Nest.ReindexRethrottleResponse,Nest", "Nest.ReindexRethrottleResponse");
            feature.AddKnownType("Nest.ReindexObservable`1,Nest", "Nest.ReindexObservable`1'1");
            feature.AddKnownType("Nest.ReindexObservable`2,Nest", "Nest.ReindexObservable`2'2");
            feature.AddKnownType("Nest.ReindexObserver,Nest", "Nest.ReindexObserver");
            feature.AddKnownType("Nest.IReindexRequest`2,Nest", "Nest.IReindexRequest`2'2");
            feature.AddKnownType("Nest.IReindexRequest`1,Nest", "Nest.IReindexRequest`1'1");
            feature.AddKnownType("Nest.ReindexRequest`2,Nest", "Nest.ReindexRequest`2'2");
            feature.AddKnownType("Nest.ReindexRequest`1,Nest", "Nest.ReindexRequest`1'1");
            feature.AddKnownType("Nest.ReindexDescriptor`2,Nest", "Nest.ReindexDescriptor`2'2");
            feature.AddKnownType("Nest.Retries,Nest", "Nest.Retries");
            feature.AddKnownType("Nest.ScrollAllObservable`1,Nest", "Nest.ScrollAllObservable`1'1");
            feature.AddKnownType("Nest.ScrollAllObserver`1,Nest", "Nest.ScrollAllObserver`1'1");
            feature.AddKnownType("Nest.IScrollAllRequest,Nest", "Nest.IScrollAllRequest");
            feature.AddKnownType("Nest.ScrollAllRequest,Nest", "Nest.ScrollAllRequest");
            feature.AddKnownType("Nest.ScrollAllDescriptor`1,Nest", "Nest.ScrollAllDescriptor`1'1");
            feature.AddKnownType("Nest.IScrollAllResponse`1,Nest", "Nest.IScrollAllResponse`1'1");
            feature.AddKnownType("Nest.ScrollAllResponse`1,Nest", "Nest.ScrollAllResponse`1'1");
            feature.AddKnownType("Nest.IUpdateByQueryRethrottleRequest,Nest", "Nest.IUpdateByQueryRethrottleRequest");
            feature.AddKnownType("Nest.UpdateByQueryRethrottleRequest,Nest", "Nest.UpdateByQueryRethrottleRequest");
            feature.AddKnownType("Nest.IUpdateByQueryRequest,Nest", "Nest.IUpdateByQueryRequest");
            feature.AddKnownType("Nest.IUpdateByQueryRequest`1,Nest", "Nest.IUpdateByQueryRequest`1'1");
            feature.AddKnownType("Nest.UpdateByQueryRequest,Nest", "Nest.UpdateByQueryRequest");
            feature.AddKnownType("Nest.UpdateByQueryRequest`1,Nest", "Nest.UpdateByQueryRequest`1'1");
            feature.AddKnownType("Nest.UpdateByQueryResponse,Nest", "Nest.UpdateByQueryResponse");
            feature.AddKnownType("Nest.Result,Nest", "Nest.Result");
            feature.AddKnownType("Nest.CreateRequestFormatter`1,Nest", "Nest.CreateRequestFormatter`1'1");
            feature.AddKnownType("Nest.ICreateRequest`1,Nest", "Nest.ICreateRequest`1'1");
            feature.AddKnownType("Nest.CreateRequest`1,Nest", "Nest.CreateRequest`1'1");
            feature.AddKnownType("Nest.CreateResponse,Nest", "Nest.CreateResponse");
            feature.AddKnownType("Nest.IDeleteRequest,Nest", "Nest.IDeleteRequest");
            feature.AddKnownType("Nest.IDeleteRequest`1,Nest", "Nest.IDeleteRequest`1'1");
            feature.AddKnownType("Nest.DeleteRequest,Nest", "Nest.DeleteRequest");
            feature.AddKnownType("Nest.DeleteRequest`1,Nest", "Nest.DeleteRequest`1'1");
            feature.AddKnownType("Nest.DeleteResponse,Nest", "Nest.DeleteResponse");
            feature.AddKnownType("Nest.IDocumentExistsRequest,Nest", "Nest.IDocumentExistsRequest");
            feature.AddKnownType("Nest.IDocumentExistsRequest`1,Nest", "Nest.IDocumentExistsRequest`1'1");
            feature.AddKnownType("Nest.DocumentExistsRequest,Nest", "Nest.DocumentExistsRequest");
            feature.AddKnownType("Nest.DocumentExistsRequest`1,Nest", "Nest.DocumentExistsRequest`1'1");
            feature.AddKnownType("Nest.IGetRequest,Nest", "Nest.IGetRequest");
            feature.AddKnownType("Nest.IGetRequest`1,Nest", "Nest.IGetRequest`1'1");
            feature.AddKnownType("Nest.GetRequest,Nest", "Nest.GetRequest");
            feature.AddKnownType("Nest.GetRequest`1,Nest", "Nest.GetRequest`1'1");
            feature.AddKnownType("Nest.IGetResponse`1,Nest", "Nest.IGetResponse`1'1");
            feature.AddKnownType("Nest.GetResponse`1,Nest", "Nest.GetResponse`1'1");
            feature.AddKnownType("Nest.IndexRequestFormatter`1,Nest", "Nest.IndexRequestFormatter`1'1");
            feature.AddKnownType("Nest.IIndexRequest`1,Nest", "Nest.IIndexRequest`1'1");
            feature.AddKnownType("Nest.IndexRequest`1,Nest", "Nest.IndexRequest`1'1");
            feature.AddKnownType("Nest.IndexResponse,Nest", "Nest.IndexResponse");
            feature.AddKnownType("Nest.ISourceExistsRequest,Nest", "Nest.ISourceExistsRequest");
            feature.AddKnownType("Nest.ISourceExistsRequest`1,Nest", "Nest.ISourceExistsRequest`1'1");
            feature.AddKnownType("Nest.SourceExistsRequest,Nest", "Nest.SourceExistsRequest");
            feature.AddKnownType("Nest.SourceExistsRequest`1,Nest", "Nest.SourceExistsRequest`1'1");
            feature.AddKnownType("Nest.ISourceRequest,Nest", "Nest.ISourceRequest");
            feature.AddKnownType("Nest.ISourceRequest`1,Nest", "Nest.ISourceRequest`1'1");
            feature.AddKnownType("Nest.SourceRequest,Nest", "Nest.SourceRequest");
            feature.AddKnownType("Nest.SourceRequest`1,Nest", "Nest.SourceRequest`1'1");
            feature.AddKnownType("Nest.SourceRequestResponseBuilder`1,Nest", "Nest.SourceRequestResponseBuilder`1'1");
            feature.AddKnownType("Nest.ISourceResponse`1,Nest", "Nest.ISourceResponse`1'1");
            feature.AddKnownType("Nest.SourceResponse`1,Nest", "Nest.SourceResponse`1'1");
            feature.AddKnownType("Nest.FieldStatistics,Nest", "Nest.FieldStatistics");
            feature.AddKnownType("Nest.TermVector,Nest", "Nest.TermVector");
            feature.AddKnownType("Nest.ITermVectorFilter,Nest", "Nest.ITermVectorFilter");
            feature.AddKnownType("Nest.TermVectorFilter,Nest", "Nest.TermVectorFilter");
            feature.AddKnownType("Nest.TermVectorFilterDescriptor,Nest", "Nest.TermVectorFilterDescriptor");
            feature.AddKnownType("Nest.ITermVectors,Nest", "Nest.ITermVectors");
            feature.AddKnownType("Nest.TermVectorsResult,Nest", "Nest.TermVectorsResult");
            feature.AddKnownType("Nest.ITermVectorsRequest`1,Nest", "Nest.ITermVectorsRequest`1'1");
            feature.AddKnownType("Nest.TermVectorsRequest`1,Nest", "Nest.TermVectorsRequest`1'1");
            feature.AddKnownType("Nest.TermVectorsResponse,Nest", "Nest.TermVectorsResponse");
            feature.AddKnownType("Nest.TermVectorTerm,Nest", "Nest.TermVectorTerm");
            feature.AddKnownType("Nest.Token,Nest", "Nest.Token");
            feature.AddKnownType("Nest.IUpdateRequest`2,Nest", "Nest.IUpdateRequest`2'2");
            feature.AddKnownType("Nest.UpdateRequest`2,Nest", "Nest.UpdateRequest`2'2");
            feature.AddKnownType("Nest.IUpdateResponse`1,Nest", "Nest.IUpdateResponse`1'1");
            feature.AddKnownType("Nest.UpdateResponse`1,Nest", "Nest.UpdateResponse`1'1");
            feature.AddKnownType("Nest.WriteResponseBase,Nest", "Nest.WriteResponseBase");
            feature.AddKnownType("Nest.NamespacedClientProxy,Nest", "Nest.NamespacedClientProxy");
            feature.AddKnownType("Nest.IHelperCallable,Nest", "Nest.IHelperCallable");
            feature.AddKnownType("Nest.IIndexState,Nest", "Nest.IIndexState");
            feature.AddKnownType("Nest.IndexState,Nest", "Nest.IndexState");
            feature.AddKnownType("Nest.IMergePolicySettings,Nest", "Nest.IMergePolicySettings");
            feature.AddKnownType("Nest.MergePolicySettings,Nest", "Nest.MergePolicySettings");
            feature.AddKnownType("Nest.MergePolicySettingsDescriptor,Nest", "Nest.MergePolicySettingsDescriptor");
            feature.AddKnownType("Nest.IMergeSchedulerSettings,Nest", "Nest.IMergeSchedulerSettings");
            feature.AddKnownType("Nest.MergeSchedulerSettings,Nest", "Nest.MergeSchedulerSettings");
            feature.AddKnownType("Nest.MergeSchedulerSettingsDescriptor,Nest", "Nest.MergeSchedulerSettingsDescriptor");
            feature.AddKnownType("Nest.IMergeSettings,Nest", "Nest.IMergeSettings");
            feature.AddKnownType("Nest.MergeSettings,Nest", "Nest.MergeSettings");
            feature.AddKnownType("Nest.MergeSettingsDescriptor,Nest", "Nest.MergeSettingsDescriptor");
            feature.AddKnownType("Nest.IQueriesCacheSettings,Nest", "Nest.IQueriesCacheSettings");
            feature.AddKnownType("Nest.QueriesCacheSettings,Nest", "Nest.QueriesCacheSettings");
            feature.AddKnownType("Nest.QueriesCacheSettingsDescriptor,Nest", "Nest.QueriesCacheSettingsDescriptor");
            feature.AddKnownType("Nest.IQueriesSettings,Nest", "Nest.IQueriesSettings");
            feature.AddKnownType("Nest.QueriesSettings,Nest", "Nest.QueriesSettings");
            feature.AddKnownType("Nest.QueriesSettingsDescriptor,Nest", "Nest.QueriesSettingsDescriptor");
            feature.AddKnownType("Nest.AutoExpandReplicas,Nest", "Nest.AutoExpandReplicas");
            feature.AddKnownType("Nest.AutoExpandReplicasFormatter,Nest", "Nest.AutoExpandReplicasFormatter");
            feature.AddKnownType("Nest.IDynamicIndexSettings,Nest", "Nest.IDynamicIndexSettings");
            feature.AddKnownType("Nest.DynamicIndexSettings,Nest", "Nest.DynamicIndexSettings");
            feature.AddKnownType("Nest.DynamicIndexSettingsDescriptor,Nest", "Nest.DynamicIndexSettingsDescriptor");
            feature.AddKnownType("Nest.DynamicIndexSettingsDescriptorBase`2,Nest", "Nest.DynamicIndexSettingsDescriptorBase`2'2");
            feature.AddKnownType("Nest.IIndexSettings,Nest", "Nest.IIndexSettings");
            feature.AddKnownType("Nest.IndexSettings,Nest", "Nest.IndexSettings");
            feature.AddKnownType("Nest.IndexSettingsDescriptor,Nest", "Nest.IndexSettingsDescriptor");
            feature.AddKnownType("Nest.IndexSettingsFormatter,Nest", "Nest.IndexSettingsFormatter");
            feature.AddKnownType("Nest.DynamicIndexSettingsFormatter,Nest", "Nest.DynamicIndexSettingsFormatter");
            feature.AddKnownType("Nest.DynamicIndexSettingsFormatter+IndexSettingsDictionaryFormatter,Nest", "Nest.IndexSettingsDictionaryFormatter");
            feature.AddKnownType("Nest.RecoveryInitialShards,Nest", "Nest.RecoveryInitialShards");
            feature.AddKnownType("Nest.ISlowLog,Nest", "Nest.ISlowLog");
            feature.AddKnownType("Nest.SlowLog,Nest", "Nest.SlowLog");
            feature.AddKnownType("Nest.SlowLogDescriptor,Nest", "Nest.SlowLogDescriptor");
            feature.AddKnownType("Nest.ISlowLogIndexing,Nest", "Nest.ISlowLogIndexing");
            feature.AddKnownType("Nest.SlowLogIndexing,Nest", "Nest.SlowLogIndexing");
            feature.AddKnownType("Nest.SlowLogIndexingDescriptor,Nest", "Nest.SlowLogIndexingDescriptor");
            feature.AddKnownType("Nest.ISlowLogSearch,Nest", "Nest.ISlowLogSearch");
            feature.AddKnownType("Nest.SlowLogSearch,Nest", "Nest.SlowLogSearch");
            feature.AddKnownType("Nest.SlowLogSearchDescriptor,Nest", "Nest.SlowLogSearchDescriptor");
            feature.AddKnownType("Nest.ISlowLogSearchFetch,Nest", "Nest.ISlowLogSearchFetch");
            feature.AddKnownType("Nest.SlowLogSearchFetch,Nest", "Nest.SlowLogSearchFetch");
            feature.AddKnownType("Nest.SlowLogSearchFetchDescriptor,Nest", "Nest.SlowLogSearchFetchDescriptor");
            feature.AddKnownType("Nest.ISlowLogSearchQuery,Nest", "Nest.ISlowLogSearchQuery");
            feature.AddKnownType("Nest.SlowLogSearchQuery,Nest", "Nest.SlowLogSearchQuery");
            feature.AddKnownType("Nest.SlowLogSearchQueryDescriptor,Nest", "Nest.SlowLogSearchQueryDescriptor");
            feature.AddKnownType("Nest.LogLevel,Nest", "Nest.LogLevel");
            feature.AddKnownType("Nest.ISoftDeleteRetentionSettings,Nest", "Nest.ISoftDeleteRetentionSettings");
            feature.AddKnownType("Nest.SoftDeleteRetentionSettings,Nest", "Nest.SoftDeleteRetentionSettings");
            feature.AddKnownType("Nest.SoftDeleteRetentionSettingsDescriptor,Nest", "Nest.SoftDeleteRetentionSettingsDescriptor");
            feature.AddKnownType("Nest.ISoftDeleteSettings,Nest", "Nest.ISoftDeleteSettings");
            feature.AddKnownType("Nest.SoftDeleteSettings,Nest", "Nest.SoftDeleteSettings");
            feature.AddKnownType("Nest.SoftDeleteSettingsDescriptor,Nest", "Nest.SoftDeleteSettingsDescriptor");
            feature.AddKnownType("Nest.IndexSortMode,Nest", "Nest.IndexSortMode");
            feature.AddKnownType("Nest.IndexSortMissing,Nest", "Nest.IndexSortMissing");
            feature.AddKnownType("Nest.IndexSortOrder,Nest", "Nest.IndexSortOrder");
            feature.AddKnownType("Nest.ISortingSettings,Nest", "Nest.ISortingSettings");
            feature.AddKnownType("Nest.SortingSettings,Nest", "Nest.SortingSettings");
            feature.AddKnownType("Nest.SortingSettingsDescriptor`1,Nest", "Nest.SortingSettingsDescriptor`1'1");
            feature.AddKnownType("Nest.FileSystemStorageImplementation,Nest", "Nest.FileSystemStorageImplementation");
            feature.AddKnownType("Nest.TranslogDurability,Nest", "Nest.TranslogDurability");
            feature.AddKnownType("Nest.ITranslogFlushSettings,Nest", "Nest.ITranslogFlushSettings");
            feature.AddKnownType("Nest.TranslogFlushSettings,Nest", "Nest.TranslogFlushSettings");
            feature.AddKnownType("Nest.TranslogFlushSettingsDescriptor,Nest", "Nest.TranslogFlushSettingsDescriptor");
            feature.AddKnownType("Nest.ITranslogSettings,Nest", "Nest.ITranslogSettings");
            feature.AddKnownType("Nest.TranslogSettings,Nest", "Nest.TranslogSettings");
            feature.AddKnownType("Nest.TranslogSettingsDescriptor,Nest", "Nest.TranslogSettingsDescriptor");
            feature.AddKnownType("Nest.IBM25Similarity,Nest", "Nest.IBM25Similarity");
            feature.AddKnownType("Nest.BM25Similarity,Nest", "Nest.BM25Similarity");
            feature.AddKnownType("Nest.BM25SimilarityDescriptor,Nest", "Nest.BM25SimilarityDescriptor");
            feature.AddKnownType("Nest.ICustomSimilarity,Nest", "Nest.ICustomSimilarity");
            feature.AddKnownType("Nest.CustomSimilarity,Nest", "Nest.CustomSimilarity");
            feature.AddKnownType("Nest.CustomSimilarityDescriptor,Nest", "Nest.CustomSimilarityDescriptor");
            feature.AddKnownType("Nest.DFIIndependenceMeasure,Nest", "Nest.DFIIndependenceMeasure");
            feature.AddKnownType("Nest.IDFISimilarity,Nest", "Nest.IDFISimilarity");
            feature.AddKnownType("Nest.DFISimilarity,Nest", "Nest.DFISimilarity");
            feature.AddKnownType("Nest.DFISimilarityDescriptor,Nest", "Nest.DFISimilarityDescriptor");
            feature.AddKnownType("Nest.DFRAfterEffect,Nest", "Nest.DFRAfterEffect");
            feature.AddKnownType("Nest.DFRBasicModel,Nest", "Nest.DFRBasicModel");
            feature.AddKnownType("Nest.IDFRSimilarity,Nest", "Nest.IDFRSimilarity");
            feature.AddKnownType("Nest.DFRSimilarity,Nest", "Nest.DFRSimilarity");
            feature.AddKnownType("Nest.DFRSimilarityDescriptor,Nest", "Nest.DFRSimilarityDescriptor");
            feature.AddKnownType("Nest.IBDistribution,Nest", "Nest.IBDistribution");
            feature.AddKnownType("Nest.IBLambda,Nest", "Nest.IBLambda");
            feature.AddKnownType("Nest.IIBSimilarity,Nest", "Nest.IIBSimilarity");
            feature.AddKnownType("Nest.IBSimilarity,Nest", "Nest.IBSimilarity");
            feature.AddKnownType("Nest.IBSimilarityDescriptor,Nest", "Nest.IBSimilarityDescriptor");
            feature.AddKnownType("Nest.ILMDirichletSimilarity,Nest", "Nest.ILMDirichletSimilarity");
            feature.AddKnownType("Nest.LMDirichletSimilarity,Nest", "Nest.LMDirichletSimilarity");
            feature.AddKnownType("Nest.LMDirichletSimilarityDescriptor,Nest", "Nest.LMDirichletSimilarityDescriptor");
            feature.AddKnownType("Nest.ILMJelinekMercerSimilarity,Nest", "Nest.ILMJelinekMercerSimilarity");
            feature.AddKnownType("Nest.LMJelinekMercerSimilarity,Nest", "Nest.LMJelinekMercerSimilarity");
            feature.AddKnownType("Nest.LMJelinekMercerSimilarityDescriptor,Nest", "Nest.LMJelinekMercerSimilarityDescriptor");
            feature.AddKnownType("Nest.Normalization,Nest", "Nest.Normalization");
            feature.AddKnownType("Nest.IScriptedSimilarity,Nest", "Nest.IScriptedSimilarity");
            feature.AddKnownType("Nest.ScriptedSimilarity,Nest", "Nest.ScriptedSimilarity");
            feature.AddKnownType("Nest.ScriptedSimilarityDescriptor,Nest", "Nest.ScriptedSimilarityDescriptor");
            feature.AddKnownType("Nest.ISimilarities,Nest", "Nest.ISimilarities");
            feature.AddKnownType("Nest.Similarities,Nest", "Nest.Similarities");
            feature.AddKnownType("Nest.SimilaritiesDescriptor,Nest", "Nest.SimilaritiesDescriptor");
            feature.AddKnownType("Nest.ISimilarity,Nest", "Nest.ISimilarity");
            feature.AddKnownType("Nest.SimilarityFormatter,Nest", "Nest.SimilarityFormatter");
            feature.AddKnownType("Nest.IAlias,Nest", "Nest.IAlias");
            feature.AddKnownType("Nest.Alias,Nest", "Nest.Alias");
            feature.AddKnownType("Nest.AliasDescriptor,Nest", "Nest.AliasDescriptor");
            feature.AddKnownType("Nest.AliasDefinition,Nest", "Nest.AliasDefinition");
            feature.AddKnownType("Nest.IAliases,Nest", "Nest.IAliases");
            feature.AddKnownType("Nest.Aliases,Nest", "Nest.Aliases");
            feature.AddKnownType("Nest.AliasesDescriptor,Nest", "Nest.AliasesDescriptor");
            feature.AddKnownType("Nest.IAliasExistsRequest,Nest", "Nest.IAliasExistsRequest");
            feature.AddKnownType("Nest.AliasExistsRequest,Nest", "Nest.AliasExistsRequest");
            feature.AddKnownType("Nest.IAliasAddAction,Nest", "Nest.IAliasAddAction");
            feature.AddKnownType("Nest.AliasAddAction,Nest", "Nest.AliasAddAction");
            feature.AddKnownType("Nest.AliasAddDescriptor,Nest", "Nest.AliasAddDescriptor");
            feature.AddKnownType("Nest.AliasAddOperation,Nest", "Nest.AliasAddOperation");
            feature.AddKnownType("Nest.IAliasRemoveAction,Nest", "Nest.IAliasRemoveAction");
            feature.AddKnownType("Nest.AliasRemoveAction,Nest", "Nest.AliasRemoveAction");
            feature.AddKnownType("Nest.AliasRemoveDescriptor,Nest", "Nest.AliasRemoveDescriptor");
            feature.AddKnownType("Nest.IAliasRemoveIndexAction,Nest", "Nest.IAliasRemoveIndexAction");
            feature.AddKnownType("Nest.AliasRemoveIndexAction,Nest", "Nest.AliasRemoveIndexAction");
            feature.AddKnownType("Nest.AliasRemoveIndexDescriptor,Nest", "Nest.AliasRemoveIndexDescriptor");
            feature.AddKnownType("Nest.AliasRemoveIndexOperation,Nest", "Nest.AliasRemoveIndexOperation");
            feature.AddKnownType("Nest.AliasRemoveOperation,Nest", "Nest.AliasRemoveOperation");
            feature.AddKnownType("Nest.IAliasAction,Nest", "Nest.IAliasAction");
            feature.AddKnownType("Nest.AliasActionFormatter,Nest", "Nest.AliasActionFormatter");
            feature.AddKnownType("Nest.IBulkAliasRequest,Nest", "Nest.IBulkAliasRequest");
            feature.AddKnownType("Nest.BulkAliasRequest,Nest", "Nest.BulkAliasRequest");
            feature.AddKnownType("Nest.BulkAliasResponse,Nest", "Nest.BulkAliasResponse");
            feature.AddKnownType("Nest.IDeleteAliasRequest,Nest", "Nest.IDeleteAliasRequest");
            feature.AddKnownType("Nest.DeleteAliasRequest,Nest", "Nest.DeleteAliasRequest");
            feature.AddKnownType("Nest.DeleteAliasResponse,Nest", "Nest.DeleteAliasResponse");
            feature.AddKnownType("Nest.IGetAliasRequest,Nest", "Nest.IGetAliasRequest");
            feature.AddKnownType("Nest.GetAliasRequest,Nest", "Nest.GetAliasRequest");
            feature.AddKnownType("Nest.GetAliasResponse,Nest", "Nest.GetAliasResponse");
            feature.AddKnownType("Nest.IndexAliases,Nest", "Nest.IndexAliases");
            feature.AddKnownType("Nest.IPutAliasRequest,Nest", "Nest.IPutAliasRequest");
            feature.AddKnownType("Nest.PutAliasRequest,Nest", "Nest.PutAliasRequest");
            feature.AddKnownType("Nest.PutAliasResponse,Nest", "Nest.PutAliasResponse");
            feature.AddKnownType("Nest.AnalyzeCharFilters,Nest", "Nest.AnalyzeCharFilters");
            feature.AddKnownType("Nest.AnalyzeCharFiltersDescriptor,Nest", "Nest.AnalyzeCharFiltersDescriptor");
            feature.AddKnownType("Nest.IAnalyzeRequest,Nest", "Nest.IAnalyzeRequest");
            feature.AddKnownType("Nest.AnalyzeRequest,Nest", "Nest.AnalyzeRequest");
            feature.AddKnownType("Nest.AnalyzeResponse,Nest", "Nest.AnalyzeResponse");
            feature.AddKnownType("Nest.AnalyzeDetail,Nest", "Nest.AnalyzeDetail");
            feature.AddKnownType("Nest.CharFilterDetail,Nest", "Nest.CharFilterDetail");
            feature.AddKnownType("Nest.TokenDetail,Nest", "Nest.TokenDetail");
            feature.AddKnownType("Nest.ExplainAnalyzeToken,Nest", "Nest.ExplainAnalyzeToken");
            feature.AddKnownType("Nest.AnalyzeToken,Nest", "Nest.AnalyzeToken");
            feature.AddKnownType("Nest.AnalyzeTokenFilters,Nest", "Nest.AnalyzeTokenFilters");
            feature.AddKnownType("Nest.AnalyzeTokenFiltersDescriptor,Nest", "Nest.AnalyzeTokenFiltersDescriptor");
            feature.AddKnownType("Nest.AnalyzeTokenizersSelector,Nest", "Nest.AnalyzeTokenizersSelector");
            feature.AddKnownType("Nest.IAddIndexBlockRequest,Nest", "Nest.IAddIndexBlockRequest");
            feature.AddKnownType("Nest.AddIndexBlockRequest,Nest", "Nest.AddIndexBlockRequest");
            feature.AddKnownType("Nest.AddIndexBlockResponse,Nest", "Nest.AddIndexBlockResponse");
            feature.AddKnownType("Nest.BlockedIndex,Nest", "Nest.BlockedIndex");
            feature.AddKnownType("Nest.IndexBlock,Nest", "Nest.IndexBlock");
            feature.AddKnownType("Nest.ICloneIndexRequest,Nest", "Nest.ICloneIndexRequest");
            feature.AddKnownType("Nest.CloneIndexRequest,Nest", "Nest.CloneIndexRequest");
            feature.AddKnownType("Nest.CloneIndexResponse,Nest", "Nest.CloneIndexResponse");
            feature.AddKnownType("Nest.ICreateIndexRequest,Nest", "Nest.ICreateIndexRequest");
            feature.AddKnownType("Nest.CreateIndexRequest,Nest", "Nest.CreateIndexRequest");
            feature.AddKnownType("Nest.CreateIndexResponse,Nest", "Nest.CreateIndexResponse");
            feature.AddKnownType("Nest.IDeleteIndexRequest,Nest", "Nest.IDeleteIndexRequest");
            feature.AddKnownType("Nest.DeleteIndexRequest,Nest", "Nest.DeleteIndexRequest");
            feature.AddKnownType("Nest.DeleteIndexResponse,Nest", "Nest.DeleteIndexResponse");
            feature.AddKnownType("Nest.IFreezeIndexRequest,Nest", "Nest.IFreezeIndexRequest");
            feature.AddKnownType("Nest.FreezeIndexRequest,Nest", "Nest.FreezeIndexRequest");
            feature.AddKnownType("Nest.FreezeIndexResponse,Nest", "Nest.FreezeIndexResponse");
            feature.AddKnownType("Nest.IGetIndexRequest,Nest", "Nest.IGetIndexRequest");
            feature.AddKnownType("Nest.GetIndexRequest,Nest", "Nest.GetIndexRequest");
            feature.AddKnownType("Nest.GetIndexResponse,Nest", "Nest.GetIndexResponse");
            feature.AddKnownType("Nest.ExistsResponse,Nest", "Nest.ExistsResponse");
            feature.AddKnownType("Nest.IIndexExistsRequest,Nest", "Nest.IIndexExistsRequest");
            feature.AddKnownType("Nest.IndexExistsRequest,Nest", "Nest.IndexExistsRequest");
            feature.AddKnownType("Nest.ICloseIndexRequest,Nest", "Nest.ICloseIndexRequest");
            feature.AddKnownType("Nest.CloseIndexRequest,Nest", "Nest.CloseIndexRequest");
            feature.AddKnownType("Nest.CloseIndexResponse,Nest", "Nest.CloseIndexResponse");
            feature.AddKnownType("Nest.CloseIndexResult,Nest", "Nest.CloseIndexResult");
            feature.AddKnownType("Nest.CloseShardResult,Nest", "Nest.CloseShardResult");
            feature.AddKnownType("Nest.IOpenIndexRequest,Nest", "Nest.IOpenIndexRequest");
            feature.AddKnownType("Nest.OpenIndexRequest,Nest", "Nest.OpenIndexRequest");
            feature.AddKnownType("Nest.OpenIndexResponse,Nest", "Nest.OpenIndexResponse");
            feature.AddKnownType("Nest.IResolveIndexRequest,Nest", "Nest.IResolveIndexRequest");
            feature.AddKnownType("Nest.ResolveIndexRequest,Nest", "Nest.ResolveIndexRequest");
            feature.AddKnownType("Nest.ResolveIndexResponse,Nest", "Nest.ResolveIndexResponse");
            feature.AddKnownType("Nest.ResolvedIndex,Nest", "Nest.ResolvedIndex");
            feature.AddKnownType("Nest.ResolvedAlias,Nest", "Nest.ResolvedAlias");
            feature.AddKnownType("Nest.ResolvedDataStream,Nest", "Nest.ResolvedDataStream");
            feature.AddKnownType("Nest.IRolloverConditions,Nest", "Nest.IRolloverConditions");
            feature.AddKnownType("Nest.RolloverConditions,Nest", "Nest.RolloverConditions");
            feature.AddKnownType("Nest.RolloverConditionsDescriptor,Nest", "Nest.RolloverConditionsDescriptor");
            feature.AddKnownType("Nest.IRolloverIndexRequest,Nest", "Nest.IRolloverIndexRequest");
            feature.AddKnownType("Nest.RolloverIndexRequest,Nest", "Nest.RolloverIndexRequest");
            feature.AddKnownType("Nest.RolloverIndexResponse,Nest", "Nest.RolloverIndexResponse");
            feature.AddKnownType("Nest.IShrinkIndexRequest,Nest", "Nest.IShrinkIndexRequest");
            feature.AddKnownType("Nest.ShrinkIndexRequest,Nest", "Nest.ShrinkIndexRequest");
            feature.AddKnownType("Nest.ShrinkIndexResponse,Nest", "Nest.ShrinkIndexResponse");
            feature.AddKnownType("Nest.ISplitIndexRequest,Nest", "Nest.ISplitIndexRequest");
            feature.AddKnownType("Nest.SplitIndexRequest,Nest", "Nest.SplitIndexRequest");
            feature.AddKnownType("Nest.SplitIndexResponse,Nest", "Nest.SplitIndexResponse");
            feature.AddKnownType("Nest.ITypeExistsRequest,Nest", "Nest.ITypeExistsRequest");
            feature.AddKnownType("Nest.TypeExistsRequest,Nest", "Nest.TypeExistsRequest");
            feature.AddKnownType("Nest.IUnfreezeIndexRequest,Nest", "Nest.IUnfreezeIndexRequest");
            feature.AddKnownType("Nest.UnfreezeIndexRequest,Nest", "Nest.UnfreezeIndexRequest");
            feature.AddKnownType("Nest.UnfreezeIndexResponse,Nest", "Nest.UnfreezeIndexResponse");
            feature.AddKnownType("Nest.IGetIndexSettingsRequest,Nest", "Nest.IGetIndexSettingsRequest");
            feature.AddKnownType("Nest.GetIndexSettingsRequest,Nest", "Nest.GetIndexSettingsRequest");
            feature.AddKnownType("Nest.GetIndexSettingsResponse,Nest", "Nest.GetIndexSettingsResponse");
            feature.AddKnownType("Nest.IDeleteIndexTemplateRequest,Nest", "Nest.IDeleteIndexTemplateRequest");
            feature.AddKnownType("Nest.DeleteIndexTemplateRequest,Nest", "Nest.DeleteIndexTemplateRequest");
            feature.AddKnownType("Nest.DeleteIndexTemplateResponse,Nest", "Nest.DeleteIndexTemplateResponse");
            feature.AddKnownType("Nest.IGetIndexTemplateRequest,Nest", "Nest.IGetIndexTemplateRequest");
            feature.AddKnownType("Nest.GetIndexTemplateRequest,Nest", "Nest.GetIndexTemplateRequest");
            feature.AddKnownType("Nest.GetIndexTemplateResponse,Nest", "Nest.GetIndexTemplateResponse");
            feature.AddKnownType("Nest.ITemplateMapping,Nest", "Nest.ITemplateMapping");
            feature.AddKnownType("Nest.TemplateMapping,Nest", "Nest.TemplateMapping");
            feature.AddKnownType("Nest.IIndexTemplateExistsRequest,Nest", "Nest.IIndexTemplateExistsRequest");
            feature.AddKnownType("Nest.IndexTemplateExistsRequest,Nest", "Nest.IndexTemplateExistsRequest");
            feature.AddKnownType("Nest.IPutIndexTemplateRequest,Nest", "Nest.IPutIndexTemplateRequest");
            feature.AddKnownType("Nest.PutIndexTemplateRequest,Nest", "Nest.PutIndexTemplateRequest");
            feature.AddKnownType("Nest.PutIndexTemplateResponse,Nest", "Nest.PutIndexTemplateResponse");
            feature.AddKnownType("Nest.IUpdateIndexSettingsRequest,Nest", "Nest.IUpdateIndexSettingsRequest");
            feature.AddKnownType("Nest.UpdateIndexSettingsRequest,Nest", "Nest.UpdateIndexSettingsRequest");
            feature.AddKnownType("Nest.UpdateIndexSettingsRequestFormatter,Nest", "Nest.UpdateIndexSettingsRequestFormatter");
            feature.AddKnownType("Nest.UpdateIndexSettingsResponse,Nest", "Nest.UpdateIndexSettingsResponse");
            feature.AddKnownType("Nest.IDeleteIndexTemplateV2Request,Nest", "Nest.IDeleteIndexTemplateV2Request");
            feature.AddKnownType("Nest.DeleteIndexTemplateV2Request,Nest", "Nest.DeleteIndexTemplateV2Request");
            feature.AddKnownType("Nest.DeleteIndexTemplateV2Response,Nest", "Nest.DeleteIndexTemplateV2Response");
            feature.AddKnownType("Nest.IGetIndexTemplateV2Request,Nest", "Nest.IGetIndexTemplateV2Request");
            feature.AddKnownType("Nest.GetIndexTemplateV2Request,Nest", "Nest.GetIndexTemplateV2Request");
            feature.AddKnownType("Nest.GetIndexTemplateV2Response,Nest", "Nest.GetIndexTemplateV2Response");
            feature.AddKnownType("Nest.IndexTemplateItem,Nest", "Nest.IndexTemplateItem");
            feature.AddKnownType("Nest.IndexTemplate,Nest", "Nest.IndexTemplate");
            feature.AddKnownType("Nest.IIndexTemplateV2ExistsRequest,Nest", "Nest.IIndexTemplateV2ExistsRequest");
            feature.AddKnownType("Nest.IndexTemplateV2ExistsRequest,Nest", "Nest.IndexTemplateV2ExistsRequest");
            feature.AddKnownType("Nest.IndexTemplateV2ExistsResponse,Nest", "Nest.IndexTemplateV2ExistsResponse");
            feature.AddKnownType("Nest.IPutIndexTemplateV2Request,Nest", "Nest.IPutIndexTemplateV2Request");
            feature.AddKnownType("Nest.PutIndexTemplateV2Request,Nest", "Nest.PutIndexTemplateV2Request");
            feature.AddKnownType("Nest.DataStream,Nest", "Nest.DataStream");
            feature.AddKnownType("Nest.PutIndexTemplateV2Response,Nest", "Nest.PutIndexTemplateV2Response");
            feature.AddKnownType("Nest.FieldMappingFormatter,Nest", "Nest.FieldMappingFormatter");
            feature.AddKnownType("Nest.IGetFieldMappingRequest,Nest", "Nest.IGetFieldMappingRequest");
            feature.AddKnownType("Nest.GetFieldMappingRequest,Nest", "Nest.GetFieldMappingRequest");
            feature.AddKnownType("Nest.GetFieldMappingResponse,Nest", "Nest.GetFieldMappingResponse");
            feature.AddKnownType("Nest.TypeFieldMappings,Nest", "Nest.TypeFieldMappings");
            feature.AddKnownType("Nest.FieldMapping,Nest", "Nest.FieldMapping");
            feature.AddKnownType("Nest.IGetMappingRequest,Nest", "Nest.IGetMappingRequest");
            feature.AddKnownType("Nest.GetMappingRequest,Nest", "Nest.GetMappingRequest");
            feature.AddKnownType("Nest.GetMappingResponse,Nest", "Nest.GetMappingResponse");
            feature.AddKnownType("Nest.IndexMappings,Nest", "Nest.IndexMappings");
            feature.AddKnownType("Nest.IPutMappingRequest,Nest", "Nest.IPutMappingRequest");
            feature.AddKnownType("Nest.IPutMappingRequest`1,Nest", "Nest.IPutMappingRequest`1'1");
            feature.AddKnownType("Nest.PutMappingRequest,Nest", "Nest.PutMappingRequest");
            feature.AddKnownType("Nest.PutMappingRequest`1,Nest", "Nest.PutMappingRequest`1'1");
            feature.AddKnownType("Nest.PutMappingResponse,Nest", "Nest.PutMappingResponse");
            feature.AddKnownType("Nest.RecoveryBytes,Nest", "Nest.RecoveryBytes");
            feature.AddKnownType("Nest.RecoveryFileDetails,Nest", "Nest.RecoveryFileDetails");
            feature.AddKnownType("Nest.RecoveryFiles,Nest", "Nest.RecoveryFiles");
            feature.AddKnownType("Nest.RecoveryIndexStatus,Nest", "Nest.RecoveryIndexStatus");
            feature.AddKnownType("Nest.RecoveryOrigin,Nest", "Nest.RecoveryOrigin");
            feature.AddKnownType("Nest.RecoveryStartStatus,Nest", "Nest.RecoveryStartStatus");
            feature.AddKnownType("Nest.RecoveryStatus,Nest", "Nest.RecoveryStatus");
            feature.AddKnownType("Nest.IRecoveryStatusRequest,Nest", "Nest.IRecoveryStatusRequest");
            feature.AddKnownType("Nest.RecoveryStatusRequest,Nest", "Nest.RecoveryStatusRequest");
            feature.AddKnownType("Nest.RecoveryStatusResponse,Nest", "Nest.RecoveryStatusResponse");
            feature.AddKnownType("Nest.RecoveryTranslogStatus,Nest", "Nest.RecoveryTranslogStatus");
            feature.AddKnownType("Nest.RecoveryVerifyIndex,Nest", "Nest.RecoveryVerifyIndex");
            feature.AddKnownType("Nest.ShardRecovery,Nest", "Nest.ShardRecovery");
            feature.AddKnownType("Nest.IndexSegment,Nest", "Nest.IndexSegment");
            feature.AddKnownType("Nest.Segment,Nest", "Nest.Segment");
            feature.AddKnownType("Nest.ISegmentsRequest,Nest", "Nest.ISegmentsRequest");
            feature.AddKnownType("Nest.SegmentsRequest,Nest", "Nest.SegmentsRequest");
            feature.AddKnownType("Nest.SegmentsResponse,Nest", "Nest.SegmentsResponse");
            feature.AddKnownType("Nest.ShardSegmentRouting,Nest", "Nest.ShardSegmentRouting");
            feature.AddKnownType("Nest.ShardsSegment,Nest", "Nest.ShardsSegment");
            feature.AddKnownType("Nest.ShardsSegment+Json,Nest", "Nest.Json");
            feature.AddKnownType("Nest.IIndicesShardStoresRequest,Nest", "Nest.IIndicesShardStoresRequest");
            feature.AddKnownType("Nest.IndicesShardStoresRequest,Nest", "Nest.IndicesShardStoresRequest");
            feature.AddKnownType("Nest.IndicesShardStoresResponse,Nest", "Nest.IndicesShardStoresResponse");
            feature.AddKnownType("Nest.IndicesShardStores,Nest", "Nest.IndicesShardStores");
            feature.AddKnownType("Nest.ShardStoreWrapper,Nest", "Nest.ShardStoreWrapper");
            feature.AddKnownType("Nest.ShardStore,Nest", "Nest.ShardStore");
            feature.AddKnownType("Nest.ShardStoreException,Nest", "Nest.ShardStoreException");
            feature.AddKnownType("Nest.ShardStoreAllocation,Nest", "Nest.ShardStoreAllocation");
            feature.AddKnownType("Nest.ShardStoreFormatter,Nest", "Nest.ShardStoreFormatter");
            feature.AddKnownType("Nest.IndexStats,Nest", "Nest.IndexStats");
            feature.AddKnownType("Nest.IndicesStats,Nest", "Nest.IndicesStats");
            feature.AddKnownType("Nest.IIndicesStatsRequest,Nest", "Nest.IIndicesStatsRequest");
            feature.AddKnownType("Nest.IndicesStatsRequest,Nest", "Nest.IndicesStatsRequest");
            feature.AddKnownType("Nest.IndicesStatsResponse,Nest", "Nest.IndicesStatsResponse");
            feature.AddKnownType("Nest.ShardCommit,Nest", "Nest.ShardCommit");
            feature.AddKnownType("Nest.ShardCompletion,Nest", "Nest.ShardCompletion");
            feature.AddKnownType("Nest.ShardDocs,Nest", "Nest.ShardDocs");
            feature.AddKnownType("Nest.ShardFielddata,Nest", "Nest.ShardFielddata");
            feature.AddKnownType("Nest.ShardFileSizeInfo,Nest", "Nest.ShardFileSizeInfo");
            feature.AddKnownType("Nest.ShardFlush,Nest", "Nest.ShardFlush");
            feature.AddKnownType("Nest.ShardGet,Nest", "Nest.ShardGet");
            feature.AddKnownType("Nest.ShardIndexing,Nest", "Nest.ShardIndexing");
            feature.AddKnownType("Nest.ShardMerges,Nest", "Nest.ShardMerges");
            feature.AddKnownType("Nest.ShardPath,Nest", "Nest.ShardPath");
            feature.AddKnownType("Nest.ShardQueryCache,Nest", "Nest.ShardQueryCache");
            feature.AddKnownType("Nest.ShardRefresh,Nest", "Nest.ShardRefresh");
            feature.AddKnownType("Nest.ShardRequestCache,Nest", "Nest.ShardRequestCache");
            feature.AddKnownType("Nest.ShardRouting,Nest", "Nest.ShardRouting");
            feature.AddKnownType("Nest.ShardRoutingState,Nest", "Nest.ShardRoutingState");
            feature.AddKnownType("Nest.ShardSearch,Nest", "Nest.ShardSearch");
            feature.AddKnownType("Nest.ShardSegments,Nest", "Nest.ShardSegments");
            feature.AddKnownType("Nest.ShardSequenceNumber,Nest", "Nest.ShardSequenceNumber");
            feature.AddKnownType("Nest.ShardStats,Nest", "Nest.ShardStats");
            feature.AddKnownType("Nest.ShardStatsRecovery,Nest", "Nest.ShardStatsRecovery");
            feature.AddKnownType("Nest.ShardStatsStore,Nest", "Nest.ShardStatsStore");
            feature.AddKnownType("Nest.ShardTotalStats,Nest", "Nest.ShardTotalStats");
            feature.AddKnownType("Nest.ShardTransactionLog,Nest", "Nest.ShardTransactionLog");
            feature.AddKnownType("Nest.ShardWarmer,Nest", "Nest.ShardWarmer");
            feature.AddKnownType("Nest.ReloadDetails,Nest", "Nest.ReloadDetails");
            feature.AddKnownType("Nest.IReloadSearchAnalyzersRequest,Nest", "Nest.IReloadSearchAnalyzersRequest");
            feature.AddKnownType("Nest.ReloadSearchAnalyzersRequest,Nest", "Nest.ReloadSearchAnalyzersRequest");
            feature.AddKnownType("Nest.ReloadSearchAnalyzersResponse,Nest", "Nest.ReloadSearchAnalyzersResponse");
            feature.AddKnownType("Nest.IClearCacheRequest,Nest", "Nest.IClearCacheRequest");
            feature.AddKnownType("Nest.ClearCacheRequest,Nest", "Nest.ClearCacheRequest");
            feature.AddKnownType("Nest.ClearCacheResponse,Nest", "Nest.ClearCacheResponse");
            feature.AddKnownType("Nest.IFlushRequest,Nest", "Nest.IFlushRequest");
            feature.AddKnownType("Nest.FlushRequest,Nest", "Nest.FlushRequest");
            feature.AddKnownType("Nest.FlushResponse,Nest", "Nest.FlushResponse");
            feature.AddKnownType("Nest.IForceMergeRequest,Nest", "Nest.IForceMergeRequest");
            feature.AddKnownType("Nest.ForceMergeRequest,Nest", "Nest.ForceMergeRequest");
            feature.AddKnownType("Nest.ForceMergeResponse,Nest", "Nest.ForceMergeResponse");
            feature.AddKnownType("Nest.IRefreshRequest,Nest", "Nest.IRefreshRequest");
            feature.AddKnownType("Nest.RefreshRequest,Nest", "Nest.RefreshRequest");
            feature.AddKnownType("Nest.RefreshResponse,Nest", "Nest.RefreshResponse");
            feature.AddKnownType("Nest.ISyncedFlushRequest,Nest", "Nest.ISyncedFlushRequest");
            feature.AddKnownType("Nest.SyncedFlushRequest,Nest", "Nest.SyncedFlushRequest");
            feature.AddKnownType("Nest.SyncedFlushResponse,Nest", "Nest.SyncedFlushResponse");
            feature.AddKnownType("Nest.IDeletePipelineRequest,Nest", "Nest.IDeletePipelineRequest");
            feature.AddKnownType("Nest.DeletePipelineRequest,Nest", "Nest.DeletePipelineRequest");
            feature.AddKnownType("Nest.DeletePipelineResponse,Nest", "Nest.DeletePipelineResponse");
            feature.AddKnownType("Nest.IGetPipelineRequest,Nest", "Nest.IGetPipelineRequest");
            feature.AddKnownType("Nest.GetPipelineRequest,Nest", "Nest.GetPipelineRequest");
            feature.AddKnownType("Nest.GetPipelineResponse,Nest", "Nest.GetPipelineResponse");
            feature.AddKnownType("Nest.IPipeline,Nest", "Nest.IPipeline");
            feature.AddKnownType("Nest.Pipeline,Nest", "Nest.Pipeline");
            feature.AddKnownType("Nest.PipelineDescriptor,Nest", "Nest.PipelineDescriptor");
            feature.AddKnownType("Nest.IProcessor,Nest", "Nest.IProcessor");
            feature.AddKnownType("Nest.ProcessorBase,Nest", "Nest.ProcessorBase");
            feature.AddKnownType("Nest.ProcessorDescriptorBase`2,Nest", "Nest.ProcessorDescriptorBase`2'2");
            feature.AddKnownType("Nest.ProcessorFormatter,Nest", "Nest.ProcessorFormatter");
            feature.AddKnownType("Nest.ProcessorsDescriptor,Nest", "Nest.ProcessorsDescriptor");
            feature.AddKnownType("Nest.IAppendProcessor,Nest", "Nest.IAppendProcessor");
            feature.AddKnownType("Nest.AppendProcessor,Nest", "Nest.AppendProcessor");
            feature.AddKnownType("Nest.AppendProcessorDescriptor`1,Nest", "Nest.AppendProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.IBytesProcessor,Nest", "Nest.IBytesProcessor");
            feature.AddKnownType("Nest.BytesProcessor,Nest", "Nest.BytesProcessor");
            feature.AddKnownType("Nest.BytesProcessorDescriptor`1,Nest", "Nest.BytesProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.ShapeType,Nest", "Nest.ShapeType");
            feature.AddKnownType("Nest.ICircleProcessor,Nest", "Nest.ICircleProcessor");
            feature.AddKnownType("Nest.CircleProcessor,Nest", "Nest.CircleProcessor");
            feature.AddKnownType("Nest.CircleProcessorDescriptor`1,Nest", "Nest.CircleProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.IConvertProcessor,Nest", "Nest.IConvertProcessor");
            feature.AddKnownType("Nest.ConvertProcessor,Nest", "Nest.ConvertProcessor");
            feature.AddKnownType("Nest.ConvertProcessorDescriptor`1,Nest", "Nest.ConvertProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.ConvertProcessorType,Nest", "Nest.ConvertProcessorType");
            feature.AddKnownType("Nest.ICsvProcessor,Nest", "Nest.ICsvProcessor");
            feature.AddKnownType("Nest.CsvProcessor,Nest", "Nest.CsvProcessor");
            feature.AddKnownType("Nest.CsvProcessorDescriptor`1,Nest", "Nest.CsvProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.IDateIndexNameProcessor,Nest", "Nest.IDateIndexNameProcessor");
            feature.AddKnownType("Nest.DateIndexNameProcessor,Nest", "Nest.DateIndexNameProcessor");
            feature.AddKnownType("Nest.DateIndexNameProcessorDescriptor`1,Nest", "Nest.DateIndexNameProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.DateRounding,Nest", "Nest.DateRounding");
            feature.AddKnownType("Nest.IDateProcessor,Nest", "Nest.IDateProcessor");
            feature.AddKnownType("Nest.DateProcessor,Nest", "Nest.DateProcessor");
            feature.AddKnownType("Nest.DateProcessorDescriptor`1,Nest", "Nest.DateProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.IDissectProcessor,Nest", "Nest.IDissectProcessor");
            feature.AddKnownType("Nest.DissectProcessor,Nest", "Nest.DissectProcessor");
            feature.AddKnownType("Nest.DissectProcessorDescriptor`1,Nest", "Nest.DissectProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.IDotExpanderProcessor,Nest", "Nest.IDotExpanderProcessor");
            feature.AddKnownType("Nest.DotExpanderProcessor,Nest", "Nest.DotExpanderProcessor");
            feature.AddKnownType("Nest.DotExpanderProcessorDescriptor`1,Nest", "Nest.DotExpanderProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.IDropProcessor,Nest", "Nest.IDropProcessor");
            feature.AddKnownType("Nest.DropProcessor,Nest", "Nest.DropProcessor");
            feature.AddKnownType("Nest.DropProcessorDescriptor,Nest", "Nest.DropProcessorDescriptor");
            feature.AddKnownType("Nest.IEnrichProcessor,Nest", "Nest.IEnrichProcessor");
            feature.AddKnownType("Nest.EnrichProcessor,Nest", "Nest.EnrichProcessor");
            feature.AddKnownType("Nest.EnrichProcessorDescriptor`1,Nest", "Nest.EnrichProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.IFailProcessor,Nest", "Nest.IFailProcessor");
            feature.AddKnownType("Nest.FailProcessor,Nest", "Nest.FailProcessor");
            feature.AddKnownType("Nest.FailProcessorDescriptor,Nest", "Nest.FailProcessorDescriptor");
            feature.AddKnownType("Nest.IFingerprintProcessor,Nest", "Nest.IFingerprintProcessor");
            feature.AddKnownType("Nest.FingerprintProcessor,Nest", "Nest.FingerprintProcessor");
            feature.AddKnownType("Nest.FingerprintProcessorDescriptor`1,Nest", "Nest.FingerprintProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.IForeachProcessor,Nest", "Nest.IForeachProcessor");
            feature.AddKnownType("Nest.ForeachProcessor,Nest", "Nest.ForeachProcessor");
            feature.AddKnownType("Nest.ForeachProcessorDescriptor`1,Nest", "Nest.ForeachProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.IGrokProcessor,Nest", "Nest.IGrokProcessor");
            feature.AddKnownType("Nest.GrokProcessor,Nest", "Nest.GrokProcessor");
            feature.AddKnownType("Nest.GrokProcessorDescriptor`1,Nest", "Nest.GrokProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.IGsubProcessor,Nest", "Nest.IGsubProcessor");
            feature.AddKnownType("Nest.GsubProcessor,Nest", "Nest.GsubProcessor");
            feature.AddKnownType("Nest.GsubProcessorDescriptor`1,Nest", "Nest.GsubProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.IInferenceProcessor,Nest", "Nest.IInferenceProcessor");
            feature.AddKnownType("Nest.InferenceProcessor,Nest", "Nest.InferenceProcessor");
            feature.AddKnownType("Nest.InferenceProcessorDescriptor`1,Nest", "Nest.InferenceProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.IInferenceConfig,Nest", "Nest.IInferenceConfig");
            feature.AddKnownType("Nest.InferenceConfig,Nest", "Nest.InferenceConfig");
            feature.AddKnownType("Nest.InferenceConfigDescriptor`1,Nest", "Nest.InferenceConfigDescriptor`1'1");
            feature.AddKnownType("Nest.IRegressionInferenceConfig,Nest", "Nest.IRegressionInferenceConfig");
            feature.AddKnownType("Nest.RegressionInferenceConfig,Nest", "Nest.RegressionInferenceConfig");
            feature.AddKnownType("Nest.RegressionInferenceConfigDescriptor`1,Nest", "Nest.RegressionInferenceConfigDescriptor`1'1");
            feature.AddKnownType("Nest.IClassificationInferenceConfig,Nest", "Nest.IClassificationInferenceConfig");
            feature.AddKnownType("Nest.ClassificationInferenceConfig,Nest", "Nest.ClassificationInferenceConfig");
            feature.AddKnownType("Nest.ClassificationInferenceConfigDescriptor`1,Nest", "Nest.ClassificationInferenceConfigDescriptor`1'1");
            feature.AddKnownType("Nest.IJoinProcessor,Nest", "Nest.IJoinProcessor");
            feature.AddKnownType("Nest.JoinProcessor,Nest", "Nest.JoinProcessor");
            feature.AddKnownType("Nest.JoinProcessorDescriptor`1,Nest", "Nest.JoinProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.IJsonProcessor,Nest", "Nest.IJsonProcessor");
            feature.AddKnownType("Nest.JsonProcessor,Nest", "Nest.JsonProcessor");
            feature.AddKnownType("Nest.JsonProcessorDescriptor`1,Nest", "Nest.JsonProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.IKeyValueProcessor,Nest", "Nest.IKeyValueProcessor");
            feature.AddKnownType("Nest.KeyValueProcessor,Nest", "Nest.KeyValueProcessor");
            feature.AddKnownType("Nest.KeyValueProcessorDescriptor`1,Nest", "Nest.KeyValueProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.ILowercaseProcessor,Nest", "Nest.ILowercaseProcessor");
            feature.AddKnownType("Nest.LowercaseProcessor,Nest", "Nest.LowercaseProcessor");
            feature.AddKnownType("Nest.LowercaseProcessorDescriptor`1,Nest", "Nest.LowercaseProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.INetworkCommunityIdProcessor,Nest", "Nest.INetworkCommunityIdProcessor");
            feature.AddKnownType("Nest.NetworkCommunityIdProcessor,Nest", "Nest.NetworkCommunityIdProcessor");
            feature.AddKnownType("Nest.NetworkCommunityIdProcessorDescriptor`1,Nest", "Nest.NetworkCommunityIdProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.INetworkDirectionProcessor,Nest", "Nest.INetworkDirectionProcessor");
            feature.AddKnownType("Nest.NetworkDirectionProcessor,Nest", "Nest.NetworkDirectionProcessor");
            feature.AddKnownType("Nest.NetworkDirectionProcessorDescriptor`1,Nest", "Nest.NetworkDirectionProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.IPipelineProcessor,Nest", "Nest.IPipelineProcessor");
            feature.AddKnownType("Nest.PipelineProcessor,Nest", "Nest.PipelineProcessor");
            feature.AddKnownType("Nest.PipelineProcessorDescriptor,Nest", "Nest.PipelineProcessorDescriptor");
            feature.AddKnownType("Nest.IAttachmentProcessor,Nest", "Nest.IAttachmentProcessor");
            feature.AddKnownType("Nest.AttachmentProcessor,Nest", "Nest.AttachmentProcessor");
            feature.AddKnownType("Nest.AttachmentProcessorDescriptor`1,Nest", "Nest.AttachmentProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.IGeoIpProcessor,Nest", "Nest.IGeoIpProcessor");
            feature.AddKnownType("Nest.GeoIpProcessor,Nest", "Nest.GeoIpProcessor");
            feature.AddKnownType("Nest.GeoIpProcessorDescriptor`1,Nest", "Nest.GeoIpProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.IUserAgentProcessor,Nest", "Nest.IUserAgentProcessor");
            feature.AddKnownType("Nest.UserAgentProcessor,Nest", "Nest.UserAgentProcessor");
            feature.AddKnownType("Nest.UserAgentProcessorDescriptor`1,Nest", "Nest.UserAgentProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.UserAgentProperty,Nest", "Nest.UserAgentProperty");
            feature.AddKnownType("Nest.IRegisteredDomainProcessor,Nest", "Nest.IRegisteredDomainProcessor");
            feature.AddKnownType("Nest.RegisteredDomainProcessor,Nest", "Nest.RegisteredDomainProcessor");
            feature.AddKnownType("Nest.RegisteredDomainProcessorDescriptor`1,Nest", "Nest.RegisteredDomainProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.IRemoveProcessor,Nest", "Nest.IRemoveProcessor");
            feature.AddKnownType("Nest.RemoveProcessor,Nest", "Nest.RemoveProcessor");
            feature.AddKnownType("Nest.RemoveProcessorDescriptor`1,Nest", "Nest.RemoveProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.IRenameProcessor,Nest", "Nest.IRenameProcessor");
            feature.AddKnownType("Nest.RenameProcessor,Nest", "Nest.RenameProcessor");
            feature.AddKnownType("Nest.RenameProcessorDescriptor`1,Nest", "Nest.RenameProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.IScriptProcessor,Nest", "Nest.IScriptProcessor");
            feature.AddKnownType("Nest.ScriptProcessor,Nest", "Nest.ScriptProcessor");
            feature.AddKnownType("Nest.ScriptProcessorDescriptor,Nest", "Nest.ScriptProcessorDescriptor");
            feature.AddKnownType("Nest.ISetProcessor,Nest", "Nest.ISetProcessor");
            feature.AddKnownType("Nest.SetProcessor,Nest", "Nest.SetProcessor");
            feature.AddKnownType("Nest.SetProcessorDescriptor`1,Nest", "Nest.SetProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.ISetSecurityUserProcessor,Nest", "Nest.ISetSecurityUserProcessor");
            feature.AddKnownType("Nest.SetSecurityUserProcessor,Nest", "Nest.SetSecurityUserProcessor");
            feature.AddKnownType("Nest.SetSecurityUserProcessorDescriptor`1,Nest", "Nest.SetSecurityUserProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.ISortProcessor,Nest", "Nest.ISortProcessor");
            feature.AddKnownType("Nest.SortProcessor,Nest", "Nest.SortProcessor");
            feature.AddKnownType("Nest.SortProcessorDescriptor`1,Nest", "Nest.SortProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.ISplitProcessor,Nest", "Nest.ISplitProcessor");
            feature.AddKnownType("Nest.SplitProcessor,Nest", "Nest.SplitProcessor");
            feature.AddKnownType("Nest.SplitProcessorDescriptor`1,Nest", "Nest.SplitProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.ITrimProcessor,Nest", "Nest.ITrimProcessor");
            feature.AddKnownType("Nest.TrimProcessor,Nest", "Nest.TrimProcessor");
            feature.AddKnownType("Nest.TrimProcessorDescriptor`1,Nest", "Nest.TrimProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.IUppercaseProcessor,Nest", "Nest.IUppercaseProcessor");
            feature.AddKnownType("Nest.UppercaseProcessor,Nest", "Nest.UppercaseProcessor");
            feature.AddKnownType("Nest.UppercaseProcessorDescriptor`1,Nest", "Nest.UppercaseProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.IUriPartsProcessor,Nest", "Nest.IUriPartsProcessor");
            feature.AddKnownType("Nest.UriPartsProcessor,Nest", "Nest.UriPartsProcessor");
            feature.AddKnownType("Nest.UriPartsProcessorDescriptor`1,Nest", "Nest.UriPartsProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.IUrlDecodeProcessor,Nest", "Nest.IUrlDecodeProcessor");
            feature.AddKnownType("Nest.UrlDecodeProcessor,Nest", "Nest.UrlDecodeProcessor");
            feature.AddKnownType("Nest.UrlDecodeProcessorDescriptor`1,Nest", "Nest.UrlDecodeProcessorDescriptor`1'1");
            feature.AddKnownType("Nest.IGrokProcessorPatternsRequest,Nest", "Nest.IGrokProcessorPatternsRequest");
            feature.AddKnownType("Nest.GrokProcessorPatternsRequest,Nest", "Nest.GrokProcessorPatternsRequest");
            feature.AddKnownType("Nest.GrokProcessorPatternsResponse,Nest", "Nest.GrokProcessorPatternsResponse");
            feature.AddKnownType("Nest.IPutPipelineRequest,Nest", "Nest.IPutPipelineRequest");
            feature.AddKnownType("Nest.PutPipelineRequest,Nest", "Nest.PutPipelineRequest");
            feature.AddKnownType("Nest.PutPipelineResponse,Nest", "Nest.PutPipelineResponse");
            feature.AddKnownType("Nest.ISimulatePipelineDocument,Nest", "Nest.ISimulatePipelineDocument");
            feature.AddKnownType("Nest.SimulatePipelineDocument,Nest", "Nest.SimulatePipelineDocument");
            feature.AddKnownType("Nest.SimulatePipelineDocumentDescriptor,Nest", "Nest.SimulatePipelineDocumentDescriptor");
            feature.AddKnownType("Nest.SimulatePipelineDocumentsDescriptor,Nest", "Nest.SimulatePipelineDocumentsDescriptor");
            feature.AddKnownType("Nest.ISimulatePipelineRequest,Nest", "Nest.ISimulatePipelineRequest");
            feature.AddKnownType("Nest.SimulatePipelineRequest,Nest", "Nest.SimulatePipelineRequest");
            feature.AddKnownType("Nest.SimulatePipelineResponse,Nest", "Nest.SimulatePipelineResponse");
            feature.AddKnownType("Nest.PipelineSimulation,Nest", "Nest.PipelineSimulation");
            feature.AddKnownType("Nest.DocumentSimulation,Nest", "Nest.DocumentSimulation");
            feature.AddKnownType("Nest.Ingest,Nest", "Nest.Ingest");
            feature.AddKnownType("Nest.ElasticsearchCorePropertyAttributeBase,Nest", "Nest.ElasticsearchCorePropertyAttributeBase");
            feature.AddKnownType("Nest.ElasticsearchDocValuesPropertyAttributeBase,Nest", "Nest.ElasticsearchDocValuesPropertyAttributeBase");
            feature.AddKnownType("Nest.ElasticsearchPropertyAttributeBase,Nest", "Nest.ElasticsearchPropertyAttributeBase");
            feature.AddKnownType("Nest.ElasticsearchTypeAttribute,Nest", "Nest.ElasticsearchTypeAttribute");
            feature.AddKnownType("Nest.DynamicMapping,Nest", "Nest.DynamicMapping");
            feature.AddKnownType("Nest.DynamicMappingFormatter,Nest", "Nest.DynamicMappingFormatter");
            feature.AddKnownType("Nest.IDynamicTemplate,Nest", "Nest.IDynamicTemplate");
            feature.AddKnownType("Nest.DynamicTemplate,Nest", "Nest.DynamicTemplate");
            feature.AddKnownType("Nest.DynamicTemplateDescriptor`1,Nest", "Nest.DynamicTemplateDescriptor`1'1");
            feature.AddKnownType("Nest.MatchType,Nest", "Nest.MatchType");
            feature.AddKnownType("Nest.IDynamicTemplateContainer,Nest", "Nest.IDynamicTemplateContainer");
            feature.AddKnownType("Nest.DynamicTemplateContainer,Nest", "Nest.DynamicTemplateContainer");
            feature.AddKnownType("Nest.DynamicTemplateContainerDescriptor`1,Nest", "Nest.DynamicTemplateContainerDescriptor`1'1");
            feature.AddKnownType("Nest.DynamicTemplatesInterfaceFormatter,Nest", "Nest.DynamicTemplatesInterfaceFormatter");
            feature.AddKnownType("Nest.DynamicTemplatesFormatter,Nest", "Nest.DynamicTemplatesFormatter");
            feature.AddKnownType("Nest.SingleMappingSelector`1,Nest", "Nest.SingleMappingSelector`1'1");
            feature.AddKnownType("Nest.Mappings,Nest", "Nest.Mappings");
            feature.AddKnownType("Nest.ObsoleteMappingsBase,Nest", "Nest.ObsoleteMappingsBase");
            feature.AddKnownType("Nest.PreventMappingMultipleTypesDescriptor,Nest", "Nest.PreventMappingMultipleTypesDescriptor");
            feature.AddKnownType("Nest.MappingsDescriptor,Nest", "Nest.MappingsDescriptor");
            feature.AddKnownType("Nest.IAllField,Nest", "Nest.IAllField");
            feature.AddKnownType("Nest.AllField,Nest", "Nest.AllField");
            feature.AddKnownType("Nest.AllFieldDescriptor,Nest", "Nest.AllFieldDescriptor");
            feature.AddKnownType("Nest.IFieldNamesField,Nest", "Nest.IFieldNamesField");
            feature.AddKnownType("Nest.FieldNamesField,Nest", "Nest.FieldNamesField");
            feature.AddKnownType("Nest.FieldNamesFieldDescriptor`1,Nest", "Nest.FieldNamesFieldDescriptor`1'1");
            feature.AddKnownType("Nest.IFieldMapping,Nest", "Nest.IFieldMapping");
            feature.AddKnownType("Nest.IIndexField,Nest", "Nest.IIndexField");
            feature.AddKnownType("Nest.IndexField,Nest", "Nest.IndexField");
            feature.AddKnownType("Nest.IndexFieldDescriptor,Nest", "Nest.IndexFieldDescriptor");
            feature.AddKnownType("Nest.IRoutingField,Nest", "Nest.IRoutingField");
            feature.AddKnownType("Nest.RoutingField,Nest", "Nest.RoutingField");
            feature.AddKnownType("Nest.RoutingFieldDescriptor`1,Nest", "Nest.RoutingFieldDescriptor`1'1");
            feature.AddKnownType("Nest.ISizeField,Nest", "Nest.ISizeField");
            feature.AddKnownType("Nest.SizeField,Nest", "Nest.SizeField");
            feature.AddKnownType("Nest.SizeFieldDescriptor,Nest", "Nest.SizeFieldDescriptor");
            feature.AddKnownType("Nest.ISourceField,Nest", "Nest.ISourceField");
            feature.AddKnownType("Nest.SourceField,Nest", "Nest.SourceField");
            feature.AddKnownType("Nest.SourceFieldDescriptor,Nest", "Nest.SourceFieldDescriptor");
            feature.AddKnownType("Nest.PropertyMappingDescriptor`1,Nest", "Nest.PropertyMappingDescriptor`1'1");
            feature.AddKnownType("Nest.IRuntimeField,Nest", "Nest.IRuntimeField");
            feature.AddKnownType("Nest.RuntimeField,Nest", "Nest.RuntimeField");
            feature.AddKnownType("Nest.RuntimeFieldDescriptor,Nest", "Nest.RuntimeFieldDescriptor");
            feature.AddKnownType("Nest.IRuntimeFields,Nest", "Nest.IRuntimeFields");
            feature.AddKnownType("Nest.RuntimeFields,Nest", "Nest.RuntimeFields");
            feature.AddKnownType("Nest.RuntimeFieldsDescriptor`1,Nest", "Nest.RuntimeFieldsDescriptor`1'1");
            feature.AddKnownType("Nest.RuntimeFieldsDescriptor,Nest", "Nest.RuntimeFieldsDescriptor");
            feature.AddKnownType("Nest.TermVectorOption,Nest", "Nest.TermVectorOption");
            feature.AddKnownType("Nest.ITypeMapping,Nest", "Nest.ITypeMapping");
            feature.AddKnownType("Nest.TypeMapping,Nest", "Nest.TypeMapping");
            feature.AddKnownType("Nest.TypeMappingDescriptor`1,Nest", "Nest.TypeMappingDescriptor`1'1");
            feature.AddKnownType("Nest.FlattenedAttribute,Nest", "Nest.FlattenedAttribute");
            feature.AddKnownType("Nest.IFlattenedProperty,Nest", "Nest.IFlattenedProperty");
            feature.AddKnownType("Nest.FlattenedProperty,Nest", "Nest.FlattenedProperty");
            feature.AddKnownType("Nest.FlattenedPropertyDescriptor`1,Nest", "Nest.FlattenedPropertyDescriptor`1'1");
            feature.AddKnownType("Nest.NestedAttribute,Nest", "Nest.NestedAttribute");
            feature.AddKnownType("Nest.INestedProperty,Nest", "Nest.INestedProperty");
            feature.AddKnownType("Nest.NestedProperty,Nest", "Nest.NestedProperty");
            feature.AddKnownType("Nest.NestedPropertyDescriptor`2,Nest", "Nest.NestedPropertyDescriptor`2'2");
            feature.AddKnownType("Nest.ObjectAttribute,Nest", "Nest.ObjectAttribute");
            feature.AddKnownType("Nest.IObjectProperty,Nest", "Nest.IObjectProperty");
            feature.AddKnownType("Nest.ObjectProperty,Nest", "Nest.ObjectProperty");
            feature.AddKnownType("Nest.ObjectTypeDescriptor`2,Nest", "Nest.ObjectTypeDescriptor`2'2");
            feature.AddKnownType("Nest.ObjectPropertyDescriptorBase`4,Nest", "Nest.ObjectPropertyDescriptorBase`4'4");
            feature.AddKnownType("Nest.ICoreProperty,Nest", "Nest.ICoreProperty");
            feature.AddKnownType("Nest.CorePropertyBase,Nest", "Nest.CorePropertyBase");
            feature.AddKnownType("Nest.CorePropertyDescriptorBase`3,Nest", "Nest.CorePropertyDescriptorBase`3'3");
            feature.AddKnownType("Nest.BinaryAttribute,Nest", "Nest.BinaryAttribute");
            feature.AddKnownType("Nest.IBinaryProperty,Nest", "Nest.IBinaryProperty");
            feature.AddKnownType("Nest.BinaryProperty,Nest", "Nest.BinaryProperty");
            feature.AddKnownType("Nest.BinaryPropertyDescriptor`1,Nest", "Nest.BinaryPropertyDescriptor`1'1");
            feature.AddKnownType("Nest.BooleanAttribute,Nest", "Nest.BooleanAttribute");
            feature.AddKnownType("Nest.IBooleanProperty,Nest", "Nest.IBooleanProperty");
            feature.AddKnownType("Nest.BooleanProperty,Nest", "Nest.BooleanProperty");
            feature.AddKnownType("Nest.BooleanPropertyDescriptor`1,Nest", "Nest.BooleanPropertyDescriptor`1'1");
            feature.AddKnownType("Nest.DateNanosAttribute,Nest", "Nest.DateNanosAttribute");
            feature.AddKnownType("Nest.IDateNanosProperty,Nest", "Nest.IDateNanosProperty");
            feature.AddKnownType("Nest.DateNanosProperty,Nest", "Nest.DateNanosProperty");
            feature.AddKnownType("Nest.DateNanosPropertyDescriptor`1,Nest", "Nest.DateNanosPropertyDescriptor`1'1");
            feature.AddKnownType("Nest.DateAttribute,Nest", "Nest.DateAttribute");
            feature.AddKnownType("Nest.IDateProperty,Nest", "Nest.IDateProperty");
            feature.AddKnownType("Nest.DateProperty,Nest", "Nest.DateProperty");
            feature.AddKnownType("Nest.DatePropertyDescriptor`1,Nest", "Nest.DatePropertyDescriptor`1'1");
            feature.AddKnownType("Nest.DenseVectorAttribute,Nest", "Nest.DenseVectorAttribute");
            feature.AddKnownType("Nest.IDenseVectorProperty,Nest", "Nest.IDenseVectorProperty");
            feature.AddKnownType("Nest.DenseVectorProperty,Nest", "Nest.DenseVectorProperty");
            feature.AddKnownType("Nest.DenseVectorPropertyDescriptor`1,Nest", "Nest.DenseVectorPropertyDescriptor`1'1");
            feature.AddKnownType("Nest.Children,Nest", "Nest.Children");
            feature.AddKnownType("Nest.ChildrenFormatter,Nest", "Nest.ChildrenFormatter");
            feature.AddKnownType("Nest.JoinAttribute,Nest", "Nest.JoinAttribute");
            feature.AddKnownType("Nest.JoinField,Nest", "Nest.JoinField");
            feature.AddKnownType("Nest.JoinField+Parent,Nest", "Nest.Nest.JoinField.Parent");
            feature.AddKnownType("Nest.JoinField+Child,Nest", "Nest.Nest.JoinField.Child");
            feature.AddKnownType("Nest.JoinFieldFormatter,Nest", "Nest.JoinFieldFormatter");
            feature.AddKnownType("Nest.IJoinProperty,Nest", "Nest.IJoinProperty");
            feature.AddKnownType("Nest.JoinProperty,Nest", "Nest.JoinProperty");
            feature.AddKnownType("Nest.JoinPropertyDescriptor`1,Nest", "Nest.JoinPropertyDescriptor`1'1");
            feature.AddKnownType("Nest.IRelations,Nest", "Nest.IRelations");
            feature.AddKnownType("Nest.Relations,Nest", "Nest.Relations");
            feature.AddKnownType("Nest.RelationsDescriptor,Nest", "Nest.RelationsDescriptor");
            feature.AddKnownType("Nest.KeywordAttribute,Nest", "Nest.KeywordAttribute");
            feature.AddKnownType("Nest.IKeywordProperty,Nest", "Nest.IKeywordProperty");
            feature.AddKnownType("Nest.KeywordProperty,Nest", "Nest.KeywordProperty");
            feature.AddKnownType("Nest.KeywordPropertyDescriptor`1,Nest", "Nest.KeywordPropertyDescriptor`1'1");
            feature.AddKnownType("Nest.MatchOnlyTextAttribute,Nest", "Nest.MatchOnlyTextAttribute");
            feature.AddKnownType("Nest.IMatchOnlyTextProperty,Nest", "Nest.IMatchOnlyTextProperty");
            feature.AddKnownType("Nest.MatchOnlyTextProperty,Nest", "Nest.MatchOnlyTextProperty");
            feature.AddKnownType("Nest.MatchOnlyTextPropertyDescriptor`1,Nest", "Nest.MatchOnlyTextPropertyDescriptor`1'1");
            feature.AddKnownType("Nest.NumberAttribute,Nest", "Nest.NumberAttribute");
            feature.AddKnownType("Nest.INumberProperty,Nest", "Nest.INumberProperty");
            feature.AddKnownType("Nest.NumberProperty,Nest", "Nest.NumberProperty");
            feature.AddKnownType("Nest.NumberPropertyDescriptorBase`3,Nest", "Nest.NumberPropertyDescriptorBase`3'3");
            feature.AddKnownType("Nest.NumberPropertyDescriptor`1,Nest", "Nest.NumberPropertyDescriptor`1'1");
            feature.AddKnownType("Nest.NumberType,Nest", "Nest.NumberType");
            feature.AddKnownType("Nest.PercolatorAttribute,Nest", "Nest.PercolatorAttribute");
            feature.AddKnownType("Nest.IPercolatorProperty,Nest", "Nest.IPercolatorProperty");
            feature.AddKnownType("Nest.PercolatorProperty,Nest", "Nest.PercolatorProperty");
            feature.AddKnownType("Nest.PercolatorPropertyDescriptor`1,Nest", "Nest.PercolatorPropertyDescriptor`1'1");
            feature.AddKnownType("Nest.DateRangeAttribute,Nest", "Nest.DateRangeAttribute");
            feature.AddKnownType("Nest.IDateRangeProperty,Nest", "Nest.IDateRangeProperty");
            feature.AddKnownType("Nest.DateRangeProperty,Nest", "Nest.DateRangeProperty");
            feature.AddKnownType("Nest.DateRangePropertyDescriptor`1,Nest", "Nest.DateRangePropertyDescriptor`1'1");
            feature.AddKnownType("Nest.DoubleRangeAttribute,Nest", "Nest.DoubleRangeAttribute");
            feature.AddKnownType("Nest.IDoubleRangeProperty,Nest", "Nest.IDoubleRangeProperty");
            feature.AddKnownType("Nest.DoubleRangeProperty,Nest", "Nest.DoubleRangeProperty");
            feature.AddKnownType("Nest.DoubleRangePropertyDescriptor`1,Nest", "Nest.DoubleRangePropertyDescriptor`1'1");
            feature.AddKnownType("Nest.IntegerRangeAttribute,Nest", "Nest.IntegerRangeAttribute");
            feature.AddKnownType("Nest.IFloatRangeProperty,Nest", "Nest.IFloatRangeProperty");
            feature.AddKnownType("Nest.FloatRangeProperty,Nest", "Nest.FloatRangeProperty");
            feature.AddKnownType("Nest.FloatRangePropertyDescriptor`1,Nest", "Nest.FloatRangePropertyDescriptor`1'1");
            feature.AddKnownType("Nest.FloatRangeAttribute,Nest", "Nest.FloatRangeAttribute");
            feature.AddKnownType("Nest.IIntegerRangeProperty,Nest", "Nest.IIntegerRangeProperty");
            feature.AddKnownType("Nest.IntegerRangeProperty,Nest", "Nest.IntegerRangeProperty");
            feature.AddKnownType("Nest.IntegerRangePropertyDescriptor`1,Nest", "Nest.IntegerRangePropertyDescriptor`1'1");
            feature.AddKnownType("Nest.IpRangeAttribute,Nest", "Nest.IpRangeAttribute");
            feature.AddKnownType("Nest.IIpRangeProperty,Nest", "Nest.IIpRangeProperty");
            feature.AddKnownType("Nest.IpRangeProperty,Nest", "Nest.IpRangeProperty");
            feature.AddKnownType("Nest.IpRangePropertyDescriptor`1,Nest", "Nest.IpRangePropertyDescriptor`1'1");
            feature.AddKnownType("Nest.LongRangeAttribute,Nest", "Nest.LongRangeAttribute");
            feature.AddKnownType("Nest.ILongRangeProperty,Nest", "Nest.ILongRangeProperty");
            feature.AddKnownType("Nest.LongRangeProperty,Nest", "Nest.LongRangeProperty");
            feature.AddKnownType("Nest.LongRangePropertyDescriptor`1,Nest", "Nest.LongRangePropertyDescriptor`1'1");
            feature.AddKnownType("Nest.RangePropertyAttributeBase,Nest", "Nest.RangePropertyAttributeBase");
            feature.AddKnownType("Nest.IRangeProperty,Nest", "Nest.IRangeProperty");
            feature.AddKnownType("Nest.RangePropertyBase,Nest", "Nest.RangePropertyBase");
            feature.AddKnownType("Nest.RangePropertyDescriptorBase`3,Nest", "Nest.RangePropertyDescriptorBase`3'3");
            feature.AddKnownType("Nest.RangeType,Nest", "Nest.RangeType");
            feature.AddKnownType("Nest.RankFeaturesAttribute,Nest", "Nest.RankFeaturesAttribute");
            feature.AddKnownType("Nest.IRankFeaturesProperty,Nest", "Nest.IRankFeaturesProperty");
            feature.AddKnownType("Nest.RankFeaturesProperty,Nest", "Nest.RankFeaturesProperty");
            feature.AddKnownType("Nest.RankFeaturesPropertyDescriptor`1,Nest", "Nest.RankFeaturesPropertyDescriptor`1'1");
            feature.AddKnownType("Nest.RankFeatureAttribute,Nest", "Nest.RankFeatureAttribute");
            feature.AddKnownType("Nest.IRankFeatureProperty,Nest", "Nest.IRankFeatureProperty");
            feature.AddKnownType("Nest.RankFeatureProperty,Nest", "Nest.RankFeatureProperty");
            feature.AddKnownType("Nest.RankFeaturePropertyDescriptor`1,Nest", "Nest.RankFeaturePropertyDescriptor`1'1");
            feature.AddKnownType("Nest.SearchAsYouTypeAttribute,Nest", "Nest.SearchAsYouTypeAttribute");
            feature.AddKnownType("Nest.ISearchAsYouTypeProperty,Nest", "Nest.ISearchAsYouTypeProperty");
            feature.AddKnownType("Nest.SearchAsYouTypeProperty,Nest", "Nest.SearchAsYouTypeProperty");
            feature.AddKnownType("Nest.SearchAsYouTypePropertyDescriptor`1,Nest", "Nest.SearchAsYouTypePropertyDescriptor`1'1");
            feature.AddKnownType("Nest.IndexOptions,Nest", "Nest.IndexOptions");
            feature.AddKnownType("Nest.TextAttribute,Nest", "Nest.TextAttribute");
            feature.AddKnownType("Nest.ITextIndexPrefixes,Nest", "Nest.ITextIndexPrefixes");
            feature.AddKnownType("Nest.TextIndexPrefixes,Nest", "Nest.TextIndexPrefixes");
            feature.AddKnownType("Nest.TextIndexPrefixesDescriptor,Nest", "Nest.TextIndexPrefixesDescriptor");
            feature.AddKnownType("Nest.ITextProperty,Nest", "Nest.ITextProperty");
            feature.AddKnownType("Nest.TextProperty,Nest", "Nest.TextProperty");
            feature.AddKnownType("Nest.TextPropertyDescriptor`1,Nest", "Nest.TextPropertyDescriptor`1'1");
            feature.AddKnownType("Nest.IDocValuesProperty,Nest", "Nest.IDocValuesProperty");
            feature.AddKnownType("Nest.DocValuesPropertyBase,Nest", "Nest.DocValuesPropertyBase");
            feature.AddKnownType("Nest.DocValuesPropertyDescriptorBase`3,Nest", "Nest.DocValuesPropertyDescriptorBase`3'3");
            feature.AddKnownType("Nest.FieldType,Nest", "Nest.FieldType");
            feature.AddKnownType("Nest.GeoPointAttribute,Nest", "Nest.GeoPointAttribute");
            feature.AddKnownType("Nest.IGeoPointProperty,Nest", "Nest.IGeoPointProperty");
            feature.AddKnownType("Nest.GeoPointProperty,Nest", "Nest.GeoPointProperty");
            feature.AddKnownType("Nest.GeoPointPropertyDescriptor`1,Nest", "Nest.GeoPointPropertyDescriptor`1'1");
            feature.AddKnownType("Nest.GeoOrientation,Nest", "Nest.GeoOrientation");
            feature.AddKnownType("Nest.GeoOrientationFormatter,Nest", "Nest.GeoOrientationFormatter");
            feature.AddKnownType("Nest.NullableGeoOrientationFormatter,Nest", "Nest.NullableGeoOrientationFormatter");
            feature.AddKnownType("Nest.GeoShapeAttribute,Nest", "Nest.GeoShapeAttribute");
            feature.AddKnownType("Nest.IGeoShapeProperty,Nest", "Nest.IGeoShapeProperty");
            feature.AddKnownType("Nest.GeoShapeProperty,Nest", "Nest.GeoShapeProperty");
            feature.AddKnownType("Nest.GeoShapePropertyDescriptor`1,Nest", "Nest.GeoShapePropertyDescriptor`1'1");
            feature.AddKnownType("Nest.GeoStrategy,Nest", "Nest.GeoStrategy");
            feature.AddKnownType("Nest.GeoTree,Nest", "Nest.GeoTree");
            feature.AddKnownType("Nest.IPropertiesDescriptor`2,Nest", "Nest.IPropertiesDescriptor`2'2");
            feature.AddKnownType("Nest.PropertiesDescriptor`1,Nest", "Nest.PropertiesDescriptor`1'1");
            feature.AddKnownType("Nest.IProperties,Nest", "Nest.IProperties");
            feature.AddKnownType("Nest.Properties,Nest", "Nest.Properties");
            feature.AddKnownType("Nest.Properties`1,Nest", "Nest.Properties`1'1");
            feature.AddKnownType("Nest.PropertiesFormatter,Nest", "Nest.PropertiesFormatter");
            feature.AddKnownType("Nest.IProperty,Nest", "Nest.IProperty");
            feature.AddKnownType("Nest.IPropertyWithClrOrigin,Nest", "Nest.IPropertyWithClrOrigin");
            feature.AddKnownType("Nest.PropertyBase,Nest", "Nest.PropertyBase");
            feature.AddKnownType("Nest.PropertyDescriptorBase`3,Nest", "Nest.PropertyDescriptorBase`3'3");
            feature.AddKnownType("Nest.PropertyFormatter,Nest", "Nest.PropertyFormatter");
            feature.AddKnownType("Nest.Attachment,Nest", "Nest.Attachment");
            feature.AddKnownType("Nest.AttachmentFormatter,Nest", "Nest.AttachmentFormatter");
            feature.AddKnownType("Nest.ICategorySuggestContext,Nest", "Nest.ICategorySuggestContext");
            feature.AddKnownType("Nest.CategorySuggestContext,Nest", "Nest.CategorySuggestContext");
            feature.AddKnownType("Nest.CategorySuggestContextDescriptor`1,Nest", "Nest.CategorySuggestContextDescriptor`1'1");
            feature.AddKnownType("Nest.CompletionAttribute,Nest", "Nest.CompletionAttribute");
            feature.AddKnownType("Nest.ICompletionProperty,Nest", "Nest.ICompletionProperty");
            feature.AddKnownType("Nest.CompletionProperty,Nest", "Nest.CompletionProperty");
            feature.AddKnownType("Nest.CompletionPropertyDescriptor`1,Nest", "Nest.CompletionPropertyDescriptor`1'1");
            feature.AddKnownType("Nest.IGeoSuggestContext,Nest", "Nest.IGeoSuggestContext");
            feature.AddKnownType("Nest.GeoSuggestContext,Nest", "Nest.GeoSuggestContext");
            feature.AddKnownType("Nest.GeoSuggestContextDescriptor`1,Nest", "Nest.GeoSuggestContextDescriptor`1'1");
            feature.AddKnownType("Nest.ISuggestContext,Nest", "Nest.ISuggestContext");
            feature.AddKnownType("Nest.SuggestContextBase,Nest", "Nest.SuggestContextBase");
            feature.AddKnownType("Nest.SuggestContextDescriptorBase`3,Nest", "Nest.SuggestContextDescriptorBase`3'3");
            feature.AddKnownType("Nest.SuggestContextFormatter,Nest", "Nest.SuggestContextFormatter");
            feature.AddKnownType("Nest.SuggestContextsDescriptor`1,Nest", "Nest.SuggestContextsDescriptor`1'1");
            feature.AddKnownType("Nest.ConstantKeywordAttribute,Nest", "Nest.ConstantKeywordAttribute");
            feature.AddKnownType("Nest.IConstantKeywordProperty,Nest", "Nest.IConstantKeywordProperty");
            feature.AddKnownType("Nest.ConstantKeywordProperty,Nest", "Nest.ConstantKeywordProperty");
            feature.AddKnownType("Nest.ConstantKeywordPropertyDescriptor`1,Nest", "Nest.ConstantKeywordPropertyDescriptor`1'1");
            feature.AddKnownType("Nest.IFieldAliasProperty,Nest", "Nest.IFieldAliasProperty");
            feature.AddKnownType("Nest.FieldAliasProperty,Nest", "Nest.FieldAliasProperty");
            feature.AddKnownType("Nest.FieldAliasPropertyDescriptor`1,Nest", "Nest.FieldAliasPropertyDescriptor`1'1");
            feature.AddKnownType("Nest.IGenericProperty,Nest", "Nest.IGenericProperty");
            feature.AddKnownType("Nest.GenericProperty,Nest", "Nest.GenericProperty");
            feature.AddKnownType("Nest.GenericPropertyDescriptor`1,Nest", "Nest.GenericPropertyDescriptor`1'1");
            feature.AddKnownType("Nest.HistogramAttribute,Nest", "Nest.HistogramAttribute");
            feature.AddKnownType("Nest.IHistogramProperty,Nest", "Nest.IHistogramProperty");
            feature.AddKnownType("Nest.HistogramProperty,Nest", "Nest.HistogramProperty");
            feature.AddKnownType("Nest.HistogramPropertyDescriptor`1,Nest", "Nest.HistogramPropertyDescriptor`1'1");
            feature.AddKnownType("Nest.IpAttribute,Nest", "Nest.IpAttribute");
            feature.AddKnownType("Nest.IIpProperty,Nest", "Nest.IIpProperty");
            feature.AddKnownType("Nest.IpProperty,Nest", "Nest.IpProperty");
            feature.AddKnownType("Nest.IpPropertyDescriptor`1,Nest", "Nest.IpPropertyDescriptor`1'1");
            feature.AddKnownType("Nest.Murmur3HashAttribute,Nest", "Nest.Murmur3HashAttribute");
            feature.AddKnownType("Nest.IMurmur3HashProperty,Nest", "Nest.IMurmur3HashProperty");
            feature.AddKnownType("Nest.Murmur3HashProperty,Nest", "Nest.Murmur3HashProperty");
            feature.AddKnownType("Nest.Murmur3HashPropertyDescriptor`1,Nest", "Nest.Murmur3HashPropertyDescriptor`1'1");
            feature.AddKnownType("Nest.PointAttribute,Nest", "Nest.PointAttribute");
            feature.AddKnownType("Nest.IPointProperty,Nest", "Nest.IPointProperty");
            feature.AddKnownType("Nest.PointProperty,Nest", "Nest.PointProperty");
            feature.AddKnownType("Nest.PointPropertyDescriptor`1,Nest", "Nest.PointPropertyDescriptor`1'1");
            feature.AddKnownType("Nest.ShapeAttribute,Nest", "Nest.ShapeAttribute");
            feature.AddKnownType("Nest.ShapeOrientation,Nest", "Nest.ShapeOrientation");
            feature.AddKnownType("Nest.ShapeOrientationFormatter,Nest", "Nest.ShapeOrientationFormatter");
            feature.AddKnownType("Nest.NullableShapeOrientationFormatter,Nest", "Nest.NullableShapeOrientationFormatter");
            feature.AddKnownType("Nest.IShapeProperty,Nest", "Nest.IShapeProperty");
            feature.AddKnownType("Nest.ShapeProperty,Nest", "Nest.ShapeProperty");
            feature.AddKnownType("Nest.ShapePropertyDescriptor`1,Nest", "Nest.ShapePropertyDescriptor`1'1");
            feature.AddKnownType("Nest.TokenCountAttribute,Nest", "Nest.TokenCountAttribute");
            feature.AddKnownType("Nest.ITokenCountProperty,Nest", "Nest.ITokenCountProperty");
            feature.AddKnownType("Nest.TokenCountProperty,Nest", "Nest.TokenCountProperty");
            feature.AddKnownType("Nest.TokenCountPropertyDescriptor`1,Nest", "Nest.TokenCountPropertyDescriptor`1'1");
            feature.AddKnownType("Nest.VersionAttribute,Nest", "Nest.VersionAttribute");
            feature.AddKnownType("Nest.IVersionProperty,Nest", "Nest.IVersionProperty");
            feature.AddKnownType("Nest.VersionProperty,Nest", "Nest.VersionProperty");
            feature.AddKnownType("Nest.VersionPropertyDescriptor`1,Nest", "Nest.VersionPropertyDescriptor`1'1");
            feature.AddKnownType("Nest.WildcardAttribute,Nest", "Nest.WildcardAttribute");
            feature.AddKnownType("Nest.IWildcardProperty,Nest", "Nest.IWildcardProperty");
            feature.AddKnownType("Nest.WildcardProperty,Nest", "Nest.WildcardProperty");
            feature.AddKnownType("Nest.WildcardPropertyDescriptor`1,Nest", "Nest.WildcardPropertyDescriptor`1'1");
            feature.AddKnownType("Nest.IMappingVisitor,Nest", "Nest.IMappingVisitor");
            feature.AddKnownType("Nest.NoopMappingVisitor,Nest", "Nest.NoopMappingVisitor");
            feature.AddKnownType("Nest.IPropertyVisitor,Nest", "Nest.IPropertyVisitor");
            feature.AddKnownType("Nest.MappingWalker,Nest", "Nest.MappingWalker");
            feature.AddKnownType("Nest.NoopPropertyVisitor,Nest", "Nest.NoopPropertyVisitor");
            feature.AddKnownType("Nest.PropertyWalker,Nest", "Nest.PropertyWalker");
            feature.AddKnownType("Nest.IAllocationAttributes,Nest", "Nest.IAllocationAttributes");
            feature.AddKnownType("Nest.AllocationAttributes,Nest", "Nest.AllocationAttributes");
            feature.AddKnownType("Nest.AllocationAttributesDescriptor,Nest", "Nest.AllocationAttributesDescriptor");
            feature.AddKnownType("Nest.IAllocationAwarenessSettings,Nest", "Nest.IAllocationAwarenessSettings");
            feature.AddKnownType("Nest.AllocationAwarenessSettings,Nest", "Nest.AllocationAwarenessSettings");
            feature.AddKnownType("Nest.AllocationAwarenessSettingsDescriptor,Nest", "Nest.AllocationAwarenessSettingsDescriptor");
            feature.AddKnownType("Nest.IAllocationFilteringSettings,Nest", "Nest.IAllocationFilteringSettings");
            feature.AddKnownType("Nest.AllocationFilteringSettings,Nest", "Nest.AllocationFilteringSettings");
            feature.AddKnownType("Nest.AllocationFilteringSettingsDescriptor,Nest", "Nest.AllocationFilteringSettingsDescriptor");
            feature.AddKnownType("Nest.IClusterModuleSettings,Nest", "Nest.IClusterModuleSettings");
            feature.AddKnownType("Nest.ClusterModuleSettings,Nest", "Nest.ClusterModuleSettings");
            feature.AddKnownType("Nest.ClusterModuleSettingsDescriptor,Nest", "Nest.ClusterModuleSettingsDescriptor");
            feature.AddKnownType("Nest.IDiskBasedShardAllocationSettings,Nest", "Nest.IDiskBasedShardAllocationSettings");
            feature.AddKnownType("Nest.DiskBasedShardAllocationSettings,Nest", "Nest.DiskBasedShardAllocationSettings");
            feature.AddKnownType("Nest.DiskBasedShardAllocationSettingsDescriptor,Nest", "Nest.DiskBasedShardAllocationSettingsDescriptor");
            feature.AddKnownType("Nest.AllocationEnable,Nest", "Nest.AllocationEnable");
            feature.AddKnownType("Nest.AllowRebalance,Nest", "Nest.AllowRebalance");
            feature.AddKnownType("Nest.RebalanceEnable,Nest", "Nest.RebalanceEnable");
            feature.AddKnownType("Nest.IShardAllocationSettings,Nest", "Nest.IShardAllocationSettings");
            feature.AddKnownType("Nest.ShardAllocationSettings,Nest", "Nest.ShardAllocationSettings");
            feature.AddKnownType("Nest.ShardAllocationSettingsDescriptor,Nest", "Nest.ShardAllocationSettingsDescriptor");
            feature.AddKnownType("Nest.IShardBalancingHeuristicsSettings,Nest", "Nest.IShardBalancingHeuristicsSettings");
            feature.AddKnownType("Nest.ShardBalancingHeuristicsSettings,Nest", "Nest.ShardBalancingHeuristicsSettings");
            feature.AddKnownType("Nest.ShardBalancingHeuristicsSettingsDescriptor,Nest", "Nest.ShardBalancingHeuristicsSettingsDescriptor");
            feature.AddKnownType("Nest.IShardRebalancingSettings,Nest", "Nest.IShardRebalancingSettings");
            feature.AddKnownType("Nest.ShardRebalancingSettings,Nest", "Nest.ShardRebalancingSettings");
            feature.AddKnownType("Nest.ShardRebalancingSettingsDescriptor,Nest", "Nest.ShardRebalancingSettingsDescriptor");
            feature.AddKnownType("Nest.GatewaySettings,Nest", "Nest.GatewaySettings");
            feature.AddKnownType("Nest.ICircuitBreakerSettings,Nest", "Nest.ICircuitBreakerSettings");
            feature.AddKnownType("Nest.CircuitBreakerSettings,Nest", "Nest.CircuitBreakerSettings");
            feature.AddKnownType("Nest.CircuitBreakerSettingsDescriptor,Nest", "Nest.CircuitBreakerSettingsDescriptor");
            feature.AddKnownType("Nest.IFielddata,Nest", "Nest.IFielddata");
            feature.AddKnownType("Nest.FielddataBase,Nest", "Nest.FielddataBase");
            feature.AddKnownType("Nest.FielddataDescriptorBase`2,Nest", "Nest.FielddataDescriptorBase`2'2");
            feature.AddKnownType("Nest.IFielddataFilter,Nest", "Nest.IFielddataFilter");
            feature.AddKnownType("Nest.FielddataFilter,Nest", "Nest.FielddataFilter");
            feature.AddKnownType("Nest.FielddataFilterDescriptor,Nest", "Nest.FielddataFilterDescriptor");
            feature.AddKnownType("Nest.IFielddataFrequencyFilter,Nest", "Nest.IFielddataFrequencyFilter");
            feature.AddKnownType("Nest.FielddataFrequencyFilter,Nest", "Nest.FielddataFrequencyFilter");
            feature.AddKnownType("Nest.FielddataFrequencyFilterDescriptor,Nest", "Nest.FielddataFrequencyFilterDescriptor");
            feature.AddKnownType("Nest.FielddataLoading,Nest", "Nest.FielddataLoading");
            feature.AddKnownType("Nest.IFielddataRegexFilter,Nest", "Nest.IFielddataRegexFilter");
            feature.AddKnownType("Nest.FielddataRegexFilter,Nest", "Nest.FielddataRegexFilter");
            feature.AddKnownType("Nest.FielddataRegexFilterDescriptor,Nest", "Nest.FielddataRegexFilterDescriptor");
            feature.AddKnownType("Nest.FielddataSettings,Nest", "Nest.FielddataSettings");
            feature.AddKnownType("Nest.IGeoPointFielddata,Nest", "Nest.IGeoPointFielddata");
            feature.AddKnownType("Nest.GeoPointFielddata,Nest", "Nest.GeoPointFielddata");
            feature.AddKnownType("Nest.GeoPointFielddataDescriptor,Nest", "Nest.GeoPointFielddataDescriptor");
            feature.AddKnownType("Nest.GeoPointFielddataFormat,Nest", "Nest.GeoPointFielddataFormat");
            feature.AddKnownType("Nest.INumericFielddata,Nest", "Nest.INumericFielddata");
            feature.AddKnownType("Nest.NumericFielddata,Nest", "Nest.NumericFielddata");
            feature.AddKnownType("Nest.NumericFielddataDescriptor,Nest", "Nest.NumericFielddataDescriptor");
            feature.AddKnownType("Nest.NumericFielddataFormat,Nest", "Nest.NumericFielddataFormat");
            feature.AddKnownType("Nest.IStringFielddata,Nest", "Nest.IStringFielddata");
            feature.AddKnownType("Nest.StringFielddata,Nest", "Nest.StringFielddata");
            feature.AddKnownType("Nest.StringFielddataDescriptor,Nest", "Nest.StringFielddataDescriptor");
            feature.AddKnownType("Nest.StringFielddataFormat,Nest", "Nest.StringFielddataFormat");
            feature.AddKnownType("Nest.IndexingBufferSettings,Nest", "Nest.IndexingBufferSettings");
            feature.AddKnownType("Nest.IIndicesModuleSettings,Nest", "Nest.IIndicesModuleSettings");
            feature.AddKnownType("Nest.IndicesModuleSettings,Nest", "Nest.IndicesModuleSettings");
            feature.AddKnownType("Nest.IndicesModuleSettingsDescriptor,Nest", "Nest.IndicesModuleSettingsDescriptor");
            feature.AddKnownType("Nest.IIndicesRecoverySettings,Nest", "Nest.IIndicesRecoverySettings");
            feature.AddKnownType("Nest.IndicesRecoverySettings,Nest", "Nest.IndicesRecoverySettings");
            feature.AddKnownType("Nest.IndicesRecoverySettingsDescriptor,Nest", "Nest.IndicesRecoverySettingsDescriptor");
            feature.AddKnownType("Nest.IDeleteScriptRequest,Nest", "Nest.IDeleteScriptRequest");
            feature.AddKnownType("Nest.DeleteScriptRequest,Nest", "Nest.DeleteScriptRequest");
            feature.AddKnownType("Nest.DeleteScriptResponse,Nest", "Nest.DeleteScriptResponse");
            feature.AddKnownType("Nest.IExecutePainlessScriptRequest,Nest", "Nest.IExecutePainlessScriptRequest");
            feature.AddKnownType("Nest.ExecutePainlessScriptRequest,Nest", "Nest.ExecutePainlessScriptRequest");
            feature.AddKnownType("Nest.IExecutePainlessScriptResponse`1,Nest", "Nest.IExecutePainlessScriptResponse`1'1");
            feature.AddKnownType("Nest.ExecutePainlessScriptResponse`1,Nest", "Nest.ExecutePainlessScriptResponse`1'1");
            feature.AddKnownType("Nest.IPainlessContextSetup,Nest", "Nest.IPainlessContextSetup");
            feature.AddKnownType("Nest.PainlessContextSetup,Nest", "Nest.PainlessContextSetup");
            feature.AddKnownType("Nest.PainlessContextSetupDescriptor,Nest", "Nest.PainlessContextSetupDescriptor");
            feature.AddKnownType("Nest.IGetScriptRequest,Nest", "Nest.IGetScriptRequest");
            feature.AddKnownType("Nest.GetScriptRequest,Nest", "Nest.GetScriptRequest");
            feature.AddKnownType("Nest.GetScriptResponse,Nest", "Nest.GetScriptResponse");
            feature.AddKnownType("Nest.IStoredScript,Nest", "Nest.IStoredScript");
            feature.AddKnownType("Nest.StoredScript,Nest", "Nest.StoredScript");
            feature.AddKnownType("Nest.PainlessScript,Nest", "Nest.PainlessScript");
            feature.AddKnownType("Nest.LuceneExpressionScript,Nest", "Nest.LuceneExpressionScript");
            feature.AddKnownType("Nest.MustacheScript,Nest", "Nest.MustacheScript");
            feature.AddKnownType("Nest.StoredScriptDescriptor,Nest", "Nest.StoredScriptDescriptor");
            feature.AddKnownType("Nest.IPutScriptRequest,Nest", "Nest.IPutScriptRequest");
            feature.AddKnownType("Nest.PutScriptRequest,Nest", "Nest.PutScriptRequest");
            feature.AddKnownType("Nest.PutScriptResponse,Nest", "Nest.PutScriptResponse");
            feature.AddKnownType("Nest.ScriptLang,Nest", "Nest.ScriptLang");
            feature.AddKnownType("Nest.IAnalyzeRepositoryRequest,Nest", "Nest.IAnalyzeRepositoryRequest");
            feature.AddKnownType("Nest.AnalyzeRepositoryRequest,Nest", "Nest.AnalyzeRepositoryRequest");
            feature.AddKnownType("Nest.AnalyzeRepositoryResponse,Nest", "Nest.AnalyzeRepositoryResponse");
            feature.AddKnownType("Nest.Blob,Nest", "Nest.Blob");
            feature.AddKnownType("Nest.AnalysisDetails,Nest", "Nest.AnalysisDetails");
            feature.AddKnownType("Nest.ReadDetails,Nest", "Nest.ReadDetails");
            feature.AddKnownType("Nest.NodeIdentity,Nest", "Nest.NodeIdentity");
            feature.AddKnownType("Nest.Summary,Nest", "Nest.Summary");
            feature.AddKnownType("Nest.SummaryStatistics,Nest", "Nest.SummaryStatistics");
            feature.AddKnownType("Nest.IAzureRepository,Nest", "Nest.IAzureRepository");
            feature.AddKnownType("Nest.AzureRepository,Nest", "Nest.AzureRepository");
            feature.AddKnownType("Nest.IAzureRepositorySettings,Nest", "Nest.IAzureRepositorySettings");
            feature.AddKnownType("Nest.AzureRepositorySettings,Nest", "Nest.AzureRepositorySettings");
            feature.AddKnownType("Nest.AzureRepositorySettingsDescriptor,Nest", "Nest.AzureRepositorySettingsDescriptor");
            feature.AddKnownType("Nest.AzureRepositoryDescriptor,Nest", "Nest.AzureRepositoryDescriptor");
            feature.AddKnownType("Nest.ICleanupRepositoryRequest,Nest", "Nest.ICleanupRepositoryRequest");
            feature.AddKnownType("Nest.CleanupRepositoryRequest,Nest", "Nest.CleanupRepositoryRequest");
            feature.AddKnownType("Nest.CleanupRepositoryResponse,Nest", "Nest.CleanupRepositoryResponse");
            feature.AddKnownType("Nest.CleanupRepositoryResults,Nest", "Nest.CleanupRepositoryResults");
            feature.AddKnownType("Nest.CreateRepositoryFormatter,Nest", "Nest.CreateRepositoryFormatter");
            feature.AddKnownType("Nest.ICreateRepositoryRequest,Nest", "Nest.ICreateRepositoryRequest");
            feature.AddKnownType("Nest.CreateRepositoryRequest,Nest", "Nest.CreateRepositoryRequest");
            feature.AddKnownType("Nest.CreateRepositoryResponse,Nest", "Nest.CreateRepositoryResponse");
            feature.AddKnownType("Nest.IDeleteRepositoryRequest,Nest", "Nest.IDeleteRepositoryRequest");
            feature.AddKnownType("Nest.DeleteRepositoryRequest,Nest", "Nest.DeleteRepositoryRequest");
            feature.AddKnownType("Nest.DeleteRepositoryResponse,Nest", "Nest.DeleteRepositoryResponse");
            feature.AddKnownType("Nest.IFileSystemRepository,Nest", "Nest.IFileSystemRepository");
            feature.AddKnownType("Nest.FileSystemRepository,Nest", "Nest.FileSystemRepository");
            feature.AddKnownType("Nest.IFileSystemRepositorySettings,Nest", "Nest.IFileSystemRepositorySettings");
            feature.AddKnownType("Nest.FileSystemRepositorySettings,Nest", "Nest.FileSystemRepositorySettings");
            feature.AddKnownType("Nest.FileSystemRepositorySettingsDescriptor,Nest", "Nest.FileSystemRepositorySettingsDescriptor");
            feature.AddKnownType("Nest.FileSystemRepositoryDescriptor,Nest", "Nest.FileSystemRepositoryDescriptor");
            feature.AddKnownType("Nest.IGetRepositoryRequest,Nest", "Nest.IGetRepositoryRequest");
            feature.AddKnownType("Nest.GetRepositoryRequest,Nest", "Nest.GetRepositoryRequest");
            feature.AddKnownType("Nest.GetRepositoryResponse,Nest", "Nest.GetRepositoryResponse");
            feature.AddKnownType("Nest.GetRepositoryResponseFormatter,Nest", "Nest.GetRepositoryResponseFormatter");
            feature.AddKnownType("Nest.IHdfsRepository,Nest", "Nest.IHdfsRepository");
            feature.AddKnownType("Nest.HdfsRepository,Nest", "Nest.HdfsRepository");
            feature.AddKnownType("Nest.IHdfsRepositorySettings,Nest", "Nest.IHdfsRepositorySettings");
            feature.AddKnownType("Nest.HdfsRepositorySettings,Nest", "Nest.HdfsRepositorySettings");
            feature.AddKnownType("Nest.HdfsRepositorySettingsDescriptor,Nest", "Nest.HdfsRepositorySettingsDescriptor");
            feature.AddKnownType("Nest.HdfsRepositoryDescriptor,Nest", "Nest.HdfsRepositoryDescriptor");
            feature.AddKnownType("Nest.ISnapshotRepository,Nest", "Nest.ISnapshotRepository");
            feature.AddKnownType("Nest.IRepositoryWithSettings,Nest", "Nest.IRepositoryWithSettings");
            feature.AddKnownType("Nest.IRepository`1,Nest", "Nest.IRepository`1'1");
            feature.AddKnownType("Nest.IRepositorySettings,Nest", "Nest.IRepositorySettings");
            feature.AddKnownType("Nest.IReadOnlyUrlRepository,Nest", "Nest.IReadOnlyUrlRepository");
            feature.AddKnownType("Nest.ReadOnlyUrlRepository,Nest", "Nest.ReadOnlyUrlRepository");
            feature.AddKnownType("Nest.IReadOnlyUrlRepositorySettings,Nest", "Nest.IReadOnlyUrlRepositorySettings");
            feature.AddKnownType("Nest.ReadOnlyUrlRepositorySettings,Nest", "Nest.ReadOnlyUrlRepositorySettings");
            feature.AddKnownType("Nest.ReadOnlyUrlRepositorySettingsDescriptor,Nest", "Nest.ReadOnlyUrlRepositorySettingsDescriptor");
            feature.AddKnownType("Nest.ReadOnlyUrlRepositoryDescriptor,Nest", "Nest.ReadOnlyUrlRepositoryDescriptor");
            feature.AddKnownType("Nest.IS3Repository,Nest", "Nest.IS3Repository");
            feature.AddKnownType("Nest.S3Repository,Nest", "Nest.S3Repository");
            feature.AddKnownType("Nest.IS3RepositorySettings,Nest", "Nest.IS3RepositorySettings");
            feature.AddKnownType("Nest.S3RepositorySettings,Nest", "Nest.S3RepositorySettings");
            feature.AddKnownType("Nest.S3RepositorySettingsDescriptor,Nest", "Nest.S3RepositorySettingsDescriptor");
            feature.AddKnownType("Nest.S3RepositoryDescriptor,Nest", "Nest.S3RepositoryDescriptor");
            feature.AddKnownType("Nest.ISourceOnlyRepository,Nest", "Nest.ISourceOnlyRepository");
            feature.AddKnownType("Nest.SourceOnlyRepository,Nest", "Nest.SourceOnlyRepository");
            feature.AddKnownType("Nest.SourceOnlyRepositoryDescriptor,Nest", "Nest.SourceOnlyRepositoryDescriptor");
            feature.AddKnownType("Nest.SourceOnlyRepositoryFormatter,Nest", "Nest.SourceOnlyRepositoryFormatter");
            feature.AddKnownType("Nest.CompactNodeInfo,Nest", "Nest.CompactNodeInfo");
            feature.AddKnownType("Nest.IVerifyRepositoryRequest,Nest", "Nest.IVerifyRepositoryRequest");
            feature.AddKnownType("Nest.VerifyRepositoryRequest,Nest", "Nest.VerifyRepositoryRequest");
            feature.AddKnownType("Nest.VerifyRepositoryResponse,Nest", "Nest.VerifyRepositoryResponse");
            feature.AddKnownType("Nest.RestoreObservable,Nest", "Nest.RestoreObservable");
            feature.AddKnownType("Nest.RestoreNextEventArgs,Nest", "Nest.RestoreNextEventArgs");
            feature.AddKnownType("Nest.RestoreCompletedEventArgs,Nest", "Nest.RestoreCompletedEventArgs");
            feature.AddKnownType("Nest.RestoreErrorEventArgs,Nest", "Nest.RestoreErrorEventArgs");
            feature.AddKnownType("Nest.RestoreStatusHumbleObject,Nest", "Nest.RestoreStatusHumbleObject");
            feature.AddKnownType("Nest.RestoreObserver,Nest", "Nest.RestoreObserver");
            feature.AddKnownType("Nest.IRestoreRequest,Nest", "Nest.IRestoreRequest");
            feature.AddKnownType("Nest.RestoreRequest,Nest", "Nest.RestoreRequest");
            feature.AddKnownType("Nest.RestoreResponse,Nest", "Nest.RestoreResponse");
            feature.AddKnownType("Nest.SnapshotRestore,Nest", "Nest.SnapshotRestore");
            feature.AddKnownType("Nest.ICloneSnapshotRequest,Nest", "Nest.ICloneSnapshotRequest");
            feature.AddKnownType("Nest.CloneSnapshotRequest,Nest", "Nest.CloneSnapshotRequest");
            feature.AddKnownType("Nest.CloneSnapshotResponse,Nest", "Nest.CloneSnapshotResponse");
            feature.AddKnownType("Nest.IDeleteSnapshotRequest,Nest", "Nest.IDeleteSnapshotRequest");
            feature.AddKnownType("Nest.DeleteSnapshotRequest,Nest", "Nest.DeleteSnapshotRequest");
            feature.AddKnownType("Nest.DeleteSnapshotResponse,Nest", "Nest.DeleteSnapshotResponse");
            feature.AddKnownType("Nest.IGetSnapshotRequest,Nest", "Nest.IGetSnapshotRequest");
            feature.AddKnownType("Nest.GetSnapshotRequest,Nest", "Nest.GetSnapshotRequest");
            feature.AddKnownType("Nest.GetSnapshotResponse,Nest", "Nest.GetSnapshotResponse");
            feature.AddKnownType("Nest.Snapshot,Nest", "Nest.Snapshot");
            feature.AddKnownType("Nest.SnapshotObservable,Nest", "Nest.SnapshotObservable");
            feature.AddKnownType("Nest.SnapshotNextEventArgs,Nest", "Nest.SnapshotNextEventArgs");
            feature.AddKnownType("Nest.SnapshotCompletedEventArgs,Nest", "Nest.SnapshotCompletedEventArgs");
            feature.AddKnownType("Nest.SnapshotErrorEventArgs,Nest", "Nest.SnapshotErrorEventArgs");
            feature.AddKnownType("Nest.SnapshotStatusHumbleObject,Nest", "Nest.SnapshotStatusHumbleObject");
            feature.AddKnownType("Nest.SnapshotObserver,Nest", "Nest.SnapshotObserver");
            feature.AddKnownType("Nest.SnapshotShardFailure,Nest", "Nest.SnapshotShardFailure");
            feature.AddKnownType("Nest.ISnapshotStatusRequest,Nest", "Nest.ISnapshotStatusRequest");
            feature.AddKnownType("Nest.SnapshotStatusRequest,Nest", "Nest.SnapshotStatusRequest");
            feature.AddKnownType("Nest.SnapshotStatusResponse,Nest", "Nest.SnapshotStatusResponse");
            feature.AddKnownType("Nest.SnapshotStatus,Nest", "Nest.SnapshotStatus");
            feature.AddKnownType("Nest.SnapshotIndexStats,Nest", "Nest.SnapshotIndexStats");
            feature.AddKnownType("Nest.SnapshotIndexShardStats,Nest", "Nest.SnapshotIndexShardStats");
            feature.AddKnownType("Nest.SnapshotShardsStats,Nest", "Nest.SnapshotShardsStats");
            feature.AddKnownType("Nest.SnapshotStats,Nest", "Nest.SnapshotStats");
            feature.AddKnownType("Nest.FileCountSnapshotStats,Nest", "Nest.FileCountSnapshotStats");
            feature.AddKnownType("Nest.ISnapshotRequest,Nest", "Nest.ISnapshotRequest");
            feature.AddKnownType("Nest.SnapshotRequest,Nest", "Nest.SnapshotRequest");
            feature.AddKnownType("Nest.SnapshotResponse,Nest", "Nest.SnapshotResponse");
            feature.AddKnownType("Nest.IQueryContainer,Nest", "Nest.IQueryContainer");
            feature.AddKnownType("Nest.QueryContainer,Nest", "Nest.QueryContainer");
            feature.AddKnownType("Nest.QueryContainerDescriptor`1,Nest", "Nest.QueryContainerDescriptor`1'1");
            feature.AddKnownType("Nest.QueryContainerFormatter,Nest", "Nest.QueryContainerFormatter");
            feature.AddKnownType("Nest.QueryContainerInterfaceFormatter,Nest", "Nest.QueryContainerInterfaceFormatter");
            feature.AddKnownType("Nest.QueryContainerCollectionFormatter,Nest", "Nest.QueryContainerCollectionFormatter");
            feature.AddKnownType("Nest.IFieldLookup,Nest", "Nest.IFieldLookup");
            feature.AddKnownType("Nest.FieldLookup,Nest", "Nest.FieldLookup");
            feature.AddKnownType("Nest.FieldLookupDescriptor`1,Nest", "Nest.FieldLookupDescriptor`1'1");
            feature.AddKnownType("Nest.IFieldNameQuery,Nest", "Nest.IFieldNameQuery");
            feature.AddKnownType("Nest.FieldNameQueryBase,Nest", "Nest.FieldNameQueryBase");
            feature.AddKnownType("Nest.FieldNameQueryDescriptorBase`3,Nest", "Nest.FieldNameQueryDescriptorBase`3'3");
            feature.AddKnownType("Nest.FieldNameQueryFormatter`2,Nest", "Nest.FieldNameQueryFormatter`2'2");
            feature.AddKnownType("Nest.IQuery,Nest", "Nest.IQuery");
            feature.AddKnownType("Nest.QueryBase,Nest", "Nest.QueryBase");
            feature.AddKnownType("Nest.QueryDescriptorBase`2,Nest", "Nest.QueryDescriptorBase`2'2");
            feature.AddKnownType("Nest.IBoolQuery,Nest", "Nest.IBoolQuery");
            feature.AddKnownType("Nest.BoolQuery,Nest", "Nest.BoolQuery");
            feature.AddKnownType("Nest.BoolQueryDescriptor`1,Nest", "Nest.BoolQueryDescriptor`1'1");
            feature.AddKnownType("Nest.IBoostingQuery,Nest", "Nest.IBoostingQuery");
            feature.AddKnownType("Nest.BoostingQuery,Nest", "Nest.BoostingQuery");
            feature.AddKnownType("Nest.BoostingQueryDescriptor`1,Nest", "Nest.BoostingQueryDescriptor`1'1");
            feature.AddKnownType("Nest.IConstantScoreQuery,Nest", "Nest.IConstantScoreQuery");
            feature.AddKnownType("Nest.ConstantScoreQuery,Nest", "Nest.ConstantScoreQuery");
            feature.AddKnownType("Nest.ConstantScoreQueryDescriptor`1,Nest", "Nest.ConstantScoreQueryDescriptor`1'1");
            feature.AddKnownType("Nest.IDisMaxQuery,Nest", "Nest.IDisMaxQuery");
            feature.AddKnownType("Nest.DisMaxQuery,Nest", "Nest.DisMaxQuery");
            feature.AddKnownType("Nest.DisMaxQueryDescriptor`1,Nest", "Nest.DisMaxQueryDescriptor`1'1");
            feature.AddKnownType("Nest.IFunctionScoreQuery,Nest", "Nest.IFunctionScoreQuery");
            feature.AddKnownType("Nest.FunctionScoreQuery,Nest", "Nest.FunctionScoreQuery");
            feature.AddKnownType("Nest.FunctionScoreQueryDescriptor`1,Nest", "Nest.FunctionScoreQueryDescriptor`1'1");
            feature.AddKnownType("Nest.IDecayFunction,Nest", "Nest.IDecayFunction");
            feature.AddKnownType("Nest.IDecayFunction`2,Nest", "Nest.IDecayFunction`2'2");
            feature.AddKnownType("Nest.DecayFunctionBase`2,Nest", "Nest.DecayFunctionBase`2'2");
            feature.AddKnownType("Nest.DecayFunctionDescriptorBase`4,Nest", "Nest.DecayFunctionDescriptorBase`4'4");
            feature.AddKnownType("Nest.ExponentialDecayFunctionBase`2,Nest", "Nest.ExponentialDecayFunctionBase`2'2");
            feature.AddKnownType("Nest.ExponentialDecayFunctionDescriptor`3,Nest", "Nest.ExponentialDecayFunctionDescriptor`3'3");
            feature.AddKnownType("Nest.ExponentialDecayFunction,Nest", "Nest.ExponentialDecayFunction");
            feature.AddKnownType("Nest.ExponentialDateDecayFunction,Nest", "Nest.ExponentialDateDecayFunction");
            feature.AddKnownType("Nest.ExponentialGeoDecayFunction,Nest", "Nest.ExponentialGeoDecayFunction");
            feature.AddKnownType("Nest.GaussDecayFunctionBase`2,Nest", "Nest.GaussDecayFunctionBase`2'2");
            feature.AddKnownType("Nest.GaussDecayFunctionDescriptor`3,Nest", "Nest.GaussDecayFunctionDescriptor`3'3");
            feature.AddKnownType("Nest.GaussDecayFunction,Nest", "Nest.GaussDecayFunction");
            feature.AddKnownType("Nest.GaussDateDecayFunction,Nest", "Nest.GaussDateDecayFunction");
            feature.AddKnownType("Nest.GaussGeoDecayFunction,Nest", "Nest.GaussGeoDecayFunction");
            feature.AddKnownType("Nest.LinearDecayFunctionBase`2,Nest", "Nest.LinearDecayFunctionBase`2'2");
            feature.AddKnownType("Nest.LinearDecayFunctionDescriptor`3,Nest", "Nest.LinearDecayFunctionDescriptor`3'3");
            feature.AddKnownType("Nest.LinearDecayFunction,Nest", "Nest.LinearDecayFunction");
            feature.AddKnownType("Nest.LinearDateDecayFunction,Nest", "Nest.LinearDateDecayFunction");
            feature.AddKnownType("Nest.LinearGeoDecayFunction,Nest", "Nest.LinearGeoDecayFunction");
            feature.AddKnownType("Nest.MultiValueMode,Nest", "Nest.MultiValueMode");
            feature.AddKnownType("Nest.IFieldValueFactorFunction,Nest", "Nest.IFieldValueFactorFunction");
            feature.AddKnownType("Nest.FieldValueFactorFunction,Nest", "Nest.FieldValueFactorFunction");
            feature.AddKnownType("Nest.FieldValueFactorFunctionDescriptor`1,Nest", "Nest.FieldValueFactorFunctionDescriptor`1'1");
            feature.AddKnownType("Nest.FieldValueFactorModifier,Nest", "Nest.FieldValueFactorModifier");
            feature.AddKnownType("Nest.FunctionBoostMode,Nest", "Nest.FunctionBoostMode");
            feature.AddKnownType("Nest.FunctionScoreMode,Nest", "Nest.FunctionScoreMode");
            feature.AddKnownType("Nest.IScoreFunction,Nest", "Nest.IScoreFunction");
            feature.AddKnownType("Nest.FunctionScoreFunction,Nest", "Nest.FunctionScoreFunction");
            feature.AddKnownType("Nest.FunctionScoreFunctionBase,Nest", "Nest.FunctionScoreFunctionBase");
            feature.AddKnownType("Nest.FunctionScoreFunctionDescriptor`1,Nest", "Nest.FunctionScoreFunctionDescriptor`1'1");
            feature.AddKnownType("Nest.FunctionScoreFunctionDescriptorBase`3,Nest", "Nest.FunctionScoreFunctionDescriptorBase`3'3");
            feature.AddKnownType("Nest.IRandomScoreFunction,Nest", "Nest.IRandomScoreFunction");
            feature.AddKnownType("Nest.RandomScoreFunction,Nest", "Nest.RandomScoreFunction");
            feature.AddKnownType("Nest.RandomScoreFunctionDescriptor`1,Nest", "Nest.RandomScoreFunctionDescriptor`1'1");
            feature.AddKnownType("Nest.ScoreFunctionJsonFormatter,Nest", "Nest.ScoreFunctionJsonFormatter");
            feature.AddKnownType("Nest.ScoreFunctionsDescriptor`1,Nest", "Nest.ScoreFunctionsDescriptor`1'1");
            feature.AddKnownType("Nest.IScriptScoreFunction,Nest", "Nest.IScriptScoreFunction");
            feature.AddKnownType("Nest.ScriptScoreFunction,Nest", "Nest.ScriptScoreFunction");
            feature.AddKnownType("Nest.ScriptScoreFunctionDescriptor`1,Nest", "Nest.ScriptScoreFunctionDescriptor`1'1");
            feature.AddKnownType("Nest.IWeightFunction,Nest", "Nest.IWeightFunction");
            feature.AddKnownType("Nest.WeightFunction,Nest", "Nest.WeightFunction");
            feature.AddKnownType("Nest.WeightFunctionDescriptor`1,Nest", "Nest.WeightFunctionDescriptor`1'1");
            feature.AddKnownType("Nest.ICombinedFieldsQuery,Nest", "Nest.ICombinedFieldsQuery");
            feature.AddKnownType("Nest.CombinedFieldsQuery,Nest", "Nest.CombinedFieldsQuery");
            feature.AddKnownType("Nest.CombinedFieldsQueryDescriptor`1,Nest", "Nest.CombinedFieldsQueryDescriptor`1'1");
            feature.AddKnownType("Nest.ICommonTermsQuery,Nest", "Nest.ICommonTermsQuery");
            feature.AddKnownType("Nest.CommonTermsQuery,Nest", "Nest.CommonTermsQuery");
            feature.AddKnownType("Nest.CommonTermsQueryDescriptor`1,Nest", "Nest.CommonTermsQueryDescriptor`1'1");
            feature.AddKnownType("Nest.IIntervalsAllOf,Nest", "Nest.IIntervalsAllOf");
            feature.AddKnownType("Nest.IntervalsAllOf,Nest", "Nest.IntervalsAllOf");
            feature.AddKnownType("Nest.IntervalsAllOfDescriptor,Nest", "Nest.IntervalsAllOfDescriptor");
            feature.AddKnownType("Nest.IIntervalsAnyOf,Nest", "Nest.IIntervalsAnyOf");
            feature.AddKnownType("Nest.IntervalsAnyOf,Nest", "Nest.IntervalsAnyOf");
            feature.AddKnownType("Nest.IntervalsAnyOfDescriptor,Nest", "Nest.IntervalsAnyOfDescriptor");
            feature.AddKnownType("Nest.IIntervalsFilter,Nest", "Nest.IIntervalsFilter");
            feature.AddKnownType("Nest.IntervalsFilter,Nest", "Nest.IntervalsFilter");
            feature.AddKnownType("Nest.IntervalsFilterDescriptor,Nest", "Nest.IntervalsFilterDescriptor");
            feature.AddKnownType("Nest.IIntervalsFuzzy,Nest", "Nest.IIntervalsFuzzy");
            feature.AddKnownType("Nest.IntervalsFuzzy,Nest", "Nest.IntervalsFuzzy");
            feature.AddKnownType("Nest.IntervalsFuzzyDescriptor,Nest", "Nest.IntervalsFuzzyDescriptor");
            feature.AddKnownType("Nest.IIntervalsMatch,Nest", "Nest.IIntervalsMatch");
            feature.AddKnownType("Nest.IntervalsMatch,Nest", "Nest.IntervalsMatch");
            feature.AddKnownType("Nest.IntervalsMatchDescriptor,Nest", "Nest.IntervalsMatchDescriptor");
            feature.AddKnownType("Nest.IIntervalsPrefix,Nest", "Nest.IIntervalsPrefix");
            feature.AddKnownType("Nest.IntervalsPrefix,Nest", "Nest.IntervalsPrefix");
            feature.AddKnownType("Nest.IntervalsPrefixDescriptor,Nest", "Nest.IntervalsPrefixDescriptor");
            feature.AddKnownType("Nest.IIntervalsQuery,Nest", "Nest.IIntervalsQuery");
            feature.AddKnownType("Nest.IntervalsQuery,Nest", "Nest.IntervalsQuery");
            feature.AddKnownType("Nest.IntervalsQueryDescriptor`1,Nest", "Nest.IntervalsQueryDescriptor`1'1");
            feature.AddKnownType("Nest.IIntervalsContainer,Nest", "Nest.IIntervalsContainer");
            feature.AddKnownType("Nest.IntervalsContainer,Nest", "Nest.IntervalsContainer");
            feature.AddKnownType("Nest.IntervalsDescriptor,Nest", "Nest.IntervalsDescriptor");
            feature.AddKnownType("Nest.IIntervals,Nest", "Nest.IIntervals");
            feature.AddKnownType("Nest.IIntervalsNoFilter,Nest", "Nest.IIntervalsNoFilter");
            feature.AddKnownType("Nest.IntervalsBase,Nest", "Nest.IntervalsBase");
            feature.AddKnownType("Nest.IntervalsNoFilterBase,Nest", "Nest.IntervalsNoFilterBase");
            feature.AddKnownType("Nest.IntervalsDescriptorBase`2,Nest", "Nest.IntervalsDescriptorBase`2'2");
            feature.AddKnownType("Nest.IntervalsListDescriptor,Nest", "Nest.IntervalsListDescriptor");
            feature.AddKnownType("Nest.IIntervalsWildcard,Nest", "Nest.IIntervalsWildcard");
            feature.AddKnownType("Nest.IntervalsWildcard,Nest", "Nest.IntervalsWildcard");
            feature.AddKnownType("Nest.IntervalsWildcardDescriptor,Nest", "Nest.IntervalsWildcardDescriptor");
            feature.AddKnownType("Nest.IMatchBoolPrefixQuery,Nest", "Nest.IMatchBoolPrefixQuery");
            feature.AddKnownType("Nest.MatchBoolPrefixQuery,Nest", "Nest.MatchBoolPrefixQuery");
            feature.AddKnownType("Nest.MatchBoolPrefixQueryDescriptor`1,Nest", "Nest.MatchBoolPrefixQueryDescriptor`1'1");
            feature.AddKnownType("Nest.IMatchPhrasePrefixQuery,Nest", "Nest.IMatchPhrasePrefixQuery");
            feature.AddKnownType("Nest.MatchPhrasePrefixQuery,Nest", "Nest.MatchPhrasePrefixQuery");
            feature.AddKnownType("Nest.MatchPhrasePrefixQueryDescriptor`1,Nest", "Nest.MatchPhrasePrefixQueryDescriptor`1'1");
            feature.AddKnownType("Nest.IMatchPhraseQuery,Nest", "Nest.IMatchPhraseQuery");
            feature.AddKnownType("Nest.MatchPhraseQuery,Nest", "Nest.MatchPhraseQuery");
            feature.AddKnownType("Nest.MatchPhraseQueryDescriptor`1,Nest", "Nest.MatchPhraseQueryDescriptor`1'1");
            feature.AddKnownType("Nest.IMatchQuery,Nest", "Nest.IMatchQuery");
            feature.AddKnownType("Nest.MatchQuery,Nest", "Nest.MatchQuery");
            feature.AddKnownType("Nest.MatchQueryDescriptor`1,Nest", "Nest.MatchQueryDescriptor`1'1");
            feature.AddKnownType("Nest.IMultiMatchQuery,Nest", "Nest.IMultiMatchQuery");
            feature.AddKnownType("Nest.MultiMatchQuery,Nest", "Nest.MultiMatchQuery");
            feature.AddKnownType("Nest.MultiMatchQueryDescriptor`1,Nest", "Nest.MultiMatchQueryDescriptor`1'1");
            feature.AddKnownType("Nest.TextQueryType,Nest", "Nest.TextQueryType");
            feature.AddKnownType("Nest.ZeroTermsQuery,Nest", "Nest.ZeroTermsQuery");
            feature.AddKnownType("Nest.IQueryStringQuery,Nest", "Nest.IQueryStringQuery");
            feature.AddKnownType("Nest.QueryStringQuery,Nest", "Nest.QueryStringQuery");
            feature.AddKnownType("Nest.QueryStringQueryDescriptor`1,Nest", "Nest.QueryStringQueryDescriptor`1'1");
            feature.AddKnownType("Nest.SimpleQueryStringFlags,Nest", "Nest.SimpleQueryStringFlags");
            feature.AddKnownType("Nest.SimpleQueryStringFlagsFormatter,Nest", "Nest.SimpleQueryStringFlagsFormatter");
            feature.AddKnownType("Nest.ISimpleQueryStringQuery,Nest", "Nest.ISimpleQueryStringQuery");
            feature.AddKnownType("Nest.SimpleQueryStringQuery,Nest", "Nest.SimpleQueryStringQuery");
            feature.AddKnownType("Nest.SimpleQueryStringQueryDescriptor`1,Nest", "Nest.SimpleQueryStringQueryDescriptor`1'1");
            feature.AddKnownType("Nest.IBoundingBox,Nest", "Nest.IBoundingBox");
            feature.AddKnownType("Nest.BoundingBox,Nest", "Nest.BoundingBox");
            feature.AddKnownType("Nest.BoundingBoxDescriptor,Nest", "Nest.BoundingBoxDescriptor");
            feature.AddKnownType("Nest.IGeoBoundingBoxQuery,Nest", "Nest.IGeoBoundingBoxQuery");
            feature.AddKnownType("Nest.GeoBoundingBoxQuery,Nest", "Nest.GeoBoundingBoxQuery");
            feature.AddKnownType("Nest.GeoBoundingBoxQueryDescriptor`1,Nest", "Nest.GeoBoundingBoxQueryDescriptor`1'1");
            feature.AddKnownType("Nest.GeoBoundingBoxQueryFormatter,Nest", "Nest.GeoBoundingBoxQueryFormatter");
            feature.AddKnownType("Nest.GeoExecution,Nest", "Nest.GeoExecution");
            feature.AddKnownType("Nest.IGeoDistanceQuery,Nest", "Nest.IGeoDistanceQuery");
            feature.AddKnownType("Nest.GeoDistanceQuery,Nest", "Nest.GeoDistanceQuery");
            feature.AddKnownType("Nest.GeoDistanceQueryDescriptor`1,Nest", "Nest.GeoDistanceQueryDescriptor`1'1");
            feature.AddKnownType("Nest.GeoDistanceQueryFormatter,Nest", "Nest.GeoDistanceQueryFormatter");
            feature.AddKnownType("Nest.GeoCoordinateFormatter,Nest", "Nest.GeoCoordinateFormatter");
            feature.AddKnownType("Nest.GeoLocation,Nest", "Nest.GeoLocation");
            feature.AddKnownType("Nest.GeoCoordinate,Nest", "Nest.GeoCoordinate");
            feature.AddKnownType("Nest.GeoLocationFormatter,Nest", "Nest.GeoLocationFormatter");
            feature.AddKnownType("Nest.GeoValidationMethod,Nest", "Nest.GeoValidationMethod");
            feature.AddKnownType("Nest.LatLon,Nest", "Nest.LatLon");
            feature.AddKnownType("Nest.IGeoPolygonQuery,Nest", "Nest.IGeoPolygonQuery");
            feature.AddKnownType("Nest.GeoPolygonQuery,Nest", "Nest.GeoPolygonQuery");
            feature.AddKnownType("Nest.GeoPolygonQueryDescriptor`1,Nest", "Nest.GeoPolygonQueryDescriptor`1'1");
            feature.AddKnownType("Nest.GeoPolygonQueryFormatter,Nest", "Nest.GeoPolygonQueryFormatter");
            feature.AddKnownType("Nest.ICircleGeoShape,Nest", "Nest.ICircleGeoShape");
            feature.AddKnownType("Nest.CircleGeoShape,Nest", "Nest.CircleGeoShape");
            feature.AddKnownType("Nest.IEnvelopeGeoShape,Nest", "Nest.IEnvelopeGeoShape");
            feature.AddKnownType("Nest.EnvelopeGeoShape,Nest", "Nest.EnvelopeGeoShape");
            feature.AddKnownType("Nest.IGeometryCollection,Nest", "Nest.IGeometryCollection");
            feature.AddKnownType("Nest.GeometryCollection,Nest", "Nest.GeometryCollection");
            feature.AddKnownType("Nest.IGeoShape,Nest", "Nest.IGeoShape");
            feature.AddKnownType("Nest.GeoFormat,Nest", "Nest.GeoFormat");
            feature.AddKnownType("Nest.GeoShapeBase,Nest", "Nest.GeoShapeBase");
            feature.AddKnownType("Nest.GeoShapeFormatter`1,Nest", "Nest.GeoShapeFormatter`1'1");
            feature.AddKnownType("Nest.GeoShapeFormatter,Nest", "Nest.GeoShapeFormatter");
            feature.AddKnownType("Nest.GeoShapeQueryFieldNameFormatter,Nest", "Nest.GeoShapeQueryFieldNameFormatter");
            feature.AddKnownType("Nest.GeoShapeQueryFormatter,Nest", "Nest.GeoShapeQueryFormatter");
            feature.AddKnownType("Nest.IGeoShapeQuery,Nest", "Nest.IGeoShapeQuery");
            feature.AddKnownType("Nest.GeoShapeQuery,Nest", "Nest.GeoShapeQuery");
            feature.AddKnownType("Nest.GeoShapeQueryDescriptor`1,Nest", "Nest.GeoShapeQueryDescriptor`1'1");
            feature.AddKnownType("Nest.GeoShapeDescriptor,Nest", "Nest.GeoShapeDescriptor");
            feature.AddKnownType("Nest.ILineStringGeoShape,Nest", "Nest.ILineStringGeoShape");
            feature.AddKnownType("Nest.LineStringGeoShape,Nest", "Nest.LineStringGeoShape");
            feature.AddKnownType("Nest.IMultiLineStringGeoShape,Nest", "Nest.IMultiLineStringGeoShape");
            feature.AddKnownType("Nest.MultiLineStringGeoShape,Nest", "Nest.MultiLineStringGeoShape");
            feature.AddKnownType("Nest.IMultiPointGeoShape,Nest", "Nest.IMultiPointGeoShape");
            feature.AddKnownType("Nest.MultiPointGeoShape,Nest", "Nest.MultiPointGeoShape");
            feature.AddKnownType("Nest.IMultiPolygonGeoShape,Nest", "Nest.IMultiPolygonGeoShape");
            feature.AddKnownType("Nest.MultiPolygonGeoShape,Nest", "Nest.MultiPolygonGeoShape");
            feature.AddKnownType("Nest.IPointGeoShape,Nest", "Nest.IPointGeoShape");
            feature.AddKnownType("Nest.PointGeoShape,Nest", "Nest.PointGeoShape");
            feature.AddKnownType("Nest.IPolygonGeoShape,Nest", "Nest.IPolygonGeoShape");
            feature.AddKnownType("Nest.PolygonGeoShape,Nest", "Nest.PolygonGeoShape");
            feature.AddKnownType("Nest.GeoWKTException,Nest", "Nest.GeoWKTException");
            feature.AddKnownType("Nest.GeoWKTReader,Nest", "Nest.GeoWKTReader");
            feature.AddKnownType("Nest.CharacterType,Nest", "Nest.CharacterType");
            feature.AddKnownType("Nest.TokenType,Nest", "Nest.TokenType");
            feature.AddKnownType("Nest.WellKnownTextTokenizer,Nest", "Nest.WellKnownTextTokenizer");
            feature.AddKnownType("Nest.GeoWKTWriter,Nest", "Nest.GeoWKTWriter");
            feature.AddKnownType("Nest.ChildScoreMode,Nest", "Nest.ChildScoreMode");
            feature.AddKnownType("Nest.IHasChildQuery,Nest", "Nest.IHasChildQuery");
            feature.AddKnownType("Nest.HasChildQuery,Nest", "Nest.HasChildQuery");
            feature.AddKnownType("Nest.HasChildQueryDescriptor`1,Nest", "Nest.HasChildQueryDescriptor`1'1");
            feature.AddKnownType("Nest.IHasParentQuery,Nest", "Nest.IHasParentQuery");
            feature.AddKnownType("Nest.HasParentQuery,Nest", "Nest.HasParentQuery");
            feature.AddKnownType("Nest.HasParentQueryDescriptor`1,Nest", "Nest.HasParentQueryDescriptor`1'1");
            feature.AddKnownType("Nest.INestedQuery,Nest", "Nest.INestedQuery");
            feature.AddKnownType("Nest.NestedQuery,Nest", "Nest.NestedQuery");
            feature.AddKnownType("Nest.NestedQueryDescriptor`1,Nest", "Nest.NestedQueryDescriptor`1'1");
            feature.AddKnownType("Nest.NestedScoreMode,Nest", "Nest.NestedScoreMode");
            feature.AddKnownType("Nest.IParentIdQuery,Nest", "Nest.IParentIdQuery");
            feature.AddKnownType("Nest.ParentIdQuery,Nest", "Nest.ParentIdQuery");
            feature.AddKnownType("Nest.ParentIdQueryDescriptor`1,Nest", "Nest.ParentIdQueryDescriptor`1'1");
            feature.AddKnownType("Nest.IMatchAllQuery,Nest", "Nest.IMatchAllQuery");
            feature.AddKnownType("Nest.MatchAllQuery,Nest", "Nest.MatchAllQuery");
            feature.AddKnownType("Nest.MatchAllQueryDescriptor,Nest", "Nest.MatchAllQueryDescriptor");
            feature.AddKnownType("Nest.IMatchNoneQuery,Nest", "Nest.IMatchNoneQuery");
            feature.AddKnownType("Nest.MatchNoneQuery,Nest", "Nest.MatchNoneQuery");
            feature.AddKnownType("Nest.MatchNoneQueryDescriptor,Nest", "Nest.MatchNoneQueryDescriptor");
            feature.AddKnownType("Nest.MultiTermQueryRewriteFormatter,Nest", "Nest.MultiTermQueryRewriteFormatter");
            feature.AddKnownType("Nest.RewriteMultiTerm,Nest", "Nest.RewriteMultiTerm");
            feature.AddKnownType("Nest.MultiTermQueryRewrite,Nest", "Nest.MultiTermQueryRewrite");
            feature.AddKnownType("Nest.IConditionlessQuery,Nest", "Nest.IConditionlessQuery");
            feature.AddKnownType("Nest.ConditionlessQueryDescriptor`1,Nest", "Nest.ConditionlessQueryDescriptor`1'1");
            feature.AddKnownType("Nest.IRawQuery,Nest", "Nest.IRawQuery");
            feature.AddKnownType("Nest.RawQuery,Nest", "Nest.RawQuery");
            feature.AddKnownType("Nest.RawQueryDescriptor,Nest", "Nest.RawQueryDescriptor");
            feature.AddKnownType("Nest.Operator,Nest", "Nest.Operator");
            feature.AddKnownType("Nest.ISpanContainingQuery,Nest", "Nest.ISpanContainingQuery");
            feature.AddKnownType("Nest.SpanContainingQuery,Nest", "Nest.SpanContainingQuery");
            feature.AddKnownType("Nest.SpanContainingQueryDescriptor`1,Nest", "Nest.SpanContainingQueryDescriptor`1'1");
            feature.AddKnownType("Nest.ISpanFieldMaskingQuery,Nest", "Nest.ISpanFieldMaskingQuery");
            feature.AddKnownType("Nest.SpanFieldMaskingQuery,Nest", "Nest.SpanFieldMaskingQuery");
            feature.AddKnownType("Nest.SpanFieldMaskingQueryDescriptor`1,Nest", "Nest.SpanFieldMaskingQueryDescriptor`1'1");
            feature.AddKnownType("Nest.ISpanFirstQuery,Nest", "Nest.ISpanFirstQuery");
            feature.AddKnownType("Nest.SpanFirstQuery,Nest", "Nest.SpanFirstQuery");
            feature.AddKnownType("Nest.SpanFirstQueryDescriptor`1,Nest", "Nest.SpanFirstQueryDescriptor`1'1");
            feature.AddKnownType("Nest.ISpanGapQuery,Nest", "Nest.ISpanGapQuery");
            feature.AddKnownType("Nest.SpanGapQuery,Nest", "Nest.SpanGapQuery");
            feature.AddKnownType("Nest.SpanGapQueryDescriptor`1,Nest", "Nest.SpanGapQueryDescriptor`1'1");
            feature.AddKnownType("Nest.SpanGapQueryFormatter,Nest", "Nest.SpanGapQueryFormatter");
            feature.AddKnownType("Nest.ISpanSubQuery,Nest", "Nest.ISpanSubQuery");
            feature.AddKnownType("Nest.ISpanMultiTermQuery,Nest", "Nest.ISpanMultiTermQuery");
            feature.AddKnownType("Nest.SpanMultiTermQuery,Nest", "Nest.SpanMultiTermQuery");
            feature.AddKnownType("Nest.SpanMultiTermQueryDescriptor`1,Nest", "Nest.SpanMultiTermQueryDescriptor`1'1");
            feature.AddKnownType("Nest.ISpanNearQuery,Nest", "Nest.ISpanNearQuery");
            feature.AddKnownType("Nest.SpanNearQuery,Nest", "Nest.SpanNearQuery");
            feature.AddKnownType("Nest.SpanNearQueryDescriptor`1,Nest", "Nest.SpanNearQueryDescriptor`1'1");
            feature.AddKnownType("Nest.ISpanNotQuery,Nest", "Nest.ISpanNotQuery");
            feature.AddKnownType("Nest.SpanNotQuery,Nest", "Nest.SpanNotQuery");
            feature.AddKnownType("Nest.SpanNotQueryDescriptor`1,Nest", "Nest.SpanNotQueryDescriptor`1'1");
            feature.AddKnownType("Nest.ISpanOrQuery,Nest", "Nest.ISpanOrQuery");
            feature.AddKnownType("Nest.SpanOrQuery,Nest", "Nest.SpanOrQuery");
            feature.AddKnownType("Nest.SpanOrQueryDescriptor`1,Nest", "Nest.SpanOrQueryDescriptor`1'1");
            feature.AddKnownType("Nest.ISpanQuery,Nest", "Nest.ISpanQuery");
            feature.AddKnownType("Nest.SpanQuery,Nest", "Nest.SpanQuery");
            feature.AddKnownType("Nest.SpanQueryDescriptor`1,Nest", "Nest.SpanQueryDescriptor`1'1");
            feature.AddKnownType("Nest.ISpanTermQuery,Nest", "Nest.ISpanTermQuery");
            feature.AddKnownType("Nest.SpanTermQuery,Nest", "Nest.SpanTermQuery");
            feature.AddKnownType("Nest.SpanTermQueryDescriptor`1,Nest", "Nest.SpanTermQueryDescriptor`1'1");
            feature.AddKnownType("Nest.ISpanWithinQuery,Nest", "Nest.ISpanWithinQuery");
            feature.AddKnownType("Nest.SpanWithinQuery,Nest", "Nest.SpanWithinQuery");
            feature.AddKnownType("Nest.SpanWithinQueryDescriptor`1,Nest", "Nest.SpanWithinQueryDescriptor`1'1");
            feature.AddKnownType("Nest.IDistanceFeatureQuery,Nest", "Nest.IDistanceFeatureQuery");
            feature.AddKnownType("Nest.DistanceFeatureQuery,Nest", "Nest.DistanceFeatureQuery");
            feature.AddKnownType("Nest.DistanceFeatureQueryDescriptor`1,Nest", "Nest.DistanceFeatureQueryDescriptor`1'1");
            feature.AddKnownType("Nest.DistanceFeatureQueryFormatter,Nest", "Nest.DistanceFeatureQueryFormatter");
            feature.AddKnownType("Nest.Like,Nest", "Nest.Like");
            feature.AddKnownType("Nest.LikeDescriptor`1,Nest", "Nest.LikeDescriptor`1'1");
            feature.AddKnownType("Nest.LikeFormatter,Nest", "Nest.LikeFormatter");
            feature.AddKnownType("Nest.ILikeDocument,Nest", "Nest.ILikeDocument");
            feature.AddKnownType("Nest.LikeDocumentBase,Nest", "Nest.LikeDocumentBase");
            feature.AddKnownType("Nest.LikeDocument`1,Nest", "Nest.LikeDocument`1'1");
            feature.AddKnownType("Nest.LikeDocumentDescriptor`1,Nest", "Nest.LikeDocumentDescriptor`1'1");
            feature.AddKnownType("Nest.IMoreLikeThisQuery,Nest", "Nest.IMoreLikeThisQuery");
            feature.AddKnownType("Nest.MoreLikeThisQuery,Nest", "Nest.MoreLikeThisQuery");
            feature.AddKnownType("Nest.MoreLikeThisQueryDescriptor`1,Nest", "Nest.MoreLikeThisQueryDescriptor`1'1");
            feature.AddKnownType("Nest.IPercolateQuery,Nest", "Nest.IPercolateQuery");
            feature.AddKnownType("Nest.PercolateQuery,Nest", "Nest.PercolateQuery");
            feature.AddKnownType("Nest.PercolateQueryDescriptor`1,Nest", "Nest.PercolateQueryDescriptor`1'1");
            feature.AddKnownType("Nest.IPinnedQuery,Nest", "Nest.IPinnedQuery");
            feature.AddKnownType("Nest.PinnedQuery,Nest", "Nest.PinnedQuery");
            feature.AddKnownType("Nest.PinnedQueryDescriptor`1,Nest", "Nest.PinnedQueryDescriptor`1'1");
            feature.AddKnownType("Nest.IRankFeatureQuery,Nest", "Nest.IRankFeatureQuery");
            feature.AddKnownType("Nest.RankFeatureQuery,Nest", "Nest.RankFeatureQuery");
            feature.AddKnownType("Nest.RankFeatureQueryDescriptor`1,Nest", "Nest.RankFeatureQueryDescriptor`1'1");
            feature.AddKnownType("Nest.IRankFeatureFunction,Nest", "Nest.IRankFeatureFunction");
            feature.AddKnownType("Nest.IRankFeatureLogarithmFunction,Nest", "Nest.IRankFeatureLogarithmFunction");
            feature.AddKnownType("Nest.RankFeatureLogarithmFunction,Nest", "Nest.RankFeatureLogarithmFunction");
            feature.AddKnownType("Nest.RankFeatureLogarithmFunctionDescriptor,Nest", "Nest.RankFeatureLogarithmFunctionDescriptor");
            feature.AddKnownType("Nest.IRankFeatureSaturationFunction,Nest", "Nest.IRankFeatureSaturationFunction");
            feature.AddKnownType("Nest.RankFeatureSaturationFunction,Nest", "Nest.RankFeatureSaturationFunction");
            feature.AddKnownType("Nest.RankFeatureSaturationFunctionDescriptor,Nest", "Nest.RankFeatureSaturationFunctionDescriptor");
            feature.AddKnownType("Nest.IRankFeatureSigmoidFunction,Nest", "Nest.IRankFeatureSigmoidFunction");
            feature.AddKnownType("Nest.RankFeatureSigmoidFunction,Nest", "Nest.RankFeatureSigmoidFunction");
            feature.AddKnownType("Nest.RankFeatureSigmoidFunctionDescriptor,Nest", "Nest.RankFeatureSigmoidFunctionDescriptor");
            feature.AddKnownType("Nest.IRankFeatureLinearFunction,Nest", "Nest.IRankFeatureLinearFunction");
            feature.AddKnownType("Nest.RankFeatureLinearFunction,Nest", "Nest.RankFeatureLinearFunction");
            feature.AddKnownType("Nest.RankFeatureQueryFormatter,Nest", "Nest.RankFeatureQueryFormatter");
            feature.AddKnownType("Nest.IScriptScoreQuery,Nest", "Nest.IScriptScoreQuery");
            feature.AddKnownType("Nest.ScriptScoreQuery,Nest", "Nest.ScriptScoreQuery");
            feature.AddKnownType("Nest.ScriptScoreQueryDescriptor`1,Nest", "Nest.ScriptScoreQueryDescriptor`1'1");
            feature.AddKnownType("Nest.IScriptQuery,Nest", "Nest.IScriptQuery");
            feature.AddKnownType("Nest.ScriptQuery,Nest", "Nest.ScriptQuery");
            feature.AddKnownType("Nest.ScriptQueryDescriptor`1,Nest", "Nest.ScriptQueryDescriptor`1'1");
            feature.AddKnownType("Nest.ShapeFormat,Nest", "Nest.ShapeFormat");
            feature.AddKnownType("Nest.CartesianPoint,Nest", "Nest.CartesianPoint");
            feature.AddKnownType("Nest.CartesianPointFormatter,Nest", "Nest.CartesianPointFormatter");
            feature.AddKnownType("Nest.IShapeQuery,Nest", "Nest.IShapeQuery");
            feature.AddKnownType("Nest.ShapeQuery,Nest", "Nest.ShapeQuery");
            feature.AddKnownType("Nest.ShapeQueryDescriptor`1,Nest", "Nest.ShapeQueryDescriptor`1'1");
            feature.AddKnownType("Nest.ShapeQueryFieldNameFormatter,Nest", "Nest.ShapeQueryFieldNameFormatter");
            feature.AddKnownType("Nest.ShapeQueryFormatter,Nest", "Nest.ShapeQueryFormatter");
            feature.AddKnownType("Nest.IExistsQuery,Nest", "Nest.IExistsQuery");
            feature.AddKnownType("Nest.ExistsQuery,Nest", "Nest.ExistsQuery");
            feature.AddKnownType("Nest.ExistsQueryDescriptor`1,Nest", "Nest.ExistsQueryDescriptor`1'1");
            feature.AddKnownType("Nest.IFuzzyStringQuery,Nest", "Nest.IFuzzyStringQuery");
            feature.AddKnownType("Nest.FuzzyQuery,Nest", "Nest.FuzzyQuery");
            feature.AddKnownType("Nest.FuzzyQueryDescriptor`1,Nest", "Nest.FuzzyQueryDescriptor`1'1");
            feature.AddKnownType("Nest.IFuzzyNumericQuery,Nest", "Nest.IFuzzyNumericQuery");
            feature.AddKnownType("Nest.FuzzyNumericQuery,Nest", "Nest.FuzzyNumericQuery");
            feature.AddKnownType("Nest.FuzzyNumericQueryDescriptor`1,Nest", "Nest.FuzzyNumericQueryDescriptor`1'1");
            feature.AddKnownType("Nest.IFuzzyDateQuery,Nest", "Nest.IFuzzyDateQuery");
            feature.AddKnownType("Nest.FuzzyDateQuery,Nest", "Nest.FuzzyDateQuery");
            feature.AddKnownType("Nest.FuzzyDateQueryDescriptor`1,Nest", "Nest.FuzzyDateQueryDescriptor`1'1");
            feature.AddKnownType("Nest.IFuzzyQuery,Nest", "Nest.IFuzzyQuery");
            feature.AddKnownType("Nest.IFuzzyQuery`2,Nest", "Nest.IFuzzyQuery`2'2");
            feature.AddKnownType("Nest.FuzzyQueryBase`2,Nest", "Nest.FuzzyQueryBase`2'2");
            feature.AddKnownType("Nest.FuzzyQueryDescriptorBase`4,Nest", "Nest.FuzzyQueryDescriptorBase`4'4");
            feature.AddKnownType("Nest.FuzzyQueryFormatter,Nest", "Nest.FuzzyQueryFormatter");
            feature.AddKnownType("Nest.IIdsQuery,Nest", "Nest.IIdsQuery");
            feature.AddKnownType("Nest.IdsQuery,Nest", "Nest.IdsQuery");
            feature.AddKnownType("Nest.IdsQueryDescriptor,Nest", "Nest.IdsQueryDescriptor");
            feature.AddKnownType("Nest.IPrefixQuery,Nest", "Nest.IPrefixQuery");
            feature.AddKnownType("Nest.PrefixQuery,Nest", "Nest.PrefixQuery");
            feature.AddKnownType("Nest.PrefixQueryDescriptor`1,Nest", "Nest.PrefixQueryDescriptor`1'1");
            feature.AddKnownType("Nest.IDateRangeQuery,Nest", "Nest.IDateRangeQuery");
            feature.AddKnownType("Nest.DateRangeQuery,Nest", "Nest.DateRangeQuery");
            feature.AddKnownType("Nest.DateRangeQueryDescriptor`1,Nest", "Nest.DateRangeQueryDescriptor`1'1");
            feature.AddKnownType("Nest.ILongRangeQuery,Nest", "Nest.ILongRangeQuery");
            feature.AddKnownType("Nest.LongRangeQuery,Nest", "Nest.LongRangeQuery");
            feature.AddKnownType("Nest.LongRangeQueryDescriptor`1,Nest", "Nest.LongRangeQueryDescriptor`1'1");
            feature.AddKnownType("Nest.INumericRangeQuery,Nest", "Nest.INumericRangeQuery");
            feature.AddKnownType("Nest.NumericRangeQuery,Nest", "Nest.NumericRangeQuery");
            feature.AddKnownType("Nest.NumericRangeQueryDescriptor`1,Nest", "Nest.NumericRangeQueryDescriptor`1'1");
            feature.AddKnownType("Nest.IRangeQuery,Nest", "Nest.IRangeQuery");
            feature.AddKnownType("Nest.RangeQueryFormatter,Nest", "Nest.RangeQueryFormatter");
            feature.AddKnownType("Nest.RangeRelation,Nest", "Nest.RangeRelation");
            feature.AddKnownType("Nest.ITermRangeQuery,Nest", "Nest.ITermRangeQuery");
            feature.AddKnownType("Nest.TermRangeQuery,Nest", "Nest.TermRangeQuery");
            feature.AddKnownType("Nest.TermRangeQueryDescriptor`1,Nest", "Nest.TermRangeQueryDescriptor`1'1");
            feature.AddKnownType("Nest.IRegexpQuery,Nest", "Nest.IRegexpQuery");
            feature.AddKnownType("Nest.RegexpQuery,Nest", "Nest.RegexpQuery");
            feature.AddKnownType("Nest.RegexpQueryDescriptor`1,Nest", "Nest.RegexpQueryDescriptor`1'1");
            feature.AddKnownType("Nest.ITermsSetQuery,Nest", "Nest.ITermsSetQuery");
            feature.AddKnownType("Nest.TermsSetQuery,Nest", "Nest.TermsSetQuery");
            feature.AddKnownType("Nest.TermsSetQueryDescriptor`1,Nest", "Nest.TermsSetQueryDescriptor`1'1");
            feature.AddKnownType("Nest.ITermsQuery,Nest", "Nest.ITermsQuery");
            feature.AddKnownType("Nest.TermsQuery,Nest", "Nest.TermsQuery");
            feature.AddKnownType("Nest.TermsQueryDescriptor`1,Nest", "Nest.TermsQueryDescriptor`1'1");
            feature.AddKnownType("Nest.TermsQueryFormatter,Nest", "Nest.TermsQueryFormatter");
            feature.AddKnownType("Nest.ITermQuery,Nest", "Nest.ITermQuery");
            feature.AddKnownType("Nest.TermQuery,Nest", "Nest.TermQuery");
            feature.AddKnownType("Nest.TermQueryDescriptorBase`3,Nest", "Nest.TermQueryDescriptorBase`3'3");
            feature.AddKnownType("Nest.TermQueryDescriptor`1,Nest", "Nest.TermQueryDescriptor`1'1");
            feature.AddKnownType("Nest.IWildcardQuery,Nest", "Nest.IWildcardQuery");
            feature.AddKnownType("Nest.WildcardQuery`2,Nest", "Nest.WildcardQuery`2'2");
            feature.AddKnownType("Nest.WildcardQuery,Nest", "Nest.WildcardQuery");
            feature.AddKnownType("Nest.WildcardQueryDescriptor`1,Nest", "Nest.WildcardQueryDescriptor`1'1");
            feature.AddKnownType("Nest.DslPrettyPrintVisitor,Nest", "Nest.DslPrettyPrintVisitor");
            feature.AddKnownType("Nest.IQueryVisitor,Nest", "Nest.IQueryVisitor");
            feature.AddKnownType("Nest.QueryVisitor,Nest", "Nest.QueryVisitor");
            feature.AddKnownType("Nest.QueryWalker,Nest", "Nest.QueryWalker");
            feature.AddKnownType("Nest.VisitorScope,Nest", "Nest.VisitorScope");
            feature.AddKnownType("Nest.IAsyncSearchDeleteRequest,Nest", "Nest.IAsyncSearchDeleteRequest");
            feature.AddKnownType("Nest.AsyncSearchDeleteRequest,Nest", "Nest.AsyncSearchDeleteRequest");
            feature.AddKnownType("Nest.IAsyncSearchGetRequest,Nest", "Nest.IAsyncSearchGetRequest");
            feature.AddKnownType("Nest.AsyncSearchGetRequest,Nest", "Nest.AsyncSearchGetRequest");
            feature.AddKnownType("Nest.IAsyncSearchStatusRequest,Nest", "Nest.IAsyncSearchStatusRequest");
            feature.AddKnownType("Nest.AsyncSearchStatusRequest,Nest", "Nest.AsyncSearchStatusRequest");
            feature.AddKnownType("Nest.IAsyncSearchSubmitRequest,Nest", "Nest.IAsyncSearchSubmitRequest");
            feature.AddKnownType("Nest.IAsyncSearchSubmitRequest`1,Nest", "Nest.IAsyncSearchSubmitRequest`1'1");
            feature.AddKnownType("Nest.AsyncSearchSubmitRequest,Nest", "Nest.AsyncSearchSubmitRequest");
            feature.AddKnownType("Nest.AsyncSearchSubmitRequest`1,Nest", "Nest.AsyncSearchSubmitRequest`1'1");
            feature.AddKnownType("Nest.IDeleteAutoFollowPatternRequest,Nest", "Nest.IDeleteAutoFollowPatternRequest");
            feature.AddKnownType("Nest.DeleteAutoFollowPatternRequest,Nest", "Nest.DeleteAutoFollowPatternRequest");
            feature.AddKnownType("Nest.ICreateFollowIndexRequest,Nest", "Nest.ICreateFollowIndexRequest");
            feature.AddKnownType("Nest.CreateFollowIndexRequest,Nest", "Nest.CreateFollowIndexRequest");
            feature.AddKnownType("Nest.IFollowInfoRequest,Nest", "Nest.IFollowInfoRequest");
            feature.AddKnownType("Nest.FollowInfoRequest,Nest", "Nest.FollowInfoRequest");
            feature.AddKnownType("Nest.IFollowIndexStatsRequest,Nest", "Nest.IFollowIndexStatsRequest");
            feature.AddKnownType("Nest.FollowIndexStatsRequest,Nest", "Nest.FollowIndexStatsRequest");
            feature.AddKnownType("Nest.IForgetFollowerIndexRequest,Nest", "Nest.IForgetFollowerIndexRequest");
            feature.AddKnownType("Nest.ForgetFollowerIndexRequest,Nest", "Nest.ForgetFollowerIndexRequest");
            feature.AddKnownType("Nest.IGetAutoFollowPatternRequest,Nest", "Nest.IGetAutoFollowPatternRequest");
            feature.AddKnownType("Nest.GetAutoFollowPatternRequest,Nest", "Nest.GetAutoFollowPatternRequest");
            feature.AddKnownType("Nest.IPauseAutoFollowPatternRequest,Nest", "Nest.IPauseAutoFollowPatternRequest");
            feature.AddKnownType("Nest.PauseAutoFollowPatternRequest,Nest", "Nest.PauseAutoFollowPatternRequest");
            feature.AddKnownType("Nest.IPauseFollowIndexRequest,Nest", "Nest.IPauseFollowIndexRequest");
            feature.AddKnownType("Nest.PauseFollowIndexRequest,Nest", "Nest.PauseFollowIndexRequest");
            feature.AddKnownType("Nest.ICreateAutoFollowPatternRequest,Nest", "Nest.ICreateAutoFollowPatternRequest");
            feature.AddKnownType("Nest.CreateAutoFollowPatternRequest,Nest", "Nest.CreateAutoFollowPatternRequest");
            feature.AddKnownType("Nest.IResumeAutoFollowPatternRequest,Nest", "Nest.IResumeAutoFollowPatternRequest");
            feature.AddKnownType("Nest.ResumeAutoFollowPatternRequest,Nest", "Nest.ResumeAutoFollowPatternRequest");
            feature.AddKnownType("Nest.IResumeFollowIndexRequest,Nest", "Nest.IResumeFollowIndexRequest");
            feature.AddKnownType("Nest.ResumeFollowIndexRequest,Nest", "Nest.ResumeFollowIndexRequest");
            feature.AddKnownType("Nest.ICcrStatsRequest,Nest", "Nest.ICcrStatsRequest");
            feature.AddKnownType("Nest.CcrStatsRequest,Nest", "Nest.CcrStatsRequest");
            feature.AddKnownType("Nest.IUnfollowIndexRequest,Nest", "Nest.IUnfollowIndexRequest");
            feature.AddKnownType("Nest.UnfollowIndexRequest,Nest", "Nest.UnfollowIndexRequest");
            feature.AddKnownType("Nest.IDeleteEnrichPolicyRequest,Nest", "Nest.IDeleteEnrichPolicyRequest");
            feature.AddKnownType("Nest.DeleteEnrichPolicyRequest,Nest", "Nest.DeleteEnrichPolicyRequest");
            feature.AddKnownType("Nest.IExecuteEnrichPolicyRequest,Nest", "Nest.IExecuteEnrichPolicyRequest");
            feature.AddKnownType("Nest.ExecuteEnrichPolicyRequest,Nest", "Nest.ExecuteEnrichPolicyRequest");
            feature.AddKnownType("Nest.IGetEnrichPolicyRequest,Nest", "Nest.IGetEnrichPolicyRequest");
            feature.AddKnownType("Nest.GetEnrichPolicyRequest,Nest", "Nest.GetEnrichPolicyRequest");
            feature.AddKnownType("Nest.IPutEnrichPolicyRequest,Nest", "Nest.IPutEnrichPolicyRequest");
            feature.AddKnownType("Nest.PutEnrichPolicyRequest,Nest", "Nest.PutEnrichPolicyRequest");
            feature.AddKnownType("Nest.IEnrichStatsRequest,Nest", "Nest.IEnrichStatsRequest");
            feature.AddKnownType("Nest.EnrichStatsRequest,Nest", "Nest.EnrichStatsRequest");
            feature.AddKnownType("Nest.IEqlDeleteRequest,Nest", "Nest.IEqlDeleteRequest");
            feature.AddKnownType("Nest.EqlDeleteRequest,Nest", "Nest.EqlDeleteRequest");
            feature.AddKnownType("Nest.IEqlGetRequest,Nest", "Nest.IEqlGetRequest");
            feature.AddKnownType("Nest.EqlGetRequest,Nest", "Nest.EqlGetRequest");
            feature.AddKnownType("Nest.IEqlSearchStatusRequest,Nest", "Nest.IEqlSearchStatusRequest");
            feature.AddKnownType("Nest.EqlSearchStatusRequest,Nest", "Nest.EqlSearchStatusRequest");
            feature.AddKnownType("Nest.IEqlSearchRequest,Nest", "Nest.IEqlSearchRequest");
            feature.AddKnownType("Nest.IEqlSearchRequest`1,Nest", "Nest.IEqlSearchRequest`1'1");
            feature.AddKnownType("Nest.EqlSearchRequest,Nest", "Nest.EqlSearchRequest");
            feature.AddKnownType("Nest.EqlSearchRequest`1,Nest", "Nest.EqlSearchRequest`1'1");
            feature.AddKnownType("Nest.IGraphExploreRequest,Nest", "Nest.IGraphExploreRequest");
            feature.AddKnownType("Nest.IGraphExploreRequest`1,Nest", "Nest.IGraphExploreRequest`1'1");
            feature.AddKnownType("Nest.GraphExploreRequest,Nest", "Nest.GraphExploreRequest");
            feature.AddKnownType("Nest.GraphExploreRequest`1,Nest", "Nest.GraphExploreRequest`1'1");
            feature.AddKnownType("Nest.IDeleteLifecycleRequest,Nest", "Nest.IDeleteLifecycleRequest");
            feature.AddKnownType("Nest.DeleteLifecycleRequest,Nest", "Nest.DeleteLifecycleRequest");
            feature.AddKnownType("Nest.IExplainLifecycleRequest,Nest", "Nest.IExplainLifecycleRequest");
            feature.AddKnownType("Nest.ExplainLifecycleRequest,Nest", "Nest.ExplainLifecycleRequest");
            feature.AddKnownType("Nest.IGetLifecycleRequest,Nest", "Nest.IGetLifecycleRequest");
            feature.AddKnownType("Nest.GetLifecycleRequest,Nest", "Nest.GetLifecycleRequest");
            feature.AddKnownType("Nest.IGetIlmStatusRequest,Nest", "Nest.IGetIlmStatusRequest");
            feature.AddKnownType("Nest.GetIlmStatusRequest,Nest", "Nest.GetIlmStatusRequest");
            feature.AddKnownType("Nest.IMigrateToDataTiersRequest,Nest", "Nest.IMigrateToDataTiersRequest");
            feature.AddKnownType("Nest.MigrateToDataTiersRequest,Nest", "Nest.MigrateToDataTiersRequest");
            feature.AddKnownType("Nest.IMoveToStepRequest,Nest", "Nest.IMoveToStepRequest");
            feature.AddKnownType("Nest.MoveToStepRequest,Nest", "Nest.MoveToStepRequest");
            feature.AddKnownType("Nest.IPutLifecycleRequest,Nest", "Nest.IPutLifecycleRequest");
            feature.AddKnownType("Nest.PutLifecycleRequest,Nest", "Nest.PutLifecycleRequest");
            feature.AddKnownType("Nest.IRemovePolicyRequest,Nest", "Nest.IRemovePolicyRequest");
            feature.AddKnownType("Nest.RemovePolicyRequest,Nest", "Nest.RemovePolicyRequest");
            feature.AddKnownType("Nest.IRetryIlmRequest,Nest", "Nest.IRetryIlmRequest");
            feature.AddKnownType("Nest.RetryIlmRequest,Nest", "Nest.RetryIlmRequest");
            feature.AddKnownType("Nest.IStartIlmRequest,Nest", "Nest.IStartIlmRequest");
            feature.AddKnownType("Nest.StartIlmRequest,Nest", "Nest.StartIlmRequest");
            feature.AddKnownType("Nest.IStopIlmRequest,Nest", "Nest.IStopIlmRequest");
            feature.AddKnownType("Nest.StopIlmRequest,Nest", "Nest.StopIlmRequest");
            feature.AddKnownType("Nest.ICreateDataStreamRequest,Nest", "Nest.ICreateDataStreamRequest");
            feature.AddKnownType("Nest.CreateDataStreamRequest,Nest", "Nest.CreateDataStreamRequest");
            feature.AddKnownType("Nest.IDataStreamsStatsRequest,Nest", "Nest.IDataStreamsStatsRequest");
            feature.AddKnownType("Nest.DataStreamsStatsRequest,Nest", "Nest.DataStreamsStatsRequest");
            feature.AddKnownType("Nest.IDeleteDataStreamRequest,Nest", "Nest.IDeleteDataStreamRequest");
            feature.AddKnownType("Nest.DeleteDataStreamRequest,Nest", "Nest.DeleteDataStreamRequest");
            feature.AddKnownType("Nest.IGetDataStreamRequest,Nest", "Nest.IGetDataStreamRequest");
            feature.AddKnownType("Nest.GetDataStreamRequest,Nest", "Nest.GetDataStreamRequest");
            feature.AddKnownType("Nest.IMigrateToDataStreamRequest,Nest", "Nest.IMigrateToDataStreamRequest");
            feature.AddKnownType("Nest.MigrateToDataStreamRequest,Nest", "Nest.MigrateToDataStreamRequest");
            feature.AddKnownType("Nest.IPromoteDataStreamRequest,Nest", "Nest.IPromoteDataStreamRequest");
            feature.AddKnownType("Nest.PromoteDataStreamRequest,Nest", "Nest.PromoteDataStreamRequest");
            feature.AddKnownType("Nest.IValidateQueryRequest,Nest", "Nest.IValidateQueryRequest");
            feature.AddKnownType("Nest.IValidateQueryRequest`1,Nest", "Nest.IValidateQueryRequest`1'1");
            feature.AddKnownType("Nest.ValidateQueryRequest,Nest", "Nest.ValidateQueryRequest");
            feature.AddKnownType("Nest.ValidateQueryRequest`1,Nest", "Nest.ValidateQueryRequest`1'1");
            feature.AddKnownType("Nest.IDeleteLicenseRequest,Nest", "Nest.IDeleteLicenseRequest");
            feature.AddKnownType("Nest.DeleteLicenseRequest,Nest", "Nest.DeleteLicenseRequest");
            feature.AddKnownType("Nest.IGetLicenseRequest,Nest", "Nest.IGetLicenseRequest");
            feature.AddKnownType("Nest.GetLicenseRequest,Nest", "Nest.GetLicenseRequest");
            feature.AddKnownType("Nest.IGetBasicLicenseStatusRequest,Nest", "Nest.IGetBasicLicenseStatusRequest");
            feature.AddKnownType("Nest.GetBasicLicenseStatusRequest,Nest", "Nest.GetBasicLicenseStatusRequest");
            feature.AddKnownType("Nest.IGetTrialLicenseStatusRequest,Nest", "Nest.IGetTrialLicenseStatusRequest");
            feature.AddKnownType("Nest.GetTrialLicenseStatusRequest,Nest", "Nest.GetTrialLicenseStatusRequest");
            feature.AddKnownType("Nest.IPostLicenseRequest,Nest", "Nest.IPostLicenseRequest");
            feature.AddKnownType("Nest.PostLicenseRequest,Nest", "Nest.PostLicenseRequest");
            feature.AddKnownType("Nest.IStartBasicLicenseRequest,Nest", "Nest.IStartBasicLicenseRequest");
            feature.AddKnownType("Nest.StartBasicLicenseRequest,Nest", "Nest.StartBasicLicenseRequest");
            feature.AddKnownType("Nest.IStartTrialLicenseRequest,Nest", "Nest.IStartTrialLicenseRequest");
            feature.AddKnownType("Nest.StartTrialLicenseRequest,Nest", "Nest.StartTrialLicenseRequest");
            feature.AddKnownType("Nest.ICloseJobRequest,Nest", "Nest.ICloseJobRequest");
            feature.AddKnownType("Nest.CloseJobRequest,Nest", "Nest.CloseJobRequest");
            feature.AddKnownType("Nest.IDeleteCalendarRequest,Nest", "Nest.IDeleteCalendarRequest");
            feature.AddKnownType("Nest.DeleteCalendarRequest,Nest", "Nest.DeleteCalendarRequest");
            feature.AddKnownType("Nest.IDeleteCalendarEventRequest,Nest", "Nest.IDeleteCalendarEventRequest");
            feature.AddKnownType("Nest.DeleteCalendarEventRequest,Nest", "Nest.DeleteCalendarEventRequest");
            feature.AddKnownType("Nest.IDeleteCalendarJobRequest,Nest", "Nest.IDeleteCalendarJobRequest");
            feature.AddKnownType("Nest.DeleteCalendarJobRequest,Nest", "Nest.DeleteCalendarJobRequest");
            feature.AddKnownType("Nest.IDeleteDatafeedRequest,Nest", "Nest.IDeleteDatafeedRequest");
            feature.AddKnownType("Nest.DeleteDatafeedRequest,Nest", "Nest.DeleteDatafeedRequest");
            feature.AddKnownType("Nest.IDeleteExpiredDataRequest,Nest", "Nest.IDeleteExpiredDataRequest");
            feature.AddKnownType("Nest.DeleteExpiredDataRequest,Nest", "Nest.DeleteExpiredDataRequest");
            feature.AddKnownType("Nest.IDeleteFilterRequest,Nest", "Nest.IDeleteFilterRequest");
            feature.AddKnownType("Nest.DeleteFilterRequest,Nest", "Nest.DeleteFilterRequest");
            feature.AddKnownType("Nest.IDeleteForecastRequest,Nest", "Nest.IDeleteForecastRequest");
            feature.AddKnownType("Nest.DeleteForecastRequest,Nest", "Nest.DeleteForecastRequest");
            feature.AddKnownType("Nest.IDeleteJobRequest,Nest", "Nest.IDeleteJobRequest");
            feature.AddKnownType("Nest.DeleteJobRequest,Nest", "Nest.DeleteJobRequest");
            feature.AddKnownType("Nest.IDeleteModelSnapshotRequest,Nest", "Nest.IDeleteModelSnapshotRequest");
            feature.AddKnownType("Nest.DeleteModelSnapshotRequest,Nest", "Nest.DeleteModelSnapshotRequest");
            feature.AddKnownType("Nest.IEstimateModelMemoryRequest,Nest", "Nest.IEstimateModelMemoryRequest");
            feature.AddKnownType("Nest.EstimateModelMemoryRequest,Nest", "Nest.EstimateModelMemoryRequest");
            feature.AddKnownType("Nest.IFlushJobRequest,Nest", "Nest.IFlushJobRequest");
            feature.AddKnownType("Nest.FlushJobRequest,Nest", "Nest.FlushJobRequest");
            feature.AddKnownType("Nest.IForecastJobRequest,Nest", "Nest.IForecastJobRequest");
            feature.AddKnownType("Nest.ForecastJobRequest,Nest", "Nest.ForecastJobRequest");
            feature.AddKnownType("Nest.IGetBucketsRequest,Nest", "Nest.IGetBucketsRequest");
            feature.AddKnownType("Nest.GetBucketsRequest,Nest", "Nest.GetBucketsRequest");
            feature.AddKnownType("Nest.IGetCalendarEventsRequest,Nest", "Nest.IGetCalendarEventsRequest");
            feature.AddKnownType("Nest.GetCalendarEventsRequest,Nest", "Nest.GetCalendarEventsRequest");
            feature.AddKnownType("Nest.IGetCalendarsRequest,Nest", "Nest.IGetCalendarsRequest");
            feature.AddKnownType("Nest.GetCalendarsRequest,Nest", "Nest.GetCalendarsRequest");
            feature.AddKnownType("Nest.IGetCategoriesRequest,Nest", "Nest.IGetCategoriesRequest");
            feature.AddKnownType("Nest.GetCategoriesRequest,Nest", "Nest.GetCategoriesRequest");
            feature.AddKnownType("Nest.IGetDatafeedStatsRequest,Nest", "Nest.IGetDatafeedStatsRequest");
            feature.AddKnownType("Nest.GetDatafeedStatsRequest,Nest", "Nest.GetDatafeedStatsRequest");
            feature.AddKnownType("Nest.IGetDatafeedsRequest,Nest", "Nest.IGetDatafeedsRequest");
            feature.AddKnownType("Nest.GetDatafeedsRequest,Nest", "Nest.GetDatafeedsRequest");
            feature.AddKnownType("Nest.IGetFiltersRequest,Nest", "Nest.IGetFiltersRequest");
            feature.AddKnownType("Nest.GetFiltersRequest,Nest", "Nest.GetFiltersRequest");
            feature.AddKnownType("Nest.IGetInfluencersRequest,Nest", "Nest.IGetInfluencersRequest");
            feature.AddKnownType("Nest.GetInfluencersRequest,Nest", "Nest.GetInfluencersRequest");
            feature.AddKnownType("Nest.IGetJobStatsRequest,Nest", "Nest.IGetJobStatsRequest");
            feature.AddKnownType("Nest.GetJobStatsRequest,Nest", "Nest.GetJobStatsRequest");
            feature.AddKnownType("Nest.IGetJobsRequest,Nest", "Nest.IGetJobsRequest");
            feature.AddKnownType("Nest.GetJobsRequest,Nest", "Nest.GetJobsRequest");
            feature.AddKnownType("Nest.IGetModelSnapshotsRequest,Nest", "Nest.IGetModelSnapshotsRequest");
            feature.AddKnownType("Nest.GetModelSnapshotsRequest,Nest", "Nest.GetModelSnapshotsRequest");
            feature.AddKnownType("Nest.IGetOverallBucketsRequest,Nest", "Nest.IGetOverallBucketsRequest");
            feature.AddKnownType("Nest.GetOverallBucketsRequest,Nest", "Nest.GetOverallBucketsRequest");
            feature.AddKnownType("Nest.IGetAnomalyRecordsRequest,Nest", "Nest.IGetAnomalyRecordsRequest");
            feature.AddKnownType("Nest.GetAnomalyRecordsRequest,Nest", "Nest.GetAnomalyRecordsRequest");
            feature.AddKnownType("Nest.IMachineLearningInfoRequest,Nest", "Nest.IMachineLearningInfoRequest");
            feature.AddKnownType("Nest.MachineLearningInfoRequest,Nest", "Nest.MachineLearningInfoRequest");
            feature.AddKnownType("Nest.IOpenJobRequest,Nest", "Nest.IOpenJobRequest");
            feature.AddKnownType("Nest.OpenJobRequest,Nest", "Nest.OpenJobRequest");
            feature.AddKnownType("Nest.IPostCalendarEventsRequest,Nest", "Nest.IPostCalendarEventsRequest");
            feature.AddKnownType("Nest.PostCalendarEventsRequest,Nest", "Nest.PostCalendarEventsRequest");
            feature.AddKnownType("Nest.IPostJobDataRequest,Nest", "Nest.IPostJobDataRequest");
            feature.AddKnownType("Nest.PostJobDataRequest,Nest", "Nest.PostJobDataRequest");
            feature.AddKnownType("Nest.IPreviewDatafeedRequest,Nest", "Nest.IPreviewDatafeedRequest");
            feature.AddKnownType("Nest.PreviewDatafeedRequest,Nest", "Nest.PreviewDatafeedRequest");
            feature.AddKnownType("Nest.IPutCalendarRequest,Nest", "Nest.IPutCalendarRequest");
            feature.AddKnownType("Nest.PutCalendarRequest,Nest", "Nest.PutCalendarRequest");
            feature.AddKnownType("Nest.IPutCalendarJobRequest,Nest", "Nest.IPutCalendarJobRequest");
            feature.AddKnownType("Nest.PutCalendarJobRequest,Nest", "Nest.PutCalendarJobRequest");
            feature.AddKnownType("Nest.IPutDatafeedRequest,Nest", "Nest.IPutDatafeedRequest");
            feature.AddKnownType("Nest.PutDatafeedRequest,Nest", "Nest.PutDatafeedRequest");
            feature.AddKnownType("Nest.IPutFilterRequest,Nest", "Nest.IPutFilterRequest");
            feature.AddKnownType("Nest.PutFilterRequest,Nest", "Nest.PutFilterRequest");
            feature.AddKnownType("Nest.IPutJobRequest,Nest", "Nest.IPutJobRequest");
            feature.AddKnownType("Nest.PutJobRequest,Nest", "Nest.PutJobRequest");
            feature.AddKnownType("Nest.IRevertModelSnapshotRequest,Nest", "Nest.IRevertModelSnapshotRequest");
            feature.AddKnownType("Nest.RevertModelSnapshotRequest,Nest", "Nest.RevertModelSnapshotRequest");
            feature.AddKnownType("Nest.ISetUpgradeModeRequest,Nest", "Nest.ISetUpgradeModeRequest");
            feature.AddKnownType("Nest.SetUpgradeModeRequest,Nest", "Nest.SetUpgradeModeRequest");
            feature.AddKnownType("Nest.IStartDatafeedRequest,Nest", "Nest.IStartDatafeedRequest");
            feature.AddKnownType("Nest.StartDatafeedRequest,Nest", "Nest.StartDatafeedRequest");
            feature.AddKnownType("Nest.IStopDatafeedRequest,Nest", "Nest.IStopDatafeedRequest");
            feature.AddKnownType("Nest.StopDatafeedRequest,Nest", "Nest.StopDatafeedRequest");
            feature.AddKnownType("Nest.IUpdateDatafeedRequest,Nest", "Nest.IUpdateDatafeedRequest");
            feature.AddKnownType("Nest.UpdateDatafeedRequest,Nest", "Nest.UpdateDatafeedRequest");
            feature.AddKnownType("Nest.IUpdateFilterRequest,Nest", "Nest.IUpdateFilterRequest");
            feature.AddKnownType("Nest.UpdateFilterRequest,Nest", "Nest.UpdateFilterRequest");
            feature.AddKnownType("Nest.IUpdateJobRequest,Nest", "Nest.IUpdateJobRequest");
            feature.AddKnownType("Nest.UpdateJobRequest,Nest", "Nest.UpdateJobRequest");
            feature.AddKnownType("Nest.IUpdateModelSnapshotRequest,Nest", "Nest.IUpdateModelSnapshotRequest");
            feature.AddKnownType("Nest.UpdateModelSnapshotRequest,Nest", "Nest.UpdateModelSnapshotRequest");
            feature.AddKnownType("Nest.IValidateJobRequest,Nest", "Nest.IValidateJobRequest");
            feature.AddKnownType("Nest.ValidateJobRequest,Nest", "Nest.ValidateJobRequest");
            feature.AddKnownType("Nest.IValidateDetectorRequest,Nest", "Nest.IValidateDetectorRequest");
            feature.AddKnownType("Nest.ValidateDetectorRequest,Nest", "Nest.ValidateDetectorRequest");
            feature.AddKnownType("Nest.IDeprecationInfoRequest,Nest", "Nest.IDeprecationInfoRequest");
            feature.AddKnownType("Nest.DeprecationInfoRequest,Nest", "Nest.DeprecationInfoRequest");
            feature.AddKnownType("Nest.IClearScrollRequest,Nest", "Nest.IClearScrollRequest");
            feature.AddKnownType("Nest.ClearScrollRequest,Nest", "Nest.ClearScrollRequest");
            feature.AddKnownType("Nest.IClosePointInTimeRequest,Nest", "Nest.IClosePointInTimeRequest");
            feature.AddKnownType("Nest.ClosePointInTimeRequest,Nest", "Nest.ClosePointInTimeRequest");
            feature.AddKnownType("Nest.ICountRequest,Nest", "Nest.ICountRequest");
            feature.AddKnownType("Nest.ICountRequest`1,Nest", "Nest.ICountRequest`1'1");
            feature.AddKnownType("Nest.CountRequest,Nest", "Nest.CountRequest");
            feature.AddKnownType("Nest.CountRequest`1,Nest", "Nest.CountRequest`1'1");
            feature.AddKnownType("Nest.IExplainRequest,Nest", "Nest.IExplainRequest");
            feature.AddKnownType("Nest.IExplainRequest`1,Nest", "Nest.IExplainRequest`1'1");
            feature.AddKnownType("Nest.ExplainRequest,Nest", "Nest.ExplainRequest");
            feature.AddKnownType("Nest.ExplainRequest`1,Nest", "Nest.ExplainRequest`1'1");
            feature.AddKnownType("Nest.IFieldCapabilitiesRequest,Nest", "Nest.IFieldCapabilitiesRequest");
            feature.AddKnownType("Nest.FieldCapabilitiesRequest,Nest", "Nest.FieldCapabilitiesRequest");
            feature.AddKnownType("Nest.IMultiSearchRequest,Nest", "Nest.IMultiSearchRequest");
            feature.AddKnownType("Nest.MultiSearchRequest,Nest", "Nest.MultiSearchRequest");
            feature.AddKnownType("Nest.IMultiSearchTemplateRequest,Nest", "Nest.IMultiSearchTemplateRequest");
            feature.AddKnownType("Nest.MultiSearchTemplateRequest,Nest", "Nest.MultiSearchTemplateRequest");
            feature.AddKnownType("Nest.IOpenPointInTimeRequest,Nest", "Nest.IOpenPointInTimeRequest");
            feature.AddKnownType("Nest.OpenPointInTimeRequest,Nest", "Nest.OpenPointInTimeRequest");
            feature.AddKnownType("Nest.IRenderSearchTemplateRequest,Nest", "Nest.IRenderSearchTemplateRequest");
            feature.AddKnownType("Nest.RenderSearchTemplateRequest,Nest", "Nest.RenderSearchTemplateRequest");
            feature.AddKnownType("Nest.IScrollRequest,Nest", "Nest.IScrollRequest");
            feature.AddKnownType("Nest.ScrollRequest,Nest", "Nest.ScrollRequest");
            feature.AddKnownType("Nest.ISearchRequest,Nest", "Nest.ISearchRequest");
            feature.AddKnownType("Nest.ISearchRequest`1,Nest", "Nest.ISearchRequest`1'1");
            feature.AddKnownType("Nest.SearchRequest,Nest", "Nest.SearchRequest");
            feature.AddKnownType("Nest.SearchRequest`1,Nest", "Nest.SearchRequest`1'1");
            feature.AddKnownType("Nest.ISearchShardsRequest,Nest", "Nest.ISearchShardsRequest");
            feature.AddKnownType("Nest.ISearchShardsRequest`1,Nest", "Nest.ISearchShardsRequest`1'1");
            feature.AddKnownType("Nest.SearchShardsRequest,Nest", "Nest.SearchShardsRequest");
            feature.AddKnownType("Nest.SearchShardsRequest`1,Nest", "Nest.SearchShardsRequest`1'1");
            feature.AddKnownType("Nest.ISearchTemplateRequest,Nest", "Nest.ISearchTemplateRequest");
            feature.AddKnownType("Nest.SearchTemplateRequest,Nest", "Nest.SearchTemplateRequest");
            feature.AddKnownType("Nest.SearchTemplateRequest`1,Nest", "Nest.SearchTemplateRequest`1'1");
            feature.AddKnownType("Nest.IDeleteRollupJobRequest,Nest", "Nest.IDeleteRollupJobRequest");
            feature.AddKnownType("Nest.DeleteRollupJobRequest,Nest", "Nest.DeleteRollupJobRequest");
            feature.AddKnownType("Nest.IGetRollupJobRequest,Nest", "Nest.IGetRollupJobRequest");
            feature.AddKnownType("Nest.GetRollupJobRequest,Nest", "Nest.GetRollupJobRequest");
            feature.AddKnownType("Nest.IGetRollupCapabilitiesRequest,Nest", "Nest.IGetRollupCapabilitiesRequest");
            feature.AddKnownType("Nest.GetRollupCapabilitiesRequest,Nest", "Nest.GetRollupCapabilitiesRequest");
            feature.AddKnownType("Nest.IGetRollupIndexCapabilitiesRequest,Nest", "Nest.IGetRollupIndexCapabilitiesRequest");
            feature.AddKnownType("Nest.GetRollupIndexCapabilitiesRequest,Nest", "Nest.GetRollupIndexCapabilitiesRequest");
            feature.AddKnownType("Nest.ICreateRollupJobRequest,Nest", "Nest.ICreateRollupJobRequest");
            feature.AddKnownType("Nest.CreateRollupJobRequest,Nest", "Nest.CreateRollupJobRequest");
            feature.AddKnownType("Nest.IRollupSearchRequest,Nest", "Nest.IRollupSearchRequest");
            feature.AddKnownType("Nest.RollupSearchRequest,Nest", "Nest.RollupSearchRequest");
            feature.AddKnownType("Nest.IStartRollupJobRequest,Nest", "Nest.IStartRollupJobRequest");
            feature.AddKnownType("Nest.StartRollupJobRequest,Nest", "Nest.StartRollupJobRequest");
            feature.AddKnownType("Nest.IStopRollupJobRequest,Nest", "Nest.IStopRollupJobRequest");
            feature.AddKnownType("Nest.StopRollupJobRequest,Nest", "Nest.StopRollupJobRequest");
            feature.AddKnownType("Nest.IAuthenticateRequest,Nest", "Nest.IAuthenticateRequest");
            feature.AddKnownType("Nest.AuthenticateRequest,Nest", "Nest.AuthenticateRequest");
            feature.AddKnownType("Nest.IChangePasswordRequest,Nest", "Nest.IChangePasswordRequest");
            feature.AddKnownType("Nest.ChangePasswordRequest,Nest", "Nest.ChangePasswordRequest");
            feature.AddKnownType("Nest.IClearApiKeyCacheRequest,Nest", "Nest.IClearApiKeyCacheRequest");
            feature.AddKnownType("Nest.ClearApiKeyCacheRequest,Nest", "Nest.ClearApiKeyCacheRequest");
            feature.AddKnownType("Nest.IClearCachedPrivilegesRequest,Nest", "Nest.IClearCachedPrivilegesRequest");
            feature.AddKnownType("Nest.ClearCachedPrivilegesRequest,Nest", "Nest.ClearCachedPrivilegesRequest");
            feature.AddKnownType("Nest.IClearCachedRealmsRequest,Nest", "Nest.IClearCachedRealmsRequest");
            feature.AddKnownType("Nest.ClearCachedRealmsRequest,Nest", "Nest.ClearCachedRealmsRequest");
            feature.AddKnownType("Nest.IClearCachedRolesRequest,Nest", "Nest.IClearCachedRolesRequest");
            feature.AddKnownType("Nest.ClearCachedRolesRequest,Nest", "Nest.ClearCachedRolesRequest");
            feature.AddKnownType("Nest.ICreateApiKeyRequest,Nest", "Nest.ICreateApiKeyRequest");
            feature.AddKnownType("Nest.CreateApiKeyRequest,Nest", "Nest.CreateApiKeyRequest");
            feature.AddKnownType("Nest.IDeletePrivilegesRequest,Nest", "Nest.IDeletePrivilegesRequest");
            feature.AddKnownType("Nest.DeletePrivilegesRequest,Nest", "Nest.DeletePrivilegesRequest");
            feature.AddKnownType("Nest.IDeleteRoleRequest,Nest", "Nest.IDeleteRoleRequest");
            feature.AddKnownType("Nest.DeleteRoleRequest,Nest", "Nest.DeleteRoleRequest");
            feature.AddKnownType("Nest.IDeleteRoleMappingRequest,Nest", "Nest.IDeleteRoleMappingRequest");
            feature.AddKnownType("Nest.DeleteRoleMappingRequest,Nest", "Nest.DeleteRoleMappingRequest");
            feature.AddKnownType("Nest.IDeleteUserRequest,Nest", "Nest.IDeleteUserRequest");
            feature.AddKnownType("Nest.DeleteUserRequest,Nest", "Nest.DeleteUserRequest");
            feature.AddKnownType("Nest.IDisableUserRequest,Nest", "Nest.IDisableUserRequest");
            feature.AddKnownType("Nest.DisableUserRequest,Nest", "Nest.DisableUserRequest");
            feature.AddKnownType("Nest.IEnableUserRequest,Nest", "Nest.IEnableUserRequest");
            feature.AddKnownType("Nest.EnableUserRequest,Nest", "Nest.EnableUserRequest");
            feature.AddKnownType("Nest.IGetApiKeyRequest,Nest", "Nest.IGetApiKeyRequest");
            feature.AddKnownType("Nest.GetApiKeyRequest,Nest", "Nest.GetApiKeyRequest");
            feature.AddKnownType("Nest.IGetBuiltinPrivilegesRequest,Nest", "Nest.IGetBuiltinPrivilegesRequest");
            feature.AddKnownType("Nest.GetBuiltinPrivilegesRequest,Nest", "Nest.GetBuiltinPrivilegesRequest");
            feature.AddKnownType("Nest.IGetPrivilegesRequest,Nest", "Nest.IGetPrivilegesRequest");
            feature.AddKnownType("Nest.GetPrivilegesRequest,Nest", "Nest.GetPrivilegesRequest");
            feature.AddKnownType("Nest.IGetRoleRequest,Nest", "Nest.IGetRoleRequest");
            feature.AddKnownType("Nest.GetRoleRequest,Nest", "Nest.GetRoleRequest");
            feature.AddKnownType("Nest.IGetRoleMappingRequest,Nest", "Nest.IGetRoleMappingRequest");
            feature.AddKnownType("Nest.GetRoleMappingRequest,Nest", "Nest.GetRoleMappingRequest");
            feature.AddKnownType("Nest.IGetUserAccessTokenRequest,Nest", "Nest.IGetUserAccessTokenRequest");
            feature.AddKnownType("Nest.GetUserAccessTokenRequest,Nest", "Nest.GetUserAccessTokenRequest");
            feature.AddKnownType("Nest.IGetUserRequest,Nest", "Nest.IGetUserRequest");
            feature.AddKnownType("Nest.GetUserRequest,Nest", "Nest.GetUserRequest");
            feature.AddKnownType("Nest.IGetUserPrivilegesRequest,Nest", "Nest.IGetUserPrivilegesRequest");
            feature.AddKnownType("Nest.GetUserPrivilegesRequest,Nest", "Nest.GetUserPrivilegesRequest");
            feature.AddKnownType("Nest.IGrantApiKeyRequest,Nest", "Nest.IGrantApiKeyRequest");
            feature.AddKnownType("Nest.GrantApiKeyRequest,Nest", "Nest.GrantApiKeyRequest");
            feature.AddKnownType("Nest.IHasPrivilegesRequest,Nest", "Nest.IHasPrivilegesRequest");
            feature.AddKnownType("Nest.HasPrivilegesRequest,Nest", "Nest.HasPrivilegesRequest");
            feature.AddKnownType("Nest.IInvalidateApiKeyRequest,Nest", "Nest.IInvalidateApiKeyRequest");
            feature.AddKnownType("Nest.InvalidateApiKeyRequest,Nest", "Nest.InvalidateApiKeyRequest");
            feature.AddKnownType("Nest.IInvalidateUserAccessTokenRequest,Nest", "Nest.IInvalidateUserAccessTokenRequest");
            feature.AddKnownType("Nest.InvalidateUserAccessTokenRequest,Nest", "Nest.InvalidateUserAccessTokenRequest");
            feature.AddKnownType("Nest.IPutPrivilegesRequest,Nest", "Nest.IPutPrivilegesRequest");
            feature.AddKnownType("Nest.PutPrivilegesRequest,Nest", "Nest.PutPrivilegesRequest");
            feature.AddKnownType("Nest.IPutRoleRequest,Nest", "Nest.IPutRoleRequest");
            feature.AddKnownType("Nest.PutRoleRequest,Nest", "Nest.PutRoleRequest");
            feature.AddKnownType("Nest.IPutRoleMappingRequest,Nest", "Nest.IPutRoleMappingRequest");
            feature.AddKnownType("Nest.PutRoleMappingRequest,Nest", "Nest.PutRoleMappingRequest");
            feature.AddKnownType("Nest.IPutUserRequest,Nest", "Nest.IPutUserRequest");
            feature.AddKnownType("Nest.PutUserRequest,Nest", "Nest.PutUserRequest");
            feature.AddKnownType("Nest.IGetCertificatesRequest,Nest", "Nest.IGetCertificatesRequest");
            feature.AddKnownType("Nest.GetCertificatesRequest,Nest", "Nest.GetCertificatesRequest");
            feature.AddKnownType("Nest.IDeleteSnapshotLifecycleRequest,Nest", "Nest.IDeleteSnapshotLifecycleRequest");
            feature.AddKnownType("Nest.DeleteSnapshotLifecycleRequest,Nest", "Nest.DeleteSnapshotLifecycleRequest");
            feature.AddKnownType("Nest.IExecuteSnapshotLifecycleRequest,Nest", "Nest.IExecuteSnapshotLifecycleRequest");
            feature.AddKnownType("Nest.ExecuteSnapshotLifecycleRequest,Nest", "Nest.ExecuteSnapshotLifecycleRequest");
            feature.AddKnownType("Nest.IExecuteRetentionRequest,Nest", "Nest.IExecuteRetentionRequest");
            feature.AddKnownType("Nest.ExecuteRetentionRequest,Nest", "Nest.ExecuteRetentionRequest");
            feature.AddKnownType("Nest.IGetSnapshotLifecycleRequest,Nest", "Nest.IGetSnapshotLifecycleRequest");
            feature.AddKnownType("Nest.GetSnapshotLifecycleRequest,Nest", "Nest.GetSnapshotLifecycleRequest");
            feature.AddKnownType("Nest.IGetSnapshotLifecycleStatsRequest,Nest", "Nest.IGetSnapshotLifecycleStatsRequest");
            feature.AddKnownType("Nest.GetSnapshotLifecycleStatsRequest,Nest", "Nest.GetSnapshotLifecycleStatsRequest");
            feature.AddKnownType("Nest.IGetSnapshotLifecycleManagementStatusRequest,Nest", "Nest.IGetSnapshotLifecycleManagementStatusRequest");
            feature.AddKnownType("Nest.GetSnapshotLifecycleManagementStatusRequest,Nest", "Nest.GetSnapshotLifecycleManagementStatusRequest");
            feature.AddKnownType("Nest.IPutSnapshotLifecycleRequest,Nest", "Nest.IPutSnapshotLifecycleRequest");
            feature.AddKnownType("Nest.PutSnapshotLifecycleRequest,Nest", "Nest.PutSnapshotLifecycleRequest");
            feature.AddKnownType("Nest.IStartSnapshotLifecycleManagementRequest,Nest", "Nest.IStartSnapshotLifecycleManagementRequest");
            feature.AddKnownType("Nest.StartSnapshotLifecycleManagementRequest,Nest", "Nest.StartSnapshotLifecycleManagementRequest");
            feature.AddKnownType("Nest.IStopSnapshotLifecycleManagementRequest,Nest", "Nest.IStopSnapshotLifecycleManagementRequest");
            feature.AddKnownType("Nest.StopSnapshotLifecycleManagementRequest,Nest", "Nest.StopSnapshotLifecycleManagementRequest");
            feature.AddKnownType("Nest.IClearSqlCursorRequest,Nest", "Nest.IClearSqlCursorRequest");
            feature.AddKnownType("Nest.ClearSqlCursorRequest,Nest", "Nest.ClearSqlCursorRequest");
            feature.AddKnownType("Nest.ISqlDeleteRequest,Nest", "Nest.ISqlDeleteRequest");
            feature.AddKnownType("Nest.SqlDeleteRequest,Nest", "Nest.SqlDeleteRequest");
            feature.AddKnownType("Nest.ISqlGetRequest,Nest", "Nest.ISqlGetRequest");
            feature.AddKnownType("Nest.SqlGetRequest,Nest", "Nest.SqlGetRequest");
            feature.AddKnownType("Nest.ISqlSearchStatusRequest,Nest", "Nest.ISqlSearchStatusRequest");
            feature.AddKnownType("Nest.SqlSearchStatusRequest,Nest", "Nest.SqlSearchStatusRequest");
            feature.AddKnownType("Nest.IQuerySqlRequest,Nest", "Nest.IQuerySqlRequest");
            feature.AddKnownType("Nest.QuerySqlRequest,Nest", "Nest.QuerySqlRequest");
            feature.AddKnownType("Nest.ITranslateSqlRequest,Nest", "Nest.ITranslateSqlRequest");
            feature.AddKnownType("Nest.TranslateSqlRequest,Nest", "Nest.TranslateSqlRequest");
            feature.AddKnownType("Nest.IDeleteTransformRequest,Nest", "Nest.IDeleteTransformRequest");
            feature.AddKnownType("Nest.DeleteTransformRequest,Nest", "Nest.DeleteTransformRequest");
            feature.AddKnownType("Nest.IGetTransformRequest,Nest", "Nest.IGetTransformRequest");
            feature.AddKnownType("Nest.GetTransformRequest,Nest", "Nest.GetTransformRequest");
            feature.AddKnownType("Nest.IGetTransformStatsRequest,Nest", "Nest.IGetTransformStatsRequest");
            feature.AddKnownType("Nest.GetTransformStatsRequest,Nest", "Nest.GetTransformStatsRequest");
            feature.AddKnownType("Nest.IPreviewTransformRequest,Nest", "Nest.IPreviewTransformRequest");
            feature.AddKnownType("Nest.PreviewTransformRequest,Nest", "Nest.PreviewTransformRequest");
            feature.AddKnownType("Nest.IPutTransformRequest,Nest", "Nest.IPutTransformRequest");
            feature.AddKnownType("Nest.PutTransformRequest,Nest", "Nest.PutTransformRequest");
            feature.AddKnownType("Nest.IStartTransformRequest,Nest", "Nest.IStartTransformRequest");
            feature.AddKnownType("Nest.StartTransformRequest,Nest", "Nest.StartTransformRequest");
            feature.AddKnownType("Nest.IStopTransformRequest,Nest", "Nest.IStopTransformRequest");
            feature.AddKnownType("Nest.StopTransformRequest,Nest", "Nest.StopTransformRequest");
            feature.AddKnownType("Nest.IUpdateTransformRequest,Nest", "Nest.IUpdateTransformRequest");
            feature.AddKnownType("Nest.UpdateTransformRequest,Nest", "Nest.UpdateTransformRequest");
            feature.AddKnownType("Nest.IAcknowledgeWatchRequest,Nest", "Nest.IAcknowledgeWatchRequest");
            feature.AddKnownType("Nest.AcknowledgeWatchRequest,Nest", "Nest.AcknowledgeWatchRequest");
            feature.AddKnownType("Nest.IActivateWatchRequest,Nest", "Nest.IActivateWatchRequest");
            feature.AddKnownType("Nest.ActivateWatchRequest,Nest", "Nest.ActivateWatchRequest");
            feature.AddKnownType("Nest.IDeactivateWatchRequest,Nest", "Nest.IDeactivateWatchRequest");
            feature.AddKnownType("Nest.DeactivateWatchRequest,Nest", "Nest.DeactivateWatchRequest");
            feature.AddKnownType("Nest.IDeleteWatchRequest,Nest", "Nest.IDeleteWatchRequest");
            feature.AddKnownType("Nest.DeleteWatchRequest,Nest", "Nest.DeleteWatchRequest");
            feature.AddKnownType("Nest.IExecuteWatchRequest,Nest", "Nest.IExecuteWatchRequest");
            feature.AddKnownType("Nest.ExecuteWatchRequest,Nest", "Nest.ExecuteWatchRequest");
            feature.AddKnownType("Nest.IGetWatchRequest,Nest", "Nest.IGetWatchRequest");
            feature.AddKnownType("Nest.GetWatchRequest,Nest", "Nest.GetWatchRequest");
            feature.AddKnownType("Nest.IPutWatchRequest,Nest", "Nest.IPutWatchRequest");
            feature.AddKnownType("Nest.PutWatchRequest,Nest", "Nest.PutWatchRequest");
            feature.AddKnownType("Nest.IQueryWatchesRequest,Nest", "Nest.IQueryWatchesRequest");
            feature.AddKnownType("Nest.QueryWatchesRequest,Nest", "Nest.QueryWatchesRequest");
            feature.AddKnownType("Nest.IStartWatcherRequest,Nest", "Nest.IStartWatcherRequest");
            feature.AddKnownType("Nest.StartWatcherRequest,Nest", "Nest.StartWatcherRequest");
            feature.AddKnownType("Nest.IWatcherStatsRequest,Nest", "Nest.IWatcherStatsRequest");
            feature.AddKnownType("Nest.WatcherStatsRequest,Nest", "Nest.WatcherStatsRequest");
            feature.AddKnownType("Nest.IStopWatcherRequest,Nest", "Nest.IStopWatcherRequest");
            feature.AddKnownType("Nest.StopWatcherRequest,Nest", "Nest.StopWatcherRequest");
            feature.AddKnownType("Nest.IXPackInfoRequest,Nest", "Nest.IXPackInfoRequest");
            feature.AddKnownType("Nest.XPackInfoRequest,Nest", "Nest.XPackInfoRequest");
            feature.AddKnownType("Nest.IXPackUsageRequest,Nest", "Nest.IXPackUsageRequest");
            feature.AddKnownType("Nest.XPackUsageRequest,Nest", "Nest.XPackUsageRequest");
            feature.AddKnownType("Nest.CountResponse,Nest", "Nest.CountResponse");
            feature.AddKnownType("Nest.IInlineGet`1,Nest", "Nest.IInlineGet`1'1");
            feature.AddKnownType("Nest.InlineGet`1,Nest", "Nest.InlineGet`1'1");
            feature.AddKnownType("Nest.IExplainResponse`1,Nest", "Nest.IExplainResponse`1'1");
            feature.AddKnownType("Nest.ExplainResponse`1,Nest", "Nest.ExplainResponse`1'1");
            feature.AddKnownType("Nest.Explanation,Nest", "Nest.Explanation");
            feature.AddKnownType("Nest.ExplanationDetail,Nest", "Nest.ExplanationDetail");
            feature.AddKnownType("Nest.FieldCapabilitiesResponse,Nest", "Nest.FieldCapabilitiesResponse");
            feature.AddKnownType("Nest.FieldCapabilitiesFields,Nest", "Nest.FieldCapabilitiesFields");
            feature.AddKnownType("Nest.FieldCapabilitiesFields+Converter,Nest", "Nest.Converter");
            feature.AddKnownType("Nest.FieldTypes,Nest", "Nest.FieldTypes");
            feature.AddKnownType("Nest.FieldCapabilities,Nest", "Nest.FieldCapabilities");
            feature.AddKnownType("Nest.ITypedSearchRequest,Nest", "Nest.ITypedSearchRequest");
            feature.AddKnownType("Nest.MultiSearchTemplateFormatter,Nest", "Nest.MultiSearchTemplateFormatter");
            feature.AddKnownType("Nest.MultiSearchFormatter,Nest", "Nest.MultiSearchFormatter");
            feature.AddKnownType("Nest.MultiSearchResponse,Nest", "Nest.MultiSearchResponse");
            feature.AddKnownType("Nest.MultiSearchResponseBuilder,Nest", "Nest.MultiSearchResponseBuilder");
            feature.AddKnownType("Nest.MultiSearchResponseFormatter,Nest", "Nest.MultiSearchResponseFormatter");
            feature.AddKnownType("Nest.MultiSearchResponseFormatter+SearchHitTuple,Nest", "Nest.SearchHitTuple");
            feature.AddKnownType("Nest.ClearScrollResponse,Nest", "Nest.ClearScrollResponse");
            feature.AddKnownType("Nest.ISlicedScroll,Nest", "Nest.ISlicedScroll");
            feature.AddKnownType("Nest.SlicedScroll,Nest", "Nest.SlicedScroll");
            feature.AddKnownType("Nest.SlicedScrollDescriptor`1,Nest", "Nest.SlicedScrollDescriptor`1'1");
            feature.AddKnownType("Nest.SearchShardsResponse,Nest", "Nest.SearchShardsResponse");
            feature.AddKnownType("Nest.SearchNode,Nest", "Nest.SearchNode");
            feature.AddKnownType("Nest.SearchShard,Nest", "Nest.SearchShard");
            feature.AddKnownType("Nest.RenderSearchTemplateResponse,Nest", "Nest.RenderSearchTemplateResponse");
            feature.AddKnownType("Nest.IFieldCollapse,Nest", "Nest.IFieldCollapse");
            feature.AddKnownType("Nest.FieldCollapse,Nest", "Nest.FieldCollapse");
            feature.AddKnownType("Nest.FieldCollapseDescriptor`1,Nest", "Nest.FieldCollapseDescriptor`1'1");
            feature.AddKnownType("Nest.BoundaryScanner,Nest", "Nest.BoundaryScanner");
            feature.AddKnownType("Nest.IHighlight,Nest", "Nest.IHighlight");
            feature.AddKnownType("Nest.Highlight,Nest", "Nest.Highlight");
            feature.AddKnownType("Nest.HighlightDescriptor`1,Nest", "Nest.HighlightDescriptor`1'1");
            feature.AddKnownType("Nest.HighlighterEncoder,Nest", "Nest.HighlighterEncoder");
            feature.AddKnownType("Nest.HighlighterFragmenter,Nest", "Nest.HighlighterFragmenter");
            feature.AddKnownType("Nest.HighlighterOrder,Nest", "Nest.HighlighterOrder");
            feature.AddKnownType("Nest.HighlighterTagsSchema,Nest", "Nest.HighlighterTagsSchema");
            feature.AddKnownType("Nest.HighlighterType,Nest", "Nest.HighlighterType");
            feature.AddKnownType("Nest.IHighlightField,Nest", "Nest.IHighlightField");
            feature.AddKnownType("Nest.HighlightField,Nest", "Nest.HighlightField");
            feature.AddKnownType("Nest.HighlightFieldDescriptor`1,Nest", "Nest.HighlightFieldDescriptor`1'1");
            feature.AddKnownType("Nest.IHitMetadata`1,Nest", "Nest.IHitMetadata`1'1");
            feature.AddKnownType("Nest.IHit`1,Nest", "Nest.IHit`1'1");
            feature.AddKnownType("Nest.Hit`1,Nest", "Nest.Hit`1'1");
            feature.AddKnownType("Nest.IHitsMetadata`1,Nest", "Nest.IHitsMetadata`1'1");
            feature.AddKnownType("Nest.HitsMetadata`1,Nest", "Nest.HitsMetadata`1'1");
            feature.AddKnownType("Nest.InnerHitsMetadata,Nest", "Nest.InnerHitsMetadata");
            feature.AddKnownType("Nest.InnerHitsResult,Nest", "Nest.InnerHitsResult");
            feature.AddKnownType("Nest.NestedIdentity,Nest", "Nest.NestedIdentity");
            feature.AddKnownType("Nest.TotalHits,Nest", "Nest.TotalHits");
            feature.AddKnownType("Nest.TotalHitsRelation,Nest", "Nest.TotalHitsRelation");
            feature.AddKnownType("Nest.TotalHitsFormatter,Nest", "Nest.TotalHitsFormatter");
            feature.AddKnownType("Nest.IInnerHits,Nest", "Nest.IInnerHits");
            feature.AddKnownType("Nest.InnerHits,Nest", "Nest.InnerHits");
            feature.AddKnownType("Nest.InnerHitsDescriptor`1,Nest", "Nest.InnerHitsDescriptor`1'1");
            feature.AddKnownType("Nest.ClosePointInTimeResponse,Nest", "Nest.ClosePointInTimeResponse");
            feature.AddKnownType("Nest.OpenPointInTimeResponse,Nest", "Nest.OpenPointInTimeResponse");
            feature.AddKnownType("Nest.IPointInTime,Nest", "Nest.IPointInTime");
            feature.AddKnownType("Nest.PointInTime,Nest", "Nest.PointInTime");
            feature.AddKnownType("Nest.PointInTimeDescriptor,Nest", "Nest.PointInTimeDescriptor");
            feature.AddKnownType("Nest.AggregationBreakdown,Nest", "Nest.AggregationBreakdown");
            feature.AddKnownType("Nest.AggregationProfile,Nest", "Nest.AggregationProfile");
            feature.AddKnownType("Nest.Collector,Nest", "Nest.Collector");
            feature.AddKnownType("Nest.Profile,Nest", "Nest.Profile");
            feature.AddKnownType("Nest.QueryBreakdown,Nest", "Nest.QueryBreakdown");
            feature.AddKnownType("Nest.QueryProfile,Nest", "Nest.QueryProfile");
            feature.AddKnownType("Nest.SearchProfile,Nest", "Nest.SearchProfile");
            feature.AddKnownType("Nest.ShardProfile,Nest", "Nest.ShardProfile");
            feature.AddKnownType("Nest.IRescore,Nest", "Nest.IRescore");
            feature.AddKnownType("Nest.Rescore,Nest", "Nest.Rescore");
            feature.AddKnownType("Nest.RescoringDescriptor`1,Nest", "Nest.RescoringDescriptor`1'1");
            feature.AddKnownType("Nest.RescoreDescriptor`1,Nest", "Nest.RescoreDescriptor`1'1");
            feature.AddKnownType("Nest.IRescoreQuery,Nest", "Nest.IRescoreQuery");
            feature.AddKnownType("Nest.RescoreQuery,Nest", "Nest.RescoreQuery");
            feature.AddKnownType("Nest.RescoreQueryDescriptor`1,Nest", "Nest.RescoreQueryDescriptor`1'1");
            feature.AddKnownType("Nest.ScoreMode,Nest", "Nest.ScoreMode");
            feature.AddKnownType("Nest.ISearchResponse`1,Nest", "Nest.ISearchResponse`1'1");
            feature.AddKnownType("Nest.SearchResponse`1,Nest", "Nest.SearchResponse`1'1");
            feature.AddKnownType("Nest.IFieldSort,Nest", "Nest.IFieldSort");
            feature.AddKnownType("Nest.FieldSort,Nest", "Nest.FieldSort");
            feature.AddKnownType("Nest.FieldSortDescriptor`1,Nest", "Nest.FieldSortDescriptor`1'1");
            feature.AddKnownType("Nest.IGeoDistanceSort,Nest", "Nest.IGeoDistanceSort");
            feature.AddKnownType("Nest.GeoDistanceSort,Nest", "Nest.GeoDistanceSort");
            feature.AddKnownType("Nest.GeoDistanceSortDescriptor`1,Nest", "Nest.GeoDistanceSortDescriptor`1'1");
            feature.AddKnownType("Nest.INestedSort,Nest", "Nest.INestedSort");
            feature.AddKnownType("Nest.NestedSort,Nest", "Nest.NestedSort");
            feature.AddKnownType("Nest.NestedSortDescriptor`1,Nest", "Nest.NestedSortDescriptor`1'1");
            feature.AddKnownType("Nest.NumericType,Nest", "Nest.NumericType");
            feature.AddKnownType("Nest.IScriptSort,Nest", "Nest.IScriptSort");
            feature.AddKnownType("Nest.ScriptSort,Nest", "Nest.ScriptSort");
            feature.AddKnownType("Nest.ScriptSortDescriptor`1,Nest", "Nest.ScriptSortDescriptor`1'1");
            feature.AddKnownType("Nest.ISort,Nest", "Nest.ISort");
            feature.AddKnownType("Nest.SortBase,Nest", "Nest.SortBase");
            feature.AddKnownType("Nest.SortDescriptorBase`3,Nest", "Nest.SortDescriptorBase`3'3");
            feature.AddKnownType("Nest.SortDescriptor`1,Nest", "Nest.SortDescriptor`1'1");
            feature.AddKnownType("Nest.SortMode,Nest", "Nest.SortMode");
            feature.AddKnownType("Nest.SortOrder,Nest", "Nest.SortOrder");
            feature.AddKnownType("Nest.SortSpecialField,Nest", "Nest.SortSpecialField");
            feature.AddKnownType("Nest.ISourceFilter,Nest", "Nest.ISourceFilter");
            feature.AddKnownType("Nest.SourceFilter,Nest", "Nest.SourceFilter");
            feature.AddKnownType("Nest.SourceFilterDescriptor`1,Nest", "Nest.SourceFilterDescriptor`1'1");
            feature.AddKnownType("Nest.SourceFilterFormatter,Nest", "Nest.SourceFilterFormatter");
            feature.AddKnownType("Nest.CompletionField,Nest", "Nest.CompletionField");
            feature.AddKnownType("Nest.ICompletionSuggester,Nest", "Nest.ICompletionSuggester");
            feature.AddKnownType("Nest.CompletionSuggester,Nest", "Nest.CompletionSuggester");
            feature.AddKnownType("Nest.CompletionSuggesterDescriptor`1,Nest", "Nest.CompletionSuggesterDescriptor`1'1");
            feature.AddKnownType("Nest.ISuggestFuzziness,Nest", "Nest.ISuggestFuzziness");
            feature.AddKnownType("Nest.SuggestFuzziness,Nest", "Nest.SuggestFuzziness");
            feature.AddKnownType("Nest.SuggestFuzzinessDescriptor`1,Nest", "Nest.SuggestFuzzinessDescriptor`1'1");
            feature.AddKnownType("Nest.Context,Nest", "Nest.Context");
            feature.AddKnownType("Nest.ContextFormatter,Nest", "Nest.ContextFormatter");
            feature.AddKnownType("Nest.ISuggestContextQuery,Nest", "Nest.ISuggestContextQuery");
            feature.AddKnownType("Nest.SuggestContextQuery,Nest", "Nest.SuggestContextQuery");
            feature.AddKnownType("Nest.SuggestContextQueryDescriptor`1,Nest", "Nest.SuggestContextQueryDescriptor`1'1");
            feature.AddKnownType("Nest.SuggestContextQueriesDescriptor`1,Nest", "Nest.SuggestContextQueriesDescriptor`1'1");
            feature.AddKnownType("Nest.IDirectGenerator,Nest", "Nest.IDirectGenerator");
            feature.AddKnownType("Nest.DirectGenerator,Nest", "Nest.DirectGenerator");
            feature.AddKnownType("Nest.DirectGeneratorDescriptor`1,Nest", "Nest.DirectGeneratorDescriptor`1'1");
            feature.AddKnownType("Nest.IPhraseSuggestCollate,Nest", "Nest.IPhraseSuggestCollate");
            feature.AddKnownType("Nest.PhraseSuggestCollate,Nest", "Nest.PhraseSuggestCollate");
            feature.AddKnownType("Nest.PhraseSuggestCollateDescriptor`1,Nest", "Nest.PhraseSuggestCollateDescriptor`1'1");
            feature.AddKnownType("Nest.IPhraseSuggestCollateQuery,Nest", "Nest.IPhraseSuggestCollateQuery");
            feature.AddKnownType("Nest.PhraseSuggestCollateQuery,Nest", "Nest.PhraseSuggestCollateQuery");
            feature.AddKnownType("Nest.PhraseSuggestCollateQueryDescriptor,Nest", "Nest.PhraseSuggestCollateQueryDescriptor");
            feature.AddKnownType("Nest.IPhraseSuggester,Nest", "Nest.IPhraseSuggester");
            feature.AddKnownType("Nest.PhraseSuggester,Nest", "Nest.PhraseSuggester");
            feature.AddKnownType("Nest.PhraseSuggesterDescriptor`1,Nest", "Nest.PhraseSuggesterDescriptor`1'1");
            feature.AddKnownType("Nest.IPhraseSuggestHighlight,Nest", "Nest.IPhraseSuggestHighlight");
            feature.AddKnownType("Nest.PhraseSuggestHighlight,Nest", "Nest.PhraseSuggestHighlight");
            feature.AddKnownType("Nest.PhraseSuggestHighlightDescriptor,Nest", "Nest.PhraseSuggestHighlightDescriptor");
            feature.AddKnownType("Nest.ILaplaceSmoothingModel,Nest", "Nest.ILaplaceSmoothingModel");
            feature.AddKnownType("Nest.LaplaceSmoothingModel,Nest", "Nest.LaplaceSmoothingModel");
            feature.AddKnownType("Nest.LaplaceSmoothingModelDescriptor,Nest", "Nest.LaplaceSmoothingModelDescriptor");
            feature.AddKnownType("Nest.ILinearInterpolationSmoothingModel,Nest", "Nest.ILinearInterpolationSmoothingModel");
            feature.AddKnownType("Nest.LinearInterpolationSmoothingModel,Nest", "Nest.LinearInterpolationSmoothingModel");
            feature.AddKnownType("Nest.LinearInterpolationSmoothingModelDescriptor,Nest", "Nest.LinearInterpolationSmoothingModelDescriptor");
            feature.AddKnownType("Nest.ISmoothingModel,Nest", "Nest.ISmoothingModel");
            feature.AddKnownType("Nest.SmoothingModelBase,Nest", "Nest.SmoothingModelBase");
            feature.AddKnownType("Nest.ISmoothingModelContainer,Nest", "Nest.ISmoothingModelContainer");
            feature.AddKnownType("Nest.SmoothingModelContainer,Nest", "Nest.SmoothingModelContainer");
            feature.AddKnownType("Nest.SmoothingModelContainerDescriptor,Nest", "Nest.SmoothingModelContainerDescriptor");
            feature.AddKnownType("Nest.IStupidBackoffSmoothingModel,Nest", "Nest.IStupidBackoffSmoothingModel");
            feature.AddKnownType("Nest.StupidBackoffSmoothingModel,Nest", "Nest.StupidBackoffSmoothingModel");
            feature.AddKnownType("Nest.StupidBackoffSmoothingModelDescriptor,Nest", "Nest.StupidBackoffSmoothingModelDescriptor");
            feature.AddKnownType("Nest.ISuggest`1,Nest", "Nest.ISuggest`1'1");
            feature.AddKnownType("Nest.Suggest`1,Nest", "Nest.Suggest`1'1");
            feature.AddKnownType("Nest.ISuggestBucket,Nest", "Nest.ISuggestBucket");
            feature.AddKnownType("Nest.SuggestBucket,Nest", "Nest.SuggestBucket");
            feature.AddKnownType("Nest.ISuggestContainer,Nest", "Nest.ISuggestContainer");
            feature.AddKnownType("Nest.SuggestContainer,Nest", "Nest.SuggestContainer");
            feature.AddKnownType("Nest.SuggestContainerDescriptor`1,Nest", "Nest.SuggestContainerDescriptor`1'1");
            feature.AddKnownType("Nest.SuggestDictionaryFormatter`1,Nest", "Nest.SuggestDictionaryFormatter`1'1");
            feature.AddKnownType("Nest.ISuggestDictionary`1,Nest", "Nest.ISuggestDictionary`1'1");
            feature.AddKnownType("Nest.SuggestDictionary`1,Nest", "Nest.SuggestDictionary`1'1");
            feature.AddKnownType("Nest.ISuggester,Nest", "Nest.ISuggester");
            feature.AddKnownType("Nest.SuggesterBase,Nest", "Nest.SuggesterBase");
            feature.AddKnownType("Nest.SuggestDescriptorBase`3,Nest", "Nest.SuggestDescriptorBase`3'3");
            feature.AddKnownType("Nest.ISuggestOption`1,Nest", "Nest.ISuggestOption`1'1");
            feature.AddKnownType("Nest.SuggestOption`1,Nest", "Nest.SuggestOption`1'1");
            feature.AddKnownType("Nest.StringDistance,Nest", "Nest.StringDistance");
            feature.AddKnownType("Nest.SuggestSort,Nest", "Nest.SuggestSort");
            feature.AddKnownType("Nest.ITermSuggester,Nest", "Nest.ITermSuggester");
            feature.AddKnownType("Nest.TermSuggester,Nest", "Nest.TermSuggester");
            feature.AddKnownType("Nest.TermSuggesterDescriptor`1,Nest", "Nest.TermSuggesterDescriptor`1'1");
            feature.AddKnownType("Nest.ValidateQueryResponse,Nest", "Nest.ValidateQueryResponse");
            feature.AddKnownType("Nest.ValidationExplanation,Nest", "Nest.ValidationExplanation");
            feature.AddKnownType("Nest.AsyncSearch`1,Nest", "Nest.AsyncSearch`1'1");
            feature.AddKnownType("Nest.IAsyncSearchResponse`1,Nest", "Nest.IAsyncSearchResponse`1'1");
            feature.AddKnownType("Nest.AsyncSearchResponseBase`1,Nest", "Nest.AsyncSearchResponseBase`1'1");
            feature.AddKnownType("Nest.AsyncSearchDeleteResponse,Nest", "Nest.AsyncSearchDeleteResponse");
            feature.AddKnownType("Nest.AsyncSearchGetResponse`1,Nest", "Nest.AsyncSearchGetResponse`1'1");
            feature.AddKnownType("Nest.AsyncSearchStatusResponse,Nest", "Nest.AsyncSearchStatusResponse");
            feature.AddKnownType("Nest.AsyncSearchSubmitResponse`1,Nest", "Nest.AsyncSearchSubmitResponse`1'1");
            feature.AddKnownType("Nest.CreateAutoFollowPatternResponse,Nest", "Nest.CreateAutoFollowPatternResponse");
            feature.AddKnownType("Nest.DeleteAutoFollowPatternResponse,Nest", "Nest.DeleteAutoFollowPatternResponse");
            feature.AddKnownType("Nest.GetAutoFollowPatternResponse,Nest", "Nest.GetAutoFollowPatternResponse");
            feature.AddKnownType("Nest.AutoFollowPatternFormatter,Nest", "Nest.AutoFollowPatternFormatter");
            feature.AddKnownType("Nest.IAutoFollowPattern,Nest", "Nest.IAutoFollowPattern");
            feature.AddKnownType("Nest.AutoFollowPattern,Nest", "Nest.AutoFollowPattern");
            feature.AddKnownType("Nest.PauseAutoFollowPatternResponse,Nest", "Nest.PauseAutoFollowPatternResponse");
            feature.AddKnownType("Nest.ResumeAutoFollowPatternResponse,Nest", "Nest.ResumeAutoFollowPatternResponse");
            feature.AddKnownType("Nest.CreateFollowIndexResponse,Nest", "Nest.CreateFollowIndexResponse");
            feature.AddKnownType("Nest.FollowIndexShardStats,Nest", "Nest.FollowIndexShardStats");
            feature.AddKnownType("Nest.FollowIndexReadException,Nest", "Nest.FollowIndexReadException");
            feature.AddKnownType("Nest.FollowIndexStatsResponse,Nest", "Nest.FollowIndexStatsResponse");
            feature.AddKnownType("Nest.FollowIndexStats,Nest", "Nest.FollowIndexStats");
            feature.AddKnownType("Nest.FollowConfig,Nest", "Nest.FollowConfig");
            feature.AddKnownType("Nest.FollowerIndexStatus,Nest", "Nest.FollowerIndexStatus");
            feature.AddKnownType("Nest.FollowInfoResponse,Nest", "Nest.FollowInfoResponse");
            feature.AddKnownType("Nest.FollowerInfo,Nest", "Nest.FollowerInfo");
            feature.AddKnownType("Nest.ForgetFollowerIndexResponse,Nest", "Nest.ForgetFollowerIndexResponse");
            feature.AddKnownType("Nest.PauseFollowIndexResponse,Nest", "Nest.PauseFollowIndexResponse");
            feature.AddKnownType("Nest.ResumeFollowIndexResponse,Nest", "Nest.ResumeFollowIndexResponse");
            feature.AddKnownType("Nest.UnfollowIndexResponse,Nest", "Nest.UnfollowIndexResponse");
            feature.AddKnownType("Nest.CcrStatsResponse,Nest", "Nest.CcrStatsResponse");
            feature.AddKnownType("Nest.CcrFollowStats,Nest", "Nest.CcrFollowStats");
            feature.AddKnownType("Nest.CcrAutoFollowStats,Nest", "Nest.CcrAutoFollowStats");
            feature.AddKnownType("Nest.AutoFollowedCluster,Nest", "Nest.AutoFollowedCluster");
            feature.AddKnownType("Nest.CreateDataStreamResponse,Nest", "Nest.CreateDataStreamResponse");
            feature.AddKnownType("Nest.DeleteDataStreamResponse,Nest", "Nest.DeleteDataStreamResponse");
            feature.AddKnownType("Nest.GetDataStreamResponse,Nest", "Nest.GetDataStreamResponse");
            feature.AddKnownType("Nest.DataStreamInfo,Nest", "Nest.DataStreamInfo");
            feature.AddKnownType("Nest.Index,Nest", "Nest.Index");
            feature.AddKnownType("Nest.TimestampField,Nest", "Nest.TimestampField");
            feature.AddKnownType("Nest.MigrateToDataStreamResponse,Nest", "Nest.MigrateToDataStreamResponse");
            feature.AddKnownType("Nest.PromoteDataStreamResponse,Nest", "Nest.PromoteDataStreamResponse");
            feature.AddKnownType("Nest.DataStreamsStatsResponse,Nest", "Nest.DataStreamsStatsResponse");
            feature.AddKnownType("Nest.DataStreamStats,Nest", "Nest.DataStreamStats");
            feature.AddKnownType("Nest.DeleteEnrichPolicyResponse,Nest", "Nest.DeleteEnrichPolicyResponse");
            feature.AddKnownType("Nest.IEnrichPolicy,Nest", "Nest.IEnrichPolicy");
            feature.AddKnownType("Nest.EnrichPolicy,Nest", "Nest.EnrichPolicy");
            feature.AddKnownType("Nest.EnrichPolicyDescriptor`1,Nest", "Nest.EnrichPolicyDescriptor`1'1");
            feature.AddKnownType("Nest.ExecuteEnrichPolicyResponse,Nest", "Nest.ExecuteEnrichPolicyResponse");
            feature.AddKnownType("Nest.ExecuteEnrichPolicyStatus,Nest", "Nest.ExecuteEnrichPolicyStatus");
            feature.AddKnownType("Nest.EnrichPolicyPhase,Nest", "Nest.EnrichPolicyPhase");
            feature.AddKnownType("Nest.GetEnrichPolicyResponse,Nest", "Nest.GetEnrichPolicyResponse");
            feature.AddKnownType("Nest.NamedPolicy,Nest", "Nest.NamedPolicy");
            feature.AddKnownType("Nest.NamedPolicyMetadata,Nest", "Nest.NamedPolicyMetadata");
            feature.AddKnownType("Nest.NamedPolicyConfig,Nest", "Nest.NamedPolicyConfig");
            feature.AddKnownType("Nest.PutEnrichPolicyResponse,Nest", "Nest.PutEnrichPolicyResponse");
            feature.AddKnownType("Nest.EnrichStatsResponse,Nest", "Nest.EnrichStatsResponse");
            feature.AddKnownType("Nest.ExecutingPolicy,Nest", "Nest.ExecutingPolicy");
            feature.AddKnownType("Nest.CoordinatorStats,Nest", "Nest.CoordinatorStats");
            feature.AddKnownType("Nest.EqlDeleteResponse,Nest", "Nest.EqlDeleteResponse");
            feature.AddKnownType("Nest.EqlSearchResponse`1,Nest", "Nest.EqlSearchResponse`1'1");
            feature.AddKnownType("Nest.Event`1,Nest", "Nest.Event`1'1");
            feature.AddKnownType("Nest.EqlHitsMetadata`1,Nest", "Nest.EqlHitsMetadata`1'1");
            feature.AddKnownType("Nest.Sequence`1,Nest", "Nest.Sequence`1'1");
            feature.AddKnownType("Nest.EqlGetResponse`1,Nest", "Nest.EqlGetResponse`1'1");
            feature.AddKnownType("Nest.EqlResultPosition,Nest", "Nest.EqlResultPosition");
            feature.AddKnownType("Nest.EqlSearchStatusResponse,Nest", "Nest.EqlSearchStatusResponse");
            feature.AddKnownType("Nest.GraphExploreResponse,Nest", "Nest.GraphExploreResponse");
            feature.AddKnownType("Nest.IGraphExploreControls,Nest", "Nest.IGraphExploreControls");
            feature.AddKnownType("Nest.GraphExploreControls,Nest", "Nest.GraphExploreControls");
            feature.AddKnownType("Nest.GraphExploreControlsDescriptor`1,Nest", "Nest.GraphExploreControlsDescriptor`1'1");
            feature.AddKnownType("Nest.IGraphVertexDefinition,Nest", "Nest.IGraphVertexDefinition");
            feature.AddKnownType("Nest.GraphVertexDefinition,Nest", "Nest.GraphVertexDefinition");
            feature.AddKnownType("Nest.GraphVertexDefinitionDescriptor,Nest", "Nest.GraphVertexDefinitionDescriptor");
            feature.AddKnownType("Nest.GraphVerticesDescriptor`1,Nest", "Nest.GraphVerticesDescriptor`1'1");
            feature.AddKnownType("Nest.GraphVertexInclude,Nest", "Nest.GraphVertexInclude");
            feature.AddKnownType("Nest.GraphVertexIncludeDescriptor,Nest", "Nest.GraphVertexIncludeDescriptor");
            feature.AddKnownType("Nest.IHop,Nest", "Nest.IHop");
            feature.AddKnownType("Nest.Hop,Nest", "Nest.Hop");
            feature.AddKnownType("Nest.HopDescriptor`1,Nest", "Nest.HopDescriptor`1'1");
            feature.AddKnownType("Nest.SampleDiversity,Nest", "Nest.SampleDiversity");
            feature.AddKnownType("Nest.GraphConnection,Nest", "Nest.GraphConnection");
            feature.AddKnownType("Nest.GraphVertex,Nest", "Nest.GraphVertex");
            feature.AddKnownType("Nest.IAllocateLifecycleAction,Nest", "Nest.IAllocateLifecycleAction");
            feature.AddKnownType("Nest.AllocateLifecycleAction,Nest", "Nest.AllocateLifecycleAction");
            feature.AddKnownType("Nest.AllocateLifecycleActionDescriptor,Nest", "Nest.AllocateLifecycleActionDescriptor");
            feature.AddKnownType("Nest.IDeleteLifecycleAction,Nest", "Nest.IDeleteLifecycleAction");
            feature.AddKnownType("Nest.DeleteLifecycleAction,Nest", "Nest.DeleteLifecycleAction");
            feature.AddKnownType("Nest.DeleteLifecycleActionDescriptor,Nest", "Nest.DeleteLifecycleActionDescriptor");
            feature.AddKnownType("Nest.IForceMergeLifecycleAction,Nest", "Nest.IForceMergeLifecycleAction");
            feature.AddKnownType("Nest.ForceMergeLifecycleAction,Nest", "Nest.ForceMergeLifecycleAction");
            feature.AddKnownType("Nest.ForceMergeLifecycleActionDescriptor,Nest", "Nest.ForceMergeLifecycleActionDescriptor");
            feature.AddKnownType("Nest.IFreezeLifecycleAction,Nest", "Nest.IFreezeLifecycleAction");
            feature.AddKnownType("Nest.FreezeLifecycleAction,Nest", "Nest.FreezeLifecycleAction");
            feature.AddKnownType("Nest.FreezeLifecycleActionDescriptor,Nest", "Nest.FreezeLifecycleActionDescriptor");
            feature.AddKnownType("Nest.ILifecycleAction,Nest", "Nest.ILifecycleAction");
            feature.AddKnownType("Nest.IReadOnlyLifecycleAction,Nest", "Nest.IReadOnlyLifecycleAction");
            feature.AddKnownType("Nest.ReadOnlyLifecycleAction,Nest", "Nest.ReadOnlyLifecycleAction");
            feature.AddKnownType("Nest.ReadOnlyLifecycleActionDescriptor,Nest", "Nest.ReadOnlyLifecycleActionDescriptor");
            feature.AddKnownType("Nest.IRolloverLifecycleAction,Nest", "Nest.IRolloverLifecycleAction");
            feature.AddKnownType("Nest.RolloverLifecycleAction,Nest", "Nest.RolloverLifecycleAction");
            feature.AddKnownType("Nest.RolloverLifecycleActionDescriptor,Nest", "Nest.RolloverLifecycleActionDescriptor");
            feature.AddKnownType("Nest.ISetPriorityLifecycleAction,Nest", "Nest.ISetPriorityLifecycleAction");
            feature.AddKnownType("Nest.SetPriorityLifecycleAction,Nest", "Nest.SetPriorityLifecycleAction");
            feature.AddKnownType("Nest.SetPriorityLifecycleActionDescriptor,Nest", "Nest.SetPriorityLifecycleActionDescriptor");
            feature.AddKnownType("Nest.IShrinkLifecycleAction,Nest", "Nest.IShrinkLifecycleAction");
            feature.AddKnownType("Nest.ShrinkLifecycleAction,Nest", "Nest.ShrinkLifecycleAction");
            feature.AddKnownType("Nest.ShrinkLifecycleActionDescriptor,Nest", "Nest.ShrinkLifecycleActionDescriptor");
            feature.AddKnownType("Nest.IUnfollowLifecycleAction,Nest", "Nest.IUnfollowLifecycleAction");
            feature.AddKnownType("Nest.UnfollowLifecycleAction,Nest", "Nest.UnfollowLifecycleAction");
            feature.AddKnownType("Nest.UnfollowLifecycleActionDescriptor,Nest", "Nest.UnfollowLifecycleActionDescriptor");
            feature.AddKnownType("Nest.IWaitForSnapshotLifecycleAction,Nest", "Nest.IWaitForSnapshotLifecycleAction");
            feature.AddKnownType("Nest.WaitForSnapshotLifecycleAction,Nest", "Nest.WaitForSnapshotLifecycleAction");
            feature.AddKnownType("Nest.WaitForSnapshotLifecycleActionDescriptor,Nest", "Nest.WaitForSnapshotLifecycleActionDescriptor");
            feature.AddKnownType("Nest.DeleteLifecycleResponse,Nest", "Nest.DeleteLifecycleResponse");
            feature.AddKnownType("Nest.ExplainLifecycleResponse,Nest", "Nest.ExplainLifecycleResponse");
            feature.AddKnownType("Nest.LifecycleExplain,Nest", "Nest.LifecycleExplain");
            feature.AddKnownType("Nest.PhaseExecution,Nest", "Nest.PhaseExecution");
            feature.AddKnownType("Nest.GetLifecycleResponse,Nest", "Nest.GetLifecycleResponse");
            feature.AddKnownType("Nest.LifecyclePolicy,Nest", "Nest.LifecyclePolicy");
            feature.AddKnownType("Nest.GetIlmStatusResponse,Nest", "Nest.GetIlmStatusResponse");
            feature.AddKnownType("Nest.LifecycleOperationMode,Nest", "Nest.LifecycleOperationMode");
            feature.AddKnownType("Nest.ILifecycleActions,Nest", "Nest.ILifecycleActions");
            feature.AddKnownType("Nest.LifecycleActions,Nest", "Nest.LifecycleActions");
            feature.AddKnownType("Nest.LifecycleActionsJsonFormatter,Nest", "Nest.LifecycleActionsJsonFormatter");
            feature.AddKnownType("Nest.LifecycleActionsDescriptor,Nest", "Nest.LifecycleActionsDescriptor");
            feature.AddKnownType("Nest.MigrateToDataTiersResponse,Nest", "Nest.MigrateToDataTiersResponse");
            feature.AddKnownType("Nest.IStepKey,Nest", "Nest.IStepKey");
            feature.AddKnownType("Nest.StepKey,Nest", "Nest.StepKey");
            feature.AddKnownType("Nest.StepKeyDescriptor,Nest", "Nest.StepKeyDescriptor");
            feature.AddKnownType("Nest.MoveToStepResponse,Nest", "Nest.MoveToStepResponse");
            feature.AddKnownType("Nest.IPhase,Nest", "Nest.IPhase");
            feature.AddKnownType("Nest.Phase,Nest", "Nest.Phase");
            feature.AddKnownType("Nest.PhaseDescriptor,Nest", "Nest.PhaseDescriptor");
            feature.AddKnownType("Nest.IPhases,Nest", "Nest.IPhases");
            feature.AddKnownType("Nest.Phases,Nest", "Nest.Phases");
            feature.AddKnownType("Nest.PhasesDescriptor,Nest", "Nest.PhasesDescriptor");
            feature.AddKnownType("Nest.IPolicy,Nest", "Nest.IPolicy");
            feature.AddKnownType("Nest.Policy,Nest", "Nest.Policy");
            feature.AddKnownType("Nest.PolicyDescriptor,Nest", "Nest.PolicyDescriptor");
            feature.AddKnownType("Nest.PutLifecycleResponse,Nest", "Nest.PutLifecycleResponse");
            feature.AddKnownType("Nest.RemovePolicyResponse,Nest", "Nest.RemovePolicyResponse");
            feature.AddKnownType("Nest.RetryIlmResponse,Nest", "Nest.RetryIlmResponse");
            feature.AddKnownType("Nest.StartIlmResponse,Nest", "Nest.StartIlmResponse");
            feature.AddKnownType("Nest.StopIlmResponse,Nest", "Nest.StopIlmResponse");
            feature.AddKnownType("Nest.XPackInfoResponse,Nest", "Nest.XPackInfoResponse");
            feature.AddKnownType("Nest.XPackBuildInformation,Nest", "Nest.XPackBuildInformation");
            feature.AddKnownType("Nest.MinimalLicenseInformation,Nest", "Nest.MinimalLicenseInformation");
            feature.AddKnownType("Nest.XPackFeatures,Nest", "Nest.XPackFeatures");
            feature.AddKnownType("Nest.XPackFeature,Nest", "Nest.XPackFeature");
            feature.AddKnownType("Nest.NativeCodeInformation,Nest", "Nest.NativeCodeInformation");
            feature.AddKnownType("Nest.QueryUsage,Nest", "Nest.QueryUsage");
            feature.AddKnownType("Nest.CcrUsage,Nest", "Nest.CcrUsage");
            feature.AddKnownType("Nest.SqlUsage,Nest", "Nest.SqlUsage");
            feature.AddKnownType("Nest.XPackUsageResponse,Nest", "Nest.XPackUsageResponse");
            feature.AddKnownType("Nest.AnalyticsUsage,Nest", "Nest.AnalyticsUsage");
            feature.AddKnownType("Nest.SlmUsage,Nest", "Nest.SlmUsage");
            feature.AddKnownType("Nest.SnapshotLifecycleStats,Nest", "Nest.SnapshotLifecycleStats");
            feature.AddKnownType("Nest.XPackUsage,Nest", "Nest.XPackUsage");
            feature.AddKnownType("Nest.FlattenedUsage,Nest", "Nest.FlattenedUsage");
            feature.AddKnownType("Nest.VectorUsage,Nest", "Nest.VectorUsage");
            feature.AddKnownType("Nest.SecurityUsage,Nest", "Nest.SecurityUsage");
            feature.AddKnownType("Nest.SecurityUsage+RoleMappingUsage,Nest", "Nest.Nest.SecurityUsage.RoleMappingUsage");
            feature.AddKnownType("Nest.SecurityUsage+AuditUsage,Nest", "Nest.Nest.SecurityUsage.AuditUsage");
            feature.AddKnownType("Nest.SecurityUsage+IpFilterUsage,Nest", "Nest.Nest.SecurityUsage.IpFilterUsage");
            feature.AddKnownType("Nest.SecurityUsage+RealmUsage,Nest", "Nest.Nest.SecurityUsage.RealmUsage");
            feature.AddKnownType("Nest.SecurityUsage+RoleUsage,Nest", "Nest.Nest.SecurityUsage.RoleUsage");
            feature.AddKnownType("Nest.SecurityUsage+SslUsage,Nest", "Nest.Nest.SecurityUsage.SslUsage");
            feature.AddKnownType("Nest.SecurityUsage+SecurityFeatureToggle,Nest", "Nest.Nest.SecurityUsage.SecurityFeatureToggle");
            feature.AddKnownType("Nest.AlertingUsage,Nest", "Nest.AlertingUsage");
            feature.AddKnownType("Nest.AlertingUsage+AlertingExecution,Nest", "Nest.Nest.AlertingUsage.AlertingExecution");
            feature.AddKnownType("Nest.AlertingUsage+AlertingInput,Nest", "Nest.Nest.AlertingUsage.AlertingInput");
            feature.AddKnownType("Nest.AlertingUsage+ExecutionAction,Nest", "Nest.Nest.AlertingUsage.ExecutionAction");
            feature.AddKnownType("Nest.AlertingUsage+AlertingCount,Nest", "Nest.Nest.AlertingUsage.AlertingCount");
            feature.AddKnownType("Nest.MonitoringUsage,Nest", "Nest.MonitoringUsage");
            feature.AddKnownType("Nest.MachineLearningUsage,Nest", "Nest.MachineLearningUsage");
            feature.AddKnownType("Nest.MachineLearningUsage+DataFeed,Nest", "Nest.Nest.MachineLearningUsage.DataFeed");
            feature.AddKnownType("Nest.MachineLearningUsage+Job,Nest", "Nest.Nest.MachineLearningUsage.Job");
            feature.AddKnownType("Nest.MachineLearningUsage+JobStatistics,Nest", "Nest.Nest.MachineLearningUsage.JobStatistics");
            feature.AddKnownType("Nest.MachineLearningUsage+ForecastStatistics,Nest", "Nest.Nest.MachineLearningUsage.ForecastStatistics");
            feature.AddKnownType("Nest.IlmUsage,Nest", "Nest.IlmUsage");
            feature.AddKnownType("Nest.IlmUsage+IlmPolicyStatistics,Nest", "Nest.Nest.IlmUsage.IlmPolicyStatistics");
            feature.AddKnownType("Nest.DeleteLicenseResponse,Nest", "Nest.DeleteLicenseResponse");
            feature.AddKnownType("Nest.GetBasicLicenseStatusResponse,Nest", "Nest.GetBasicLicenseStatusResponse");
            feature.AddKnownType("Nest.GetLicenseResponse,Nest", "Nest.GetLicenseResponse");
            feature.AddKnownType("Nest.LicenseInformation,Nest", "Nest.LicenseInformation");
            feature.AddKnownType("Nest.License,Nest", "Nest.License");
            feature.AddKnownType("Nest.License+Wrapped,Nest", "Nest.Wrapped");
            feature.AddKnownType("Nest.LicenseStatus,Nest", "Nest.LicenseStatus");
            feature.AddKnownType("Nest.LicenseType,Nest", "Nest.LicenseType");
            feature.AddKnownType("Nest.GetTrialLicenseStatusResponse,Nest", "Nest.GetTrialLicenseStatusResponse");
            feature.AddKnownType("Nest.LicenseAcknowledgement,Nest", "Nest.LicenseAcknowledgement");
            feature.AddKnownType("Nest.PostLicenseResponse,Nest", "Nest.PostLicenseResponse");
            feature.AddKnownType("Nest.StartBasicLicenseResponse,Nest", "Nest.StartBasicLicenseResponse");
            feature.AddKnownType("Nest.StartBasicLicenseFeatureAcknowledgements,Nest", "Nest.StartBasicLicenseFeatureAcknowledgements");
            feature.AddKnownType("Nest.StartBasicLicenseFeatureAcknowledgementsFormatter,Nest", "Nest.StartBasicLicenseFeatureAcknowledgementsFormatter");
            feature.AddKnownType("Nest.StartTrialLicenseResponse,Nest", "Nest.StartTrialLicenseResponse");
            feature.AddKnownType("Nest.CloseJobResponse,Nest", "Nest.CloseJobResponse");
            feature.AddKnownType("Nest.IChunkingConfig,Nest", "Nest.IChunkingConfig");
            feature.AddKnownType("Nest.ChunkingConfig,Nest", "Nest.ChunkingConfig");
            feature.AddKnownType("Nest.ChunkingConfigDescriptor,Nest", "Nest.ChunkingConfigDescriptor");
            feature.AddKnownType("Nest.ChunkingMode,Nest", "Nest.ChunkingMode");
            feature.AddKnownType("Nest.DatafeedConfig,Nest", "Nest.DatafeedConfig");
            feature.AddKnownType("Nest.DatafeedState,Nest", "Nest.DatafeedState");
            feature.AddKnownType("Nest.DatafeedStats,Nest", "Nest.DatafeedStats");
            feature.AddKnownType("Nest.DatafeedTimingStats,Nest", "Nest.DatafeedTimingStats");
            feature.AddKnownType("Nest.DiscoveryNode,Nest", "Nest.DiscoveryNode");
            feature.AddKnownType("Nest.RunningState,Nest", "Nest.RunningState");
            feature.AddKnownType("Nest.DeleteCalendarEventResponse,Nest", "Nest.DeleteCalendarEventResponse");
            feature.AddKnownType("Nest.DeleteCalendarJobResponse,Nest", "Nest.DeleteCalendarJobResponse");
            feature.AddKnownType("Nest.DeleteCalendarResponse,Nest", "Nest.DeleteCalendarResponse");
            feature.AddKnownType("Nest.DeleteDatafeedResponse,Nest", "Nest.DeleteDatafeedResponse");
            feature.AddKnownType("Nest.DeleteExpiredDataResponse,Nest", "Nest.DeleteExpiredDataResponse");
            feature.AddKnownType("Nest.DeleteFilterResponse,Nest", "Nest.DeleteFilterResponse");
            feature.AddKnownType("Nest.DeleteForecastResponse,Nest", "Nest.DeleteForecastResponse");
            feature.AddKnownType("Nest.DeleteJobResponse,Nest", "Nest.DeleteJobResponse");
            feature.AddKnownType("Nest.DeleteModelSnapshotResponse,Nest", "Nest.DeleteModelSnapshotResponse");
            feature.AddKnownType("Nest.IOverallCardinality,Nest", "Nest.IOverallCardinality");
            feature.AddKnownType("Nest.OverallCardinality,Nest", "Nest.OverallCardinality");
            feature.AddKnownType("Nest.OverallCardinality`1,Nest", "Nest.OverallCardinality`1'1");
            feature.AddKnownType("Nest.OverallCardinalityDescriptor`1,Nest", "Nest.OverallCardinalityDescriptor`1'1");
            feature.AddKnownType("Nest.IMaxBucketCardinality,Nest", "Nest.IMaxBucketCardinality");
            feature.AddKnownType("Nest.MaxBucketCardinality,Nest", "Nest.MaxBucketCardinality");
            feature.AddKnownType("Nest.MaxBucketCardinality`1,Nest", "Nest.MaxBucketCardinality`1'1");
            feature.AddKnownType("Nest.MaxBucketCardinalityDescriptor`1,Nest", "Nest.MaxBucketCardinalityDescriptor`1'1");
            feature.AddKnownType("Nest.EstimateModelMemoryResponse,Nest", "Nest.EstimateModelMemoryResponse");
            feature.AddKnownType("Nest.FlushJobResponse,Nest", "Nest.FlushJobResponse");
            feature.AddKnownType("Nest.ForecastJobResponse,Nest", "Nest.ForecastJobResponse");
            feature.AddKnownType("Nest.GetAnomalyRecordsResponse,Nest", "Nest.GetAnomalyRecordsResponse");
            feature.AddKnownType("Nest.GetBucketsResponse,Nest", "Nest.GetBucketsResponse");
            feature.AddKnownType("Nest.GetCalendarEventsResponse,Nest", "Nest.GetCalendarEventsResponse");
            feature.AddKnownType("Nest.GetCalendarsResponse,Nest", "Nest.GetCalendarsResponse");
            feature.AddKnownType("Nest.Calendar,Nest", "Nest.Calendar");
            feature.AddKnownType("Nest.GetCategoriesResponse,Nest", "Nest.GetCategoriesResponse");
            feature.AddKnownType("Nest.GetDatafeedStatsResponse,Nest", "Nest.GetDatafeedStatsResponse");
            feature.AddKnownType("Nest.GetDatafeedsResponse,Nest", "Nest.GetDatafeedsResponse");
            feature.AddKnownType("Nest.Filter,Nest", "Nest.Filter");
            feature.AddKnownType("Nest.GetFiltersResponse,Nest", "Nest.GetFiltersResponse");
            feature.AddKnownType("Nest.GetInfluencersResponse,Nest", "Nest.GetInfluencersResponse");
            feature.AddKnownType("Nest.GetJobStatsResponse,Nest", "Nest.GetJobStatsResponse");
            feature.AddKnownType("Nest.GetJobsResponse,Nest", "Nest.GetJobsResponse");
            feature.AddKnownType("Nest.GetModelSnapshotsResponse,Nest", "Nest.GetModelSnapshotsResponse");
            feature.AddKnownType("Nest.GetOverallBucketsResponse,Nest", "Nest.GetOverallBucketsResponse");
            feature.AddKnownType("Nest.IAnalysisConfig,Nest", "Nest.IAnalysisConfig");
            feature.AddKnownType("Nest.AnalysisConfig,Nest", "Nest.AnalysisConfig");
            feature.AddKnownType("Nest.AnalysisConfigDescriptor`1,Nest", "Nest.AnalysisConfigDescriptor`1'1");
            feature.AddKnownType("Nest.IAnalysisLimits,Nest", "Nest.IAnalysisLimits");
            feature.AddKnownType("Nest.AnalysisLimits,Nest", "Nest.AnalysisLimits");
            feature.AddKnownType("Nest.AnalysisLimitsDescriptor,Nest", "Nest.AnalysisLimitsDescriptor");
            feature.AddKnownType("Nest.IAnalysisMemoryLimit,Nest", "Nest.IAnalysisMemoryLimit");
            feature.AddKnownType("Nest.AnalysisMemoryLimit,Nest", "Nest.AnalysisMemoryLimit");
            feature.AddKnownType("Nest.AnalysisMemoryLimitDescriptor,Nest", "Nest.AnalysisMemoryLimitDescriptor");
            feature.AddKnownType("Nest.IDataDescription,Nest", "Nest.IDataDescription");
            feature.AddKnownType("Nest.DataDescription,Nest", "Nest.DataDescription");
            feature.AddKnownType("Nest.DataDescriptionDescriptor`1,Nest", "Nest.DataDescriptionDescriptor`1'1");
            feature.AddKnownType("Nest.Job,Nest", "Nest.Job");
            feature.AddKnownType("Nest.JobState,Nest", "Nest.JobState");
            feature.AddKnownType("Nest.JobStats,Nest", "Nest.JobStats");
            feature.AddKnownType("Nest.TimingStats,Nest", "Nest.TimingStats");
            feature.AddKnownType("Nest.JobForecastStatistics,Nest", "Nest.JobForecastStatistics");
            feature.AddKnownType("Nest.JobForecastStatistics+JobStatistics,Nest", "Nest.Nest.JobForecastStatistics.JobStatistics");
            feature.AddKnownType("Nest.MemoryStatus,Nest", "Nest.MemoryStatus");
            feature.AddKnownType("Nest.IModelPlotConfig,Nest", "Nest.IModelPlotConfig");
            feature.AddKnownType("Nest.ModelPlotConfig,Nest", "Nest.ModelPlotConfig");
            feature.AddKnownType("Nest.ModelPlotConfigDescriptor`1,Nest", "Nest.ModelPlotConfigDescriptor`1'1");
            feature.AddKnownType("Nest.IModelPlotConfigEnabled,Nest", "Nest.IModelPlotConfigEnabled");
            feature.AddKnownType("Nest.ModelPlotConfigEnabled,Nest", "Nest.ModelPlotConfigEnabled");
            feature.AddKnownType("Nest.ModelPlotConfigEnabledDescriptor`1,Nest", "Nest.ModelPlotConfigEnabledDescriptor`1'1");
            feature.AddKnownType("Nest.CountFunction,Nest", "Nest.CountFunction");
            feature.AddKnownType("Nest.NonZeroCountFunction,Nest", "Nest.NonZeroCountFunction");
            feature.AddKnownType("Nest.DistinctCountFunction,Nest", "Nest.DistinctCountFunction");
            feature.AddKnownType("Nest.ICountDetector,Nest", "Nest.ICountDetector");
            feature.AddKnownType("Nest.INonZeroCountDetector,Nest", "Nest.INonZeroCountDetector");
            feature.AddKnownType("Nest.IDistinctCountDetector,Nest", "Nest.IDistinctCountDetector");
            feature.AddKnownType("Nest.CountDetectorBase,Nest", "Nest.CountDetectorBase");
            feature.AddKnownType("Nest.NonZeroCountDetectorBase,Nest", "Nest.NonZeroCountDetectorBase");
            feature.AddKnownType("Nest.DistinctCountDetectorBase,Nest", "Nest.DistinctCountDetectorBase");
            feature.AddKnownType("Nest.CountDetectorDescriptor`1,Nest", "Nest.CountDetectorDescriptor`1'1");
            feature.AddKnownType("Nest.NonZeroCountDetectorDescriptor`1,Nest", "Nest.NonZeroCountDetectorDescriptor`1'1");
            feature.AddKnownType("Nest.DistinctCountDetectorDescriptor`1,Nest", "Nest.DistinctCountDetectorDescriptor`1'1");
            feature.AddKnownType("Nest.CountDetector,Nest", "Nest.CountDetector");
            feature.AddKnownType("Nest.HighCountDetector,Nest", "Nest.HighCountDetector");
            feature.AddKnownType("Nest.LowCountDetector,Nest", "Nest.LowCountDetector");
            feature.AddKnownType("Nest.NonZeroCountDetector,Nest", "Nest.NonZeroCountDetector");
            feature.AddKnownType("Nest.HighNonZeroCountDetector,Nest", "Nest.HighNonZeroCountDetector");
            feature.AddKnownType("Nest.DistinctCountDetector,Nest", "Nest.DistinctCountDetector");
            feature.AddKnownType("Nest.HighDistinctCountDetector,Nest", "Nest.HighDistinctCountDetector");
            feature.AddKnownType("Nest.LowDistinctCountDetector,Nest", "Nest.LowDistinctCountDetector");
            feature.AddKnownType("Nest.LowNonZeroCountDetector,Nest", "Nest.LowNonZeroCountDetector");
            feature.AddKnownType("Nest.IDetectionRule,Nest", "Nest.IDetectionRule");
            feature.AddKnownType("Nest.DetectionRule,Nest", "Nest.DetectionRule");
            feature.AddKnownType("Nest.DetectionRulesDescriptor,Nest", "Nest.DetectionRulesDescriptor");
            feature.AddKnownType("Nest.DetectionRuleDescriptor,Nest", "Nest.DetectionRuleDescriptor");
            feature.AddKnownType("Nest.RuleConditionsDescriptor,Nest", "Nest.RuleConditionsDescriptor");
            feature.AddKnownType("Nest.RuleConditionDescriptor,Nest", "Nest.RuleConditionDescriptor");
            feature.AddKnownType("Nest.ScopeDescriptor`1,Nest", "Nest.ScopeDescriptor`1'1");
            feature.AddKnownType("Nest.FilterRef,Nest", "Nest.FilterRef");
            feature.AddKnownType("Nest.RuleFilterType,Nest", "Nest.RuleFilterType");
            feature.AddKnownType("Nest.IRuleCondition,Nest", "Nest.IRuleCondition");
            feature.AddKnownType("Nest.RuleCondition,Nest", "Nest.RuleCondition");
            feature.AddKnownType("Nest.ConditionOperator,Nest", "Nest.ConditionOperator");
            feature.AddKnownType("Nest.RuleAction,Nest", "Nest.RuleAction");
            feature.AddKnownType("Nest.AppliesTo,Nest", "Nest.AppliesTo");
            feature.AddKnownType("Nest.IDetector,Nest", "Nest.IDetector");
            feature.AddKnownType("Nest.DetectorFormatter,Nest", "Nest.DetectorFormatter");
            feature.AddKnownType("Nest.IFieldNameDetector,Nest", "Nest.IFieldNameDetector");
            feature.AddKnownType("Nest.IByFieldNameDetector,Nest", "Nest.IByFieldNameDetector");
            feature.AddKnownType("Nest.IOverFieldNameDetector,Nest", "Nest.IOverFieldNameDetector");
            feature.AddKnownType("Nest.IPartitionFieldNameDetector,Nest", "Nest.IPartitionFieldNameDetector");
            feature.AddKnownType("Nest.DetectorBase,Nest", "Nest.DetectorBase");
            feature.AddKnownType("Nest.DetectorDescriptorBase`2,Nest", "Nest.DetectorDescriptorBase`2'2");
            feature.AddKnownType("Nest.DetectorsDescriptor`1,Nest", "Nest.DetectorsDescriptor`1'1");
            feature.AddKnownType("Nest.GeographicFunction,Nest", "Nest.GeographicFunction");
            feature.AddKnownType("Nest.IGeographicDetector,Nest", "Nest.IGeographicDetector");
            feature.AddKnownType("Nest.LatLongDetector,Nest", "Nest.LatLongDetector");
            feature.AddKnownType("Nest.LatLongDetectorDescriptor`1,Nest", "Nest.LatLongDetectorDescriptor`1'1");
            feature.AddKnownType("Nest.InfoContentFunction,Nest", "Nest.InfoContentFunction");
            feature.AddKnownType("Nest.IInfoContentDetector,Nest", "Nest.IInfoContentDetector");
            feature.AddKnownType("Nest.InfoContentDetectorBase,Nest", "Nest.InfoContentDetectorBase");
            feature.AddKnownType("Nest.InfoContentDetector,Nest", "Nest.InfoContentDetector");
            feature.AddKnownType("Nest.HighInfoContentDetector,Nest", "Nest.HighInfoContentDetector");
            feature.AddKnownType("Nest.LowInfoContentDetector,Nest", "Nest.LowInfoContentDetector");
            feature.AddKnownType("Nest.InfoContentDetectorDescriptor`1,Nest", "Nest.InfoContentDetectorDescriptor`1'1");
            feature.AddKnownType("Nest.MetricFunction,Nest", "Nest.MetricFunction");
            feature.AddKnownType("Nest.IMetricDetector,Nest", "Nest.IMetricDetector");
            feature.AddKnownType("Nest.MetricDetectorBase,Nest", "Nest.MetricDetectorBase");
            feature.AddKnownType("Nest.MinDetector,Nest", "Nest.MinDetector");
            feature.AddKnownType("Nest.MaxDetector,Nest", "Nest.MaxDetector");
            feature.AddKnownType("Nest.MedianDetector,Nest", "Nest.MedianDetector");
            feature.AddKnownType("Nest.HighMedianDetector,Nest", "Nest.HighMedianDetector");
            feature.AddKnownType("Nest.LowMedianDetector,Nest", "Nest.LowMedianDetector");
            feature.AddKnownType("Nest.MeanDetector,Nest", "Nest.MeanDetector");
            feature.AddKnownType("Nest.HighMeanDetector,Nest", "Nest.HighMeanDetector");
            feature.AddKnownType("Nest.LowMeanDetector,Nest", "Nest.LowMeanDetector");
            feature.AddKnownType("Nest.MetricDetector,Nest", "Nest.MetricDetector");
            feature.AddKnownType("Nest.VarpDetector,Nest", "Nest.VarpDetector");
            feature.AddKnownType("Nest.HighVarpDetector,Nest", "Nest.HighVarpDetector");
            feature.AddKnownType("Nest.LowVarpDetector,Nest", "Nest.LowVarpDetector");
            feature.AddKnownType("Nest.MetricDetectorDescriptor`1,Nest", "Nest.MetricDetectorDescriptor`1'1");
            feature.AddKnownType("Nest.RareFunction,Nest", "Nest.RareFunction");
            feature.AddKnownType("Nest.IRareDetector,Nest", "Nest.IRareDetector");
            feature.AddKnownType("Nest.RareDetectorBase,Nest", "Nest.RareDetectorBase");
            feature.AddKnownType("Nest.RareDetectorDescriptor`1,Nest", "Nest.RareDetectorDescriptor`1'1");
            feature.AddKnownType("Nest.RareDetector,Nest", "Nest.RareDetector");
            feature.AddKnownType("Nest.FreqRareDetector,Nest", "Nest.FreqRareDetector");
            feature.AddKnownType("Nest.SumFunction,Nest", "Nest.SumFunction");
            feature.AddKnownType("Nest.NonNullSumFunction,Nest", "Nest.NonNullSumFunction");
            feature.AddKnownType("Nest.ISumDetector,Nest", "Nest.ISumDetector");
            feature.AddKnownType("Nest.INonNullSumDetector,Nest", "Nest.INonNullSumDetector");
            feature.AddKnownType("Nest.SumDetectorBase,Nest", "Nest.SumDetectorBase");
            feature.AddKnownType("Nest.NonNullSumDetectorBase,Nest", "Nest.NonNullSumDetectorBase");
            feature.AddKnownType("Nest.SumDetector,Nest", "Nest.SumDetector");
            feature.AddKnownType("Nest.HighSumDetector,Nest", "Nest.HighSumDetector");
            feature.AddKnownType("Nest.LowSumDetector,Nest", "Nest.LowSumDetector");
            feature.AddKnownType("Nest.NonNullSumDetector,Nest", "Nest.NonNullSumDetector");
            feature.AddKnownType("Nest.HighNonNullSumDetector,Nest", "Nest.HighNonNullSumDetector");
            feature.AddKnownType("Nest.LowNonNullSumDetector,Nest", "Nest.LowNonNullSumDetector");
            feature.AddKnownType("Nest.SumDetectorDescriptor`1,Nest", "Nest.SumDetectorDescriptor`1'1");
            feature.AddKnownType("Nest.NonNullSumDetectorDescriptor`1,Nest", "Nest.NonNullSumDetectorDescriptor`1'1");
            feature.AddKnownType("Nest.TimeFunction,Nest", "Nest.TimeFunction");
            feature.AddKnownType("Nest.ITimeDetector,Nest", "Nest.ITimeDetector");
            feature.AddKnownType("Nest.TimeDetectorBase,Nest", "Nest.TimeDetectorBase");
            feature.AddKnownType("Nest.TimeOfDayDetector,Nest", "Nest.TimeOfDayDetector");
            feature.AddKnownType("Nest.TimeOfWeekDetector,Nest", "Nest.TimeOfWeekDetector");
            feature.AddKnownType("Nest.TimeDetectorDescriptor`1,Nest", "Nest.TimeDetectorDescriptor`1'1");
            feature.AddKnownType("Nest.IPage,Nest", "Nest.IPage");
            feature.AddKnownType("Nest.Page,Nest", "Nest.Page");
            feature.AddKnownType("Nest.PageDescriptor,Nest", "Nest.PageDescriptor");
            feature.AddKnownType("Nest.DataCounts,Nest", "Nest.DataCounts");
            feature.AddKnownType("Nest.ModelSizeStats,Nest", "Nest.ModelSizeStats");
            feature.AddKnownType("Nest.ModelSnapshot,Nest", "Nest.ModelSnapshot");
            feature.AddKnownType("Nest.AnomalyCause,Nest", "Nest.AnomalyCause");
            feature.AddKnownType("Nest.AnomalyRecord,Nest", "Nest.AnomalyRecord");
            feature.AddKnownType("Nest.Bucket,Nest", "Nest.Bucket");
            feature.AddKnownType("Nest.BucketInfluencer,Nest", "Nest.BucketInfluencer");
            feature.AddKnownType("Nest.CategoryDefinition,Nest", "Nest.CategoryDefinition");
            feature.AddKnownType("Nest.Influence,Nest", "Nest.Influence");
            feature.AddKnownType("Nest.OverallBucket,Nest", "Nest.OverallBucket");
            feature.AddKnownType("Nest.OverallBucketJobInfo,Nest", "Nest.OverallBucketJobInfo");
            feature.AddKnownType("Nest.PartitionScore,Nest", "Nest.PartitionScore");
            feature.AddKnownType("Nest.MachineLearningInfoResponse,Nest", "Nest.MachineLearningInfoResponse");
            feature.AddKnownType("Nest.Defaults,Nest", "Nest.Defaults");
            feature.AddKnownType("Nest.AnomalyDetectors,Nest", "Nest.AnomalyDetectors");
            feature.AddKnownType("Nest.CategorizationAnalyzer,Nest", "Nest.CategorizationAnalyzer");
            feature.AddKnownType("Nest.Datafeeds,Nest", "Nest.Datafeeds");
            feature.AddKnownType("Nest.Limits,Nest", "Nest.Limits");
            feature.AddKnownType("Nest.OpenJobResponse,Nest", "Nest.OpenJobResponse");
            feature.AddKnownType("Nest.ScheduledEvent,Nest", "Nest.ScheduledEvent");
            feature.AddKnownType("Nest.PostCalendarEventsResponse,Nest", "Nest.PostCalendarEventsResponse");
            feature.AddKnownType("Nest.PostJobDataFormatter,Nest", "Nest.PostJobDataFormatter");
            feature.AddKnownType("Nest.PostJobDataResponse,Nest", "Nest.PostJobDataResponse");
            feature.AddKnownType("Nest.IPreviewDatafeedResponse`1,Nest", "Nest.IPreviewDatafeedResponse`1'1");
            feature.AddKnownType("Nest.PreviewDatafeedResponse`1,Nest", "Nest.PreviewDatafeedResponse`1'1");
            feature.AddKnownType("Nest.PreviewDatafeedResponseBuilder`1,Nest", "Nest.PreviewDatafeedResponseBuilder`1'1");
            feature.AddKnownType("Nest.PutCalendarJobResponse,Nest", "Nest.PutCalendarJobResponse");
            feature.AddKnownType("Nest.PutCalendarResponse,Nest", "Nest.PutCalendarResponse");
            feature.AddKnownType("Nest.PutDatafeedResponse,Nest", "Nest.PutDatafeedResponse");
            feature.AddKnownType("Nest.PutFilterResponse,Nest", "Nest.PutFilterResponse");
            feature.AddKnownType("Nest.ExcludeFrequent,Nest", "Nest.ExcludeFrequent");
            feature.AddKnownType("Nest.PutJobResponse,Nest", "Nest.PutJobResponse");
            feature.AddKnownType("Nest.RevertModelSnapshotResponse,Nest", "Nest.RevertModelSnapshotResponse");
            feature.AddKnownType("Nest.SetUpgradeModeResponse,Nest", "Nest.SetUpgradeModeResponse");
            feature.AddKnownType("Nest.StartDatafeedResponse,Nest", "Nest.StartDatafeedResponse");
            feature.AddKnownType("Nest.StopDatafeedResponse,Nest", "Nest.StopDatafeedResponse");
            feature.AddKnownType("Nest.UpdateDatafeedResponse,Nest", "Nest.UpdateDatafeedResponse");
            feature.AddKnownType("Nest.UpdateFilterResponse,Nest", "Nest.UpdateFilterResponse");
            feature.AddKnownType("Nest.UpdateJobResponse,Nest", "Nest.UpdateJobResponse");
            feature.AddKnownType("Nest.UpdateModelSnapshotResponse,Nest", "Nest.UpdateModelSnapshotResponse");
            feature.AddKnownType("Nest.ValidateDetectorRequestFormatter,Nest", "Nest.ValidateDetectorRequestFormatter");
            feature.AddKnownType("Nest.ValidateDetectorResponse,Nest", "Nest.ValidateDetectorResponse");
            feature.AddKnownType("Nest.ValidateJobResponse,Nest", "Nest.ValidateJobResponse");
            feature.AddKnownType("Nest.DeprecationInfoResponse,Nest", "Nest.DeprecationInfoResponse");
            feature.AddKnownType("Nest.DeprecationWarningLevel,Nest", "Nest.DeprecationWarningLevel");
            feature.AddKnownType("Nest.DeprecationInfo,Nest", "Nest.DeprecationInfo");
            feature.AddKnownType("Nest.CreateRollupJobResponse,Nest", "Nest.CreateRollupJobResponse");
            feature.AddKnownType("Nest.DeleteRollupJobResponse,Nest", "Nest.DeleteRollupJobResponse");
            feature.AddKnownType("Nest.GetRollupCapabilitiesResponse,Nest", "Nest.GetRollupCapabilitiesResponse");
            feature.AddKnownType("Nest.RollupCapabilities,Nest", "Nest.RollupCapabilities");
            feature.AddKnownType("Nest.RollupCapabilitiesJob,Nest", "Nest.RollupCapabilitiesJob");
            feature.AddKnownType("Nest.RollupFieldsCapabilities,Nest", "Nest.RollupFieldsCapabilities");
            feature.AddKnownType("Nest.RollupFieldsCapabilitiesDictionary,Nest", "Nest.RollupFieldsCapabilitiesDictionary");
            feature.AddKnownType("Nest.RollupFieldsCapabilitiesDictionary+Converter,Nest", "Nest.Converter");
            feature.AddKnownType("Nest.GetRollupIndexCapabilitiesResponse,Nest", "Nest.GetRollupIndexCapabilitiesResponse");
            feature.AddKnownType("Nest.RollupIndexCapabilities,Nest", "Nest.RollupIndexCapabilities");
            feature.AddKnownType("Nest.RollupIndexCapabilitiesJob,Nest", "Nest.RollupIndexCapabilitiesJob");
            feature.AddKnownType("Nest.RollupFieldsIndexCapabilities,Nest", "Nest.RollupFieldsIndexCapabilities");
            feature.AddKnownType("Nest.RollupFieldsIndexCapabilitiesDictionary,Nest", "Nest.RollupFieldsIndexCapabilitiesDictionary");
            feature.AddKnownType("Nest.RollupFieldsIndexCapabilitiesDictionary+Converter,Nest", "Nest.Converter");
            feature.AddKnownType("Nest.GetRollupJobResponse,Nest", "Nest.GetRollupJobResponse");
            feature.AddKnownType("Nest.IndexingJobState,Nest", "Nest.IndexingJobState");
            feature.AddKnownType("Nest.RollupJobConfiguration,Nest", "Nest.RollupJobConfiguration");
            feature.AddKnownType("Nest.RollupJobInformation,Nest", "Nest.RollupJobInformation");
            feature.AddKnownType("Nest.RollupJobStats,Nest", "Nest.RollupJobStats");
            feature.AddKnownType("Nest.RollupJobStatus,Nest", "Nest.RollupJobStatus");
            feature.AddKnownType("Nest.IDateHistogramRollupGrouping,Nest", "Nest.IDateHistogramRollupGrouping");
            feature.AddKnownType("Nest.DateHistogramRollupGrouping,Nest", "Nest.DateHistogramRollupGrouping");
            feature.AddKnownType("Nest.DateHistogramRollupGroupingDescriptor`1,Nest", "Nest.DateHistogramRollupGroupingDescriptor`1'1");
            feature.AddKnownType("Nest.IHistogramRollupGrouping,Nest", "Nest.IHistogramRollupGrouping");
            feature.AddKnownType("Nest.HistogramRollupGrouping,Nest", "Nest.HistogramRollupGrouping");
            feature.AddKnownType("Nest.HistogramRollupGroupingDescriptor`1,Nest", "Nest.HistogramRollupGroupingDescriptor`1'1");
            feature.AddKnownType("Nest.IRollupGroupings,Nest", "Nest.IRollupGroupings");
            feature.AddKnownType("Nest.RollupGroupings,Nest", "Nest.RollupGroupings");
            feature.AddKnownType("Nest.RollupGroupingsDescriptor`1,Nest", "Nest.RollupGroupingsDescriptor`1'1");
            feature.AddKnownType("Nest.IRollupFieldMetric,Nest", "Nest.IRollupFieldMetric");
            feature.AddKnownType("Nest.RollupFieldMetric,Nest", "Nest.RollupFieldMetric");
            feature.AddKnownType("Nest.RollupFieldMetricsDescriptor`1,Nest", "Nest.RollupFieldMetricsDescriptor`1'1");
            feature.AddKnownType("Nest.RollupMetric,Nest", "Nest.RollupMetric");
            feature.AddKnownType("Nest.ITermsRollupGrouping,Nest", "Nest.ITermsRollupGrouping");
            feature.AddKnownType("Nest.TermsRollupGrouping,Nest", "Nest.TermsRollupGrouping");
            feature.AddKnownType("Nest.TermsRollupGroupingDescriptor`1,Nest", "Nest.TermsRollupGroupingDescriptor`1'1");
            feature.AddKnownType("Nest.RollupSearchResponse`1,Nest", "Nest.RollupSearchResponse`1'1");
            feature.AddKnownType("Nest.StartRollupJobResponse,Nest", "Nest.StartRollupJobResponse");
            feature.AddKnownType("Nest.StopRollupJobResponse,Nest", "Nest.StopRollupJobResponse");
            feature.AddKnownType("Nest.ClearApiKeyCacheResponse,Nest", "Nest.ClearApiKeyCacheResponse");
            feature.AddKnownType("Nest.IApiKeyPrivileges,Nest", "Nest.IApiKeyPrivileges");
            feature.AddKnownType("Nest.ApiKeyPrivileges,Nest", "Nest.ApiKeyPrivileges");
            feature.AddKnownType("Nest.ApiKeyPrivilegesDescriptor,Nest", "Nest.ApiKeyPrivilegesDescriptor");
            feature.AddKnownType("Nest.ApiKeyPrivilegesDescriptor+ApiKeyPrivilegeDescriptor,Nest", "Nest.Nest.ApiKeyPrivilegesDescriptor.ApiKeyPrivilegeDescriptor");
            feature.AddKnownType("Nest.IApiKeyRole,Nest", "Nest.IApiKeyRole");
            feature.AddKnownType("Nest.ApiKeyRole,Nest", "Nest.ApiKeyRole");
            feature.AddKnownType("Nest.ApiKeyRoleDescriptor,Nest", "Nest.ApiKeyRoleDescriptor");
            feature.AddKnownType("Nest.IApiKeyRoles,Nest", "Nest.IApiKeyRoles");
            feature.AddKnownType("Nest.ApiKeyRoles,Nest", "Nest.ApiKeyRoles");
            feature.AddKnownType("Nest.ApiKeyRolesDescriptor,Nest", "Nest.ApiKeyRolesDescriptor");
            feature.AddKnownType("Nest.CreateApiKeyResponse,Nest", "Nest.CreateApiKeyResponse");
            feature.AddKnownType("Nest.GetApiKeyResponse,Nest", "Nest.GetApiKeyResponse");
            feature.AddKnownType("Nest.ApiKeys,Nest", "Nest.ApiKeys");
            feature.AddKnownType("Nest.IApiKey,Nest", "Nest.IApiKey");
            feature.AddKnownType("Nest.ApiKey,Nest", "Nest.ApiKey");
            feature.AddKnownType("Nest.ApiKeyDescriptor,Nest", "Nest.ApiKeyDescriptor");
            feature.AddKnownType("Nest.GrantApiKeyResponse,Nest", "Nest.GrantApiKeyResponse");
            feature.AddKnownType("Nest.GrantType,Nest", "Nest.GrantType");
            feature.AddKnownType("Nest.InvalidateApiKeyResponse,Nest", "Nest.InvalidateApiKeyResponse");
            feature.AddKnownType("Nest.RealmInfo,Nest", "Nest.RealmInfo");
            feature.AddKnownType("Nest.AuthenticateResponse,Nest", "Nest.AuthenticateResponse");
            feature.AddKnownType("Nest.ClearCachedPrivilegesResponse,Nest", "Nest.ClearCachedPrivilegesResponse");
            feature.AddKnownType("Nest.ClearCachedRealmsResponse,Nest", "Nest.ClearCachedRealmsResponse");
            feature.AddKnownType("Nest.DeletePrivilegesResponse,Nest", "Nest.DeletePrivilegesResponse");
            feature.AddKnownType("Nest.FoundUserPrivilege,Nest", "Nest.FoundUserPrivilege");
            feature.AddKnownType("Nest.GetBuiltinPrivilegesResponse,Nest", "Nest.GetBuiltinPrivilegesResponse");
            feature.AddKnownType("Nest.GetPrivilegesResponse,Nest", "Nest.GetPrivilegesResponse");
            feature.AddKnownType("Nest.GetUserPrivilegesResponse,Nest", "Nest.GetUserPrivilegesResponse");
            feature.AddKnownType("Nest.ManageUserPrivileges,Nest", "Nest.ManageUserPrivileges");
            feature.AddKnownType("Nest.ApplicationGlobalUserPrivileges,Nest", "Nest.ApplicationGlobalUserPrivileges");
            feature.AddKnownType("Nest.GlobalPrivileges,Nest", "Nest.GlobalPrivileges");
            feature.AddKnownType("Nest.FieldSecuritySettings,Nest", "Nest.FieldSecuritySettings");
            feature.AddKnownType("Nest.TermUserPrivileges,Nest", "Nest.TermUserPrivileges");
            feature.AddKnownType("Nest.QueryUserPrivileges,Nest", "Nest.QueryUserPrivileges");
            feature.AddKnownType("Nest.UserIndicesPrivileges,Nest", "Nest.UserIndicesPrivileges");
            feature.AddKnownType("Nest.ApplicationResourcePrivileges,Nest", "Nest.ApplicationResourcePrivileges");
            feature.AddKnownType("Nest.IIndexPrivilegesCheck,Nest", "Nest.IIndexPrivilegesCheck");
            feature.AddKnownType("Nest.IndexPrivilegesCheck,Nest", "Nest.IndexPrivilegesCheck");
            feature.AddKnownType("Nest.IndexPrivilegesChecksDescriptor,Nest", "Nest.IndexPrivilegesChecksDescriptor");
            feature.AddKnownType("Nest.IndexPrivilegesChecksDescriptor+IndexPrivilegesCheckDesciptor,Nest", "Nest.Nest.IndexPrivilegesChecksDescriptor.IndexPrivilegesCheckDesciptor");
            feature.AddKnownType("Nest.IApplicationPrivilegesCheck,Nest", "Nest.IApplicationPrivilegesCheck");
            feature.AddKnownType("Nest.ApplicationPrivilegesCheck,Nest", "Nest.ApplicationPrivilegesCheck");
            feature.AddKnownType("Nest.ApplicationPrivilegesChecksDescriptor,Nest", "Nest.ApplicationPrivilegesChecksDescriptor");
            feature.AddKnownType("Nest.ApplicationPrivilegesChecksDescriptor+ApplicationPrivilegesCheckDescriptor,Nest", "Nest.Nest.ApplicationPrivilegesChecksDescriptor.ApplicationPrivilegesCheckDescriptor");
            feature.AddKnownType("Nest.HasPrivilegesResponse,Nest", "Nest.HasPrivilegesResponse");
            feature.AddKnownType("Nest.ResourcePrivileges,Nest", "Nest.ResourcePrivileges");
            feature.AddKnownType("Nest.IndicesPrivilegesFormatter,Nest", "Nest.IndicesPrivilegesFormatter");
            feature.AddKnownType("Nest.ApplicationsPrivilegesFormatter,Nest", "Nest.ApplicationsPrivilegesFormatter");
            feature.AddKnownType("Nest.IAppPrivileges,Nest", "Nest.IAppPrivileges");
            feature.AddKnownType("Nest.AppPrivileges,Nest", "Nest.AppPrivileges");
            feature.AddKnownType("Nest.AppPrivilegesDescriptor,Nest", "Nest.AppPrivilegesDescriptor");
            feature.AddKnownType("Nest.IPrivileges,Nest", "Nest.IPrivileges");
            feature.AddKnownType("Nest.Privileges,Nest", "Nest.Privileges");
            feature.AddKnownType("Nest.PrivilegesDescriptor,Nest", "Nest.PrivilegesDescriptor");
            feature.AddKnownType("Nest.PrivilegesFormatter,Nest", "Nest.PrivilegesFormatter");
            feature.AddKnownType("Nest.IPrivilegesActions,Nest", "Nest.IPrivilegesActions");
            feature.AddKnownType("Nest.PrivilegesActions,Nest", "Nest.PrivilegesActions");
            feature.AddKnownType("Nest.PrivilegesActionsDescriptor,Nest", "Nest.PrivilegesActionsDescriptor");
            feature.AddKnownType("Nest.PutPrivilegesFormatter,Nest", "Nest.PutPrivilegesFormatter");
            feature.AddKnownType("Nest.PutPrivilegesResponse,Nest", "Nest.PutPrivilegesResponse");
            feature.AddKnownType("Nest.PutPrivilegesStatus,Nest", "Nest.PutPrivilegesStatus");
            feature.AddKnownType("Nest.DeleteRoleMappingResponse,Nest", "Nest.DeleteRoleMappingResponse");
            feature.AddKnownType("Nest.GetRoleMappingResponse,Nest", "Nest.GetRoleMappingResponse");
            feature.AddKnownType("Nest.XPackRoleMapping,Nest", "Nest.XPackRoleMapping");
            feature.AddKnownType("Nest.PutRoleMappingResponse,Nest", "Nest.PutRoleMappingResponse");
            feature.AddKnownType("Nest.PutRoleMappingStatus,Nest", "Nest.PutRoleMappingStatus");
            feature.AddKnownType("Nest.DistinguishedNameRule,Nest", "Nest.DistinguishedNameRule");
            feature.AddKnownType("Nest.FieldRuleBase,Nest", "Nest.FieldRuleBase");
            feature.AddKnownType("Nest.FieldRuleBaseFormatter,Nest", "Nest.FieldRuleBaseFormatter");
            feature.AddKnownType("Nest.GroupsRule,Nest", "Nest.GroupsRule");
            feature.AddKnownType("Nest.MetadataRule,Nest", "Nest.MetadataRule");
            feature.AddKnownType("Nest.RealmRule,Nest", "Nest.RealmRule");
            feature.AddKnownType("Nest.UsernameRule,Nest", "Nest.UsernameRule");
            feature.AddKnownType("Nest.AllRoleMappingRule,Nest", "Nest.AllRoleMappingRule");
            feature.AddKnownType("Nest.AnyRoleMappingRule,Nest", "Nest.AnyRoleMappingRule");
            feature.AddKnownType("Nest.ExceptRoleMappingRole,Nest", "Nest.ExceptRoleMappingRole");
            feature.AddKnownType("Nest.FieldRoleMappingRule,Nest", "Nest.FieldRoleMappingRule");
            feature.AddKnownType("Nest.RoleMappingRuleBase,Nest", "Nest.RoleMappingRuleBase");
            feature.AddKnownType("Nest.RoleMappingRuleBaseFormatter,Nest", "Nest.RoleMappingRuleBaseFormatter");
            feature.AddKnownType("Nest.RoleMappingRuleDescriptor,Nest", "Nest.RoleMappingRuleDescriptor");
            feature.AddKnownType("Nest.RoleMappingRulesDescriptor,Nest", "Nest.RoleMappingRulesDescriptor");
            feature.AddKnownType("Nest.ClearCachedRolesResponse,Nest", "Nest.ClearCachedRolesResponse");
            feature.AddKnownType("Nest.DeleteRoleResponse,Nest", "Nest.DeleteRoleResponse");
            feature.AddKnownType("Nest.IFieldSecurity,Nest", "Nest.IFieldSecurity");
            feature.AddKnownType("Nest.FieldSecurity,Nest", "Nest.FieldSecurity");
            feature.AddKnownType("Nest.FieldSecurityDescriptor`1,Nest", "Nest.FieldSecurityDescriptor`1'1");
            feature.AddKnownType("Nest.GetRoleResponse,Nest", "Nest.GetRoleResponse");
            feature.AddKnownType("Nest.XPackRole,Nest", "Nest.XPackRole");
            feature.AddKnownType("Nest.IApplicationPrivileges,Nest", "Nest.IApplicationPrivileges");
            feature.AddKnownType("Nest.ApplicationPrivileges,Nest", "Nest.ApplicationPrivileges");
            feature.AddKnownType("Nest.ApplicationPrivilegesListDescriptor,Nest", "Nest.ApplicationPrivilegesListDescriptor");
            feature.AddKnownType("Nest.ApplicationPrivilegesDescriptor,Nest", "Nest.ApplicationPrivilegesDescriptor");
            feature.AddKnownType("Nest.IIndicesPrivileges,Nest", "Nest.IIndicesPrivileges");
            feature.AddKnownType("Nest.IndicesPrivileges,Nest", "Nest.IndicesPrivileges");
            feature.AddKnownType("Nest.IndicesPrivilegesDescriptor,Nest", "Nest.IndicesPrivilegesDescriptor");
            feature.AddKnownType("Nest.IndicesPrivilegesDescriptor`1,Nest", "Nest.IndicesPrivilegesDescriptor`1'1");
            feature.AddKnownType("Nest.PutRoleResponse,Nest", "Nest.PutRoleResponse");
            feature.AddKnownType("Nest.PutRoleStatus,Nest", "Nest.PutRoleStatus");
            feature.AddKnownType("Nest.SecurityNode,Nest", "Nest.SecurityNode");
            feature.AddKnownType("Nest.ChangePasswordResponse,Nest", "Nest.ChangePasswordResponse");
            feature.AddKnownType("Nest.DeleteUserResponse,Nest", "Nest.DeleteUserResponse");
            feature.AddKnownType("Nest.DisableUserResponse,Nest", "Nest.DisableUserResponse");
            feature.AddKnownType("Nest.EnableUserResponse,Nest", "Nest.EnableUserResponse");
            feature.AddKnownType("Nest.AccessTokenGrantType,Nest", "Nest.AccessTokenGrantType");
            feature.AddKnownType("Nest.GetUserAccessTokenResponse,Nest", "Nest.GetUserAccessTokenResponse");
            feature.AddKnownType("Nest.Authentication,Nest", "Nest.Authentication");
            feature.AddKnownType("Nest.AuthenticationRealmInfo,Nest", "Nest.AuthenticationRealmInfo");
            feature.AddKnownType("Nest.GetUserResponse,Nest", "Nest.GetUserResponse");
            feature.AddKnownType("Nest.XPackUser,Nest", "Nest.XPackUser");
            feature.AddKnownType("Nest.InvalidateUserAccessTokenResponse,Nest", "Nest.InvalidateUserAccessTokenResponse");
            feature.AddKnownType("Nest.PutUserResponse,Nest", "Nest.PutUserResponse");
            feature.AddKnownType("Nest.DeleteSnapshotLifecycleResponse,Nest", "Nest.DeleteSnapshotLifecycleResponse");
            feature.AddKnownType("Nest.ExecuteSnapshotLifecycleResponse,Nest", "Nest.ExecuteSnapshotLifecycleResponse");
            feature.AddKnownType("Nest.ExecuteRetentionResponse,Nest", "Nest.ExecuteRetentionResponse");
            feature.AddKnownType("Nest.GetSnapshotLifecycleResponse,Nest", "Nest.GetSnapshotLifecycleResponse");
            feature.AddKnownType("Nest.GetSnapshotLifecycleStatsResponse,Nest", "Nest.GetSnapshotLifecycleStatsResponse");
            feature.AddKnownType("Nest.SnapshotPolicyStats,Nest", "Nest.SnapshotPolicyStats");
            feature.AddKnownType("Nest.GetSnapshotLifecycleManagementStatusResponse,Nest", "Nest.GetSnapshotLifecycleManagementStatusResponse");
            feature.AddKnownType("Nest.PutSnapshotLifecycleResponse,Nest", "Nest.PutSnapshotLifecycleResponse");
            feature.AddKnownType("Nest.ISnapshotLifecycleConfig,Nest", "Nest.ISnapshotLifecycleConfig");
            feature.AddKnownType("Nest.SnapshotLifecycleConfig,Nest", "Nest.SnapshotLifecycleConfig");
            feature.AddKnownType("Nest.SnapshotLifecycleConfigDescriptor,Nest", "Nest.SnapshotLifecycleConfigDescriptor");
            feature.AddKnownType("Nest.SnapshotLifecyclePolicy,Nest", "Nest.SnapshotLifecyclePolicy");
            feature.AddKnownType("Nest.ISnapshotLifecyclePolicy,Nest", "Nest.ISnapshotLifecyclePolicy");
            feature.AddKnownType("Nest.SnapshotLifecyclePolicyMetadata,Nest", "Nest.SnapshotLifecyclePolicyMetadata");
            feature.AddKnownType("Nest.SnapshotLifecycleInvocationRecord,Nest", "Nest.SnapshotLifecycleInvocationRecord");
            feature.AddKnownType("Nest.SnapshotLifecycleInProgress,Nest", "Nest.SnapshotLifecycleInProgress");
            feature.AddKnownType("Nest.ISnapshotRetentionConfiguration,Nest", "Nest.ISnapshotRetentionConfiguration");
            feature.AddKnownType("Nest.SnapshotRetentionConfig,Nest", "Nest.SnapshotRetentionConfig");
            feature.AddKnownType("Nest.SnapshotRetentionConfigurationDescriptor,Nest", "Nest.SnapshotRetentionConfigurationDescriptor");
            feature.AddKnownType("Nest.StartSnapshotLifecycleManagementResponse,Nest", "Nest.StartSnapshotLifecycleManagementResponse");
            feature.AddKnownType("Nest.StopSnapshotLifecycleManagementResponse,Nest", "Nest.StopSnapshotLifecycleManagementResponse");
            feature.AddKnownType("Nest.ClearSqlCursorResponse,Nest", "Nest.ClearSqlCursorResponse");
            feature.AddKnownType("Nest.SqlDeleteResponse,Nest", "Nest.SqlDeleteResponse");
            feature.AddKnownType("Nest.SqlGetResponse,Nest", "Nest.SqlGetResponse");
            feature.AddKnownType("Nest.ISqlRequest,Nest", "Nest.ISqlRequest");
            feature.AddKnownType("Nest.QuerySqlResponse,Nest", "Nest.QuerySqlResponse");
            feature.AddKnownType("Nest.SqlColumn,Nest", "Nest.SqlColumn");
            feature.AddKnownType("Nest.SqlRow,Nest", "Nest.SqlRow");
            feature.AddKnownType("Nest.SqlRowFormatter,Nest", "Nest.SqlRowFormatter");
            feature.AddKnownType("Nest.SqlValue,Nest", "Nest.SqlValue");
            feature.AddKnownType("Nest.SqlValueFormatter,Nest", "Nest.SqlValueFormatter");
            feature.AddKnownType("Nest.SqlSearchStatusResponse,Nest", "Nest.SqlSearchStatusResponse");
            feature.AddKnownType("Nest.TranslateSqlResponse,Nest", "Nest.TranslateSqlResponse");
            feature.AddKnownType("Nest.TranslateSqlResponseBuilder,Nest", "Nest.TranslateSqlResponseBuilder");
            feature.AddKnownType("Nest.GetCertificatesResponse,Nest", "Nest.GetCertificatesResponse");
            feature.AddKnownType("Nest.ClusterCertificateInformation,Nest", "Nest.ClusterCertificateInformation");
            feature.AddKnownType("Nest.GetCertificatesResponseFormatter,Nest", "Nest.GetCertificatesResponseFormatter");
            feature.AddKnownType("Nest.GetCertificatesResponseBuilder,Nest", "Nest.GetCertificatesResponseBuilder");
            feature.AddKnownType("Nest.DeleteTransformResponse,Nest", "Nest.DeleteTransformResponse");
            feature.AddKnownType("Nest.GetTransformStatsResponse,Nest", "Nest.GetTransformStatsResponse");
            feature.AddKnownType("Nest.TransformStats,Nest", "Nest.TransformStats");
            feature.AddKnownType("Nest.TransformCheckpointingInfo,Nest", "Nest.TransformCheckpointingInfo");
            feature.AddKnownType("Nest.TransformCheckpointStats,Nest", "Nest.TransformCheckpointStats");
            feature.AddKnownType("Nest.TransformProgress,Nest", "Nest.TransformProgress");
            feature.AddKnownType("Nest.TransformIndexerStats,Nest", "Nest.TransformIndexerStats");
            feature.AddKnownType("Nest.NodeAttributes,Nest", "Nest.NodeAttributes");
            feature.AddKnownType("Nest.GetTransformResponse,Nest", "Nest.GetTransformResponse");
            feature.AddKnownType("Nest.IDateHistogramGroupSource,Nest", "Nest.IDateHistogramGroupSource");
            feature.AddKnownType("Nest.DateHistogramGroupSource,Nest", "Nest.DateHistogramGroupSource");
            feature.AddKnownType("Nest.DateHistogramGroupSourceDescriptor`1,Nest", "Nest.DateHistogramGroupSourceDescriptor`1'1");
            feature.AddKnownType("Nest.IGeoTileGridGroupSource,Nest", "Nest.IGeoTileGridGroupSource");
            feature.AddKnownType("Nest.GeoTileGridGroupSource,Nest", "Nest.GeoTileGridGroupSource");
            feature.AddKnownType("Nest.GeoTileGridGroupSourceDescriptor`1,Nest", "Nest.GeoTileGridGroupSourceDescriptor`1'1");
            feature.AddKnownType("Nest.IHistogramGroupSource,Nest", "Nest.IHistogramGroupSource");
            feature.AddKnownType("Nest.HistogramGroupSource,Nest", "Nest.HistogramGroupSource");
            feature.AddKnownType("Nest.HistogramGroupSourceDescriptor`1,Nest", "Nest.HistogramGroupSourceDescriptor`1'1");
            feature.AddKnownType("Nest.ISingleGroupSource,Nest", "Nest.ISingleGroupSource");
            feature.AddKnownType("Nest.SingleGroupSourceBase,Nest", "Nest.SingleGroupSourceBase");
            feature.AddKnownType("Nest.SingleGroupSourceDescriptorBase`3,Nest", "Nest.SingleGroupSourceDescriptorBase`3'3");
            feature.AddKnownType("Nest.SingleGroupSourcesDescriptor`1,Nest", "Nest.SingleGroupSourcesDescriptor`1'1");
            feature.AddKnownType("Nest.SingleGroupSourceFormatter,Nest", "Nest.SingleGroupSourceFormatter");
            feature.AddKnownType("Nest.ITermsGroupSource,Nest", "Nest.ITermsGroupSource");
            feature.AddKnownType("Nest.TermsGroupSource,Nest", "Nest.TermsGroupSource");
            feature.AddKnownType("Nest.TermsGroupSourceDescriptor`1,Nest", "Nest.TermsGroupSourceDescriptor`1'1");
            feature.AddKnownType("Nest.ITransformPivot,Nest", "Nest.ITransformPivot");
            feature.AddKnownType("Nest.TransformPivot,Nest", "Nest.TransformPivot");
            feature.AddKnownType("Nest.TransformPivotDescriptor`1,Nest", "Nest.TransformPivotDescriptor`1'1");
            feature.AddKnownType("Nest.PreviewTransformResponse`1,Nest", "Nest.PreviewTransformResponse`1'1");
            feature.AddKnownType("Nest.PutTransformResponse,Nest", "Nest.PutTransformResponse");
            feature.AddKnownType("Nest.StartTransformResponse,Nest", "Nest.StartTransformResponse");
            feature.AddKnownType("Nest.StopTransformResponse,Nest", "Nest.StopTransformResponse");
            feature.AddKnownType("Nest.Transform,Nest", "Nest.Transform");
            feature.AddKnownType("Nest.ITransformDestination,Nest", "Nest.ITransformDestination");
            feature.AddKnownType("Nest.TransformDestination,Nest", "Nest.TransformDestination");
            feature.AddKnownType("Nest.TransformDestinationDescriptor,Nest", "Nest.TransformDestinationDescriptor");
            feature.AddKnownType("Nest.ITransformSettings,Nest", "Nest.ITransformSettings");
            feature.AddKnownType("Nest.TransformSettings,Nest", "Nest.TransformSettings");
            feature.AddKnownType("Nest.TransformSettingsDescriptor,Nest", "Nest.TransformSettingsDescriptor");
            feature.AddKnownType("Nest.ITransformSource,Nest", "Nest.ITransformSource");
            feature.AddKnownType("Nest.TransformSource,Nest", "Nest.TransformSource");
            feature.AddKnownType("Nest.TransformSourceDescriptor`1,Nest", "Nest.TransformSourceDescriptor`1'1");
            feature.AddKnownType("Nest.ITransformSyncContainer,Nest", "Nest.ITransformSyncContainer");
            feature.AddKnownType("Nest.TransformSyncContainer,Nest", "Nest.TransformSyncContainer");
            feature.AddKnownType("Nest.TransformSyncContainerDescriptor`1,Nest", "Nest.TransformSyncContainerDescriptor`1'1");
            feature.AddKnownType("Nest.ITransformSync,Nest", "Nest.ITransformSync");
            feature.AddKnownType("Nest.TransformSyncBase,Nest", "Nest.TransformSyncBase");
            feature.AddKnownType("Nest.ITransformTimeSync,Nest", "Nest.ITransformTimeSync");
            feature.AddKnownType("Nest.TransformTimeSync,Nest", "Nest.TransformTimeSync");
            feature.AddKnownType("Nest.TransformTimeSyncDescriptor`1,Nest", "Nest.TransformTimeSyncDescriptor`1'1");
            feature.AddKnownType("Nest.UpdateTransformResponse,Nest", "Nest.UpdateTransformResponse");
            feature.AddKnownType("Nest.AcknowledgeWatchResponse,Nest", "Nest.AcknowledgeWatchResponse");
            feature.AddKnownType("Nest.WatchStatus,Nest", "Nest.WatchStatus");
            feature.AddKnownType("Nest.ActionStatus,Nest", "Nest.ActionStatus");
            feature.AddKnownType("Nest.ActivationState,Nest", "Nest.ActivationState");
            feature.AddKnownType("Nest.AcknowledgeState,Nest", "Nest.AcknowledgeState");
            feature.AddKnownType("Nest.ExecutionState,Nest", "Nest.ExecutionState");
            feature.AddKnownType("Nest.ThrottleState,Nest", "Nest.ThrottleState");
            feature.AddKnownType("Nest.AcknowledgementState,Nest", "Nest.AcknowledgementState");
            feature.AddKnownType("Nest.IAction,Nest", "Nest.IAction");
            feature.AddKnownType("Nest.ActionBase,Nest", "Nest.ActionBase");
            feature.AddKnownType("Nest.ActionCombinator,Nest", "Nest.ActionCombinator");
            feature.AddKnownType("Nest.ActionsInterfaceFormatter,Nest", "Nest.ActionsInterfaceFormatter");
            feature.AddKnownType("Nest.ActionsFormatter,Nest", "Nest.ActionsFormatter");
            feature.AddKnownType("Nest.IActions,Nest", "Nest.IActions");
            feature.AddKnownType("Nest.Actions,Nest", "Nest.Actions");
            feature.AddKnownType("Nest.ActionsDescriptor,Nest", "Nest.ActionsDescriptor");
            feature.AddKnownType("Nest.ActionsDescriptorBase`2,Nest", "Nest.ActionsDescriptorBase`2'2");
            feature.AddKnownType("Nest.ActionType,Nest", "Nest.ActionType");
            feature.AddKnownType("Nest.IDataAttachment,Nest", "Nest.IDataAttachment");
            feature.AddKnownType("Nest.DataAttachment,Nest", "Nest.DataAttachment");
            feature.AddKnownType("Nest.DataAttachmentDescriptor,Nest", "Nest.DataAttachmentDescriptor");
            feature.AddKnownType("Nest.DataAttachmentFormat,Nest", "Nest.DataAttachmentFormat");
            feature.AddKnownType("Nest.IEmailAction,Nest", "Nest.IEmailAction");
            feature.AddKnownType("Nest.EmailAction,Nest", "Nest.EmailAction");
            feature.AddKnownType("Nest.EmailActionDescriptor,Nest", "Nest.EmailActionDescriptor");
            feature.AddKnownType("Nest.IEmailAttachments,Nest", "Nest.IEmailAttachments");
            feature.AddKnownType("Nest.EmailAttachments,Nest", "Nest.EmailAttachments");
            feature.AddKnownType("Nest.EmailAttachmentsDescriptor,Nest", "Nest.EmailAttachmentsDescriptor");
            feature.AddKnownType("Nest.IEmailAttachment,Nest", "Nest.IEmailAttachment");
            feature.AddKnownType("Nest.EmailAttachmentsFormatter,Nest", "Nest.EmailAttachmentsFormatter");
            feature.AddKnownType("Nest.IEmailBody,Nest", "Nest.IEmailBody");
            feature.AddKnownType("Nest.EmailBody,Nest", "Nest.EmailBody");
            feature.AddKnownType("Nest.EmailBodyDescriptor,Nest", "Nest.EmailBodyDescriptor");
            feature.AddKnownType("Nest.EmailPriority,Nest", "Nest.EmailPriority");
            feature.AddKnownType("Nest.IHttpAttachment,Nest", "Nest.IHttpAttachment");
            feature.AddKnownType("Nest.HttpAttachment,Nest", "Nest.HttpAttachment");
            feature.AddKnownType("Nest.HttpAttachmentDescriptor,Nest", "Nest.HttpAttachmentDescriptor");
            feature.AddKnownType("Nest.IIndexAction,Nest", "Nest.IIndexAction");
            feature.AddKnownType("Nest.IndexAction,Nest", "Nest.IndexAction");
            feature.AddKnownType("Nest.IndexActionDescriptor,Nest", "Nest.IndexActionDescriptor");
            feature.AddKnownType("Nest.ILoggingAction,Nest", "Nest.ILoggingAction");
            feature.AddKnownType("Nest.LoggingAction,Nest", "Nest.LoggingAction");
            feature.AddKnownType("Nest.LoggingActionDescriptor,Nest", "Nest.LoggingActionDescriptor");
            feature.AddKnownType("Nest.IPagerDutyAction,Nest", "Nest.IPagerDutyAction");
            feature.AddKnownType("Nest.PagerDutyAction,Nest", "Nest.PagerDutyAction");
            feature.AddKnownType("Nest.PagerDutyActionDescriptor,Nest", "Nest.PagerDutyActionDescriptor");
            feature.AddKnownType("Nest.PagerDutyContextsDescriptor,Nest", "Nest.PagerDutyContextsDescriptor");
            feature.AddKnownType("Nest.PagerDutyEventType,Nest", "Nest.PagerDutyEventType");
            feature.AddKnownType("Nest.IPagerDutyContext,Nest", "Nest.IPagerDutyContext");
            feature.AddKnownType("Nest.PagerDutyContext,Nest", "Nest.PagerDutyContext");
            feature.AddKnownType("Nest.PagerDutyContextDescriptor,Nest", "Nest.PagerDutyContextDescriptor");
            feature.AddKnownType("Nest.PagerDutyContextType,Nest", "Nest.PagerDutyContextType");
            feature.AddKnownType("Nest.IPagerDutyEvent,Nest", "Nest.IPagerDutyEvent");
            feature.AddKnownType("Nest.PagerDutyEvent,Nest", "Nest.PagerDutyEvent");
            feature.AddKnownType("Nest.ISlackAction,Nest", "Nest.ISlackAction");
            feature.AddKnownType("Nest.SlackAction,Nest", "Nest.SlackAction");
            feature.AddKnownType("Nest.SlackActionDescriptor,Nest", "Nest.SlackActionDescriptor");
            feature.AddKnownType("Nest.ISlackAttachment,Nest", "Nest.ISlackAttachment");
            feature.AddKnownType("Nest.SlackAttachment,Nest", "Nest.SlackAttachment");
            feature.AddKnownType("Nest.SlackAttachmentsDescriptor,Nest", "Nest.SlackAttachmentsDescriptor");
            feature.AddKnownType("Nest.SlackAttachmentDescriptor,Nest", "Nest.SlackAttachmentDescriptor");
            feature.AddKnownType("Nest.ISlackAttachmentField,Nest", "Nest.ISlackAttachmentField");
            feature.AddKnownType("Nest.SlackAttachmentField,Nest", "Nest.SlackAttachmentField");
            feature.AddKnownType("Nest.SlackAttachmentFieldsDescriptor,Nest", "Nest.SlackAttachmentFieldsDescriptor");
            feature.AddKnownType("Nest.SlackAttachmentFieldDescriptor,Nest", "Nest.SlackAttachmentFieldDescriptor");
            feature.AddKnownType("Nest.ISlackDynamicAttachment,Nest", "Nest.ISlackDynamicAttachment");
            feature.AddKnownType("Nest.SlackDynamicAttachment,Nest", "Nest.SlackDynamicAttachment");
            feature.AddKnownType("Nest.SlackDynamicAttachmentDescriptor,Nest", "Nest.SlackDynamicAttachmentDescriptor");
            feature.AddKnownType("Nest.ISlackMessage,Nest", "Nest.ISlackMessage");
            feature.AddKnownType("Nest.SlackMessage,Nest", "Nest.SlackMessage");
            feature.AddKnownType("Nest.SlackMessageDescriptor,Nest", "Nest.SlackMessageDescriptor");
            feature.AddKnownType("Nest.IWebhookAction,Nest", "Nest.IWebhookAction");
            feature.AddKnownType("Nest.WebhookAction,Nest", "Nest.WebhookAction");
            feature.AddKnownType("Nest.WebhookActionDescriptor,Nest", "Nest.WebhookActionDescriptor");
            feature.AddKnownType("Nest.ActivateWatchResponse,Nest", "Nest.ActivateWatchResponse");
            feature.AddKnownType("Nest.ActivationStatus,Nest", "Nest.ActivationStatus");
            feature.AddKnownType("Nest.IAlwaysCondition,Nest", "Nest.IAlwaysCondition");
            feature.AddKnownType("Nest.AlwaysCondition,Nest", "Nest.AlwaysCondition");
            feature.AddKnownType("Nest.IArrayCompareCondition,Nest", "Nest.IArrayCompareCondition");
            feature.AddKnownType("Nest.Quantifier,Nest", "Nest.Quantifier");
            feature.AddKnownType("Nest.ArrayCompareConditionBase,Nest", "Nest.ArrayCompareConditionBase");
            feature.AddKnownType("Nest.ArrayCompareConditionDescriptor,Nest", "Nest.ArrayCompareConditionDescriptor");
            feature.AddKnownType("Nest.EqualArrayCondition,Nest", "Nest.EqualArrayCondition");
            feature.AddKnownType("Nest.NotEqualArrayCondition,Nest", "Nest.NotEqualArrayCondition");
            feature.AddKnownType("Nest.GreaterThanArrayCondition,Nest", "Nest.GreaterThanArrayCondition");
            feature.AddKnownType("Nest.GreaterThanOrEqualArrayCondition,Nest", "Nest.GreaterThanOrEqualArrayCondition");
            feature.AddKnownType("Nest.LowerThanArrayCondition,Nest", "Nest.LowerThanArrayCondition");
            feature.AddKnownType("Nest.LowerThanOrEqualArrayCondition,Nest", "Nest.LowerThanOrEqualArrayCondition");
            feature.AddKnownType("Nest.ArrayCompareConditionFormatter,Nest", "Nest.ArrayCompareConditionFormatter");
            feature.AddKnownType("Nest.ICompareCondition,Nest", "Nest.ICompareCondition");
            feature.AddKnownType("Nest.CompareConditionBase,Nest", "Nest.CompareConditionBase");
            feature.AddKnownType("Nest.CompareConditionDescriptor,Nest", "Nest.CompareConditionDescriptor");
            feature.AddKnownType("Nest.EqualCondition,Nest", "Nest.EqualCondition");
            feature.AddKnownType("Nest.NotEqualCondition,Nest", "Nest.NotEqualCondition");
            feature.AddKnownType("Nest.GreaterThanCondition,Nest", "Nest.GreaterThanCondition");
            feature.AddKnownType("Nest.GreaterThanOrEqualCondition,Nest", "Nest.GreaterThanOrEqualCondition");
            feature.AddKnownType("Nest.LowerThanCondition,Nest", "Nest.LowerThanCondition");
            feature.AddKnownType("Nest.LowerThanOrEqualCondition,Nest", "Nest.LowerThanOrEqualCondition");
            feature.AddKnownType("Nest.CompareConditionFormatter,Nest", "Nest.CompareConditionFormatter");
            feature.AddKnownType("Nest.ICondition,Nest", "Nest.ICondition");
            feature.AddKnownType("Nest.ConditionBase,Nest", "Nest.ConditionBase");
            feature.AddKnownType("Nest.IConditionContainer,Nest", "Nest.IConditionContainer");
            feature.AddKnownType("Nest.ConditionContainer,Nest", "Nest.ConditionContainer");
            feature.AddKnownType("Nest.ConditionDescriptor,Nest", "Nest.ConditionDescriptor");
            feature.AddKnownType("Nest.ConditionType,Nest", "Nest.ConditionType");
            feature.AddKnownType("Nest.IIndexedScriptCondition,Nest", "Nest.IIndexedScriptCondition");
            feature.AddKnownType("Nest.IndexedScriptCondition,Nest", "Nest.IndexedScriptCondition");
            feature.AddKnownType("Nest.IndexedScriptConditionDescriptor,Nest", "Nest.IndexedScriptConditionDescriptor");
            feature.AddKnownType("Nest.IInlineScriptCondition,Nest", "Nest.IInlineScriptCondition");
            feature.AddKnownType("Nest.InlineScriptCondition,Nest", "Nest.InlineScriptCondition");
            feature.AddKnownType("Nest.InlineScriptConditionDescriptor,Nest", "Nest.InlineScriptConditionDescriptor");
            feature.AddKnownType("Nest.INeverCondition,Nest", "Nest.INeverCondition");
            feature.AddKnownType("Nest.NeverCondition,Nest", "Nest.NeverCondition");
            feature.AddKnownType("Nest.IScriptCondition,Nest", "Nest.IScriptCondition");
            feature.AddKnownType("Nest.ScriptConditionBase,Nest", "Nest.ScriptConditionBase");
            feature.AddKnownType("Nest.ScriptConditionDescriptor,Nest", "Nest.ScriptConditionDescriptor");
            feature.AddKnownType("Nest.ScriptConditionDescriptorBase`2,Nest", "Nest.ScriptConditionDescriptorBase`2'2");
            feature.AddKnownType("Nest.ScriptConditionFormatter,Nest", "Nest.ScriptConditionFormatter");
            feature.AddKnownType("Nest.DeactivateWatchResponse,Nest", "Nest.DeactivateWatchResponse");
            feature.AddKnownType("Nest.DeleteWatchResponse,Nest", "Nest.DeleteWatchResponse");
            feature.AddKnownType("Nest.ExecuteWatchResponse,Nest", "Nest.ExecuteWatchResponse");
            feature.AddKnownType("Nest.ActionExecutionState,Nest", "Nest.ActionExecutionState");
            feature.AddKnownType("Nest.WatchRecord,Nest", "Nest.WatchRecord");
            feature.AddKnownType("Nest.TriggerEventResult,Nest", "Nest.TriggerEventResult");
            feature.AddKnownType("Nest.ExecutionResult,Nest", "Nest.ExecutionResult");
            feature.AddKnownType("Nest.ExecutionResultInput,Nest", "Nest.ExecutionResultInput");
            feature.AddKnownType("Nest.ExecutionResultCondition,Nest", "Nest.ExecutionResultCondition");
            feature.AddKnownType("Nest.ExecutionResultAction,Nest", "Nest.ExecutionResultAction");
            feature.AddKnownType("Nest.ActionExecutionMode,Nest", "Nest.ActionExecutionMode");
            feature.AddKnownType("Nest.EmailActionResult,Nest", "Nest.EmailActionResult");
            feature.AddKnownType("Nest.EmailResult,Nest", "Nest.EmailResult");
            feature.AddKnownType("Nest.HttpInputRequestResult,Nest", "Nest.HttpInputRequestResult");
            feature.AddKnownType("Nest.HttpInputResponseResult,Nest", "Nest.HttpInputResponseResult");
            feature.AddKnownType("Nest.IndexActionResult,Nest", "Nest.IndexActionResult");
            feature.AddKnownType("Nest.IndexActionResultIndexResponse,Nest", "Nest.IndexActionResultIndexResponse");
            feature.AddKnownType("Nest.LoggingActionResult,Nest", "Nest.LoggingActionResult");
            feature.AddKnownType("Nest.PagerDutyActionEventResult,Nest", "Nest.PagerDutyActionEventResult");
            feature.AddKnownType("Nest.PagerDutyActionResult,Nest", "Nest.PagerDutyActionResult");
            feature.AddKnownType("Nest.SimulatedActions,Nest", "Nest.SimulatedActions");
            feature.AddKnownType("Nest.SimulatedActionsFormatter,Nest", "Nest.SimulatedActionsFormatter");
            feature.AddKnownType("Nest.SlackActionMessageResult,Nest", "Nest.SlackActionMessageResult");
            feature.AddKnownType("Nest.SlackActionResult,Nest", "Nest.SlackActionResult");
            feature.AddKnownType("Nest.Status,Nest", "Nest.Status");
            feature.AddKnownType("Nest.WebhookActionResult,Nest", "Nest.WebhookActionResult");
            feature.AddKnownType("Nest.GetWatchResponse,Nest", "Nest.GetWatchResponse");
            feature.AddKnownType("Nest.IChainInput,Nest", "Nest.IChainInput");
            feature.AddKnownType("Nest.ChainInput,Nest", "Nest.ChainInput");
            feature.AddKnownType("Nest.ChainInputDescriptor,Nest", "Nest.ChainInputDescriptor");
            feature.AddKnownType("Nest.ChainInputFormatter,Nest", "Nest.ChainInputFormatter");
            feature.AddKnownType("Nest.ConnectionScheme,Nest", "Nest.ConnectionScheme");
            feature.AddKnownType("Nest.ExpandWildcardsFormatter,Nest", "Nest.ExpandWildcardsFormatter");
            feature.AddKnownType("Nest.IHttpInput,Nest", "Nest.IHttpInput");
            feature.AddKnownType("Nest.HttpInput,Nest", "Nest.HttpInput");
            feature.AddKnownType("Nest.HttpInputDescriptor,Nest", "Nest.HttpInputDescriptor");
            feature.AddKnownType("Nest.IHttpInputAuthentication,Nest", "Nest.IHttpInputAuthentication");
            feature.AddKnownType("Nest.HttpInputAuthentication,Nest", "Nest.HttpInputAuthentication");
            feature.AddKnownType("Nest.HttpInputAuthenticationDescriptor,Nest", "Nest.HttpInputAuthenticationDescriptor");
            feature.AddKnownType("Nest.IHttpInputBasicAuthentication,Nest", "Nest.IHttpInputBasicAuthentication");
            feature.AddKnownType("Nest.HttpInputBasicAuthentication,Nest", "Nest.HttpInputBasicAuthentication");
            feature.AddKnownType("Nest.HttpInputBasicAuthenticationDescriptor,Nest", "Nest.HttpInputBasicAuthenticationDescriptor");
            feature.AddKnownType("Nest.IHttpInputProxy,Nest", "Nest.IHttpInputProxy");
            feature.AddKnownType("Nest.HttpInputProxy,Nest", "Nest.HttpInputProxy");
            feature.AddKnownType("Nest.HttpInputProxyDescriptor,Nest", "Nest.HttpInputProxyDescriptor");
            feature.AddKnownType("Nest.IHttpInputRequest,Nest", "Nest.IHttpInputRequest");
            feature.AddKnownType("Nest.HttpInputRequest,Nest", "Nest.HttpInputRequest");
            feature.AddKnownType("Nest.HttpInputRequestDescriptor,Nest", "Nest.HttpInputRequestDescriptor");
            feature.AddKnownType("Nest.HttpInputMethod,Nest", "Nest.HttpInputMethod");
            feature.AddKnownType("Nest.IIndicesOptions,Nest", "Nest.IIndicesOptions");
            feature.AddKnownType("Nest.IndicesOptions,Nest", "Nest.IndicesOptions");
            feature.AddKnownType("Nest.IndicesOptionsDescriptor,Nest", "Nest.IndicesOptionsDescriptor");
            feature.AddKnownType("Nest.IInput,Nest", "Nest.IInput");
            feature.AddKnownType("Nest.InputBase,Nest", "Nest.InputBase");
            feature.AddKnownType("Nest.IInputContainer,Nest", "Nest.IInputContainer");
            feature.AddKnownType("Nest.InputContainer,Nest", "Nest.InputContainer");
            feature.AddKnownType("Nest.InputDescriptor,Nest", "Nest.InputDescriptor");
            feature.AddKnownType("Nest.InputType,Nest", "Nest.InputType");
            feature.AddKnownType("Nest.ResponseContentType,Nest", "Nest.ResponseContentType");
            feature.AddKnownType("Nest.ISearchInput,Nest", "Nest.ISearchInput");
            feature.AddKnownType("Nest.SearchInput,Nest", "Nest.SearchInput");
            feature.AddKnownType("Nest.SearchInputDescriptor,Nest", "Nest.SearchInputDescriptor");
            feature.AddKnownType("Nest.ISearchInputRequest,Nest", "Nest.ISearchInputRequest");
            feature.AddKnownType("Nest.SearchInputRequest,Nest", "Nest.SearchInputRequest");
            feature.AddKnownType("Nest.SearchInputRequestDescriptor,Nest", "Nest.SearchInputRequestDescriptor");
            feature.AddKnownType("Nest.ISimpleInput,Nest", "Nest.ISimpleInput");
            feature.AddKnownType("Nest.SimpleInput,Nest", "Nest.SimpleInput");
            feature.AddKnownType("Nest.SimpleInputDescriptor,Nest", "Nest.SimpleInputDescriptor");
            feature.AddKnownType("Nest.SimpleInputFormatter,Nest", "Nest.SimpleInputFormatter");
            feature.AddKnownType("Nest.PutWatchResponse,Nest", "Nest.PutWatchResponse");
            feature.AddKnownType("Nest.QueryWatchesResponse,Nest", "Nest.QueryWatchesResponse");
            feature.AddKnownType("Nest.WatchQueryResult,Nest", "Nest.WatchQueryResult");
            feature.AddKnownType("Nest.RestartWatcherResponse,Nest", "Nest.RestartWatcherResponse");
            feature.AddKnownType("Nest.CronExpression,Nest", "Nest.CronExpression");
            feature.AddKnownType("Nest.CronExpressionFormatter,Nest", "Nest.CronExpressionFormatter");
            feature.AddKnownType("Nest.ICronExpressions,Nest", "Nest.ICronExpressions");
            feature.AddKnownType("Nest.CronExpressions,Nest", "Nest.CronExpressions");
            feature.AddKnownType("Nest.CronExpressionsDescriptor,Nest", "Nest.CronExpressionsDescriptor");
            feature.AddKnownType("Nest.ITimeOfDay,Nest", "Nest.ITimeOfDay");
            feature.AddKnownType("Nest.TimeOfDay,Nest", "Nest.TimeOfDay");
            feature.AddKnownType("Nest.TimeOfDayDescriptor,Nest", "Nest.TimeOfDayDescriptor");
            feature.AddKnownType("Nest.IDailySchedule,Nest", "Nest.IDailySchedule");
            feature.AddKnownType("Nest.DailySchedule,Nest", "Nest.DailySchedule");
            feature.AddKnownType("Nest.DailyScheduleDescriptor,Nest", "Nest.DailyScheduleDescriptor");
            feature.AddKnownType("Nest.Day,Nest", "Nest.Day");
            feature.AddKnownType("Nest.IHourlySchedule,Nest", "Nest.IHourlySchedule");
            feature.AddKnownType("Nest.HourlySchedule,Nest", "Nest.HourlySchedule");
            feature.AddKnownType("Nest.HourlyScheduleDescriptor,Nest", "Nest.HourlyScheduleDescriptor");
            feature.AddKnownType("Nest.IntervalUnit,Nest", "Nest.IntervalUnit");
            feature.AddKnownType("Nest.Interval,Nest", "Nest.Interval");
            feature.AddKnownType("Nest.IntervalFormatter,Nest", "Nest.IntervalFormatter");
            feature.AddKnownType("Nest.Month,Nest", "Nest.Month");
            feature.AddKnownType("Nest.IMonthlySchedule,Nest", "Nest.IMonthlySchedule");
            feature.AddKnownType("Nest.MonthlySchedule,Nest", "Nest.MonthlySchedule");
            feature.AddKnownType("Nest.MonthlyScheduleDescriptor,Nest", "Nest.MonthlyScheduleDescriptor");
            feature.AddKnownType("Nest.ISchedule,Nest", "Nest.ISchedule");
            feature.AddKnownType("Nest.ScheduleBase,Nest", "Nest.ScheduleBase");
            feature.AddKnownType("Nest.IScheduleContainer,Nest", "Nest.IScheduleContainer");
            feature.AddKnownType("Nest.ScheduleContainer,Nest", "Nest.ScheduleContainer");
            feature.AddKnownType("Nest.ScheduleDescriptor,Nest", "Nest.ScheduleDescriptor");
            feature.AddKnownType("Nest.ScheduleContainerFormatter,Nest", "Nest.ScheduleContainerFormatter");
            feature.AddKnownType("Nest.IScheduleTriggerEvent,Nest", "Nest.IScheduleTriggerEvent");
            feature.AddKnownType("Nest.ScheduleTriggerEvent,Nest", "Nest.ScheduleTriggerEvent");
            feature.AddKnownType("Nest.ScheduleTriggerEventDescriptor,Nest", "Nest.ScheduleTriggerEventDescriptor");
            feature.AddKnownType("Nest.ITimeOfMonth,Nest", "Nest.ITimeOfMonth");
            feature.AddKnownType("Nest.TimeOfMonth,Nest", "Nest.TimeOfMonth");
            feature.AddKnownType("Nest.TimeOfMonthDescriptor,Nest", "Nest.TimeOfMonthDescriptor");
            feature.AddKnownType("Nest.ITimeOfWeek,Nest", "Nest.ITimeOfWeek");
            feature.AddKnownType("Nest.TimeOfWeek,Nest", "Nest.TimeOfWeek");
            feature.AddKnownType("Nest.TimeOfWeekDescriptor,Nest", "Nest.TimeOfWeekDescriptor");
            feature.AddKnownType("Nest.ITimeOfYear,Nest", "Nest.ITimeOfYear");
            feature.AddKnownType("Nest.TimeOfYear,Nest", "Nest.TimeOfYear");
            feature.AddKnownType("Nest.TimeOfYearDescriptor,Nest", "Nest.TimeOfYearDescriptor");
            feature.AddKnownType("Nest.IWeeklySchedule,Nest", "Nest.IWeeklySchedule");
            feature.AddKnownType("Nest.WeeklySchedule,Nest", "Nest.WeeklySchedule");
            feature.AddKnownType("Nest.WeeklyScheduleDescriptor,Nest", "Nest.WeeklyScheduleDescriptor");
            feature.AddKnownType("Nest.ScheduleFormatter`3,Nest", "Nest.ScheduleFormatter`3'3");
            feature.AddKnownType("Nest.IYearlySchedule,Nest", "Nest.IYearlySchedule");
            feature.AddKnownType("Nest.YearlySchedule,Nest", "Nest.YearlySchedule");
            feature.AddKnownType("Nest.YearlyScheduleDescriptor,Nest", "Nest.YearlyScheduleDescriptor");
            feature.AddKnownType("Nest.StartWatcherResponse,Nest", "Nest.StartWatcherResponse");
            feature.AddKnownType("Nest.StopWatcherResponse,Nest", "Nest.StopWatcherResponse");
            feature.AddKnownType("Nest.IChainTransform,Nest", "Nest.IChainTransform");
            feature.AddKnownType("Nest.ChainTransform,Nest", "Nest.ChainTransform");
            feature.AddKnownType("Nest.ChainTransformDescriptor,Nest", "Nest.ChainTransformDescriptor");
            feature.AddKnownType("Nest.ChainTransformFormatter,Nest", "Nest.ChainTransformFormatter");
            feature.AddKnownType("Nest.IIndexedScriptTransform,Nest", "Nest.IIndexedScriptTransform");
            feature.AddKnownType("Nest.IndexedScriptTransform,Nest", "Nest.IndexedScriptTransform");
            feature.AddKnownType("Nest.IndexedScriptTransformDescriptor,Nest", "Nest.IndexedScriptTransformDescriptor");
            feature.AddKnownType("Nest.IInlineScriptTransform,Nest", "Nest.IInlineScriptTransform");
            feature.AddKnownType("Nest.InlineScriptTransform,Nest", "Nest.InlineScriptTransform");
            feature.AddKnownType("Nest.InlineScriptTransformDescriptor,Nest", "Nest.InlineScriptTransformDescriptor");
            feature.AddKnownType("Nest.IScriptTransform,Nest", "Nest.IScriptTransform");
            feature.AddKnownType("Nest.ScriptTransformBase,Nest", "Nest.ScriptTransformBase");
            feature.AddKnownType("Nest.ScriptTransformDescriptorBase`2,Nest", "Nest.ScriptTransformDescriptorBase`2'2");
            feature.AddKnownType("Nest.ScriptTransformDescriptor,Nest", "Nest.ScriptTransformDescriptor");
            feature.AddKnownType("Nest.ScriptTransformFormatter,Nest", "Nest.ScriptTransformFormatter");
            feature.AddKnownType("Nest.ISearchTransform,Nest", "Nest.ISearchTransform");
            feature.AddKnownType("Nest.SearchTransform,Nest", "Nest.SearchTransform");
            feature.AddKnownType("Nest.SearchTransformDescriptor,Nest", "Nest.SearchTransformDescriptor");
            feature.AddKnownType("Nest.ITransform,Nest", "Nest.ITransform");
            feature.AddKnownType("Nest.TransformBase,Nest", "Nest.TransformBase");
            feature.AddKnownType("Nest.ITransformContainer,Nest", "Nest.ITransformContainer");
            feature.AddKnownType("Nest.TransformContainer,Nest", "Nest.TransformContainer");
            feature.AddKnownType("Nest.TransformDescriptor,Nest", "Nest.TransformDescriptor");
            feature.AddKnownType("Nest.ITrigger,Nest", "Nest.ITrigger");
            feature.AddKnownType("Nest.TriggerBase,Nest", "Nest.TriggerBase");
            feature.AddKnownType("Nest.ITriggerContainer,Nest", "Nest.ITriggerContainer");
            feature.AddKnownType("Nest.TriggerContainer,Nest", "Nest.TriggerContainer");
            feature.AddKnownType("Nest.TriggerDescriptor,Nest", "Nest.TriggerDescriptor");
            feature.AddKnownType("Nest.TriggerContainerFormatter,Nest", "Nest.TriggerContainerFormatter");
            feature.AddKnownType("Nest.TriggerContainerInterfaceFormatter,Nest", "Nest.TriggerContainerInterfaceFormatter");
            feature.AddKnownType("Nest.ITriggerEvent,Nest", "Nest.ITriggerEvent");
            feature.AddKnownType("Nest.TriggerEventBase,Nest", "Nest.TriggerEventBase");
            feature.AddKnownType("Nest.ITriggerEventContainer,Nest", "Nest.ITriggerEventContainer");
            feature.AddKnownType("Nest.TriggerEventContainer,Nest", "Nest.TriggerEventContainer");
            feature.AddKnownType("Nest.TriggerEventDescriptor,Nest", "Nest.TriggerEventDescriptor");
            feature.AddKnownType("Nest.IWatch,Nest", "Nest.IWatch");
            feature.AddKnownType("Nest.Watch,Nest", "Nest.Watch");
            feature.AddKnownType("Nest.WatchDescriptor,Nest", "Nest.WatchDescriptor");
            feature.AddKnownType("Nest.WatcherStatsResponse,Nest", "Nest.WatcherStatsResponse");
            feature.AddKnownType("Nest.WatcherNodeStats,Nest", "Nest.WatcherNodeStats");
            feature.AddKnownType("Nest.WatcherState,Nest", "Nest.WatcherState");
            feature.AddKnownType("Nest.WatchRecordQueuedStats,Nest", "Nest.WatchRecordQueuedStats");
            feature.AddKnownType("Nest.WatchRecordStats,Nest", "Nest.WatchRecordStats");
            feature.AddKnownType("Nest.ExecutionThreadPool,Nest", "Nest.ExecutionThreadPool");
            feature.AddKnownType("Nest.ExecutionPhase,Nest", "Nest.ExecutionPhase");
            feature.AddKnownType("Nest.Specification.AsyncSearchApi.AsyncSearchNamespace,Nest", "Nest.Specification.AsyncSearchApi.AsyncSearchNamespace");
            feature.AddKnownType("Nest.Specification.CatApi.CatNamespace,Nest", "Nest.Specification.CatApi.CatNamespace");
            feature.AddKnownType("Nest.Specification.ClusterApi.ClusterNamespace,Nest", "Nest.Specification.ClusterApi.ClusterNamespace");
            feature.AddKnownType("Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace,Nest", "Nest.Specification.CrossClusterReplicationApi.CrossClusterReplicationNamespace");
            feature.AddKnownType("Nest.Specification.DanglingIndicesApi.DanglingIndicesNamespace,Nest", "Nest.Specification.DanglingIndicesApi.DanglingIndicesNamespace");
            feature.AddKnownType("Nest.Specification.EnrichApi.EnrichNamespace,Nest", "Nest.Specification.EnrichApi.EnrichNamespace");
            feature.AddKnownType("Nest.Specification.EqlApi.EqlNamespace,Nest", "Nest.Specification.EqlApi.EqlNamespace");
            feature.AddKnownType("Nest.Specification.GraphApi.GraphNamespace,Nest", "Nest.Specification.GraphApi.GraphNamespace");
            feature.AddKnownType("Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace,Nest", "Nest.Specification.IndexLifecycleManagementApi.IndexLifecycleManagementNamespace");
            feature.AddKnownType("Nest.Specification.IndicesApi.IndicesNamespace,Nest", "Nest.Specification.IndicesApi.IndicesNamespace");
            feature.AddKnownType("Nest.Specification.IngestApi.IngestNamespace,Nest", "Nest.Specification.IngestApi.IngestNamespace");
            feature.AddKnownType("Nest.Specification.LicenseApi.LicenseNamespace,Nest", "Nest.Specification.LicenseApi.LicenseNamespace");
            feature.AddKnownType("Nest.Specification.MachineLearningApi.MachineLearningNamespace,Nest", "Nest.Specification.MachineLearningApi.MachineLearningNamespace");
            feature.AddKnownType("Nest.Specification.MigrationApi.MigrationNamespace,Nest", "Nest.Specification.MigrationApi.MigrationNamespace");
            feature.AddKnownType("Nest.Specification.NodesApi.NodesNamespace,Nest", "Nest.Specification.NodesApi.NodesNamespace");
            feature.AddKnownType("Nest.Specification.RollupApi.RollupNamespace,Nest", "Nest.Specification.RollupApi.RollupNamespace");
            feature.AddKnownType("Nest.Specification.SecurityApi.SecurityNamespace,Nest", "Nest.Specification.SecurityApi.SecurityNamespace");
            feature.AddKnownType("Nest.Specification.SnapshotApi.SnapshotNamespace,Nest", "Nest.Specification.SnapshotApi.SnapshotNamespace");
            feature.AddKnownType("Nest.Specification.SnapshotLifecycleManagementApi.SnapshotLifecycleManagementNamespace,Nest", "Nest.Specification.SnapshotLifecycleManagementApi.SnapshotLifecycleManagementNamespace");
            feature.AddKnownType("Nest.Specification.SqlApi.SqlNamespace,Nest", "Nest.Specification.SqlApi.SqlNamespace");
            feature.AddKnownType("Nest.Specification.TasksApi.TasksNamespace,Nest", "Nest.Specification.TasksApi.TasksNamespace");
            feature.AddKnownType("Nest.Specification.TransformApi.TransformNamespace,Nest", "Nest.Specification.TransformApi.TransformNamespace");
            feature.AddKnownType("Nest.Specification.WatcherApi.WatcherNamespace,Nest", "Nest.Specification.WatcherApi.WatcherNamespace");
            feature.AddKnownType("Nest.Specification.XPackApi.XPackNamespace,Nest", "Nest.Specification.XPackApi.XPackNamespace");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Nito.AsyncEx.Context", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Nito.AsyncEx.AsyncContext,Nito.AsyncEx.Context", "Nito.AsyncEx.AsyncContext");
            feature.AddKnownType("Nito.AsyncEx.AsyncContext+DebugView,Nito.AsyncEx.Context", "Nito.AsyncEx.DebugView");
            feature.AddKnownType("Nito.AsyncEx.AsyncContext+AsyncContextSynchronizationContext,Nito.AsyncEx.Context", "Nito.AsyncEx.AsyncContextSynchronizationContext");
            feature.AddKnownType("Nito.AsyncEx.AsyncContext+TaskQueue,Nito.AsyncEx.Context", "Nito.AsyncEx.TaskQueue");
            feature.AddKnownType("Nito.AsyncEx.AsyncContext+AsyncContextTaskScheduler,Nito.AsyncEx.Context", "Nito.AsyncEx.AsyncContextTaskScheduler");
            feature.AddKnownType("Nito.AsyncEx.AsyncContextThread,Nito.AsyncEx.Context", "Nito.AsyncEx.AsyncContextThread");
            feature.AddKnownType("Nito.AsyncEx.AsyncContextThread+DebugView,Nito.AsyncEx.Context", "Nito.AsyncEx.DebugView");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Nito.AsyncEx.Coordination", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Nito.AsyncEx.AsyncAutoResetEvent,Nito.AsyncEx.Coordination", "Nito.AsyncEx.AsyncAutoResetEvent");
            feature.AddKnownType("Nito.AsyncEx.AsyncAutoResetEvent+DebugView,Nito.AsyncEx.Coordination", "Nito.AsyncEx.DebugView");
            feature.AddKnownType("Nito.AsyncEx.AsyncCollection`1,Nito.AsyncEx.Coordination", "Nito.AsyncEx.AsyncCollection`1'1");
            feature.AddKnownType("Nito.AsyncEx.AsyncCollection`1+DebugView,Nito.AsyncEx.Coordination", "Nito.AsyncEx.DebugView'1");
            feature.AddKnownType("Nito.AsyncEx.AsyncConditionVariable,Nito.AsyncEx.Coordination", "Nito.AsyncEx.AsyncConditionVariable");
            feature.AddKnownType("Nito.AsyncEx.AsyncConditionVariable+DebugView,Nito.AsyncEx.Coordination", "Nito.AsyncEx.DebugView");
            feature.AddKnownType("Nito.AsyncEx.AsyncCountdownEvent,Nito.AsyncEx.Coordination", "Nito.AsyncEx.AsyncCountdownEvent");
            feature.AddKnownType("Nito.AsyncEx.AsyncCountdownEvent+DebugView,Nito.AsyncEx.Coordination", "Nito.AsyncEx.DebugView");
            feature.AddKnownType("Nito.AsyncEx.AsyncLazyFlags,Nito.AsyncEx.Coordination", "Nito.AsyncEx.AsyncLazyFlags");
            feature.AddKnownType("Nito.AsyncEx.AsyncLazy`1,Nito.AsyncEx.Coordination", "Nito.AsyncEx.AsyncLazy`1'1");
            feature.AddKnownType("Nito.AsyncEx.AsyncLazy`1+LazyState,Nito.AsyncEx.Coordination", "Nito.AsyncEx.LazyState'1");
            feature.AddKnownType("Nito.AsyncEx.AsyncLazy`1+DebugView,Nito.AsyncEx.Coordination", "Nito.AsyncEx.DebugView'1");
            feature.AddKnownType("Nito.AsyncEx.AsyncLock,Nito.AsyncEx.Coordination", "Nito.AsyncEx.AsyncLock");
            feature.AddKnownType("Nito.AsyncEx.AsyncLock+Key,Nito.AsyncEx.Coordination", "Nito.AsyncEx.Key");
            feature.AddKnownType("Nito.AsyncEx.AsyncLock+DebugView,Nito.AsyncEx.Coordination", "Nito.AsyncEx.DebugView");
            feature.AddKnownType("Nito.AsyncEx.AsyncManualResetEvent,Nito.AsyncEx.Coordination", "Nito.AsyncEx.AsyncManualResetEvent");
            feature.AddKnownType("Nito.AsyncEx.AsyncManualResetEvent+DebugView,Nito.AsyncEx.Coordination", "Nito.AsyncEx.DebugView");
            feature.AddKnownType("Nito.AsyncEx.AsyncMonitor,Nito.AsyncEx.Coordination", "Nito.AsyncEx.AsyncMonitor");
            feature.AddKnownType("Nito.AsyncEx.AsyncProducerConsumerQueue`1,Nito.AsyncEx.Coordination", "Nito.AsyncEx.AsyncProducerConsumerQueue`1'1");
            feature.AddKnownType("Nito.AsyncEx.AsyncProducerConsumerQueue`1+DebugView,Nito.AsyncEx.Coordination", "Nito.AsyncEx.DebugView'1");
            feature.AddKnownType("Nito.AsyncEx.AsyncReaderWriterLock,Nito.AsyncEx.Coordination", "Nito.AsyncEx.AsyncReaderWriterLock");
            feature.AddKnownType("Nito.AsyncEx.AsyncReaderWriterLock+State,Nito.AsyncEx.Coordination", "Nito.AsyncEx.State");
            feature.AddKnownType("Nito.AsyncEx.AsyncReaderWriterLock+ReaderKey,Nito.AsyncEx.Coordination", "Nito.AsyncEx.ReaderKey");
            feature.AddKnownType("Nito.AsyncEx.AsyncReaderWriterLock+WriterKey,Nito.AsyncEx.Coordination", "Nito.AsyncEx.WriterKey");
            feature.AddKnownType("Nito.AsyncEx.AsyncReaderWriterLock+DebugView,Nito.AsyncEx.Coordination", "Nito.AsyncEx.DebugView");
            feature.AddKnownType("Nito.AsyncEx.AsyncSemaphore,Nito.AsyncEx.Coordination", "Nito.AsyncEx.AsyncSemaphore");
            feature.AddKnownType("Nito.AsyncEx.AsyncSemaphore+DebugView,Nito.AsyncEx.Coordination", "Nito.AsyncEx.DebugView");
            feature.AddKnownType("Nito.AsyncEx.IAsyncWaitQueue`1,Nito.AsyncEx.Coordination", "Nito.AsyncEx.IAsyncWaitQueue`1'1");
            feature.AddKnownType("Nito.AsyncEx.DefaultAsyncWaitQueue`1,Nito.AsyncEx.Coordination", "Nito.AsyncEx.DefaultAsyncWaitQueue`1'1");
            feature.AddKnownType("Nito.AsyncEx.DefaultAsyncWaitQueue`1+DebugView,Nito.AsyncEx.Coordination", "Nito.AsyncEx.DebugView'1");
            feature.AddKnownType("Nito.AsyncEx.PauseTokenSource,Nito.AsyncEx.Coordination", "Nito.AsyncEx.PauseTokenSource");
            feature.AddKnownType("Nito.AsyncEx.PauseToken,Nito.AsyncEx.Coordination", "Nito.AsyncEx.PauseToken");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Nito.AsyncEx.Tasks", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Nito.AsyncEx.AwaitableDisposable`1,Nito.AsyncEx.Tasks", "Nito.AsyncEx.AwaitableDisposable`1'1");
            feature.AddKnownType("Nito.AsyncEx.CancellationTokenTaskSource`1,Nito.AsyncEx.Tasks", "Nito.AsyncEx.CancellationTokenTaskSource`1'1");
            feature.AddKnownType("Nito.AsyncEx.SynchronizationContextSwitcher,Nito.AsyncEx.Tasks", "Nito.AsyncEx.SynchronizationContextSwitcher");
            feature.AddKnownType("Nito.AsyncEx.Interop.EventArguments`2,Nito.AsyncEx.Tasks", "Nito.AsyncEx.Interop.EventArguments`2'2");
            feature.AddKnownType("System.Runtime.CompilerServices.IsReadOnlyAttribute", "IsReadOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Nito.Collections.Deque", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Nito.Collections.CollectionHelpers+NongenericCollectionWrapper`1,Nito.Collections.Deque", "Nito.Collections.NongenericCollectionWrapper`1'1");
            feature.AddKnownType("Nito.Collections.CollectionHelpers+CollectionWrapper`1,Nito.Collections.Deque", "Nito.Collections.CollectionWrapper`1'1");
            feature.AddKnownType("Nito.Collections.Deque`1,Nito.Collections.Deque", "Nito.Collections.Deque`1'1");
            feature.AddKnownType("Nito.Collections.Deque`1+DebugView,Nito.Collections.Deque", "Nito.Collections.DebugView'1");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Nito.Disposables", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Nito.Disposables.AnonymousAsyncDisposable,Nito.Disposables", "Nito.Disposables.AnonymousAsyncDisposable");
            feature.AddKnownType("Nito.Disposables.AnonymousDisposable,Nito.Disposables", "Nito.Disposables.AnonymousDisposable");
            feature.AddKnownType("Nito.Disposables.AsyncDisposable,Nito.Disposables", "Nito.Disposables.AsyncDisposable");
            feature.AddKnownType("Nito.Disposables.AsyncDisposeFlags,Nito.Disposables", "Nito.Disposables.AsyncDisposeFlags");
            feature.AddKnownType("Nito.Disposables.CollectionAsyncDisposable,Nito.Disposables", "Nito.Disposables.CollectionAsyncDisposable");
            feature.AddKnownType("Nito.Disposables.CollectionDisposable,Nito.Disposables", "Nito.Disposables.CollectionDisposable");
            feature.AddKnownType("Nito.Disposables.Disposable,Nito.Disposables", "Nito.Disposables.Disposable");
            feature.AddKnownType("Nito.Disposables.DisposableExtensions+AsyncDisposableWrapper,Nito.Disposables", "Nito.Disposables.AsyncDisposableWrapper");
            feature.AddKnownType("Nito.Disposables.NoopDisposable,Nito.Disposables", "Nito.Disposables.NoopDisposable");
            feature.AddKnownType("Nito.Disposables.SingleAsyncDisposable`1,Nito.Disposables", "Nito.Disposables.SingleAsyncDisposable`1'1");
            feature.AddKnownType("Nito.Disposables.SingleDisposable`1,Nito.Disposables", "Nito.Disposables.SingleDisposable`1'1");
            feature.AddKnownType("Nito.Disposables.SingleNonblockingAsyncDisposable`1,Nito.Disposables", "Nito.Disposables.SingleNonblockingAsyncDisposable`1'1");
            feature.AddKnownType("Nito.Disposables.SingleNonblockingDisposable`1,Nito.Disposables", "Nito.Disposables.SingleNonblockingDisposable`1'1");
            feature.AddKnownType("Nito.Disposables.Internals.BoundActionField`1,Nito.Disposables", "Nito.Disposables.Internals.BoundActionField`1'1");
            feature.AddKnownType("Nito.Disposables.Internals.BoundActionField`1+IBoundAction,Nito.Disposables", "Nito.Disposables.Internals.Nito.Disposables.Internals.BoundActionField`1'1.IBoundAction'1");
            feature.AddKnownType("Nito.Disposables.Internals.BoundActionField`1+BoundAction,Nito.Disposables", "Nito.Disposables.Internals.BoundAction'1");
            feature.AddKnownType("Nito.Disposables.Internals.BoundAsyncActionField`1,Nito.Disposables", "Nito.Disposables.Internals.BoundAsyncActionField`1'1");
            feature.AddKnownType("Nito.Disposables.Internals.BoundAsyncActionField`1+IBoundAction,Nito.Disposables", "Nito.Disposables.Internals.Nito.Disposables.Internals.BoundAsyncActionField`1'1.IBoundAction'1");
            feature.AddKnownType("Nito.Disposables.Internals.BoundAsyncActionField`1+BoundAction,Nito.Disposables", "Nito.Disposables.Internals.BoundAction'1");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,OpenIddict.Abstractions", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.DependencyInjection.OpenIddictBuilder,OpenIddict.Abstractions", "Microsoft.Extensions.DependencyInjection.OpenIddictBuilder");
            feature.AddKnownType("OpenIddict.Abstractions.IOpenIddictApplicationCache`1,OpenIddict.Abstractions", "OpenIddict.Abstractions.IOpenIddictApplicationCache`1'1");
            feature.AddKnownType("OpenIddict.Abstractions.IOpenIddictAuthorizationCache`1,OpenIddict.Abstractions", "OpenIddict.Abstractions.IOpenIddictAuthorizationCache`1'1");
            feature.AddKnownType("OpenIddict.Abstractions.IOpenIddictScopeCache`1,OpenIddict.Abstractions", "OpenIddict.Abstractions.IOpenIddictScopeCache`1'1");
            feature.AddKnownType("OpenIddict.Abstractions.IOpenIddictTokenCache`1,OpenIddict.Abstractions", "OpenIddict.Abstractions.IOpenIddictTokenCache`1'1");
            feature.AddKnownType("OpenIddict.Abstractions.OpenIddictApplicationDescriptor,OpenIddict.Abstractions", "OpenIddict.Abstractions.OpenIddictApplicationDescriptor");
            feature.AddKnownType("OpenIddict.Abstractions.OpenIddictAuthorizationDescriptor,OpenIddict.Abstractions", "OpenIddict.Abstractions.OpenIddictAuthorizationDescriptor");
            feature.AddKnownType("OpenIddict.Abstractions.OpenIddictScopeDescriptor,OpenIddict.Abstractions", "OpenIddict.Abstractions.OpenIddictScopeDescriptor");
            feature.AddKnownType("OpenIddict.Abstractions.OpenIddictTokenDescriptor,OpenIddict.Abstractions", "OpenIddict.Abstractions.OpenIddictTokenDescriptor");
            feature.AddKnownType("OpenIddict.Abstractions.IOpenIddictApplicationManager,OpenIddict.Abstractions", "OpenIddict.Abstractions.IOpenIddictApplicationManager");
            feature.AddKnownType("OpenIddict.Abstractions.IOpenIddictAuthorizationManager,OpenIddict.Abstractions", "OpenIddict.Abstractions.IOpenIddictAuthorizationManager");
            feature.AddKnownType("OpenIddict.Abstractions.IOpenIddictScopeManager,OpenIddict.Abstractions", "OpenIddict.Abstractions.IOpenIddictScopeManager");
            feature.AddKnownType("OpenIddict.Abstractions.IOpenIddictTokenManager,OpenIddict.Abstractions", "OpenIddict.Abstractions.IOpenIddictTokenManager");
            feature.AddKnownType("OpenIddict.Abstractions.OpenIddictExceptions+ConcurrencyException,OpenIddict.Abstractions", "OpenIddict.Abstractions.OpenIddict.Abstractions.OpenIddictExceptions.ConcurrencyException");
            feature.AddKnownType("OpenIddict.Abstractions.OpenIddictExceptions+ProtocolException,OpenIddict.Abstractions", "OpenIddict.Abstractions.OpenIddict.Abstractions.OpenIddictExceptions.ProtocolException");
            feature.AddKnownType("OpenIddict.Abstractions.OpenIddictExceptions+ValidationException,OpenIddict.Abstractions", "OpenIddict.Abstractions.OpenIddict.Abstractions.OpenIddictExceptions.ValidationException");
            feature.AddKnownType("OpenIddict.Abstractions.OpenIddictConfiguration,OpenIddict.Abstractions", "OpenIddict.Abstractions.OpenIddictConfiguration");
            feature.AddKnownType("OpenIddict.Abstractions.OpenIddictConverter,OpenIddict.Abstractions", "OpenIddict.Abstractions.OpenIddictConverter");
            feature.AddKnownType("OpenIddict.Abstractions.OpenIddictMessage,OpenIddict.Abstractions", "OpenIddict.Abstractions.OpenIddictMessage");
            feature.AddKnownType("OpenIddict.Abstractions.OpenIddictParameter,OpenIddict.Abstractions", "OpenIddict.Abstractions.OpenIddictParameter");
            feature.AddKnownType("OpenIddict.Abstractions.OpenIddictRequest,OpenIddict.Abstractions", "OpenIddict.Abstractions.OpenIddictRequest");
            feature.AddKnownType("OpenIddict.Abstractions.OpenIddictResponse,OpenIddict.Abstractions", "OpenIddict.Abstractions.OpenIddictResponse");
            feature.AddKnownType("OpenIddict.Abstractions.IOpenIddictApplicationStoreResolver,OpenIddict.Abstractions", "OpenIddict.Abstractions.IOpenIddictApplicationStoreResolver");
            feature.AddKnownType("OpenIddict.Abstractions.IOpenIddictAuthorizationStoreResolver,OpenIddict.Abstractions", "OpenIddict.Abstractions.IOpenIddictAuthorizationStoreResolver");
            feature.AddKnownType("OpenIddict.Abstractions.IOpenIddictScopeStoreResolver,OpenIddict.Abstractions", "OpenIddict.Abstractions.IOpenIddictScopeStoreResolver");
            feature.AddKnownType("OpenIddict.Abstractions.IOpenIddictTokenStoreResolver,OpenIddict.Abstractions", "OpenIddict.Abstractions.IOpenIddictTokenStoreResolver");
            feature.AddKnownType("OpenIddict.Abstractions.IOpenIddictApplicationStore`1,OpenIddict.Abstractions", "OpenIddict.Abstractions.IOpenIddictApplicationStore`1'1");
            feature.AddKnownType("OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1,OpenIddict.Abstractions", "OpenIddict.Abstractions.IOpenIddictAuthorizationStore`1'1");
            feature.AddKnownType("OpenIddict.Abstractions.IOpenIddictScopeStore`1,OpenIddict.Abstractions", "OpenIddict.Abstractions.IOpenIddictScopeStore`1'1");
            feature.AddKnownType("OpenIddict.Abstractions.IOpenIddictTokenStore`1,OpenIddict.Abstractions", "OpenIddict.Abstractions.IOpenIddictTokenStore`1'1");
            feature.AddKnownType("OpenIddict.Abstractions.OpenIddictResources,OpenIddict.Abstractions", "OpenIddict.Abstractions.OpenIddictResources");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Orleans.Providers.MongoDB", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Orleans.Providers.MongoDB.Configuration.MongoDBGatewayListProviderOptions,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.Configuration.MongoDBGatewayListProviderOptions");
            feature.AddKnownType("Orleans.Providers.MongoDB.Configuration.MongoDBGrainStorageOptions,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.Configuration.MongoDBGrainStorageOptions");
            feature.AddKnownType("Orleans.Providers.MongoDB.Configuration.MongoDBGrainStorageOptionsValidator,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.Configuration.MongoDBGrainStorageOptionsValidator");
            feature.AddKnownType("Orleans.Providers.MongoDB.Configuration.MongoDBMembershipStrategy,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.Configuration.MongoDBMembershipStrategy");
            feature.AddKnownType("Orleans.Providers.MongoDB.Configuration.MongoDBMembershipTableOptions,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.Configuration.MongoDBMembershipTableOptions");
            feature.AddKnownType("Orleans.Providers.MongoDB.Configuration.MongoDBOptions,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.Configuration.MongoDBOptions");
            feature.AddKnownType("Orleans.Providers.MongoDB.Configuration.MongoDBOptionsValidator`1,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.Configuration.MongoDBOptionsValidator`1'1");
            feature.AddKnownType("Orleans.Providers.MongoDB.Configuration.MongoDBRemindersOptions,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.Configuration.MongoDBRemindersOptions");
            feature.AddKnownType("Orleans.Providers.MongoDB.Membership.MongoGatewayListProvider,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.Membership.MongoGatewayListProvider");
            feature.AddKnownType("Orleans.Providers.MongoDB.Membership.MongoMembershipTable,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.Membership.MongoMembershipTable");
            feature.AddKnownType("Orleans.Providers.MongoDB.Membership.Store.IMongoMembershipCollection,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.Membership.Store.IMongoMembershipCollection");
            feature.AddKnownType("Orleans.Providers.MongoDB.Membership.Store.MembershipBase,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.Membership.Store.MembershipBase");
            feature.AddKnownType("Orleans.Providers.MongoDB.Membership.Store.MongoMembershipDocument,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.Membership.Store.MongoMembershipDocument");
            feature.AddKnownType("Orleans.Providers.MongoDB.Membership.Store.MongoSuspectTime,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.Membership.Store.MongoSuspectTime");
            feature.AddKnownType("Orleans.Providers.MongoDB.Membership.Store.Multiple.MultipleMembershipCollection,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.Membership.Store.Multiple.MultipleMembershipCollection");
            feature.AddKnownType("Orleans.Providers.MongoDB.Membership.Store.Multiple.TableVersionCollection,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.Membership.Store.Multiple.TableVersionCollection");
            feature.AddKnownType("Orleans.Providers.MongoDB.Membership.Store.Multiple.TableVersionDocument,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.Membership.Store.Multiple.TableVersionDocument");
            feature.AddKnownType("Orleans.Providers.MongoDB.Membership.Store.MultipleDeprecated.MultipleDeprecatedMembershipCollection,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.Membership.Store.MultipleDeprecated.MultipleDeprecatedMembershipCollection");
            feature.AddKnownType("Orleans.Providers.MongoDB.Membership.Store.Single.DeploymentDocument,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.Membership.Store.Single.DeploymentDocument");
            feature.AddKnownType("Orleans.Providers.MongoDB.Membership.Store.Single.DeploymentMembership,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.Membership.Store.Single.DeploymentMembership");
            feature.AddKnownType("Orleans.Providers.MongoDB.Membership.Store.Single.SingleMembershipCollection,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.Membership.Store.Single.SingleMembershipCollection");
            feature.AddKnownType("Orleans.Providers.MongoDB.Reminders.MongoReminderTable,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.Reminders.MongoReminderTable");
            feature.AddKnownType("Orleans.Providers.MongoDB.Reminders.Store.MongoReminderCollection,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.Reminders.Store.MongoReminderCollection");
            feature.AddKnownType("Orleans.Providers.MongoDB.Reminders.Store.MongoReminderDocument,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.Reminders.Store.MongoReminderDocument");
            feature.AddKnownType("Orleans.Providers.MongoDB.StorageProviders.MongoGrainStorage,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.StorageProviders.MongoGrainStorage");
            feature.AddKnownType("Orleans.Providers.MongoDB.StorageProviders.MongoGrainStorageCollection,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.StorageProviders.MongoGrainStorageCollection");
            feature.AddKnownType("Orleans.Providers.MongoDB.StorageProviders.IGrainStateSerializer,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.StorageProviders.IGrainStateSerializer");
            feature.AddKnownType("Orleans.Providers.MongoDB.StorageProviders.Serializers.BinaryGrainStateSerializer,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.StorageProviders.Serializers.BinaryGrainStateSerializer");
            feature.AddKnownType("Orleans.Providers.MongoDB.StorageProviders.Serializers.JsonGrainStateSerializer,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.StorageProviders.Serializers.JsonGrainStateSerializer");
            feature.AddKnownType("Orleans.Providers.MongoDB.Utils.CollectionBase`1,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.Utils.CollectionBase`1'1");
            feature.AddKnownType("Orleans.Providers.MongoDB.Utils.DefaultMongoClientFactory,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.Utils.DefaultMongoClientFactory");
            feature.AddKnownType("Orleans.Providers.MongoDB.Utils.IMongoClientFactory,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.Utils.IMongoClientFactory");
            feature.AddKnownType("Orleans.Providers.MongoDB.Utils.MongoProviderErrorCode,Orleans.Providers.MongoDB", "Orleans.Providers.MongoDB.Utils.MongoProviderErrorCode");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Pipelines.Sockets.Unofficial", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.ConnectionAbortedException,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.ConnectionAbortedException");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.ConnectionResetException,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.ConnectionResetException");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.DedicatedThreadPoolPipeScheduler,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.DedicatedThreadPoolPipeScheduler");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.DedicatedThreadPoolPipeScheduler+WorkItem,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.WorkItem");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Delegates+DelegateEnumerable`1,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Pipelines.Sockets.Unofficial.Delegates.DelegateEnumerable`1'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Delegates+DelegateEnumerator`1,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Pipelines.Sockets.Unofficial.Delegates.DelegateEnumerator`1'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Counter,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Counter");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.IMeasuredDuplexPipe,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.IMeasuredDuplexPipe");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.MemoryMappedPipeReader,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.MemoryMappedPipeReader");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.MemoryMappedPipeReader+MappedPage,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.MappedPage");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.SocketAwaitableEventArgs,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.SocketAwaitableEventArgs");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.SocketConnection,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.SocketConnection");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.SocketConnection+Counters,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Pipelines.Sockets.Unofficial.SocketConnection.Counters");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.SocketConnection+WrappedReader,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.WrappedReader");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.SocketConnection+WrappedWriter,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.WrappedWriter");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.PipeShutdownKind,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.PipeShutdownKind");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.SocketConnectionOptions,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.SocketConnectionOptions");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.SocketServer,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.SocketServer");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.SocketServer+ClientConnection,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.ClientConnection");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.StreamConnection+AsyncPipeStream,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Pipelines.Sockets.Unofficial.StreamConnection.AsyncPipeStream");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.StreamConnection+AsyncPipeStream+FlushToken,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.FlushToken");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.StreamConnection+AsyncPipeStream+AsyncWriteResult,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.AsyncWriteResult");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.StreamConnection+AsyncPipeStream+PendingAsyncMode,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.PendingAsyncMode");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.StreamConnection+AsyncPipeStream+AsyncReadResult,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.AsyncReadResult");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.StreamConnection+AsyncStreamPipe,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.AsyncStreamPipe");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.UnmanagedMemoryManager`1,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.UnmanagedMemoryManager`1'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.Allocator`1,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.Allocator`1'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.ArrayPoolAllocator`1,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.ArrayPoolAllocator`1'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.ArrayPoolAllocator`1+OwnedArray,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.OwnedArray'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.PinnedArrayPoolAllocator`1,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.PinnedArrayPoolAllocator`1'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.PinnedArrayPoolAllocator`1+PinnedArray,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.PinnedArray'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.UnmanagedAllocator`1,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.UnmanagedAllocator`1'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.UnmanagedAllocator`1+OwnedPointer,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.OwnedPointer'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.ArenaOptions,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.ArenaOptions");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.AllocatorFactory,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.AllocatorFactory");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.OwnedArena`1,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.OwnedArena`1'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.SimpleOwnedArena`1,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.SimpleOwnedArena`1'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.MappedBlittableOwnedArena`2,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.MappedBlittableOwnedArena`2'2");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.NonPaddedBlittableOwnedArena`2,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.NonPaddedBlittableOwnedArena`2'2");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.PaddedBlittableOwnedArena`1,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.PaddedBlittableOwnedArena`1'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.Arena,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.Arena");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.Arena+MappedSegment`2,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.MappedSegment`2'2");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.Arena+MappedSegment`2+PinnedConvertingMemoryManager,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.PinnedConvertingMemoryManager'2");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.Arena+MappedSegment`2+ConvertingMemoryManager,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.ConvertingMemoryManager'2");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.Arena`1,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.Arena`1'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.ArenaFlags,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.ArenaFlags");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.IArena,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.IArena");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.IArena`1,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.IArena`1'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.Block`1,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.Block`1'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.Reference`1,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.Reference`1'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.Sequence,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.Sequence");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.Sequence`1,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.Sequence`1'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.Sequence`1+PositionKind,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.PositionKind'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.Sequence`1+SpanEnumerable,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.Pipelines.Sockets.Unofficial.Arenas.Sequence`1'1.SpanEnumerable'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.Sequence`1+MemoryEnumerable,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.Pipelines.Sockets.Unofficial.Arenas.Sequence`1'1.MemoryEnumerable'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.Sequence`1+EmptyEnumerator,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.EmptyEnumerator'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.Sequence`1+PointerBasedEnumerator,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.PointerBasedEnumerator'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.Sequence`1+Enumerator,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.Pipelines.Sockets.Unofficial.Arenas.Sequence`1'1.Enumerator'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.Sequence`1+SpanEnumerator,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.Pipelines.Sockets.Unofficial.Arenas.Sequence`1'1.SpanEnumerator'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.Sequence`1+MemoryEnumerator,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.Pipelines.Sockets.Unofficial.Arenas.Sequence`1'1.MemoryEnumerator'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.SequenceExtensions+SequenceBuilder`1,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.SequenceBuilder`1'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.SequenceList`1,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.SequenceList`1'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.ISegment,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.ISegment");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.IPinnedMemoryOwner`1,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.IPinnedMemoryOwner`1'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Arenas.SequenceSegment`1,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Arenas.SequenceSegment`1'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Buffers.Owned`1,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Buffers.Owned`1'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Buffers.BufferWriter`1,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Buffers.BufferWriter`1'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Buffers.BufferWriter`1+RefCountedSegment,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Buffers.RefCountedSegment'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Buffers.BufferWriter`1+MemoryPoolBufferWriter,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Buffers.MemoryPoolBufferWriter'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Buffers.BufferWriter`1+MemoryPoolBufferWriter+MemoryPoolRefCountedSegment,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Buffers.MemoryPoolRefCountedSegment'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Buffers.BufferWriter`1+ArrayPoolBufferWriter,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Buffers.ArrayPoolBufferWriter'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Buffers.BufferWriter`1+ArrayPoolBufferWriter+ArrayPoolRefCountedSegment,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Buffers.ArrayPoolRefCountedSegment'1");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Buffers.BufferWriterTextWriter,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Buffers.BufferWriterTextWriter");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Threading.MutexSlim,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Threading.MutexSlim");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Threading.MutexSlim+AsyncDirectPendingLockSlab,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Threading.AsyncDirectPendingLockSlab");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Threading.MutexSlim+AsyncDirectPendingLockSlab+State,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Threading.State");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Threading.MutexSlim+AsyncTaskPendingLockToken,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Threading.AsyncTaskPendingLockToken");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Threading.MutexSlim+WaitOptions,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Threading.Pipelines.Sockets.Unofficial.Threading.MutexSlim.WaitOptions");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Threading.MutexSlim+LockToken,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Threading.Pipelines.Sockets.Unofficial.Threading.MutexSlim.LockToken");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Threading.MutexSlim+LockToken+TimeoutReason,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Threading.TimeoutReason");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Threading.MutexSlim+PendingLockItem,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Threading.PendingLockItem");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Threading.MutexSlim+IPendingLockToken,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Threading.IPendingLockToken");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Threading.MutexSlim+IAsyncPendingLockToken,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Threading.IAsyncPendingLockToken");
            feature.AddKnownType("Pipelines.Sockets.Unofficial.Threading.MutexSlim+SyncPendingLockToken,Pipelines.Sockets.Unofficial", "Pipelines.Sockets.Unofficial.Threading.SyncPendingLockToken");
            feature.AddKnownType("System.Runtime.CompilerServices.IsUnmanagedAttribute", "IsUnmanagedAttribute");
            feature.AddKnownType("Secp256k1Net.Flags,Secp256k1.Net", "Secp256k1Net.Flags");
            feature.AddKnownType("Secp256k1Net.Secp256k1,Secp256k1.Net", "Secp256k1Net.Secp256k1");
            feature.AddKnownType("Secp256k1Net.SymbolNameAttribute,Secp256k1.Net", "Secp256k1Net.SymbolNameAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,SharpCompress", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("SharpCompress.Lazy`1,SharpCompress", "SharpCompress.Lazy`1'1");
            feature.AddKnownType("SharpCompress.LazyReadOnlyCollection`1,SharpCompress", "SharpCompress.LazyReadOnlyCollection`1'1");
            feature.AddKnownType("SharpCompress.LazyReadOnlyCollection`1+LazyLoader,SharpCompress", "SharpCompress.LazyLoader'1");
            feature.AddKnownType("SharpCompress.ReadOnlyCollection`1,SharpCompress", "SharpCompress.ReadOnlyCollection`1'1");
            feature.AddKnownType("SharpCompress.Archives.AbstractArchive`2,SharpCompress", "SharpCompress.Archives.AbstractArchive`2'2");
            feature.AddKnownType("SharpCompress.Archives.AbstractWritableArchive`2,SharpCompress", "SharpCompress.Archives.AbstractWritableArchive`2'2");
            feature.AddKnownType("SharpCompress.Archives.AbstractWritableArchive`2+RebuildPauseDisposable,SharpCompress", "SharpCompress.Archives.RebuildPauseDisposable'2");
            feature.AddKnownType("SharpCompress.Archives.IArchive,SharpCompress", "SharpCompress.Archives.IArchive");
            feature.AddKnownType("SharpCompress.Archives.IArchiveEntry,SharpCompress", "SharpCompress.Archives.IArchiveEntry");
            feature.AddKnownType("SharpCompress.Archives.IArchiveExtractionListener,SharpCompress", "SharpCompress.Archives.IArchiveExtractionListener");
            feature.AddKnownType("SharpCompress.Archives.IWritableArchive,SharpCompress", "SharpCompress.Archives.IWritableArchive");
            feature.AddKnownType("SharpCompress.Archives.IWritableArchiveEntry,SharpCompress", "SharpCompress.Archives.IWritableArchiveEntry");
            feature.AddKnownType("SharpCompress.Archives.GZip.GZipArchive,SharpCompress", "SharpCompress.Archives.GZip.GZipArchive");
            feature.AddKnownType("SharpCompress.Archives.GZip.GZipArchiveEntry,SharpCompress", "SharpCompress.Archives.GZip.GZipArchiveEntry");
            feature.AddKnownType("SharpCompress.Archives.GZip.GZipWritableArchiveEntry,SharpCompress", "SharpCompress.Archives.GZip.GZipWritableArchiveEntry");
            feature.AddKnownType("SharpCompress.Archives.Rar.FileInfoRarArchiveVolume,SharpCompress", "SharpCompress.Archives.Rar.FileInfoRarArchiveVolume");
            feature.AddKnownType("SharpCompress.Archives.Rar.FileInfoRarFilePart,SharpCompress", "SharpCompress.Archives.Rar.FileInfoRarFilePart");
            feature.AddKnownType("SharpCompress.Archives.Rar.RarArchive,SharpCompress", "SharpCompress.Archives.Rar.RarArchive");
            feature.AddKnownType("SharpCompress.Archives.Rar.RarArchiveEntry,SharpCompress", "SharpCompress.Archives.Rar.RarArchiveEntry");
            feature.AddKnownType("SharpCompress.Archives.Rar.SeekableFilePart,SharpCompress", "SharpCompress.Archives.Rar.SeekableFilePart");
            feature.AddKnownType("SharpCompress.Archives.Rar.StreamRarArchiveVolume,SharpCompress", "SharpCompress.Archives.Rar.StreamRarArchiveVolume");
            feature.AddKnownType("SharpCompress.Archives.SevenZip.SevenZipArchive,SharpCompress", "SharpCompress.Archives.SevenZip.SevenZipArchive");
            feature.AddKnownType("SharpCompress.Archives.SevenZip.SevenZipArchive+SevenZipReader,SharpCompress", "SharpCompress.Archives.SevenZip.SevenZipReader");
            feature.AddKnownType("SharpCompress.Archives.SevenZip.SevenZipArchive+PasswordProvider,SharpCompress", "SharpCompress.Archives.SevenZip.PasswordProvider");
            feature.AddKnownType("SharpCompress.Archives.SevenZip.SevenZipArchiveEntry,SharpCompress", "SharpCompress.Archives.SevenZip.SevenZipArchiveEntry");
            feature.AddKnownType("SharpCompress.Archives.Tar.TarArchive,SharpCompress", "SharpCompress.Archives.Tar.TarArchive");
            feature.AddKnownType("SharpCompress.Archives.Tar.TarArchiveEntry,SharpCompress", "SharpCompress.Archives.Tar.TarArchiveEntry");
            feature.AddKnownType("SharpCompress.Archives.Tar.TarWritableArchiveEntry,SharpCompress", "SharpCompress.Archives.Tar.TarWritableArchiveEntry");
            feature.AddKnownType("SharpCompress.Archives.Zip.ZipArchive,SharpCompress", "SharpCompress.Archives.Zip.ZipArchive");
            feature.AddKnownType("SharpCompress.Archives.Zip.ZipArchiveEntry,SharpCompress", "SharpCompress.Archives.Zip.ZipArchiveEntry");
            feature.AddKnownType("SharpCompress.Archives.Zip.ZipWritableArchiveEntry,SharpCompress", "SharpCompress.Archives.Zip.ZipWritableArchiveEntry");
            feature.AddKnownType("SharpCompress.Common.ArchiveEncoding,SharpCompress", "SharpCompress.Common.ArchiveEncoding");
            feature.AddKnownType("SharpCompress.Common.ArchiveException,SharpCompress", "SharpCompress.Common.ArchiveException");
            feature.AddKnownType("SharpCompress.Common.ArchiveExtractionEventArgs`1,SharpCompress", "SharpCompress.Common.ArchiveExtractionEventArgs`1'1");
            feature.AddKnownType("SharpCompress.Common.ArchiveType,SharpCompress", "SharpCompress.Common.ArchiveType");
            feature.AddKnownType("SharpCompress.Common.CompressedBytesReadEventArgs,SharpCompress", "SharpCompress.Common.CompressedBytesReadEventArgs");
            feature.AddKnownType("SharpCompress.Common.CompressionType,SharpCompress", "SharpCompress.Common.CompressionType");
            feature.AddKnownType("SharpCompress.Common.CryptographicException,SharpCompress", "SharpCompress.Common.CryptographicException");
            feature.AddKnownType("SharpCompress.Common.Entry,SharpCompress", "SharpCompress.Common.Entry");
            feature.AddKnownType("SharpCompress.Common.EntryStream,SharpCompress", "SharpCompress.Common.EntryStream");
            feature.AddKnownType("SharpCompress.Common.ExtractionException,SharpCompress", "SharpCompress.Common.ExtractionException");
            feature.AddKnownType("SharpCompress.Common.ExtractionOptions,SharpCompress", "SharpCompress.Common.ExtractionOptions");
            feature.AddKnownType("SharpCompress.Common.FilePart,SharpCompress", "SharpCompress.Common.FilePart");
            feature.AddKnownType("SharpCompress.Common.FilePartExtractionBeginEventArgs,SharpCompress", "SharpCompress.Common.FilePartExtractionBeginEventArgs");
            feature.AddKnownType("SharpCompress.Common.IEntry,SharpCompress", "SharpCompress.Common.IEntry");
            feature.AddKnownType("SharpCompress.Common.IExtractionListener,SharpCompress", "SharpCompress.Common.IExtractionListener");
            feature.AddKnownType("SharpCompress.Common.IncompleteArchiveException,SharpCompress", "SharpCompress.Common.IncompleteArchiveException");
            feature.AddKnownType("SharpCompress.Common.InvalidFormatException,SharpCompress", "SharpCompress.Common.InvalidFormatException");
            feature.AddKnownType("SharpCompress.Common.IVolume,SharpCompress", "SharpCompress.Common.IVolume");
            feature.AddKnownType("SharpCompress.Common.MultipartStreamRequiredException,SharpCompress", "SharpCompress.Common.MultipartStreamRequiredException");
            feature.AddKnownType("SharpCompress.Common.MultiVolumeExtractionException,SharpCompress", "SharpCompress.Common.MultiVolumeExtractionException");
            feature.AddKnownType("SharpCompress.Common.OptionsBase,SharpCompress", "SharpCompress.Common.OptionsBase");
            feature.AddKnownType("SharpCompress.Common.PasswordProtectedException,SharpCompress", "SharpCompress.Common.PasswordProtectedException");
            feature.AddKnownType("SharpCompress.Common.ReaderExtractionEventArgs`1,SharpCompress", "SharpCompress.Common.ReaderExtractionEventArgs`1'1");
            feature.AddKnownType("SharpCompress.Common.Volume,SharpCompress", "SharpCompress.Common.Volume");
            feature.AddKnownType("SharpCompress.Common.GZip.GZipEntry,SharpCompress", "SharpCompress.Common.GZip.GZipEntry");
            feature.AddKnownType("SharpCompress.Common.GZip.GZipFilePart,SharpCompress", "SharpCompress.Common.GZip.GZipFilePart");
            feature.AddKnownType("SharpCompress.Common.GZip.GZipVolume,SharpCompress", "SharpCompress.Common.GZip.GZipVolume");
            feature.AddKnownType("SharpCompress.Common.Rar.RarCrcBinaryReader,SharpCompress", "SharpCompress.Common.Rar.RarCrcBinaryReader");
            feature.AddKnownType("SharpCompress.Common.Rar.RarCryptoBinaryReader,SharpCompress", "SharpCompress.Common.Rar.RarCryptoBinaryReader");
            feature.AddKnownType("SharpCompress.Common.Rar.RarCryptoWrapper,SharpCompress", "SharpCompress.Common.Rar.RarCryptoWrapper");
            feature.AddKnownType("SharpCompress.Common.Rar.RarEntry,SharpCompress", "SharpCompress.Common.Rar.RarEntry");
            feature.AddKnownType("SharpCompress.Common.Rar.RarFilePart,SharpCompress", "SharpCompress.Common.Rar.RarFilePart");
            feature.AddKnownType("SharpCompress.Common.Rar.RarRijndael,SharpCompress", "SharpCompress.Common.Rar.RarRijndael");
            feature.AddKnownType("SharpCompress.Common.Rar.RarVolume,SharpCompress", "SharpCompress.Common.Rar.RarVolume");
            feature.AddKnownType("SharpCompress.Common.Rar.Headers.ArchiveCryptHeader,SharpCompress", "SharpCompress.Common.Rar.Headers.ArchiveCryptHeader");
            feature.AddKnownType("SharpCompress.Common.Rar.Headers.ArchiveHeader,SharpCompress", "SharpCompress.Common.Rar.Headers.ArchiveHeader");
            feature.AddKnownType("SharpCompress.Common.Rar.Headers.AvHeader,SharpCompress", "SharpCompress.Common.Rar.Headers.AvHeader");
            feature.AddKnownType("SharpCompress.Common.Rar.Headers.CommentHeader,SharpCompress", "SharpCompress.Common.Rar.Headers.CommentHeader");
            feature.AddKnownType("SharpCompress.Common.Rar.Headers.EndArchiveHeader,SharpCompress", "SharpCompress.Common.Rar.Headers.EndArchiveHeader");
            feature.AddKnownType("SharpCompress.Common.Rar.Headers.FileHeader,SharpCompress", "SharpCompress.Common.Rar.Headers.FileHeader");
            feature.AddKnownType("SharpCompress.Common.Rar.Headers.HeaderType,SharpCompress", "SharpCompress.Common.Rar.Headers.HeaderType");
            feature.AddKnownType("SharpCompress.Common.Rar.Headers.IRarHeader,SharpCompress", "SharpCompress.Common.Rar.Headers.IRarHeader");
            feature.AddKnownType("SharpCompress.Common.Rar.Headers.MarkHeader,SharpCompress", "SharpCompress.Common.Rar.Headers.MarkHeader");
            feature.AddKnownType("SharpCompress.Common.Rar.Headers.NewSubHeaderType,SharpCompress", "SharpCompress.Common.Rar.Headers.NewSubHeaderType");
            feature.AddKnownType("SharpCompress.Common.Rar.Headers.ProtectHeader,SharpCompress", "SharpCompress.Common.Rar.Headers.ProtectHeader");
            feature.AddKnownType("SharpCompress.Common.Rar.Headers.RarHeader,SharpCompress", "SharpCompress.Common.Rar.Headers.RarHeader");
            feature.AddKnownType("SharpCompress.Common.Rar.Headers.RarHeaderFactory,SharpCompress", "SharpCompress.Common.Rar.Headers.RarHeaderFactory");
            feature.AddKnownType("SharpCompress.Common.Rar.Headers.SignHeader,SharpCompress", "SharpCompress.Common.Rar.Headers.SignHeader");
            feature.AddKnownType("SharpCompress.Common.SevenZip.ArchiveDatabase,SharpCompress", "SharpCompress.Common.SevenZip.ArchiveDatabase");
            feature.AddKnownType("SharpCompress.Common.SevenZip.ArchiveReader,SharpCompress", "SharpCompress.Common.SevenZip.ArchiveReader");
            feature.AddKnownType("SharpCompress.Common.SevenZip.ArchiveReader+CExtractFolderInfo,SharpCompress", "SharpCompress.Common.SevenZip.CExtractFolderInfo");
            feature.AddKnownType("SharpCompress.Common.SevenZip.ArchiveReader+FolderUnpackStream,SharpCompress", "SharpCompress.Common.SevenZip.FolderUnpackStream");
            feature.AddKnownType("SharpCompress.Common.SevenZip.CBindPair,SharpCompress", "SharpCompress.Common.SevenZip.CBindPair");
            feature.AddKnownType("SharpCompress.Common.SevenZip.CCoderInfo,SharpCompress", "SharpCompress.Common.SevenZip.CCoderInfo");
            feature.AddKnownType("SharpCompress.Common.SevenZip.CFileItem,SharpCompress", "SharpCompress.Common.SevenZip.CFileItem");
            feature.AddKnownType("SharpCompress.Common.SevenZip.CFolder,SharpCompress", "SharpCompress.Common.SevenZip.CFolder");
            feature.AddKnownType("SharpCompress.Common.SevenZip.CMethodId,SharpCompress", "SharpCompress.Common.SevenZip.CMethodId");
            feature.AddKnownType("SharpCompress.Common.SevenZip.CStreamSwitch,SharpCompress", "SharpCompress.Common.SevenZip.CStreamSwitch");
            feature.AddKnownType("SharpCompress.Common.SevenZip.DataReader,SharpCompress", "SharpCompress.Common.SevenZip.DataReader");
            feature.AddKnownType("SharpCompress.Common.SevenZip.SevenZipEntry,SharpCompress", "SharpCompress.Common.SevenZip.SevenZipEntry");
            feature.AddKnownType("SharpCompress.Common.SevenZip.SevenZipFilePart,SharpCompress", "SharpCompress.Common.SevenZip.SevenZipFilePart");
            feature.AddKnownType("SharpCompress.Common.SevenZip.SevenZipVolume,SharpCompress", "SharpCompress.Common.SevenZip.SevenZipVolume");
            feature.AddKnownType("SharpCompress.Common.Tar.TarEntry,SharpCompress", "SharpCompress.Common.Tar.TarEntry");
            feature.AddKnownType("SharpCompress.Common.Tar.TarFilePart,SharpCompress", "SharpCompress.Common.Tar.TarFilePart");
            feature.AddKnownType("SharpCompress.Common.Tar.TarReadOnlySubStream,SharpCompress", "SharpCompress.Common.Tar.TarReadOnlySubStream");
            feature.AddKnownType("SharpCompress.Common.Tar.TarVolume,SharpCompress", "SharpCompress.Common.Tar.TarVolume");
            feature.AddKnownType("SharpCompress.Common.Tar.Headers.EntryType,SharpCompress", "SharpCompress.Common.Tar.Headers.EntryType");
            feature.AddKnownType("SharpCompress.Common.Tar.Headers.TarHeader,SharpCompress", "SharpCompress.Common.Tar.Headers.TarHeader");
            feature.AddKnownType("SharpCompress.Common.Zip.CryptoMode,SharpCompress", "SharpCompress.Common.Zip.CryptoMode");
            feature.AddKnownType("SharpCompress.Common.Zip.PkwareTraditionalCryptoStream,SharpCompress", "SharpCompress.Common.Zip.PkwareTraditionalCryptoStream");
            feature.AddKnownType("SharpCompress.Common.Zip.PkwareTraditionalEncryptionData,SharpCompress", "SharpCompress.Common.Zip.PkwareTraditionalEncryptionData");
            feature.AddKnownType("SharpCompress.Common.Zip.SeekableZipFilePart,SharpCompress", "SharpCompress.Common.Zip.SeekableZipFilePart");
            feature.AddKnownType("SharpCompress.Common.Zip.SeekableZipHeaderFactory,SharpCompress", "SharpCompress.Common.Zip.SeekableZipHeaderFactory");
            feature.AddKnownType("SharpCompress.Common.Zip.StreamingZipFilePart,SharpCompress", "SharpCompress.Common.Zip.StreamingZipFilePart");
            feature.AddKnownType("SharpCompress.Common.Zip.StreamingZipHeaderFactory,SharpCompress", "SharpCompress.Common.Zip.StreamingZipHeaderFactory");
            feature.AddKnownType("SharpCompress.Common.Zip.WinzipAesCryptoStream,SharpCompress", "SharpCompress.Common.Zip.WinzipAesCryptoStream");
            feature.AddKnownType("SharpCompress.Common.Zip.WinzipAesEncryptionData,SharpCompress", "SharpCompress.Common.Zip.WinzipAesEncryptionData");
            feature.AddKnownType("SharpCompress.Common.Zip.WinzipAesKeySize,SharpCompress", "SharpCompress.Common.Zip.WinzipAesKeySize");
            feature.AddKnownType("SharpCompress.Common.Zip.ZipCompressionMethod,SharpCompress", "SharpCompress.Common.Zip.ZipCompressionMethod");
            feature.AddKnownType("SharpCompress.Common.Zip.ZipEntry,SharpCompress", "SharpCompress.Common.Zip.ZipEntry");
            feature.AddKnownType("SharpCompress.Common.Zip.ZipFilePart,SharpCompress", "SharpCompress.Common.Zip.ZipFilePart");
            feature.AddKnownType("SharpCompress.Common.Zip.ZipHeaderFactory,SharpCompress", "SharpCompress.Common.Zip.ZipHeaderFactory");
            feature.AddKnownType("SharpCompress.Common.Zip.ZipVolume,SharpCompress", "SharpCompress.Common.Zip.ZipVolume");
            feature.AddKnownType("SharpCompress.Common.Zip.Headers.DirectoryEndHeader,SharpCompress", "SharpCompress.Common.Zip.Headers.DirectoryEndHeader");
            feature.AddKnownType("SharpCompress.Common.Zip.Headers.DirectoryEntryHeader,SharpCompress", "SharpCompress.Common.Zip.Headers.DirectoryEntryHeader");
            feature.AddKnownType("SharpCompress.Common.Zip.Headers.HeaderFlags,SharpCompress", "SharpCompress.Common.Zip.Headers.HeaderFlags");
            feature.AddKnownType("SharpCompress.Common.Zip.Headers.IgnoreHeader,SharpCompress", "SharpCompress.Common.Zip.Headers.IgnoreHeader");
            feature.AddKnownType("SharpCompress.Common.Zip.Headers.LocalEntryHeader,SharpCompress", "SharpCompress.Common.Zip.Headers.LocalEntryHeader");
            feature.AddKnownType("SharpCompress.Common.Zip.Headers.ExtraDataType,SharpCompress", "SharpCompress.Common.Zip.Headers.ExtraDataType");
            feature.AddKnownType("SharpCompress.Common.Zip.Headers.ExtraData,SharpCompress", "SharpCompress.Common.Zip.Headers.ExtraData");
            feature.AddKnownType("SharpCompress.Common.Zip.Headers.ExtraUnicodePathExtraField,SharpCompress", "SharpCompress.Common.Zip.Headers.ExtraUnicodePathExtraField");
            feature.AddKnownType("SharpCompress.Common.Zip.Headers.Zip64ExtendedInformationExtraField,SharpCompress", "SharpCompress.Common.Zip.Headers.Zip64ExtendedInformationExtraField");
            feature.AddKnownType("SharpCompress.Common.Zip.Headers.SplitHeader,SharpCompress", "SharpCompress.Common.Zip.Headers.SplitHeader");
            feature.AddKnownType("SharpCompress.Common.Zip.Headers.Zip64DirectoryEndHeader,SharpCompress", "SharpCompress.Common.Zip.Headers.Zip64DirectoryEndHeader");
            feature.AddKnownType("SharpCompress.Common.Zip.Headers.Zip64DirectoryEndLocatorHeader,SharpCompress", "SharpCompress.Common.Zip.Headers.Zip64DirectoryEndLocatorHeader");
            feature.AddKnownType("SharpCompress.Common.Zip.Headers.ZipFileEntry,SharpCompress", "SharpCompress.Common.Zip.Headers.ZipFileEntry");
            feature.AddKnownType("SharpCompress.Common.Zip.Headers.ZipHeader,SharpCompress", "SharpCompress.Common.Zip.Headers.ZipHeader");
            feature.AddKnownType("SharpCompress.Common.Zip.Headers.ZipHeaderType,SharpCompress", "SharpCompress.Common.Zip.Headers.ZipHeaderType");
            feature.AddKnownType("SharpCompress.Compressors.CompressionMode,SharpCompress", "SharpCompress.Compressors.CompressionMode");
            feature.AddKnownType("SharpCompress.Compressors.ADC.ADCStream,SharpCompress", "SharpCompress.Compressors.ADC.ADCStream");
            feature.AddKnownType("SharpCompress.Compressors.BZip2.BZip2Constants,SharpCompress", "SharpCompress.Compressors.BZip2.BZip2Constants");
            feature.AddKnownType("SharpCompress.Compressors.BZip2.BZip2Stream,SharpCompress", "SharpCompress.Compressors.BZip2.BZip2Stream");
            feature.AddKnownType("SharpCompress.Compressors.BZip2.CBZip2InputStream,SharpCompress", "SharpCompress.Compressors.BZip2.CBZip2InputStream");
            feature.AddKnownType("SharpCompress.Compressors.BZip2.CBZip2OutputStream,SharpCompress", "SharpCompress.Compressors.BZip2.CBZip2OutputStream");
            feature.AddKnownType("SharpCompress.Compressors.BZip2.CBZip2OutputStream+StackElem,SharpCompress", "SharpCompress.Compressors.BZip2.StackElem");
            feature.AddKnownType("SharpCompress.Compressors.BZip2.CRC,SharpCompress", "SharpCompress.Compressors.BZip2.CRC");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.CRC32,SharpCompress", "SharpCompress.Compressors.Deflate.CRC32");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.DeflateManager,SharpCompress", "SharpCompress.Compressors.Deflate.DeflateManager");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.DeflateManager+BlockState,SharpCompress", "SharpCompress.Compressors.Deflate.BlockState");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.DeflateManager+DeflateFlavor,SharpCompress", "SharpCompress.Compressors.Deflate.DeflateFlavor");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.DeflateManager+Config,SharpCompress", "SharpCompress.Compressors.Deflate.Config");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.DeflateManager+Tree,SharpCompress", "SharpCompress.Compressors.Deflate.Tree");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.DeflateStream,SharpCompress", "SharpCompress.Compressors.Deflate.DeflateStream");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.FlushType,SharpCompress", "SharpCompress.Compressors.Deflate.FlushType");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.GZipStream,SharpCompress", "SharpCompress.Compressors.Deflate.GZipStream");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.InflateBlocks,SharpCompress", "SharpCompress.Compressors.Deflate.InflateBlocks");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.InflateBlocks+InflateBlockMode,SharpCompress", "SharpCompress.Compressors.Deflate.InflateBlockMode");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.InflateCodes,SharpCompress", "SharpCompress.Compressors.Deflate.InflateCodes");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.InflateManager,SharpCompress", "SharpCompress.Compressors.Deflate.InflateManager");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.InflateManager+InflateManagerMode,SharpCompress", "SharpCompress.Compressors.Deflate.InflateManagerMode");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.InfTree,SharpCompress", "SharpCompress.Compressors.Deflate.InfTree");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.CompressionLevel,SharpCompress", "SharpCompress.Compressors.Deflate.CompressionLevel");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.CompressionStrategy,SharpCompress", "SharpCompress.Compressors.Deflate.CompressionStrategy");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.ZlibException,SharpCompress", "SharpCompress.Compressors.Deflate.ZlibException");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.SharedUtils,SharpCompress", "SharpCompress.Compressors.Deflate.SharedUtils");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.StaticTree,SharpCompress", "SharpCompress.Compressors.Deflate.StaticTree");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.ZlibStreamFlavor,SharpCompress", "SharpCompress.Compressors.Deflate.ZlibStreamFlavor");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.ZlibBaseStream,SharpCompress", "SharpCompress.Compressors.Deflate.ZlibBaseStream");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.ZlibBaseStream+StreamMode,SharpCompress", "SharpCompress.Compressors.Deflate.StreamMode");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.ZlibCodec,SharpCompress", "SharpCompress.Compressors.Deflate.ZlibCodec");
            feature.AddKnownType("SharpCompress.Compressors.Deflate.ZlibStream,SharpCompress", "SharpCompress.Compressors.Deflate.ZlibStream");
            feature.AddKnownType("SharpCompress.Compressors.Deflate64.BlockType,SharpCompress", "SharpCompress.Compressors.Deflate64.BlockType");
            feature.AddKnownType("SharpCompress.Compressors.Deflate64.Deflate64Stream,SharpCompress", "SharpCompress.Compressors.Deflate64.Deflate64Stream");
            feature.AddKnownType("SharpCompress.Compressors.Deflate64.DeflateInput,SharpCompress", "SharpCompress.Compressors.Deflate64.DeflateInput");
            feature.AddKnownType("SharpCompress.Compressors.Deflate64.DeflateInput+InputState,SharpCompress", "SharpCompress.Compressors.Deflate64.InputState");
            feature.AddKnownType("SharpCompress.Compressors.Deflate64.HuffmanTree,SharpCompress", "SharpCompress.Compressors.Deflate64.HuffmanTree");
            feature.AddKnownType("SharpCompress.Compressors.Deflate64.InflaterManaged,SharpCompress", "SharpCompress.Compressors.Deflate64.InflaterManaged");
            feature.AddKnownType("SharpCompress.Compressors.Deflate64.InflaterState,SharpCompress", "SharpCompress.Compressors.Deflate64.InflaterState");
            feature.AddKnownType("SharpCompress.Compressors.Deflate64.InputBuffer,SharpCompress", "SharpCompress.Compressors.Deflate64.InputBuffer");
            feature.AddKnownType("SharpCompress.Compressors.Deflate64.Match,SharpCompress", "SharpCompress.Compressors.Deflate64.Match");
            feature.AddKnownType("SharpCompress.Compressors.Deflate64.MatchState,SharpCompress", "SharpCompress.Compressors.Deflate64.MatchState");
            feature.AddKnownType("SharpCompress.Compressors.Deflate64.OutputWindow,SharpCompress", "SharpCompress.Compressors.Deflate64.OutputWindow");
            feature.AddKnownType("SharpCompress.Compressors.Filters.BCJ2Filter,SharpCompress", "SharpCompress.Compressors.Filters.BCJ2Filter");
            feature.AddKnownType("SharpCompress.Compressors.Filters.BCJFilter,SharpCompress", "SharpCompress.Compressors.Filters.BCJFilter");
            feature.AddKnownType("SharpCompress.Compressors.Filters.Filter,SharpCompress", "SharpCompress.Compressors.Filters.Filter");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.AesDecoderStream,SharpCompress", "SharpCompress.Compressors.LZMA.AesDecoderStream");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Bcj2DecoderStream,SharpCompress", "SharpCompress.Compressors.LZMA.Bcj2DecoderStream");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Bcj2DecoderStream+RangeDecoder,SharpCompress", "SharpCompress.Compressors.LZMA.RangeDecoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Bcj2DecoderStream+StatusDecoder,SharpCompress", "SharpCompress.Compressors.LZMA.StatusDecoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.BitVector,SharpCompress", "SharpCompress.Compressors.LZMA.BitVector");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.DecoderStream2,SharpCompress", "SharpCompress.Compressors.LZMA.DecoderStream2");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.DataErrorException,SharpCompress", "SharpCompress.Compressors.LZMA.DataErrorException");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.InvalidParamException,SharpCompress", "SharpCompress.Compressors.LZMA.InvalidParamException");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.ICodeProgress,SharpCompress", "SharpCompress.Compressors.LZMA.ICodeProgress");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.ICoder,SharpCompress", "SharpCompress.Compressors.LZMA.ICoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.CoderPropId,SharpCompress", "SharpCompress.Compressors.LZMA.CoderPropId");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.ISetCoderProperties,SharpCompress", "SharpCompress.Compressors.LZMA.ISetCoderProperties");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.IWriteCoderProperties,SharpCompress", "SharpCompress.Compressors.LZMA.IWriteCoderProperties");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.ISetDecoderProperties,SharpCompress", "SharpCompress.Compressors.LZMA.ISetDecoderProperties");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.LZipStream,SharpCompress", "SharpCompress.Compressors.LZMA.LZipStream");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Base,SharpCompress", "SharpCompress.Compressors.LZMA.Base");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Base+State,SharpCompress", "SharpCompress.Compressors.LZMA.SharpCompress.Compressors.LZMA.Base.State");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Decoder,SharpCompress", "SharpCompress.Compressors.LZMA.Decoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Decoder+LenDecoder,SharpCompress", "SharpCompress.Compressors.LZMA.LenDecoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Decoder+LiteralDecoder,SharpCompress", "SharpCompress.Compressors.LZMA.LiteralDecoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Decoder+LiteralDecoder+Decoder2,SharpCompress", "SharpCompress.Compressors.LZMA.Decoder2");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Encoder,SharpCompress", "SharpCompress.Compressors.LZMA.Encoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Encoder+EMatchFinderType,SharpCompress", "SharpCompress.Compressors.LZMA.EMatchFinderType");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Encoder+LiteralEncoder,SharpCompress", "SharpCompress.Compressors.LZMA.LiteralEncoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Encoder+LiteralEncoder+Encoder2,SharpCompress", "SharpCompress.Compressors.LZMA.SharpCompress.Compressors.LZMA.LiteralEncoder.Encoder2");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Encoder+LenEncoder,SharpCompress", "SharpCompress.Compressors.LZMA.LenEncoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Encoder+LenPriceTableEncoder,SharpCompress", "SharpCompress.Compressors.LZMA.LenPriceTableEncoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Encoder+Optimal,SharpCompress", "SharpCompress.Compressors.LZMA.Optimal");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.LzmaEncoderProperties,SharpCompress", "SharpCompress.Compressors.LZMA.LzmaEncoderProperties");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.LzmaStream,SharpCompress", "SharpCompress.Compressors.LZMA.LzmaStream");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.LZ.BinTree,SharpCompress", "SharpCompress.Compressors.LZMA.LZ.BinTree");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.LZ.InWindow,SharpCompress", "SharpCompress.Compressors.LZMA.LZ.InWindow");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.LZ.OutWindow,SharpCompress", "SharpCompress.Compressors.LZMA.LZ.OutWindow");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.RangeCoder.Encoder,SharpCompress", "SharpCompress.Compressors.LZMA.RangeCoder.Encoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.RangeCoder.Decoder,SharpCompress", "SharpCompress.Compressors.LZMA.RangeCoder.Decoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.RangeCoder.BitEncoder,SharpCompress", "SharpCompress.Compressors.LZMA.RangeCoder.BitEncoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.RangeCoder.BitDecoder,SharpCompress", "SharpCompress.Compressors.LZMA.RangeCoder.BitDecoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.RangeCoder.BitTreeEncoder,SharpCompress", "SharpCompress.Compressors.LZMA.RangeCoder.BitTreeEncoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.RangeCoder.BitTreeDecoder,SharpCompress", "SharpCompress.Compressors.LZMA.RangeCoder.BitTreeDecoder");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Utilites.CrcBuilderStream,SharpCompress", "SharpCompress.Compressors.LZMA.Utilites.CrcBuilderStream");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Utilites.CrcCheckStream,SharpCompress", "SharpCompress.Compressors.LZMA.Utilites.CrcCheckStream");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Utilites.IPasswordProvider,SharpCompress", "SharpCompress.Compressors.LZMA.Utilites.IPasswordProvider");
            feature.AddKnownType("SharpCompress.Compressors.LZMA.Utilites.BlockType,SharpCompress", "SharpCompress.Compressors.LZMA.Utilites.BlockType");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.PpmdProperties,SharpCompress", "SharpCompress.Compressors.PPMd.PpmdProperties");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.PpmdStream,SharpCompress", "SharpCompress.Compressors.PPMd.PpmdStream");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.PpmdVersion,SharpCompress", "SharpCompress.Compressors.PPMd.PpmdVersion");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.H.FreqData,SharpCompress", "SharpCompress.Compressors.PPMd.H.FreqData");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.H.ModelPpm,SharpCompress", "SharpCompress.Compressors.PPMd.H.ModelPpm");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.H.Pointer,SharpCompress", "SharpCompress.Compressors.PPMd.H.Pointer");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.H.PpmContext,SharpCompress", "SharpCompress.Compressors.PPMd.H.PpmContext");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.H.RangeCoder,SharpCompress", "SharpCompress.Compressors.PPMd.H.RangeCoder");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.H.SubRange,SharpCompress", "SharpCompress.Compressors.PPMd.H.SubRange");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.H.RarMemBlock,SharpCompress", "SharpCompress.Compressors.PPMd.H.RarMemBlock");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.H.RarNode,SharpCompress", "SharpCompress.Compressors.PPMd.H.RarNode");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.H.See2Context,SharpCompress", "SharpCompress.Compressors.PPMd.H.See2Context");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.H.State,SharpCompress", "SharpCompress.Compressors.PPMd.H.State");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.H.StateRef,SharpCompress", "SharpCompress.Compressors.PPMd.H.StateRef");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.H.SubAllocator,SharpCompress", "SharpCompress.Compressors.PPMd.H.SubAllocator");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.I1.Allocator,SharpCompress", "SharpCompress.Compressors.PPMd.I1.Allocator");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.I1.Coder,SharpCompress", "SharpCompress.Compressors.PPMd.I1.Coder");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.I1.MemoryNode,SharpCompress", "SharpCompress.Compressors.PPMd.I1.MemoryNode");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.I1.Model,SharpCompress", "SharpCompress.Compressors.PPMd.I1.Model");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.I1.Model+PpmContext,SharpCompress", "SharpCompress.Compressors.PPMd.I1.PpmContext");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.I1.ModelRestorationMethod,SharpCompress", "SharpCompress.Compressors.PPMd.I1.ModelRestorationMethod");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.I1.Pointer,SharpCompress", "SharpCompress.Compressors.PPMd.I1.Pointer");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.I1.PpmState,SharpCompress", "SharpCompress.Compressors.PPMd.I1.PpmState");
            feature.AddKnownType("SharpCompress.Compressors.PPMd.I1.See2Context,SharpCompress", "SharpCompress.Compressors.PPMd.I1.See2Context");
            feature.AddKnownType("SharpCompress.Compressors.Rar.IRarUnpack,SharpCompress", "SharpCompress.Compressors.Rar.IRarUnpack");
            feature.AddKnownType("SharpCompress.Compressors.Rar.MultiVolumeReadOnlyStream,SharpCompress", "SharpCompress.Compressors.Rar.MultiVolumeReadOnlyStream");
            feature.AddKnownType("SharpCompress.Compressors.Rar.RarCrcStream,SharpCompress", "SharpCompress.Compressors.Rar.RarCrcStream");
            feature.AddKnownType("SharpCompress.Compressors.Rar.RarStream,SharpCompress", "SharpCompress.Compressors.Rar.RarStream");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV1.Unpack,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV1.Unpack");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV1.UnpackFilter,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV1.UnpackFilter");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV1.Decode.AudioVariables,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV1.Decode.AudioVariables");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV1.Decode.BitDecode,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV1.Decode.BitDecode");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV1.Decode.CodeType,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV1.Decode.CodeType");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV1.Decode.Decode,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV1.Decode.Decode");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV1.Decode.DistDecode,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV1.Decode.DistDecode");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV1.Decode.FilterType,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV1.Decode.FilterType");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV1.Decode.LitDecode,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV1.Decode.LitDecode");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV1.Decode.LowDistDecode,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV1.Decode.LowDistDecode");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV1.Decode.MultDecode,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV1.Decode.MultDecode");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV1.Decode.RepDecode,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV1.Decode.RepDecode");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV1.PPM.BlockTypes,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV1.PPM.BlockTypes");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV2017.BitInput,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV2017.BitInput");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV2017.FragmentedWindow,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV2017.FragmentedWindow");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV2017.Unpack,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV2017.Unpack");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV2017.DecodeTable,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV2017.DecodeTable");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV2017.UnpackBlockHeader,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV2017.UnpackBlockHeader");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV2017.UnpackBlockTables,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV2017.UnpackBlockTables");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV2017.UnpackFilter,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV2017.UnpackFilter");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV2017.UnpackFilter30,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV2017.UnpackFilter30");
            feature.AddKnownType("SharpCompress.Compressors.Rar.UnpackV2017.AudioVariables,SharpCompress", "SharpCompress.Compressors.Rar.UnpackV2017.AudioVariables");
            feature.AddKnownType("SharpCompress.Compressors.Rar.VM.BitInput,SharpCompress", "SharpCompress.Compressors.Rar.VM.BitInput");
            feature.AddKnownType("SharpCompress.Compressors.Rar.VM.RarVM,SharpCompress", "SharpCompress.Compressors.Rar.VM.RarVM");
            feature.AddKnownType("SharpCompress.Compressors.Rar.VM.VMCmdFlags,SharpCompress", "SharpCompress.Compressors.Rar.VM.VMCmdFlags");
            feature.AddKnownType("SharpCompress.Compressors.Rar.VM.VMCommands,SharpCompress", "SharpCompress.Compressors.Rar.VM.VMCommands");
            feature.AddKnownType("SharpCompress.Compressors.Rar.VM.VMFlags,SharpCompress", "SharpCompress.Compressors.Rar.VM.VMFlags");
            feature.AddKnownType("SharpCompress.Compressors.Rar.VM.VMOpType,SharpCompress", "SharpCompress.Compressors.Rar.VM.VMOpType");
            feature.AddKnownType("SharpCompress.Compressors.Rar.VM.VMPreparedCommand,SharpCompress", "SharpCompress.Compressors.Rar.VM.VMPreparedCommand");
            feature.AddKnownType("SharpCompress.Compressors.Rar.VM.VMPreparedOperand,SharpCompress", "SharpCompress.Compressors.Rar.VM.VMPreparedOperand");
            feature.AddKnownType("SharpCompress.Compressors.Rar.VM.VMPreparedProgram,SharpCompress", "SharpCompress.Compressors.Rar.VM.VMPreparedProgram");
            feature.AddKnownType("SharpCompress.Compressors.Rar.VM.VMStandardFilters,SharpCompress", "SharpCompress.Compressors.Rar.VM.VMStandardFilters");
            feature.AddKnownType("SharpCompress.Compressors.Rar.VM.VMStandardFilterSignature,SharpCompress", "SharpCompress.Compressors.Rar.VM.VMStandardFilterSignature");
            feature.AddKnownType("SharpCompress.Compressors.Xz.CheckType,SharpCompress", "SharpCompress.Compressors.Xz.CheckType");
            feature.AddKnownType("SharpCompress.Compressors.Xz.ReadOnlyStream,SharpCompress", "SharpCompress.Compressors.Xz.ReadOnlyStream");
            feature.AddKnownType("SharpCompress.Compressors.Xz.XZBlock,SharpCompress", "SharpCompress.Compressors.Xz.XZBlock");
            feature.AddKnownType("SharpCompress.Compressors.Xz.XZFooter,SharpCompress", "SharpCompress.Compressors.Xz.XZFooter");
            feature.AddKnownType("SharpCompress.Compressors.Xz.XZHeader,SharpCompress", "SharpCompress.Compressors.Xz.XZHeader");
            feature.AddKnownType("SharpCompress.Compressors.Xz.XZIndex,SharpCompress", "SharpCompress.Compressors.Xz.XZIndex");
            feature.AddKnownType("SharpCompress.Compressors.Xz.XZIndexMarkerReachedException,SharpCompress", "SharpCompress.Compressors.Xz.XZIndexMarkerReachedException");
            feature.AddKnownType("SharpCompress.Compressors.Xz.XZIndexRecord,SharpCompress", "SharpCompress.Compressors.Xz.XZIndexRecord");
            feature.AddKnownType("SharpCompress.Compressors.Xz.XZReadOnlyStream,SharpCompress", "SharpCompress.Compressors.Xz.XZReadOnlyStream");
            feature.AddKnownType("SharpCompress.Compressors.Xz.XZStream,SharpCompress", "SharpCompress.Compressors.Xz.XZStream");
            feature.AddKnownType("SharpCompress.Compressors.Xz.Filters.BlockFilter,SharpCompress", "SharpCompress.Compressors.Xz.Filters.BlockFilter");
            feature.AddKnownType("SharpCompress.Compressors.Xz.Filters.BlockFilter+FilterTypes,SharpCompress", "SharpCompress.Compressors.Xz.Filters.SharpCompress.Compressors.Xz.Filters.BlockFilter.FilterTypes");
            feature.AddKnownType("SharpCompress.Compressors.Xz.Filters.Lzma2Filter,SharpCompress", "SharpCompress.Compressors.Xz.Filters.Lzma2Filter");
            feature.AddKnownType("SharpCompress.Crypto.Crc32Stream,SharpCompress", "SharpCompress.Crypto.Crc32Stream");
            feature.AddKnownType("SharpCompress.Crypto.CryptoException,SharpCompress", "SharpCompress.Crypto.CryptoException");
            feature.AddKnownType("SharpCompress.Crypto.DataLengthException,SharpCompress", "SharpCompress.Crypto.DataLengthException");
            feature.AddKnownType("SharpCompress.Crypto.IBlockCipher,SharpCompress", "SharpCompress.Crypto.IBlockCipher");
            feature.AddKnownType("SharpCompress.Crypto.ICipherParameters,SharpCompress", "SharpCompress.Crypto.ICipherParameters");
            feature.AddKnownType("SharpCompress.Crypto.KeyParameter,SharpCompress", "SharpCompress.Crypto.KeyParameter");
            feature.AddKnownType("SharpCompress.Crypto.RijndaelEngine,SharpCompress", "SharpCompress.Crypto.RijndaelEngine");
            feature.AddKnownType("SharpCompress.IO.BufferedSubStream,SharpCompress", "SharpCompress.IO.BufferedSubStream");
            feature.AddKnownType("SharpCompress.IO.CountingWritableSubStream,SharpCompress", "SharpCompress.IO.CountingWritableSubStream");
            feature.AddKnownType("SharpCompress.IO.ListeningStream,SharpCompress", "SharpCompress.IO.ListeningStream");
            feature.AddKnownType("SharpCompress.IO.MarkingBinaryReader,SharpCompress", "SharpCompress.IO.MarkingBinaryReader");
            feature.AddKnownType("SharpCompress.IO.NonDisposingStream,SharpCompress", "SharpCompress.IO.NonDisposingStream");
            feature.AddKnownType("SharpCompress.IO.ReadOnlySubStream,SharpCompress", "SharpCompress.IO.ReadOnlySubStream");
            feature.AddKnownType("SharpCompress.IO.RewindableStream,SharpCompress", "SharpCompress.IO.RewindableStream");
            feature.AddKnownType("SharpCompress.IO.StreamingMode,SharpCompress", "SharpCompress.IO.StreamingMode");
            feature.AddKnownType("SharpCompress.Readers.AbstractReader`2,SharpCompress", "SharpCompress.Readers.AbstractReader`2'2");
            feature.AddKnownType("SharpCompress.Readers.IReader,SharpCompress", "SharpCompress.Readers.IReader");
            feature.AddKnownType("SharpCompress.Readers.IReaderExtractionListener,SharpCompress", "SharpCompress.Readers.IReaderExtractionListener");
            feature.AddKnownType("SharpCompress.Readers.ReaderOptions,SharpCompress", "SharpCompress.Readers.ReaderOptions");
            feature.AddKnownType("SharpCompress.Readers.ReaderProgress,SharpCompress", "SharpCompress.Readers.ReaderProgress");
            feature.AddKnownType("SharpCompress.Readers.GZip.GZipReader,SharpCompress", "SharpCompress.Readers.GZip.GZipReader");
            feature.AddKnownType("SharpCompress.Readers.Rar.MultiVolumeRarReader,SharpCompress", "SharpCompress.Readers.Rar.MultiVolumeRarReader");
            feature.AddKnownType("SharpCompress.Readers.Rar.MultiVolumeRarReader+MultiVolumeStreamEnumerator,SharpCompress", "SharpCompress.Readers.Rar.MultiVolumeStreamEnumerator");
            feature.AddKnownType("SharpCompress.Readers.Rar.NonSeekableStreamFilePart,SharpCompress", "SharpCompress.Readers.Rar.NonSeekableStreamFilePart");
            feature.AddKnownType("SharpCompress.Readers.Rar.RarReader,SharpCompress", "SharpCompress.Readers.Rar.RarReader");
            feature.AddKnownType("SharpCompress.Readers.Rar.RarReaderEntry,SharpCompress", "SharpCompress.Readers.Rar.RarReaderEntry");
            feature.AddKnownType("SharpCompress.Readers.Rar.RarReaderVolume,SharpCompress", "SharpCompress.Readers.Rar.RarReaderVolume");
            feature.AddKnownType("SharpCompress.Readers.Rar.SingleVolumeRarReader,SharpCompress", "SharpCompress.Readers.Rar.SingleVolumeRarReader");
            feature.AddKnownType("SharpCompress.Readers.Tar.TarReader,SharpCompress", "SharpCompress.Readers.Tar.TarReader");
            feature.AddKnownType("SharpCompress.Readers.Zip.ZipReader,SharpCompress", "SharpCompress.Readers.Zip.ZipReader");
            feature.AddKnownType("SharpCompress.Writers.AbstractWriter,SharpCompress", "SharpCompress.Writers.AbstractWriter");
            feature.AddKnownType("SharpCompress.Writers.IWriter,SharpCompress", "SharpCompress.Writers.IWriter");
            feature.AddKnownType("SharpCompress.Writers.WriterOptions,SharpCompress", "SharpCompress.Writers.WriterOptions");
            feature.AddKnownType("SharpCompress.Writers.GZip.GZipWriter,SharpCompress", "SharpCompress.Writers.GZip.GZipWriter");
            feature.AddKnownType("SharpCompress.Writers.GZip.GZipWriterOptions,SharpCompress", "SharpCompress.Writers.GZip.GZipWriterOptions");
            feature.AddKnownType("SharpCompress.Writers.Tar.TarWriter,SharpCompress", "SharpCompress.Writers.Tar.TarWriter");
            feature.AddKnownType("SharpCompress.Writers.Tar.TarWriterOptions,SharpCompress", "SharpCompress.Writers.Tar.TarWriterOptions");
            feature.AddKnownType("SharpCompress.Writers.Zip.ZipCentralDirectoryEntry,SharpCompress", "SharpCompress.Writers.Zip.ZipCentralDirectoryEntry");
            feature.AddKnownType("SharpCompress.Writers.Zip.ZipWriter,SharpCompress", "SharpCompress.Writers.Zip.ZipWriter");
            feature.AddKnownType("SharpCompress.Writers.Zip.ZipWriter+ZipWritingStream,SharpCompress", "SharpCompress.Writers.Zip.ZipWritingStream");
            feature.AddKnownType("SharpCompress.Writers.Zip.ZipWriterEntryOptions,SharpCompress", "SharpCompress.Writers.Zip.ZipWriterEntryOptions");
            feature.AddKnownType("SharpCompress.Writers.Zip.ZipWriterOptions,SharpCompress", "SharpCompress.Writers.Zip.ZipWriterOptions");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("StackExchange.Redis.ConsumeResult,StackExchange.Redis", "StackExchange.Redis.ConsumeResult");
            feature.AddKnownType("StackExchange.Redis.BufferReader,StackExchange.Redis", "StackExchange.Redis.BufferReader");
            feature.AddKnownType("StackExchange.Redis.ChannelMessage,StackExchange.Redis", "StackExchange.Redis.ChannelMessage");
            feature.AddKnownType("StackExchange.Redis.ChannelMessageQueue,StackExchange.Redis", "StackExchange.Redis.ChannelMessageQueue");
            feature.AddKnownType("StackExchange.Redis.ClientInfo,StackExchange.Redis", "StackExchange.Redis.ClientInfo");
            feature.AddKnownType("StackExchange.Redis.ClientInfo+ClientInfoProcessor,StackExchange.Redis", "StackExchange.Redis.ClientInfoProcessor");
            feature.AddKnownType("StackExchange.Redis.SlotRange,StackExchange.Redis", "StackExchange.Redis.SlotRange");
            feature.AddKnownType("StackExchange.Redis.ClusterConfiguration,StackExchange.Redis", "StackExchange.Redis.ClusterConfiguration");
            feature.AddKnownType("StackExchange.Redis.ClusterNode,StackExchange.Redis", "StackExchange.Redis.ClusterNode");
            feature.AddKnownType("StackExchange.Redis.CommandBytes,StackExchange.Redis", "StackExchange.Redis.CommandBytes");
            feature.AddKnownType("StackExchange.Redis.CommandMap,StackExchange.Redis", "StackExchange.Redis.CommandMap");
            feature.AddKnownType("StackExchange.Redis.CommandTrace,StackExchange.Redis", "StackExchange.Redis.CommandTrace");
            feature.AddKnownType("StackExchange.Redis.CommandTrace+CommandTraceProcessor,StackExchange.Redis", "StackExchange.Redis.CommandTraceProcessor");
            feature.AddKnownType("StackExchange.Redis.Condition,StackExchange.Redis", "StackExchange.Redis.Condition");
            feature.AddKnownType("StackExchange.Redis.Condition+ConditionProcessor,StackExchange.Redis", "StackExchange.Redis.ConditionProcessor");
            feature.AddKnownType("StackExchange.Redis.Condition+ConditionProcessor+ConditionMessage,StackExchange.Redis", "StackExchange.Redis.ConditionMessage");
            feature.AddKnownType("StackExchange.Redis.Condition+ExistsCondition,StackExchange.Redis", "StackExchange.Redis.ExistsCondition");
            feature.AddKnownType("StackExchange.Redis.Condition+EqualsCondition,StackExchange.Redis", "StackExchange.Redis.EqualsCondition");
            feature.AddKnownType("StackExchange.Redis.Condition+ListCondition,StackExchange.Redis", "StackExchange.Redis.ListCondition");
            feature.AddKnownType("StackExchange.Redis.Condition+LengthCondition,StackExchange.Redis", "StackExchange.Redis.LengthCondition");
            feature.AddKnownType("StackExchange.Redis.Condition+SortedSetRangeLengthCondition,StackExchange.Redis", "StackExchange.Redis.SortedSetRangeLengthCondition");
            feature.AddKnownType("StackExchange.Redis.Condition+SortedSetScoreCondition,StackExchange.Redis", "StackExchange.Redis.SortedSetScoreCondition");
            feature.AddKnownType("StackExchange.Redis.ConditionResult,StackExchange.Redis", "StackExchange.Redis.ConditionResult");
            feature.AddKnownType("StackExchange.Redis.ConfigurationOptions,StackExchange.Redis", "StackExchange.Redis.ConfigurationOptions");
            feature.AddKnownType("StackExchange.Redis.ConnectionCounters,StackExchange.Redis", "StackExchange.Redis.ConnectionCounters");
            feature.AddKnownType("StackExchange.Redis.ConnectionFailedEventArgs,StackExchange.Redis", "StackExchange.Redis.ConnectionFailedEventArgs");
            feature.AddKnownType("StackExchange.Redis.ConnectionMultiplexer,StackExchange.Redis", "StackExchange.Redis.ConnectionMultiplexer");
            feature.AddKnownType("StackExchange.Redis.ConnectionMultiplexer+FeatureFlags,StackExchange.Redis", "StackExchange.Redis.FeatureFlags");
            feature.AddKnownType("StackExchange.Redis.ConnectionMultiplexer+LogProxy,StackExchange.Redis", "StackExchange.Redis.LogProxy");
            feature.AddKnownType("StackExchange.Redis.ConnectionMultiplexer+ServerSnapshot,StackExchange.Redis", "StackExchange.Redis.ServerSnapshot");
            feature.AddKnownType("StackExchange.Redis.ConnectionMultiplexer+TimerToken,StackExchange.Redis", "StackExchange.Redis.TimerToken");
            feature.AddKnownType("StackExchange.Redis.ConnectionMultiplexer+Subscription,StackExchange.Redis", "StackExchange.Redis.Subscription");
            feature.AddKnownType("StackExchange.Redis.ConnectionMultiplexer+Subscription+PendingSubscriptionState,StackExchange.Redis", "StackExchange.Redis.PendingSubscriptionState");
            feature.AddKnownType("StackExchange.Redis.WriteResult,StackExchange.Redis", "StackExchange.Redis.WriteResult");
            feature.AddKnownType("StackExchange.Redis.CursorEnumerable`1,StackExchange.Redis", "StackExchange.Redis.CursorEnumerable`1'1");
            feature.AddKnownType("StackExchange.Redis.CursorEnumerable`1+ScanResult,StackExchange.Redis", "StackExchange.Redis.ScanResult'1");
            feature.AddKnownType("StackExchange.Redis.CursorEnumerable`1+Enumerator,StackExchange.Redis", "StackExchange.Redis.StackExchange.Redis.CursorEnumerable`1'1.Enumerator'1");
            feature.AddKnownType("StackExchange.Redis.CursorEnumerable`1+Enumerator+State,StackExchange.Redis", "StackExchange.Redis.State'1");
            feature.AddKnownType("StackExchange.Redis.CursorEnumerable`1+SingleBlockEnumerable,StackExchange.Redis", "StackExchange.Redis.SingleBlockEnumerable'1");
            feature.AddKnownType("StackExchange.Redis.EndPointCollection,StackExchange.Redis", "StackExchange.Redis.EndPointCollection");
            feature.AddKnownType("StackExchange.Redis.EndPointEventArgs,StackExchange.Redis", "StackExchange.Redis.EndPointEventArgs");
            feature.AddKnownType("StackExchange.Redis.Aggregate,StackExchange.Redis", "StackExchange.Redis.Aggregate");
            feature.AddKnownType("StackExchange.Redis.Bitwise,StackExchange.Redis", "StackExchange.Redis.Bitwise");
            feature.AddKnownType("StackExchange.Redis.ClientFlags,StackExchange.Redis", "StackExchange.Redis.ClientFlags");
            feature.AddKnownType("StackExchange.Redis.ClientType,StackExchange.Redis", "StackExchange.Redis.ClientType");
            feature.AddKnownType("StackExchange.Redis.CommandFlags,StackExchange.Redis", "StackExchange.Redis.CommandFlags");
            feature.AddKnownType("StackExchange.Redis.CommandStatus,StackExchange.Redis", "StackExchange.Redis.CommandStatus");
            feature.AddKnownType("StackExchange.Redis.ConnectionFailureType,StackExchange.Redis", "StackExchange.Redis.ConnectionFailureType");
            feature.AddKnownType("StackExchange.Redis.ConnectionType,StackExchange.Redis", "StackExchange.Redis.ConnectionType");
            feature.AddKnownType("StackExchange.Redis.Exclude,StackExchange.Redis", "StackExchange.Redis.Exclude");
            feature.AddKnownType("StackExchange.Redis.ExportOptions,StackExchange.Redis", "StackExchange.Redis.ExportOptions");
            feature.AddKnownType("StackExchange.Redis.GeoUnit,StackExchange.Redis", "StackExchange.Redis.GeoUnit");
            feature.AddKnownType("StackExchange.Redis.MigrateOptions,StackExchange.Redis", "StackExchange.Redis.MigrateOptions");
            feature.AddKnownType("StackExchange.Redis.Order,StackExchange.Redis", "StackExchange.Redis.Order");
            feature.AddKnownType("StackExchange.Redis.PositionKind,StackExchange.Redis", "StackExchange.Redis.PositionKind");
            feature.AddKnownType("StackExchange.Redis.Proxy,StackExchange.Redis", "StackExchange.Redis.Proxy");
            feature.AddKnownType("StackExchange.Redis.RedisCommand,StackExchange.Redis", "StackExchange.Redis.RedisCommand");
            feature.AddKnownType("StackExchange.Redis.RedisType,StackExchange.Redis", "StackExchange.Redis.RedisType");
            feature.AddKnownType("StackExchange.Redis.ReplicationChangeOptions,StackExchange.Redis", "StackExchange.Redis.ReplicationChangeOptions");
            feature.AddKnownType("StackExchange.Redis.ResultType,StackExchange.Redis", "StackExchange.Redis.ResultType");
            feature.AddKnownType("StackExchange.Redis.RetransmissionReasonType,StackExchange.Redis", "StackExchange.Redis.RetransmissionReasonType");
            feature.AddKnownType("StackExchange.Redis.SaveType,StackExchange.Redis", "StackExchange.Redis.SaveType");
            feature.AddKnownType("StackExchange.Redis.ServerType,StackExchange.Redis", "StackExchange.Redis.ServerType");
            feature.AddKnownType("StackExchange.Redis.SetOperation,StackExchange.Redis", "StackExchange.Redis.SetOperation");
            feature.AddKnownType("StackExchange.Redis.ShutdownMode,StackExchange.Redis", "StackExchange.Redis.ShutdownMode");
            feature.AddKnownType("StackExchange.Redis.SortType,StackExchange.Redis", "StackExchange.Redis.SortType");
            feature.AddKnownType("StackExchange.Redis.When,StackExchange.Redis", "StackExchange.Redis.When");
            feature.AddKnownType("StackExchange.Redis.RedisCommandException,StackExchange.Redis", "StackExchange.Redis.RedisCommandException");
            feature.AddKnownType("StackExchange.Redis.RedisTimeoutException,StackExchange.Redis", "StackExchange.Redis.RedisTimeoutException");
            feature.AddKnownType("StackExchange.Redis.RedisConnectionException,StackExchange.Redis", "StackExchange.Redis.RedisConnectionException");
            feature.AddKnownType("StackExchange.Redis.RedisException,StackExchange.Redis", "StackExchange.Redis.RedisException");
            feature.AddKnownType("StackExchange.Redis.RedisServerException,StackExchange.Redis", "StackExchange.Redis.RedisServerException");
            feature.AddKnownType("StackExchange.Redis.ExponentialRetry,StackExchange.Redis", "StackExchange.Redis.ExponentialRetry");
            feature.AddKnownType("StackExchange.Redis.ExtensionMethods+LeaseMemoryStream,StackExchange.Redis", "StackExchange.Redis.LeaseMemoryStream");
            feature.AddKnownType("StackExchange.Redis.GeoRadiusOptions,StackExchange.Redis", "StackExchange.Redis.GeoRadiusOptions");
            feature.AddKnownType("StackExchange.Redis.GeoRadiusResult,StackExchange.Redis", "StackExchange.Redis.GeoRadiusResult");
            feature.AddKnownType("StackExchange.Redis.GeoPosition,StackExchange.Redis", "StackExchange.Redis.GeoPosition");
            feature.AddKnownType("StackExchange.Redis.GeoEntry,StackExchange.Redis", "StackExchange.Redis.GeoEntry");
            feature.AddKnownType("StackExchange.Redis.HashEntry,StackExchange.Redis", "StackExchange.Redis.HashEntry");
            feature.AddKnownType("StackExchange.Redis.HashSlotMovedEventArgs,StackExchange.Redis", "StackExchange.Redis.HashSlotMovedEventArgs");
            feature.AddKnownType("StackExchange.Redis.IBatch,StackExchange.Redis", "StackExchange.Redis.IBatch");
            feature.AddKnownType("StackExchange.Redis.ICompletable,StackExchange.Redis", "StackExchange.Redis.ICompletable");
            feature.AddKnownType("StackExchange.Redis.IInternalConnectionMultiplexer,StackExchange.Redis", "StackExchange.Redis.IInternalConnectionMultiplexer");
            feature.AddKnownType("StackExchange.Redis.IConnectionMultiplexer,StackExchange.Redis", "StackExchange.Redis.IConnectionMultiplexer");
            feature.AddKnownType("StackExchange.Redis.IDatabase,StackExchange.Redis", "StackExchange.Redis.IDatabase");
            feature.AddKnownType("StackExchange.Redis.IDatabaseAsync,StackExchange.Redis", "StackExchange.Redis.IDatabaseAsync");
            feature.AddKnownType("StackExchange.Redis.IMultiMessage,StackExchange.Redis", "StackExchange.Redis.IMultiMessage");
            feature.AddKnownType("StackExchange.Redis.IReconnectRetryPolicy,StackExchange.Redis", "StackExchange.Redis.IReconnectRetryPolicy");
            feature.AddKnownType("StackExchange.Redis.IRedis,StackExchange.Redis", "StackExchange.Redis.IRedis");
            feature.AddKnownType("StackExchange.Redis.IRedisAsync,StackExchange.Redis", "StackExchange.Redis.IRedisAsync");
            feature.AddKnownType("StackExchange.Redis.IScanningCursor,StackExchange.Redis", "StackExchange.Redis.IScanningCursor");
            feature.AddKnownType("StackExchange.Redis.IServer,StackExchange.Redis", "StackExchange.Redis.IServer");
            feature.AddKnownType("StackExchange.Redis.LatencyHistoryEntry,StackExchange.Redis", "StackExchange.Redis.LatencyHistoryEntry");
            feature.AddKnownType("StackExchange.Redis.LatencyHistoryEntry+Processor,StackExchange.Redis", "StackExchange.Redis.Processor");
            feature.AddKnownType("StackExchange.Redis.LatencyLatestEntry,StackExchange.Redis", "StackExchange.Redis.LatencyLatestEntry");
            feature.AddKnownType("StackExchange.Redis.LatencyLatestEntry+Processor,StackExchange.Redis", "StackExchange.Redis.Processor");
            feature.AddKnownType("StackExchange.Redis.ISubscriber,StackExchange.Redis", "StackExchange.Redis.ISubscriber");
            feature.AddKnownType("StackExchange.Redis.ITransaction,StackExchange.Redis", "StackExchange.Redis.ITransaction");
            feature.AddKnownType("StackExchange.Redis.InternalErrorEventArgs,StackExchange.Redis", "StackExchange.Redis.InternalErrorEventArgs");
            feature.AddKnownType("StackExchange.Redis.Lease`1,StackExchange.Redis", "StackExchange.Redis.Lease`1'1");
            feature.AddKnownType("StackExchange.Redis.LinearRetry,StackExchange.Redis", "StackExchange.Redis.LinearRetry");
            feature.AddKnownType("StackExchange.Redis.LuaScript,StackExchange.Redis", "StackExchange.Redis.LuaScript");
            feature.AddKnownType("StackExchange.Redis.LoadedLuaScript,StackExchange.Redis", "StackExchange.Redis.LoadedLuaScript");
            feature.AddKnownType("StackExchange.Redis.LoggingMessage,StackExchange.Redis", "StackExchange.Redis.LoggingMessage");
            feature.AddKnownType("StackExchange.Redis.Message,StackExchange.Redis", "StackExchange.Redis.Message");
            feature.AddKnownType("StackExchange.Redis.Message+CommandChannelBase,StackExchange.Redis", "StackExchange.Redis.CommandChannelBase");
            feature.AddKnownType("StackExchange.Redis.Message+CommandKeyBase,StackExchange.Redis", "StackExchange.Redis.CommandKeyBase");
            feature.AddKnownType("StackExchange.Redis.Message+CommandChannelMessage,StackExchange.Redis", "StackExchange.Redis.CommandChannelMessage");
            feature.AddKnownType("StackExchange.Redis.Message+CommandChannelValueMessage,StackExchange.Redis", "StackExchange.Redis.CommandChannelValueMessage");
            feature.AddKnownType("StackExchange.Redis.Message+CommandKeyKeyKeyMessage,StackExchange.Redis", "StackExchange.Redis.CommandKeyKeyKeyMessage");
            feature.AddKnownType("StackExchange.Redis.Message+CommandKeyKeyMessage,StackExchange.Redis", "StackExchange.Redis.CommandKeyKeyMessage");
            feature.AddKnownType("StackExchange.Redis.Message+CommandKeyKeysMessage,StackExchange.Redis", "StackExchange.Redis.CommandKeyKeysMessage");
            feature.AddKnownType("StackExchange.Redis.Message+CommandKeyKeyValueMessage,StackExchange.Redis", "StackExchange.Redis.CommandKeyKeyValueMessage");
            feature.AddKnownType("StackExchange.Redis.Message+CommandKeyMessage,StackExchange.Redis", "StackExchange.Redis.CommandKeyMessage");
            feature.AddKnownType("StackExchange.Redis.Message+CommandValuesMessage,StackExchange.Redis", "StackExchange.Redis.CommandValuesMessage");
            feature.AddKnownType("StackExchange.Redis.Message+CommandKeysMessage,StackExchange.Redis", "StackExchange.Redis.CommandKeysMessage");
            feature.AddKnownType("StackExchange.Redis.Message+CommandKeyValueMessage,StackExchange.Redis", "StackExchange.Redis.CommandKeyValueMessage");
            feature.AddKnownType("StackExchange.Redis.Message+CommandKeyValuesKeyMessage,StackExchange.Redis", "StackExchange.Redis.CommandKeyValuesKeyMessage");
            feature.AddKnownType("StackExchange.Redis.Message+CommandKeyValuesMessage,StackExchange.Redis", "StackExchange.Redis.CommandKeyValuesMessage");
            feature.AddKnownType("StackExchange.Redis.Message+CommandKeyValueValueMessage,StackExchange.Redis", "StackExchange.Redis.CommandKeyValueValueMessage");
            feature.AddKnownType("StackExchange.Redis.Message+CommandKeyValueValueValueMessage,StackExchange.Redis", "StackExchange.Redis.CommandKeyValueValueValueMessage");
            feature.AddKnownType("StackExchange.Redis.Message+CommandKeyValueValueValueValueMessage,StackExchange.Redis", "StackExchange.Redis.CommandKeyValueValueValueValueMessage");
            feature.AddKnownType("StackExchange.Redis.Message+CommandMessage,StackExchange.Redis", "StackExchange.Redis.CommandMessage");
            feature.AddKnownType("StackExchange.Redis.Message+CommandSlotValuesMessage,StackExchange.Redis", "StackExchange.Redis.CommandSlotValuesMessage");
            feature.AddKnownType("StackExchange.Redis.Message+CommandValueChannelMessage,StackExchange.Redis", "StackExchange.Redis.CommandValueChannelMessage");
            feature.AddKnownType("StackExchange.Redis.Message+CommandValueKeyMessage,StackExchange.Redis", "StackExchange.Redis.CommandValueKeyMessage");
            feature.AddKnownType("StackExchange.Redis.Message+CommandValueMessage,StackExchange.Redis", "StackExchange.Redis.CommandValueMessage");
            feature.AddKnownType("StackExchange.Redis.Message+CommandValueValueMessage,StackExchange.Redis", "StackExchange.Redis.CommandValueValueMessage");
            feature.AddKnownType("StackExchange.Redis.Message+CommandValueValueValueMessage,StackExchange.Redis", "StackExchange.Redis.CommandValueValueValueMessage");
            feature.AddKnownType("StackExchange.Redis.Message+CommandValueValueValueValueValueMessage,StackExchange.Redis", "StackExchange.Redis.CommandValueValueValueValueValueMessage");
            feature.AddKnownType("StackExchange.Redis.Message+SelectMessage,StackExchange.Redis", "StackExchange.Redis.SelectMessage");
            feature.AddKnownType("StackExchange.Redis.MessageCompletable,StackExchange.Redis", "StackExchange.Redis.MessageCompletable");
            feature.AddKnownType("StackExchange.Redis.NameValueEntry,StackExchange.Redis", "StackExchange.Redis.NameValueEntry");
            feature.AddKnownType("StackExchange.Redis.PhysicalBridge,StackExchange.Redis", "StackExchange.Redis.PhysicalBridge");
            feature.AddKnownType("StackExchange.Redis.PhysicalBridge+State,StackExchange.Redis", "StackExchange.Redis.StackExchange.Redis.PhysicalBridge.State");
            feature.AddKnownType("StackExchange.Redis.PhysicalBridge+BacklogStatus,StackExchange.Redis", "StackExchange.Redis.BacklogStatus");
            feature.AddKnownType("StackExchange.Redis.PhysicalConnection,StackExchange.Redis", "StackExchange.Redis.PhysicalConnection");
            feature.AddKnownType("StackExchange.Redis.PhysicalConnection+ReadMode,StackExchange.Redis", "StackExchange.Redis.ReadMode");
            feature.AddKnownType("StackExchange.Redis.PhysicalConnection+WriteStatus,StackExchange.Redis", "StackExchange.Redis.WriteStatus");
            feature.AddKnownType("StackExchange.Redis.PhysicalConnection+ReadStatus,StackExchange.Redis", "StackExchange.Redis.ReadStatus");
            feature.AddKnownType("StackExchange.Redis.RawResult,StackExchange.Redis", "StackExchange.Redis.RawResult");
            feature.AddKnownType("StackExchange.Redis.RawResult+Tokenizer,StackExchange.Redis", "StackExchange.Redis.Tokenizer");
            feature.AddKnownType("StackExchange.Redis.RedisBase,StackExchange.Redis", "StackExchange.Redis.RedisBase");
            feature.AddKnownType("StackExchange.Redis.RedisBatch,StackExchange.Redis", "StackExchange.Redis.RedisBatch");
            feature.AddKnownType("StackExchange.Redis.RedisChannel,StackExchange.Redis", "StackExchange.Redis.RedisChannel");
            feature.AddKnownType("StackExchange.Redis.RedisChannel+PatternMode,StackExchange.Redis", "StackExchange.Redis.StackExchange.Redis.RedisChannel.PatternMode");
            feature.AddKnownType("StackExchange.Redis.RedisDatabase,StackExchange.Redis", "StackExchange.Redis.RedisDatabase");
            feature.AddKnownType("StackExchange.Redis.RedisDatabase+KeyMigrateCommandMessage,StackExchange.Redis", "StackExchange.Redis.KeyMigrateCommandMessage");
            feature.AddKnownType("StackExchange.Redis.RedisDatabase+ScanEnumerable`1,StackExchange.Redis", "StackExchange.Redis.ScanEnumerable`1'1");
            feature.AddKnownType("StackExchange.Redis.RedisDatabase+ScriptLoadMessage,StackExchange.Redis", "StackExchange.Redis.ScriptLoadMessage");
            feature.AddKnownType("StackExchange.Redis.RedisDatabase+HashScanResultProcessor,StackExchange.Redis", "StackExchange.Redis.HashScanResultProcessor");
            feature.AddKnownType("StackExchange.Redis.RedisDatabase+ScanResultProcessor`1,StackExchange.Redis", "StackExchange.Redis.ScanResultProcessor`1'1");
            feature.AddKnownType("StackExchange.Redis.RedisDatabase+ExecuteMessage,StackExchange.Redis", "StackExchange.Redis.ExecuteMessage");
            feature.AddKnownType("StackExchange.Redis.RedisDatabase+ScriptEvalMessage,StackExchange.Redis", "StackExchange.Redis.ScriptEvalMessage");
            feature.AddKnownType("StackExchange.Redis.RedisDatabase+SetScanResultProcessor,StackExchange.Redis", "StackExchange.Redis.SetScanResultProcessor");
            feature.AddKnownType("StackExchange.Redis.RedisDatabase+SortedSetCombineAndStoreCommandMessage,StackExchange.Redis", "StackExchange.Redis.SortedSetCombineAndStoreCommandMessage");
            feature.AddKnownType("StackExchange.Redis.RedisDatabase+SortedSetScanResultProcessor,StackExchange.Redis", "StackExchange.Redis.SortedSetScanResultProcessor");
            feature.AddKnownType("StackExchange.Redis.RedisDatabase+StringGetWithExpiryMessage,StackExchange.Redis", "StackExchange.Redis.StringGetWithExpiryMessage");
            feature.AddKnownType("StackExchange.Redis.RedisDatabase+StringGetWithExpiryProcessor,StackExchange.Redis", "StackExchange.Redis.StringGetWithExpiryProcessor");
            feature.AddKnownType("StackExchange.Redis.RedisErrorEventArgs,StackExchange.Redis", "StackExchange.Redis.RedisErrorEventArgs");
            feature.AddKnownType("StackExchange.Redis.RedisFeatures,StackExchange.Redis", "StackExchange.Redis.RedisFeatures");
            feature.AddKnownType("StackExchange.Redis.RedisKey,StackExchange.Redis", "StackExchange.Redis.RedisKey");
            feature.AddKnownType("StackExchange.Redis.RedisResult,StackExchange.Redis", "StackExchange.Redis.RedisResult");
            feature.AddKnownType("StackExchange.Redis.RedisResult+ArrayRedisResult,StackExchange.Redis", "StackExchange.Redis.ArrayRedisResult");
            feature.AddKnownType("StackExchange.Redis.RedisResult+ErrorRedisResult,StackExchange.Redis", "StackExchange.Redis.ErrorRedisResult");
            feature.AddKnownType("StackExchange.Redis.RedisResult+SingleRedisResult,StackExchange.Redis", "StackExchange.Redis.SingleRedisResult");
            feature.AddKnownType("StackExchange.Redis.RedisServer,StackExchange.Redis", "StackExchange.Redis.RedisServer");
            feature.AddKnownType("StackExchange.Redis.RedisServer+KeysScanEnumerable,StackExchange.Redis", "StackExchange.Redis.KeysScanEnumerable");
            feature.AddKnownType("StackExchange.Redis.RedisServer+KeysScanEnumerable+ScanResultProcessor,StackExchange.Redis", "StackExchange.Redis.ScanResultProcessor");
            feature.AddKnownType("StackExchange.Redis.RedisStream,StackExchange.Redis", "StackExchange.Redis.RedisStream");
            feature.AddKnownType("StackExchange.Redis.RedisSubscriber,StackExchange.Redis", "StackExchange.Redis.RedisSubscriber");
            feature.AddKnownType("StackExchange.Redis.RedisTransaction,StackExchange.Redis", "StackExchange.Redis.RedisTransaction");
            feature.AddKnownType("StackExchange.Redis.RedisTransaction+QueuedMessage,StackExchange.Redis", "StackExchange.Redis.QueuedMessage");
            feature.AddKnownType("StackExchange.Redis.RedisTransaction+QueuedProcessor,StackExchange.Redis", "StackExchange.Redis.QueuedProcessor");
            feature.AddKnownType("StackExchange.Redis.RedisTransaction+TransactionMessage,StackExchange.Redis", "StackExchange.Redis.TransactionMessage");
            feature.AddKnownType("StackExchange.Redis.RedisTransaction+TransactionProcessor,StackExchange.Redis", "StackExchange.Redis.TransactionProcessor");
            feature.AddKnownType("StackExchange.Redis.RedisValue,StackExchange.Redis", "StackExchange.Redis.RedisValue");
            feature.AddKnownType("StackExchange.Redis.RedisValue+StorageType,StackExchange.Redis", "StackExchange.Redis.StorageType");
            feature.AddKnownType("StackExchange.Redis.RedisValueWithExpiry,StackExchange.Redis", "StackExchange.Redis.RedisValueWithExpiry");
            feature.AddKnownType("StackExchange.Redis.IResultBox,StackExchange.Redis", "StackExchange.Redis.IResultBox");
            feature.AddKnownType("StackExchange.Redis.IResultBox`1,StackExchange.Redis", "StackExchange.Redis.IResultBox`1'1");
            feature.AddKnownType("StackExchange.Redis.SimpleResultBox,StackExchange.Redis", "StackExchange.Redis.SimpleResultBox");
            feature.AddKnownType("StackExchange.Redis.SimpleResultBox`1,StackExchange.Redis", "StackExchange.Redis.SimpleResultBox`1'1");
            feature.AddKnownType("StackExchange.Redis.TaskResultBox`1,StackExchange.Redis", "StackExchange.Redis.TaskResultBox`1'1");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor,StackExchange.Redis", "StackExchange.Redis.ResultProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+TimeSpanProcessor,StackExchange.Redis", "StackExchange.Redis.StackExchange.Redis.ResultProcessor.TimeSpanProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+TimingProcessor,StackExchange.Redis", "StackExchange.Redis.StackExchange.Redis.ResultProcessor.TimingProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+TimingProcessor+TimerMessage,StackExchange.Redis", "StackExchange.Redis.TimerMessage");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+TrackSubscriptionsProcessor,StackExchange.Redis", "StackExchange.Redis.StackExchange.Redis.ResultProcessor.TrackSubscriptionsProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+DemandZeroOrOneProcessor,StackExchange.Redis", "StackExchange.Redis.DemandZeroOrOneProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+ScriptLoadProcessor,StackExchange.Redis", "StackExchange.Redis.ScriptLoadProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+SortedSetEntryProcessor,StackExchange.Redis", "StackExchange.Redis.SortedSetEntryProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+SortedSetEntryArrayProcessor,StackExchange.Redis", "StackExchange.Redis.SortedSetEntryArrayProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+HashEntryArrayProcessor,StackExchange.Redis", "StackExchange.Redis.HashEntryArrayProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+ValuePairInterleavedProcessorBase`1,StackExchange.Redis", "StackExchange.Redis.ValuePairInterleavedProcessorBase`1'1");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+AutoConfigureProcessor,StackExchange.Redis", "StackExchange.Redis.AutoConfigureProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+BooleanProcessor,StackExchange.Redis", "StackExchange.Redis.BooleanProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+ByteArrayProcessor,StackExchange.Redis", "StackExchange.Redis.ByteArrayProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+ClusterNodesProcessor,StackExchange.Redis", "StackExchange.Redis.ClusterNodesProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+ClusterNodesRawProcessor,StackExchange.Redis", "StackExchange.Redis.ClusterNodesRawProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+ConnectionIdentityProcessor,StackExchange.Redis", "StackExchange.Redis.ConnectionIdentityProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+DateTimeProcessor,StackExchange.Redis", "StackExchange.Redis.DateTimeProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+DoubleProcessor,StackExchange.Redis", "StackExchange.Redis.DoubleProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+ExpectBasicStringProcessor,StackExchange.Redis", "StackExchange.Redis.ExpectBasicStringProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+InfoProcessor,StackExchange.Redis", "StackExchange.Redis.InfoProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+Int64Processor,StackExchange.Redis", "StackExchange.Redis.Int64Processor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+PubSubNumSubProcessor,StackExchange.Redis", "StackExchange.Redis.PubSubNumSubProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+NullableDoubleProcessor,StackExchange.Redis", "StackExchange.Redis.NullableDoubleProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+NullableInt64Processor,StackExchange.Redis", "StackExchange.Redis.NullableInt64Processor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+RedisChannelArrayProcessor,StackExchange.Redis", "StackExchange.Redis.RedisChannelArrayProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+RedisChannelArrayProcessor+ChannelState,StackExchange.Redis", "StackExchange.Redis.ChannelState");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+RedisKeyArrayProcessor,StackExchange.Redis", "StackExchange.Redis.RedisKeyArrayProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+RedisKeyProcessor,StackExchange.Redis", "StackExchange.Redis.RedisKeyProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+RedisTypeProcessor,StackExchange.Redis", "StackExchange.Redis.RedisTypeProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+RedisValueArrayProcessor,StackExchange.Redis", "StackExchange.Redis.RedisValueArrayProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+StringArrayProcessor,StackExchange.Redis", "StackExchange.Redis.StringArrayProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+RedisValueGeoPositionProcessor,StackExchange.Redis", "StackExchange.Redis.RedisValueGeoPositionProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+RedisValueGeoPositionArrayProcessor,StackExchange.Redis", "StackExchange.Redis.RedisValueGeoPositionArrayProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+GeoRadiusResultArrayProcessor,StackExchange.Redis", "StackExchange.Redis.GeoRadiusResultArrayProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+RedisValueProcessor,StackExchange.Redis", "StackExchange.Redis.RedisValueProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+RoleProcessor,StackExchange.Redis", "StackExchange.Redis.RoleProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+LeaseProcessor,StackExchange.Redis", "StackExchange.Redis.LeaseProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+ScriptResultProcessor,StackExchange.Redis", "StackExchange.Redis.ScriptResultProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+SingleStreamProcessor,StackExchange.Redis", "StackExchange.Redis.SingleStreamProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+MultiStreamProcessor,StackExchange.Redis", "StackExchange.Redis.MultiStreamProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+StreamConsumerInfoProcessor,StackExchange.Redis", "StackExchange.Redis.StreamConsumerInfoProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+StreamGroupInfoProcessor,StackExchange.Redis", "StackExchange.Redis.StreamGroupInfoProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+InterleavedStreamInfoProcessorBase`1,StackExchange.Redis", "StackExchange.Redis.InterleavedStreamInfoProcessorBase`1'1");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+StreamInfoProcessor,StackExchange.Redis", "StackExchange.Redis.StreamInfoProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+StreamPendingInfoProcessor,StackExchange.Redis", "StackExchange.Redis.StreamPendingInfoProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+StreamPendingMessagesProcessor,StackExchange.Redis", "StackExchange.Redis.StreamPendingMessagesProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+StreamProcessorBase`1,StackExchange.Redis", "StackExchange.Redis.StreamProcessorBase`1'1");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+StringPairInterleavedProcessor,StackExchange.Redis", "StackExchange.Redis.StringPairInterleavedProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+StringProcessor,StackExchange.Redis", "StackExchange.Redis.StringProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+TracerProcessor,StackExchange.Redis", "StackExchange.Redis.TracerProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+SentinelGetMasterAddressByNameProcessor,StackExchange.Redis", "StackExchange.Redis.SentinelGetMasterAddressByNameProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+SentinelGetSentinelAddressesProcessor,StackExchange.Redis", "StackExchange.Redis.SentinelGetSentinelAddressesProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+SentinelGetReplicaAddressesProcessor,StackExchange.Redis", "StackExchange.Redis.SentinelGetReplicaAddressesProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor+SentinelArrayOfArraysProcessor,StackExchange.Redis", "StackExchange.Redis.SentinelArrayOfArraysProcessor");
            feature.AddKnownType("StackExchange.Redis.ResultProcessor`1,StackExchange.Redis", "StackExchange.Redis.ResultProcessor`1'1");
            feature.AddKnownType("StackExchange.Redis.ArrayResultProcessor`1,StackExchange.Redis", "StackExchange.Redis.ArrayResultProcessor`1'1");
            feature.AddKnownType("StackExchange.Redis.Role,StackExchange.Redis", "StackExchange.Redis.Role");
            feature.AddKnownType("StackExchange.Redis.Role+Master,StackExchange.Redis", "StackExchange.Redis.StackExchange.Redis.Role.Master");
            feature.AddKnownType("StackExchange.Redis.Role+Master+Replica,StackExchange.Redis", "StackExchange.Redis.StackExchange.Redis.StackExchange.Redis.Role.Master.Replica");
            feature.AddKnownType("StackExchange.Redis.Role+Replica,StackExchange.Redis", "StackExchange.Redis.StackExchange.Redis.Role.Replica");
            feature.AddKnownType("StackExchange.Redis.Role+Sentinel,StackExchange.Redis", "StackExchange.Redis.StackExchange.Redis.Role.Sentinel");
            feature.AddKnownType("StackExchange.Redis.Role+Unknown,StackExchange.Redis", "StackExchange.Redis.StackExchange.Redis.Role.Unknown");
            feature.AddKnownType("StackExchange.Redis.ScriptParameterMapper+ScriptParameters,StackExchange.Redis", "StackExchange.Redis.StackExchange.Redis.ScriptParameterMapper.ScriptParameters");
            feature.AddKnownType("StackExchange.Redis.ServerCounters,StackExchange.Redis", "StackExchange.Redis.ServerCounters");
            feature.AddKnownType("StackExchange.Redis.UnselectableFlags,StackExchange.Redis", "StackExchange.Redis.UnselectableFlags");
            feature.AddKnownType("StackExchange.Redis.ServerEndPoint,StackExchange.Redis", "StackExchange.Redis.ServerEndPoint");
            feature.AddKnownType("StackExchange.Redis.ServerSelectionStrategy,StackExchange.Redis", "StackExchange.Redis.ServerSelectionStrategy");
            feature.AddKnownType("StackExchange.Redis.SocketManager,StackExchange.Redis", "StackExchange.Redis.SocketManager");
            feature.AddKnownType("StackExchange.Redis.SocketManager+SocketManagerOptions,StackExchange.Redis", "StackExchange.Redis.StackExchange.Redis.SocketManager.SocketManagerOptions");
            feature.AddKnownType("StackExchange.Redis.SocketManager+CallbackOperation,StackExchange.Redis", "StackExchange.Redis.CallbackOperation");
            feature.AddKnownType("StackExchange.Redis.SortedSetEntry,StackExchange.Redis", "StackExchange.Redis.SortedSetEntry");
            feature.AddKnownType("StackExchange.Redis.StreamConsumer,StackExchange.Redis", "StackExchange.Redis.StreamConsumer");
            feature.AddKnownType("StackExchange.Redis.StreamConsumerInfo,StackExchange.Redis", "StackExchange.Redis.StreamConsumerInfo");
            feature.AddKnownType("StackExchange.Redis.StreamEntry,StackExchange.Redis", "StackExchange.Redis.StreamEntry");
            feature.AddKnownType("StackExchange.Redis.StreamGroupInfo,StackExchange.Redis", "StackExchange.Redis.StreamGroupInfo");
            feature.AddKnownType("StackExchange.Redis.StreamInfo,StackExchange.Redis", "StackExchange.Redis.StreamInfo");
            feature.AddKnownType("StackExchange.Redis.StreamPendingInfo,StackExchange.Redis", "StackExchange.Redis.StreamPendingInfo");
            feature.AddKnownType("StackExchange.Redis.StreamPendingMessageInfo,StackExchange.Redis", "StackExchange.Redis.StreamPendingMessageInfo");
            feature.AddKnownType("StackExchange.Redis.StreamPosition,StackExchange.Redis", "StackExchange.Redis.StreamPosition");
            feature.AddKnownType("StackExchange.Redis.KeyspaceIsolation.BatchWrapper,StackExchange.Redis", "StackExchange.Redis.KeyspaceIsolation.BatchWrapper");
            feature.AddKnownType("StackExchange.Redis.KeyspaceIsolation.DatabaseWrapper,StackExchange.Redis", "StackExchange.Redis.KeyspaceIsolation.DatabaseWrapper");
            feature.AddKnownType("StackExchange.Redis.KeyspaceIsolation.TransactionWrapper,StackExchange.Redis", "StackExchange.Redis.KeyspaceIsolation.TransactionWrapper");
            feature.AddKnownType("StackExchange.Redis.KeyspaceIsolation.WrapperBase`1,StackExchange.Redis", "StackExchange.Redis.KeyspaceIsolation.WrapperBase`1'1");
            feature.AddKnownType("StackExchange.Redis.Profiling.IProfiledCommand,StackExchange.Redis", "StackExchange.Redis.Profiling.IProfiledCommand");
            feature.AddKnownType("StackExchange.Redis.Profiling.ProfiledCommand,StackExchange.Redis", "StackExchange.Redis.Profiling.ProfiledCommand");
            feature.AddKnownType("StackExchange.Redis.Profiling.ProfiledCommandEnumerable,StackExchange.Redis", "StackExchange.Redis.Profiling.ProfiledCommandEnumerable");
            feature.AddKnownType("StackExchange.Redis.Profiling.ProfiledCommandEnumerable+Enumerator,StackExchange.Redis", "StackExchange.Redis.Profiling.StackExchange.Redis.Profiling.ProfiledCommandEnumerable.Enumerator");
            feature.AddKnownType("StackExchange.Redis.Profiling.ProfilingSession,StackExchange.Redis", "StackExchange.Redis.Profiling.ProfilingSession");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Collections.Concurrent", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Collections.Concurrent.BlockingCollection`1", "BlockingCollection`1'1");
            feature.AddKnownType("System.Collections.Concurrent.ConcurrentBag`1", "ConcurrentBag`1'1");
            feature.AddKnownType("System.Collections.Concurrent.ConcurrentDictionary`2", "ConcurrentDictionary`2'2");
            feature.AddKnownType("System.Collections.Concurrent.ConcurrentStack`1", "ConcurrentStack`1'1");
            feature.AddKnownType("System.Collections.Concurrent.EnumerablePartitionerOptions", "EnumerablePartitionerOptions");
            feature.AddKnownType("System.Collections.Concurrent.OrderablePartitioner`1", "OrderablePartitioner`1'1");
            feature.AddKnownType("System.Collections.Concurrent.Partitioner`1", "Partitioner`1'1");
            feature.AddKnownType("System.Collections.Concurrent.ConcurrentQueue`1", "ConcurrentQueue`1'1");
            feature.AddKnownType("System.Collections.Concurrent.IProducerConsumerCollection`1", "IProducerConsumerCollection`1'1");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Collections", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Collections.BitArray", "BitArray");
            feature.AddKnownType("System.Collections.Generic.LinkedListNode`1", "LinkedListNode`1'1");
            feature.AddKnownType("System.Collections.Generic.LinkedList`1", "LinkedList`1'1");
            feature.AddKnownType("System.Collections.Generic.LinkedList`1+Enumerator", "LinkedList`1'1.Enumerator'1");
            feature.AddKnownType("System.Collections.Generic.PriorityQueue`2", "PriorityQueue`2'2");
            feature.AddKnownType("System.Collections.Generic.PriorityQueue`2+UnorderedItemsCollection", "PriorityQueue`2'2.UnorderedItemsCollection'2");
            feature.AddKnownType("System.Collections.Generic.PriorityQueue`2+UnorderedItemsCollection+Enumerator", "PriorityQueue`2'2.UnorderedItemsCollection'2.Enumerator'2");
            feature.AddKnownType("System.Collections.Generic.SortedDictionary`2", "SortedDictionary`2'2");
            feature.AddKnownType("System.Collections.Generic.SortedDictionary`2+Enumerator", "SortedDictionary`2'2.Enumerator'2");
            feature.AddKnownType("System.Collections.Generic.SortedDictionary`2+KeyCollection", "SortedDictionary`2'2.KeyCollection'2");
            feature.AddKnownType("System.Collections.Generic.SortedDictionary`2+KeyCollection+Enumerator", "SortedDictionary`2'2.KeyCollection'2.Enumerator'2");
            feature.AddKnownType("System.Collections.Generic.SortedDictionary`2+ValueCollection", "SortedDictionary`2'2.ValueCollection'2");
            feature.AddKnownType("System.Collections.Generic.SortedDictionary`2+ValueCollection+Enumerator", "SortedDictionary`2'2.ValueCollection'2.Enumerator'2");
            feature.AddKnownType("System.Collections.Generic.SortedList`2", "SortedList`2'2");
            feature.AddKnownType("System.Collections.Generic.SortedSet`1", "SortedSet`1'1");
            feature.AddKnownType("System.Collections.Generic.SortedSet`1+Enumerator", "SortedSet`1'1.Enumerator'1");
            feature.AddKnownType("System.Collections.Generic.Stack`1", "Stack`1'1");
            feature.AddKnownType("System.Collections.Generic.Stack`1+Enumerator", "Stack`1'1.Enumerator'1");
            feature.AddKnownType("System.Collections.Generic.Comparer`1", "Comparer`1'1");
            feature.AddKnownType("System.Collections.Generic.Dictionary`2", "Dictionary`2'2");
            feature.AddKnownType("System.Collections.Generic.Dictionary`2+Enumerator", "Dictionary`2'2.Enumerator'2");
            feature.AddKnownType("System.Collections.Generic.Dictionary`2+KeyCollection", "Dictionary`2'2.KeyCollection'2");
            feature.AddKnownType("System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator", "Dictionary`2'2.KeyCollection'2.Enumerator'2");
            feature.AddKnownType("System.Collections.Generic.Dictionary`2+ValueCollection", "Dictionary`2'2.ValueCollection'2");
            feature.AddKnownType("System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator", "Dictionary`2'2.ValueCollection'2.Enumerator'2");
            feature.AddKnownType("System.Collections.Generic.EqualityComparer`1", "EqualityComparer`1'1");
            feature.AddKnownType("System.Collections.Generic.HashSet`1", "HashSet`1'1");
            feature.AddKnownType("System.Collections.Generic.HashSet`1+Enumerator", "HashSet`1'1.Enumerator'1");
            feature.AddKnownType("System.Collections.Generic.List`1", "List`1'1");
            feature.AddKnownType("System.Collections.Generic.List`1+Enumerator", "List`1'1.Enumerator'1");
            feature.AddKnownType("System.Collections.Generic.Queue`1", "Queue`1'1");
            feature.AddKnownType("System.Collections.Generic.Queue`1+Enumerator", "Queue`1'1.Enumerator'1");
            feature.AddKnownType("System.Collections.Generic.ReferenceEqualityComparer", "ReferenceEqualityComparer");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Collections.Immutable", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Collections.Immutable.IImmutableDictionary`2", "IImmutableDictionary`2'2");
            feature.AddKnownType("System.Collections.Immutable.IImmutableList`1", "IImmutableList`1'1");
            feature.AddKnownType("System.Collections.Immutable.IImmutableQueue`1", "IImmutableQueue`1'1");
            feature.AddKnownType("System.Collections.Immutable.IImmutableSet`1", "IImmutableSet`1'1");
            feature.AddKnownType("System.Collections.Immutable.IImmutableStack`1", "IImmutableStack`1'1");
            feature.AddKnownType("System.Collections.Immutable.ImmutableArray`1", "ImmutableArray`1'1");
            feature.AddKnownType("System.Collections.Immutable.ImmutableArray`1+Builder", "ImmutableArray`1'1.Builder'1");
            feature.AddKnownType("System.Collections.Immutable.ImmutableArray`1+Enumerator", "ImmutableArray`1'1.Enumerator'1");
            feature.AddKnownType("System.Collections.Immutable.ImmutableDictionary`2", "ImmutableDictionary`2'2");
            feature.AddKnownType("System.Collections.Immutable.ImmutableDictionary`2+Builder", "ImmutableDictionary`2'2.Builder'2");
            feature.AddKnownType("System.Collections.Immutable.ImmutableDictionary`2+Enumerator", "ImmutableDictionary`2'2.Enumerator'2");
            feature.AddKnownType("System.Collections.Immutable.ImmutableHashSet`1", "ImmutableHashSet`1'1");
            feature.AddKnownType("System.Collections.Immutable.ImmutableHashSet`1+Builder", "ImmutableHashSet`1'1.Builder'1");
            feature.AddKnownType("System.Collections.Immutable.ImmutableHashSet`1+Enumerator", "ImmutableHashSet`1'1.Enumerator'1");
            feature.AddKnownType("System.Collections.Immutable.ImmutableList`1", "ImmutableList`1'1");
            feature.AddKnownType("System.Collections.Immutable.ImmutableList`1+Builder", "ImmutableList`1'1.Builder'1");
            feature.AddKnownType("System.Collections.Immutable.ImmutableList`1+Enumerator", "ImmutableList`1'1.Enumerator'1");
            feature.AddKnownType("System.Collections.Immutable.ImmutableQueue`1", "ImmutableQueue`1'1");
            feature.AddKnownType("System.Collections.Immutable.ImmutableQueue`1+Enumerator", "ImmutableQueue`1'1.Enumerator'1");
            feature.AddKnownType("System.Collections.Immutable.ImmutableSortedDictionary`2", "ImmutableSortedDictionary`2'2");
            feature.AddKnownType("System.Collections.Immutable.ImmutableSortedDictionary`2+Builder", "ImmutableSortedDictionary`2'2.Builder'2");
            feature.AddKnownType("System.Collections.Immutable.ImmutableSortedDictionary`2+Enumerator", "ImmutableSortedDictionary`2'2.Enumerator'2");
            feature.AddKnownType("System.Collections.Immutable.ImmutableSortedSet`1", "ImmutableSortedSet`1'1");
            feature.AddKnownType("System.Collections.Immutable.ImmutableSortedSet`1+Builder", "ImmutableSortedSet`1'1.Builder'1");
            feature.AddKnownType("System.Collections.Immutable.ImmutableSortedSet`1+Enumerator", "ImmutableSortedSet`1'1.Enumerator'1");
            feature.AddKnownType("System.Collections.Immutable.ImmutableStack`1", "ImmutableStack`1'1");
            feature.AddKnownType("System.Collections.Immutable.ImmutableStack`1+Enumerator", "ImmutableStack`1'1.Enumerator'1");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Collections.NonGeneric", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Collections.CaseInsensitiveComparer", "CaseInsensitiveComparer");
            feature.AddKnownType("System.Collections.CaseInsensitiveHashCodeProvider", "CaseInsensitiveHashCodeProvider");
            feature.AddKnownType("System.Collections.CollectionBase", "CollectionBase");
            feature.AddKnownType("System.Collections.DictionaryBase", "DictionaryBase");
            feature.AddKnownType("System.Collections.Queue", "Queue");
            feature.AddKnownType("System.Collections.ReadOnlyCollectionBase", "ReadOnlyCollectionBase");
            feature.AddKnownType("System.Collections.SortedList", "SortedList");
            feature.AddKnownType("System.Collections.Stack", "Stack");
            feature.AddKnownType("System.Collections.Specialized.CollectionsUtil", "CollectionsUtil");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Collections.Specialized", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Collections.Specialized.BitVector32", "BitVector32");
            feature.AddKnownType("System.Collections.Specialized.BitVector32+Section", "BitVector32.Section");
            feature.AddKnownType("System.Collections.Specialized.HybridDictionary", "HybridDictionary");
            feature.AddKnownType("System.Collections.Specialized.IOrderedDictionary", "IOrderedDictionary");
            feature.AddKnownType("System.Collections.Specialized.ListDictionary", "ListDictionary");
            feature.AddKnownType("System.Collections.Specialized.NameObjectCollectionBase", "NameObjectCollectionBase");
            feature.AddKnownType("System.Collections.Specialized.NameObjectCollectionBase+KeysCollection", "NameObjectCollectionBase.KeysCollection");
            feature.AddKnownType("System.Collections.Specialized.NameValueCollection", "NameValueCollection");
            feature.AddKnownType("System.Collections.Specialized.OrderedDictionary", "OrderedDictionary");
            feature.AddKnownType("System.Collections.Specialized.StringCollection", "StringCollection");
            feature.AddKnownType("System.Collections.Specialized.StringDictionary", "StringDictionary");
            feature.AddKnownType("System.Collections.Specialized.StringEnumerator", "StringEnumerator");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.ComponentModel.Annotations", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider", "AssociatedMetadataTypeTypeDescriptionProvider");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.AssociationAttribute", "AssociationAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.CompareAttribute", "CompareAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute", "ConcurrencyCheckAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.CreditCardAttribute", "CreditCardAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.CustomValidationAttribute", "CustomValidationAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.DataType", "DataType");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.DataTypeAttribute", "DataTypeAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.DisplayAttribute", "DisplayAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.DisplayColumnAttribute", "DisplayColumnAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.DisplayFormatAttribute", "DisplayFormatAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.EditableAttribute", "EditableAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.EmailAddressAttribute", "EmailAddressAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.EnumDataTypeAttribute", "EnumDataTypeAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.FileExtensionsAttribute", "FileExtensionsAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.FilterUIHintAttribute", "FilterUIHintAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.IValidatableObject", "IValidatableObject");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.KeyAttribute", "KeyAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.MaxLengthAttribute", "MaxLengthAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.MetadataTypeAttribute", "MetadataTypeAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.MinLengthAttribute", "MinLengthAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.PhoneAttribute", "PhoneAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.RangeAttribute", "RangeAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.RegularExpressionAttribute", "RegularExpressionAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.RequiredAttribute", "RequiredAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute", "ScaffoldColumnAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.StringLengthAttribute", "StringLengthAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.TimestampAttribute", "TimestampAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.UIHintAttribute", "UIHintAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.UrlAttribute", "UrlAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.ValidationAttribute", "ValidationAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.ValidationContext", "ValidationContext");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.ValidationException", "ValidationException");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.ValidationResult", "ValidationResult");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.Schema.ColumnAttribute", "ColumnAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute", "ComplexTypeAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute", "DatabaseGeneratedAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption", "DatabaseGeneratedOption");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute", "ForeignKeyAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute", "InversePropertyAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute", "NotMappedAttribute");
            feature.AddKnownType("System.ComponentModel.DataAnnotations.Schema.TableAttribute", "TableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.ComponentModel", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.IServiceProvider", "IServiceProvider");
            feature.AddKnownType("System.ComponentModel.CancelEventArgs", "CancelEventArgs");
            feature.AddKnownType("System.ComponentModel.IChangeTracking", "IChangeTracking");
            feature.AddKnownType("System.ComponentModel.IEditableObject", "IEditableObject");
            feature.AddKnownType("System.ComponentModel.IRevertibleChangeTracking", "IRevertibleChangeTracking");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.ComponentModel.EventBasedAsync", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.ComponentModel.AsyncCompletedEventArgs", "AsyncCompletedEventArgs");
            feature.AddKnownType("System.ComponentModel.AsyncOperation", "AsyncOperation");
            feature.AddKnownType("System.ComponentModel.BackgroundWorker", "BackgroundWorker");
            feature.AddKnownType("System.ComponentModel.DoWorkEventArgs", "DoWorkEventArgs");
            feature.AddKnownType("System.ComponentModel.ProgressChangedEventArgs", "ProgressChangedEventArgs");
            feature.AddKnownType("System.ComponentModel.RunWorkerCompletedEventArgs", "RunWorkerCompletedEventArgs");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.ComponentModel.Primitives", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.ComponentModel.BrowsableAttribute", "BrowsableAttribute");
            feature.AddKnownType("System.ComponentModel.CategoryAttribute", "CategoryAttribute");
            feature.AddKnownType("System.ComponentModel.Component", "Component");
            feature.AddKnownType("System.ComponentModel.ComponentCollection", "ComponentCollection");
            feature.AddKnownType("System.ComponentModel.DescriptionAttribute", "DescriptionAttribute");
            feature.AddKnownType("System.ComponentModel.DesignerAttribute", "DesignerAttribute");
            feature.AddKnownType("System.ComponentModel.DesignerCategoryAttribute", "DesignerCategoryAttribute");
            feature.AddKnownType("System.ComponentModel.DesignerSerializationVisibility", "DesignerSerializationVisibility");
            feature.AddKnownType("System.ComponentModel.DesignerSerializationVisibilityAttribute", "DesignerSerializationVisibilityAttribute");
            feature.AddKnownType("System.ComponentModel.DesignOnlyAttribute", "DesignOnlyAttribute");
            feature.AddKnownType("System.ComponentModel.DisplayNameAttribute", "DisplayNameAttribute");
            feature.AddKnownType("System.ComponentModel.EditorAttribute", "EditorAttribute");
            feature.AddKnownType("System.ComponentModel.EventHandlerList", "EventHandlerList");
            feature.AddKnownType("System.ComponentModel.IComponent", "IComponent");
            feature.AddKnownType("System.ComponentModel.IContainer", "IContainer");
            feature.AddKnownType("System.ComponentModel.ImmutableObjectAttribute", "ImmutableObjectAttribute");
            feature.AddKnownType("System.ComponentModel.InitializationEventAttribute", "InitializationEventAttribute");
            feature.AddKnownType("System.ComponentModel.InvalidAsynchronousStateException", "InvalidAsynchronousStateException");
            feature.AddKnownType("System.ComponentModel.InvalidEnumArgumentException", "InvalidEnumArgumentException");
            feature.AddKnownType("System.ComponentModel.ISite", "ISite");
            feature.AddKnownType("System.ComponentModel.ISupportInitialize", "ISupportInitialize");
            feature.AddKnownType("System.ComponentModel.ISynchronizeInvoke", "ISynchronizeInvoke");
            feature.AddKnownType("System.ComponentModel.LocalizableAttribute", "LocalizableAttribute");
            feature.AddKnownType("System.ComponentModel.MergablePropertyAttribute", "MergablePropertyAttribute");
            feature.AddKnownType("System.ComponentModel.NotifyParentPropertyAttribute", "NotifyParentPropertyAttribute");
            feature.AddKnownType("System.ComponentModel.ParenthesizePropertyNameAttribute", "ParenthesizePropertyNameAttribute");
            feature.AddKnownType("System.ComponentModel.ReadOnlyAttribute", "ReadOnlyAttribute");
            feature.AddKnownType("System.ComponentModel.RefreshProperties", "RefreshProperties");
            feature.AddKnownType("System.ComponentModel.RefreshPropertiesAttribute", "RefreshPropertiesAttribute");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.DesignerSerializerAttribute", "DesignerSerializerAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.ComponentModel.TypeConverter", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.UriTypeConverter", "UriTypeConverter");
            feature.AddKnownType("System.ComponentModel.AddingNewEventArgs", "AddingNewEventArgs");
            feature.AddKnownType("System.ComponentModel.AmbientValueAttribute", "AmbientValueAttribute");
            feature.AddKnownType("System.ComponentModel.ArrayConverter", "ArrayConverter");
            feature.AddKnownType("System.ComponentModel.AttributeCollection", "AttributeCollection");
            feature.AddKnownType("System.ComponentModel.AttributeProviderAttribute", "AttributeProviderAttribute");
            feature.AddKnownType("System.ComponentModel.BaseNumberConverter", "BaseNumberConverter");
            feature.AddKnownType("System.ComponentModel.BindableAttribute", "BindableAttribute");
            feature.AddKnownType("System.ComponentModel.BindableSupport", "BindableSupport");
            feature.AddKnownType("System.ComponentModel.BindingDirection", "BindingDirection");
            feature.AddKnownType("System.ComponentModel.BindingList`1", "BindingList`1'1");
            feature.AddKnownType("System.ComponentModel.BooleanConverter", "BooleanConverter");
            feature.AddKnownType("System.ComponentModel.ByteConverter", "ByteConverter");
            feature.AddKnownType("System.ComponentModel.CharConverter", "CharConverter");
            feature.AddKnownType("System.ComponentModel.CollectionChangeAction", "CollectionChangeAction");
            feature.AddKnownType("System.ComponentModel.CollectionChangeEventArgs", "CollectionChangeEventArgs");
            feature.AddKnownType("System.ComponentModel.CollectionConverter", "CollectionConverter");
            feature.AddKnownType("System.ComponentModel.ComplexBindingPropertiesAttribute", "ComplexBindingPropertiesAttribute");
            feature.AddKnownType("System.ComponentModel.ComponentConverter", "ComponentConverter");
            feature.AddKnownType("System.ComponentModel.ComponentEditor", "ComponentEditor");
            feature.AddKnownType("System.ComponentModel.ComponentResourceManager", "ComponentResourceManager");
            feature.AddKnownType("System.ComponentModel.Container", "Container");
            feature.AddKnownType("System.ComponentModel.ContainerFilterService", "ContainerFilterService");
            feature.AddKnownType("System.ComponentModel.CultureInfoConverter", "CultureInfoConverter");
            feature.AddKnownType("System.ComponentModel.CustomTypeDescriptor", "CustomTypeDescriptor");
            feature.AddKnownType("System.ComponentModel.DataObjectAttribute", "DataObjectAttribute");
            feature.AddKnownType("System.ComponentModel.DataObjectFieldAttribute", "DataObjectFieldAttribute");
            feature.AddKnownType("System.ComponentModel.DataObjectMethodAttribute", "DataObjectMethodAttribute");
            feature.AddKnownType("System.ComponentModel.DataObjectMethodType", "DataObjectMethodType");
            feature.AddKnownType("System.ComponentModel.DateOnlyConverter", "DateOnlyConverter");
            feature.AddKnownType("System.ComponentModel.DateTimeConverter", "DateTimeConverter");
            feature.AddKnownType("System.ComponentModel.DateTimeOffsetConverter", "DateTimeOffsetConverter");
            feature.AddKnownType("System.ComponentModel.DecimalConverter", "DecimalConverter");
            feature.AddKnownType("System.ComponentModel.DefaultBindingPropertyAttribute", "DefaultBindingPropertyAttribute");
            feature.AddKnownType("System.ComponentModel.DefaultEventAttribute", "DefaultEventAttribute");
            feature.AddKnownType("System.ComponentModel.DefaultPropertyAttribute", "DefaultPropertyAttribute");
            feature.AddKnownType("System.ComponentModel.DesignTimeVisibleAttribute", "DesignTimeVisibleAttribute");
            feature.AddKnownType("System.ComponentModel.DoubleConverter", "DoubleConverter");
            feature.AddKnownType("System.ComponentModel.EnumConverter", "EnumConverter");
            feature.AddKnownType("System.ComponentModel.EventDescriptor", "EventDescriptor");
            feature.AddKnownType("System.ComponentModel.EventDescriptorCollection", "EventDescriptorCollection");
            feature.AddKnownType("System.ComponentModel.ExpandableObjectConverter", "ExpandableObjectConverter");
            feature.AddKnownType("System.ComponentModel.ExtenderProvidedPropertyAttribute", "ExtenderProvidedPropertyAttribute");
            feature.AddKnownType("System.ComponentModel.GuidConverter", "GuidConverter");
            feature.AddKnownType("System.ComponentModel.HalfConverter", "HalfConverter");
            feature.AddKnownType("System.ComponentModel.HandledEventArgs", "HandledEventArgs");
            feature.AddKnownType("System.ComponentModel.IBindingList", "IBindingList");
            feature.AddKnownType("System.ComponentModel.IBindingListView", "IBindingListView");
            feature.AddKnownType("System.ComponentModel.ICancelAddNew", "ICancelAddNew");
            feature.AddKnownType("System.ComponentModel.IComNativeDescriptorHandler", "IComNativeDescriptorHandler");
            feature.AddKnownType("System.ComponentModel.ICustomTypeDescriptor", "ICustomTypeDescriptor");
            feature.AddKnownType("System.ComponentModel.IDataErrorInfo", "IDataErrorInfo");
            feature.AddKnownType("System.ComponentModel.IExtenderProvider", "IExtenderProvider");
            feature.AddKnownType("System.ComponentModel.IIntellisenseBuilder", "IIntellisenseBuilder");
            feature.AddKnownType("System.ComponentModel.IListSource", "IListSource");
            feature.AddKnownType("System.ComponentModel.INestedContainer", "INestedContainer");
            feature.AddKnownType("System.ComponentModel.INestedSite", "INestedSite");
            feature.AddKnownType("System.ComponentModel.InheritanceAttribute", "InheritanceAttribute");
            feature.AddKnownType("System.ComponentModel.InheritanceLevel", "InheritanceLevel");
            feature.AddKnownType("System.ComponentModel.InstallerTypeAttribute", "InstallerTypeAttribute");
            feature.AddKnownType("System.ComponentModel.InstanceCreationEditor", "InstanceCreationEditor");
            feature.AddKnownType("System.ComponentModel.Int128Converter", "Int128Converter");
            feature.AddKnownType("System.ComponentModel.Int16Converter", "Int16Converter");
            feature.AddKnownType("System.ComponentModel.Int32Converter", "Int32Converter");
            feature.AddKnownType("System.ComponentModel.Int64Converter", "Int64Converter");
            feature.AddKnownType("System.ComponentModel.IRaiseItemChangedEvents", "IRaiseItemChangedEvents");
            feature.AddKnownType("System.ComponentModel.ISupportInitializeNotification", "ISupportInitializeNotification");
            feature.AddKnownType("System.ComponentModel.ITypeDescriptorContext", "ITypeDescriptorContext");
            feature.AddKnownType("System.ComponentModel.ITypedList", "ITypedList");
            feature.AddKnownType("System.ComponentModel.License", "License");
            feature.AddKnownType("System.ComponentModel.LicenseContext", "LicenseContext");
            feature.AddKnownType("System.ComponentModel.LicenseException", "LicenseException");
            feature.AddKnownType("System.ComponentModel.LicenseManager", "LicenseManager");
            feature.AddKnownType("System.ComponentModel.LicenseProvider", "LicenseProvider");
            feature.AddKnownType("System.ComponentModel.LicenseProviderAttribute", "LicenseProviderAttribute");
            feature.AddKnownType("System.ComponentModel.LicenseUsageMode", "LicenseUsageMode");
            feature.AddKnownType("System.ComponentModel.LicFileLicenseProvider", "LicFileLicenseProvider");
            feature.AddKnownType("System.ComponentModel.ListBindableAttribute", "ListBindableAttribute");
            feature.AddKnownType("System.ComponentModel.ListChangedEventArgs", "ListChangedEventArgs");
            feature.AddKnownType("System.ComponentModel.ListChangedType", "ListChangedType");
            feature.AddKnownType("System.ComponentModel.ListSortDescription", "ListSortDescription");
            feature.AddKnownType("System.ComponentModel.ListSortDescriptionCollection", "ListSortDescriptionCollection");
            feature.AddKnownType("System.ComponentModel.ListSortDirection", "ListSortDirection");
            feature.AddKnownType("System.ComponentModel.LookupBindingPropertiesAttribute", "LookupBindingPropertiesAttribute");
            feature.AddKnownType("System.ComponentModel.MarshalByValueComponent", "MarshalByValueComponent");
            feature.AddKnownType("System.ComponentModel.MaskedTextProvider", "MaskedTextProvider");
            feature.AddKnownType("System.ComponentModel.MaskedTextResultHint", "MaskedTextResultHint");
            feature.AddKnownType("System.ComponentModel.MemberDescriptor", "MemberDescriptor");
            feature.AddKnownType("System.ComponentModel.MultilineStringConverter", "MultilineStringConverter");
            feature.AddKnownType("System.ComponentModel.NestedContainer", "NestedContainer");
            feature.AddKnownType("System.ComponentModel.NullableConverter", "NullableConverter");
            feature.AddKnownType("System.ComponentModel.PasswordPropertyTextAttribute", "PasswordPropertyTextAttribute");
            feature.AddKnownType("System.ComponentModel.PropertyDescriptor", "PropertyDescriptor");
            feature.AddKnownType("System.ComponentModel.PropertyDescriptorCollection", "PropertyDescriptorCollection");
            feature.AddKnownType("System.ComponentModel.PropertyTabAttribute", "PropertyTabAttribute");
            feature.AddKnownType("System.ComponentModel.PropertyTabScope", "PropertyTabScope");
            feature.AddKnownType("System.ComponentModel.ProvidePropertyAttribute", "ProvidePropertyAttribute");
            feature.AddKnownType("System.ComponentModel.RecommendedAsConfigurableAttribute", "RecommendedAsConfigurableAttribute");
            feature.AddKnownType("System.ComponentModel.ReferenceConverter", "ReferenceConverter");
            feature.AddKnownType("System.ComponentModel.RefreshEventArgs", "RefreshEventArgs");
            feature.AddKnownType("System.ComponentModel.RunInstallerAttribute", "RunInstallerAttribute");
            feature.AddKnownType("System.ComponentModel.SByteConverter", "SByteConverter");
            feature.AddKnownType("System.ComponentModel.SettingsBindableAttribute", "SettingsBindableAttribute");
            feature.AddKnownType("System.ComponentModel.SingleConverter", "SingleConverter");
            feature.AddKnownType("System.ComponentModel.StringConverter", "StringConverter");
            feature.AddKnownType("System.ComponentModel.TimeOnlyConverter", "TimeOnlyConverter");
            feature.AddKnownType("System.ComponentModel.TimeSpanConverter", "TimeSpanConverter");
            feature.AddKnownType("System.ComponentModel.ToolboxItemAttribute", "ToolboxItemAttribute");
            feature.AddKnownType("System.ComponentModel.ToolboxItemFilterAttribute", "ToolboxItemFilterAttribute");
            feature.AddKnownType("System.ComponentModel.ToolboxItemFilterType", "ToolboxItemFilterType");
            feature.AddKnownType("System.ComponentModel.TypeConverter", "TypeConverter");
            feature.AddKnownType("System.ComponentModel.TypeConverter+SimplePropertyDescriptor", "SimplePropertyDescriptor");
            feature.AddKnownType("System.ComponentModel.TypeConverter+StandardValuesCollection", "TypeConverter.StandardValuesCollection");
            feature.AddKnownType("System.ComponentModel.TypeDescriptionProvider", "TypeDescriptionProvider");
            feature.AddKnownType("System.ComponentModel.TypeDescriptor", "TypeDescriptor");
            feature.AddKnownType("System.ComponentModel.TypeListConverter", "TypeListConverter");
            feature.AddKnownType("System.ComponentModel.UInt16Converter", "UInt16Converter");
            feature.AddKnownType("System.ComponentModel.UInt32Converter", "UInt32Converter");
            feature.AddKnownType("System.ComponentModel.UInt64Converter", "UInt64Converter");
            feature.AddKnownType("System.ComponentModel.UInt128Converter", "UInt128Converter");
            feature.AddKnownType("System.ComponentModel.VersionConverter", "VersionConverter");
            feature.AddKnownType("System.ComponentModel.WarningException", "WarningException");
            feature.AddKnownType("System.ComponentModel.Design.DesignerOptionService", "DesignerOptionService");
            feature.AddKnownType("System.ComponentModel.Design.DesignerOptionService+DesignerOptionCollection", "DesignerOptionService.DesignerOptionCollection");
            feature.AddKnownType("System.ComponentModel.Design.DesignerOptionService+DesignerOptionConverter", "DesignerOptionConverter");
            feature.AddKnownType("System.ComponentModel.Design.ActiveDesignerEventArgs", "ActiveDesignerEventArgs");
            feature.AddKnownType("System.ComponentModel.Design.CheckoutException", "CheckoutException");
            feature.AddKnownType("System.ComponentModel.Design.CommandID", "CommandID");
            feature.AddKnownType("System.ComponentModel.Design.ComponentChangedEventArgs", "ComponentChangedEventArgs");
            feature.AddKnownType("System.ComponentModel.Design.ComponentChangingEventArgs", "ComponentChangingEventArgs");
            feature.AddKnownType("System.ComponentModel.Design.ComponentEventArgs", "ComponentEventArgs");
            feature.AddKnownType("System.ComponentModel.Design.ComponentRenameEventArgs", "ComponentRenameEventArgs");
            feature.AddKnownType("System.ComponentModel.Design.DesignerCollection", "DesignerCollection");
            feature.AddKnownType("System.ComponentModel.Design.DesignerEventArgs", "DesignerEventArgs");
            feature.AddKnownType("System.ComponentModel.Design.DesignerTransaction", "DesignerTransaction");
            feature.AddKnownType("System.ComponentModel.Design.DesignerTransactionCloseEventArgs", "DesignerTransactionCloseEventArgs");
            feature.AddKnownType("System.ComponentModel.Design.DesignerVerb", "DesignerVerb");
            feature.AddKnownType("System.ComponentModel.Design.DesignerVerbCollection", "DesignerVerbCollection");
            feature.AddKnownType("System.ComponentModel.Design.DesigntimeLicenseContext", "DesigntimeLicenseContext");
            feature.AddKnownType("System.ComponentModel.Design.DesigntimeLicenseContextSerializer", "DesigntimeLicenseContextSerializer");
            feature.AddKnownType("System.ComponentModel.Design.HelpContextType", "HelpContextType");
            feature.AddKnownType("System.ComponentModel.Design.HelpKeywordAttribute", "HelpKeywordAttribute");
            feature.AddKnownType("System.ComponentModel.Design.HelpKeywordType", "HelpKeywordType");
            feature.AddKnownType("System.ComponentModel.Design.IComponentChangeService", "IComponentChangeService");
            feature.AddKnownType("System.ComponentModel.Design.IComponentDiscoveryService", "IComponentDiscoveryService");
            feature.AddKnownType("System.ComponentModel.Design.IComponentInitializer", "IComponentInitializer");
            feature.AddKnownType("System.ComponentModel.Design.IDesigner", "IDesigner");
            feature.AddKnownType("System.ComponentModel.Design.IDesignerEventService", "IDesignerEventService");
            feature.AddKnownType("System.ComponentModel.Design.IDesignerFilter", "IDesignerFilter");
            feature.AddKnownType("System.ComponentModel.Design.IDesignerHost", "IDesignerHost");
            feature.AddKnownType("System.ComponentModel.Design.IDesignerHostTransactionState", "IDesignerHostTransactionState");
            feature.AddKnownType("System.ComponentModel.Design.IDesignerOptionService", "IDesignerOptionService");
            feature.AddKnownType("System.ComponentModel.Design.IDictionaryService", "IDictionaryService");
            feature.AddKnownType("System.ComponentModel.Design.IEventBindingService", "IEventBindingService");
            feature.AddKnownType("System.ComponentModel.Design.IExtenderListService", "IExtenderListService");
            feature.AddKnownType("System.ComponentModel.Design.IExtenderProviderService", "IExtenderProviderService");
            feature.AddKnownType("System.ComponentModel.Design.IHelpService", "IHelpService");
            feature.AddKnownType("System.ComponentModel.Design.IInheritanceService", "IInheritanceService");
            feature.AddKnownType("System.ComponentModel.Design.IMenuCommandService", "IMenuCommandService");
            feature.AddKnownType("System.ComponentModel.Design.IReferenceService", "IReferenceService");
            feature.AddKnownType("System.ComponentModel.Design.IResourceService", "IResourceService");
            feature.AddKnownType("System.ComponentModel.Design.IRootDesigner", "IRootDesigner");
            feature.AddKnownType("System.ComponentModel.Design.ISelectionService", "ISelectionService");
            feature.AddKnownType("System.ComponentModel.Design.IServiceContainer", "IServiceContainer");
            feature.AddKnownType("System.ComponentModel.Design.ITreeDesigner", "ITreeDesigner");
            feature.AddKnownType("System.ComponentModel.Design.ITypeDescriptorFilterService", "ITypeDescriptorFilterService");
            feature.AddKnownType("System.ComponentModel.Design.ITypeDiscoveryService", "ITypeDiscoveryService");
            feature.AddKnownType("System.ComponentModel.Design.ITypeResolutionService", "ITypeResolutionService");
            feature.AddKnownType("System.ComponentModel.Design.MenuCommand", "MenuCommand");
            feature.AddKnownType("System.ComponentModel.Design.SelectionTypes", "SelectionTypes");
            feature.AddKnownType("System.ComponentModel.Design.ServiceContainer", "ServiceContainer");
            feature.AddKnownType("System.ComponentModel.Design.StandardCommands", "StandardCommands");
            feature.AddKnownType("System.ComponentModel.Design.StandardToolWindows", "StandardToolWindows");
            feature.AddKnownType("System.ComponentModel.Design.TypeDescriptionProviderService", "TypeDescriptionProviderService");
            feature.AddKnownType("System.ComponentModel.Design.ViewTechnology", "ViewTechnology");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.ComponentSerializationService", "ComponentSerializationService");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.ContextStack", "ContextStack");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.DefaultSerializationProviderAttribute", "DefaultSerializationProviderAttribute");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.DesignerLoader", "DesignerLoader");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.IDesignerLoaderHost", "IDesignerLoaderHost");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.IDesignerLoaderHost2", "IDesignerLoaderHost2");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.IDesignerLoaderService", "IDesignerLoaderService");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.IDesignerSerializationManager", "IDesignerSerializationManager");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.IDesignerSerializationProvider", "IDesignerSerializationProvider");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.IDesignerSerializationService", "IDesignerSerializationService");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.INameCreationService", "INameCreationService");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.InstanceDescriptor", "InstanceDescriptor");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.MemberRelationship", "MemberRelationship");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.MemberRelationshipService", "MemberRelationshipService");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.ResolveNameEventArgs", "ResolveNameEventArgs");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute", "RootDesignerSerializerAttribute");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.SerializationStore", "SerializationStore");
            feature.AddKnownType("System.Drawing.ColorConverter", "ColorConverter");
            feature.AddKnownType("System.Drawing.PointConverter", "PointConverter");
            feature.AddKnownType("System.Drawing.RectangleConverter", "RectangleConverter");
            feature.AddKnownType("System.Drawing.SizeConverter", "SizeConverter");
            feature.AddKnownType("System.Drawing.SizeFConverter", "SizeFConverter");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter", "ExtendedProtectionPolicyTypeConverter");
            feature.AddKnownType("System.Timers.ElapsedEventArgs", "ElapsedEventArgs");
            feature.AddKnownType("System.Timers.Timer", "Timer");
            feature.AddKnownType("System.Timers.TimersDescriptionAttribute", "TimersDescriptionAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Console", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.ConsoleCancelEventArgs", "ConsoleCancelEventArgs");
            feature.AddKnownType("System.ConsoleColor", "ConsoleColor");
            feature.AddKnownType("System.ConsoleKey", "ConsoleKey");
            feature.AddKnownType("System.ConsoleKeyInfo", "ConsoleKeyInfo");
            feature.AddKnownType("System.ConsoleModifiers", "ConsoleModifiers");
            feature.AddKnownType("System.ConsoleSpecialKey", "ConsoleSpecialKey");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Data.Common", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Data.AcceptRejectRule", "AcceptRejectRule");
            feature.AddKnownType("System.Data.CommandBehavior", "CommandBehavior");
            feature.AddKnownType("System.Data.CommandType", "CommandType");
            feature.AddKnownType("System.Data.ConflictOption", "ConflictOption");
            feature.AddKnownType("System.Data.ConnectionState", "ConnectionState");
            feature.AddKnownType("System.Data.Constraint", "Constraint");
            feature.AddKnownType("System.Data.ConstraintCollection", "ConstraintCollection");
            feature.AddKnownType("System.Data.ConstraintException", "ConstraintException");
            feature.AddKnownType("System.Data.DataColumn", "DataColumn");
            feature.AddKnownType("System.Data.DataColumnChangeEventArgs", "DataColumnChangeEventArgs");
            feature.AddKnownType("System.Data.DataColumnCollection", "DataColumnCollection");
            feature.AddKnownType("System.Data.DataException", "DataException");
            feature.AddKnownType("System.Data.DataRelation", "DataRelation");
            feature.AddKnownType("System.Data.DataRelationCollection", "DataRelationCollection");
            feature.AddKnownType("System.Data.DataRow", "DataRow");
            feature.AddKnownType("System.Data.DataRowAction", "DataRowAction");
            feature.AddKnownType("System.Data.DataRowBuilder", "DataRowBuilder");
            feature.AddKnownType("System.Data.DataRowChangeEventArgs", "DataRowChangeEventArgs");
            feature.AddKnownType("System.Data.DataRowCollection", "DataRowCollection");
            feature.AddKnownType("System.Data.DataRowComparer`1", "DataRowComparer`1'1");
            feature.AddKnownType("System.Data.DataRowState", "DataRowState");
            feature.AddKnownType("System.Data.DataRowVersion", "DataRowVersion");
            feature.AddKnownType("System.Data.DataRowView", "DataRowView");
            feature.AddKnownType("System.Data.DataSet", "DataSet");
            feature.AddKnownType("System.Data.DataSetDateTime", "DataSetDateTime");
            feature.AddKnownType("System.Data.DataSysDescriptionAttribute", "DataSysDescriptionAttribute");
            feature.AddKnownType("System.Data.DataTable", "DataTable");
            feature.AddKnownType("System.Data.DataTableClearEventArgs", "DataTableClearEventArgs");
            feature.AddKnownType("System.Data.DataTableCollection", "DataTableCollection");
            feature.AddKnownType("System.Data.DataTableNewRowEventArgs", "DataTableNewRowEventArgs");
            feature.AddKnownType("System.Data.DataTableReader", "DataTableReader");
            feature.AddKnownType("System.Data.DataView", "DataView");
            feature.AddKnownType("System.Data.DataViewManager", "DataViewManager");
            feature.AddKnownType("System.Data.DataViewRowState", "DataViewRowState");
            feature.AddKnownType("System.Data.DataViewSetting", "DataViewSetting");
            feature.AddKnownType("System.Data.DataViewSettingCollection", "DataViewSettingCollection");
            feature.AddKnownType("System.Data.DBConcurrencyException", "DBConcurrencyException");
            feature.AddKnownType("System.Data.DbType", "DbType");
            feature.AddKnownType("System.Data.DeletedRowInaccessibleException", "DeletedRowInaccessibleException");
            feature.AddKnownType("System.Data.DuplicateNameException", "DuplicateNameException");
            feature.AddKnownType("System.Data.EnumerableRowCollection", "EnumerableRowCollection");
            feature.AddKnownType("System.Data.EnumerableRowCollection`1", "EnumerableRowCollection`1'1");
            feature.AddKnownType("System.Data.EvaluateException", "EvaluateException");
            feature.AddKnownType("System.Data.FillErrorEventArgs", "FillErrorEventArgs");
            feature.AddKnownType("System.Data.ForeignKeyConstraint", "ForeignKeyConstraint");
            feature.AddKnownType("System.Data.IColumnMapping", "IColumnMapping");
            feature.AddKnownType("System.Data.IColumnMappingCollection", "IColumnMappingCollection");
            feature.AddKnownType("System.Data.IDataAdapter", "IDataAdapter");
            feature.AddKnownType("System.Data.IDataParameter", "IDataParameter");
            feature.AddKnownType("System.Data.IDataParameterCollection", "IDataParameterCollection");
            feature.AddKnownType("System.Data.IDataReader", "IDataReader");
            feature.AddKnownType("System.Data.IDataRecord", "IDataRecord");
            feature.AddKnownType("System.Data.IDbCommand", "IDbCommand");
            feature.AddKnownType("System.Data.IDbConnection", "IDbConnection");
            feature.AddKnownType("System.Data.IDbDataAdapter", "IDbDataAdapter");
            feature.AddKnownType("System.Data.IDbDataParameter", "IDbDataParameter");
            feature.AddKnownType("System.Data.IDbTransaction", "IDbTransaction");
            feature.AddKnownType("System.Data.InRowChangingEventException", "InRowChangingEventException");
            feature.AddKnownType("System.Data.InternalDataCollectionBase", "InternalDataCollectionBase");
            feature.AddKnownType("System.Data.InvalidConstraintException", "InvalidConstraintException");
            feature.AddKnownType("System.Data.InvalidExpressionException", "InvalidExpressionException");
            feature.AddKnownType("System.Data.IsolationLevel", "IsolationLevel");
            feature.AddKnownType("System.Data.ITableMapping", "ITableMapping");
            feature.AddKnownType("System.Data.ITableMappingCollection", "ITableMappingCollection");
            feature.AddKnownType("System.Data.KeyRestrictionBehavior", "KeyRestrictionBehavior");
            feature.AddKnownType("System.Data.LoadOption", "LoadOption");
            feature.AddKnownType("System.Data.MappingType", "MappingType");
            feature.AddKnownType("System.Data.MergeFailedEventArgs", "MergeFailedEventArgs");
            feature.AddKnownType("System.Data.MissingMappingAction", "MissingMappingAction");
            feature.AddKnownType("System.Data.MissingPrimaryKeyException", "MissingPrimaryKeyException");
            feature.AddKnownType("System.Data.MissingSchemaAction", "MissingSchemaAction");
            feature.AddKnownType("System.Data.NoNullAllowedException", "NoNullAllowedException");
            feature.AddKnownType("System.Data.OrderedEnumerableRowCollection`1", "OrderedEnumerableRowCollection`1'1");
            feature.AddKnownType("System.Data.ParameterDirection", "ParameterDirection");
            feature.AddKnownType("System.Data.PropertyCollection", "PropertyCollection");
            feature.AddKnownType("System.Data.ReadOnlyException", "ReadOnlyException");
            feature.AddKnownType("System.Data.RowNotInTableException", "RowNotInTableException");
            feature.AddKnownType("System.Data.Rule", "Rule");
            feature.AddKnownType("System.Data.SchemaSerializationMode", "SchemaSerializationMode");
            feature.AddKnownType("System.Data.SchemaType", "SchemaType");
            feature.AddKnownType("System.Data.SerializationFormat", "SerializationFormat");
            feature.AddKnownType("System.Data.SqlDbType", "SqlDbType");
            feature.AddKnownType("System.Data.StateChangeEventArgs", "StateChangeEventArgs");
            feature.AddKnownType("System.Data.StatementCompletedEventArgs", "StatementCompletedEventArgs");
            feature.AddKnownType("System.Data.StatementType", "StatementType");
            feature.AddKnownType("System.Data.StrongTypingException", "StrongTypingException");
            feature.AddKnownType("System.Data.SyntaxErrorException", "SyntaxErrorException");
            feature.AddKnownType("System.Data.TypedTableBase`1", "TypedTableBase`1'1");
            feature.AddKnownType("System.Data.UniqueConstraint", "UniqueConstraint");
            feature.AddKnownType("System.Data.UpdateRowSource", "UpdateRowSource");
            feature.AddKnownType("System.Data.UpdateStatus", "UpdateStatus");
            feature.AddKnownType("System.Data.VersionNotFoundException", "VersionNotFoundException");
            feature.AddKnownType("System.Data.XmlReadMode", "XmlReadMode");
            feature.AddKnownType("System.Data.XmlWriteMode", "XmlWriteMode");
            feature.AddKnownType("System.Data.ConstraintConverter", "ConstraintConverter");
            feature.AddKnownType("System.Data.RelationshipConverter", "RelationshipConverter");
            feature.AddKnownType("System.Data.ColumnTypeConverter", "ColumnTypeConverter");
            feature.AddKnownType("System.Data.DefaultValueTypeConverter", "DefaultValueTypeConverter");
            feature.AddKnownType("System.Data.PrimaryKeyTypeConverter", "PrimaryKeyTypeConverter");
            feature.AddKnownType("System.Data.DataTableTypeConverter", "DataTableTypeConverter");
            feature.AddKnownType("System.Data.Common.CatalogLocation", "CatalogLocation");
            feature.AddKnownType("System.Data.Common.DataAdapter", "DataAdapter");
            feature.AddKnownType("System.Data.Common.DataColumnMapping", "DataColumnMapping");
            feature.AddKnownType("System.Data.Common.DataColumnMapping+DataColumnMappingConverter", "DataColumnMappingConverter");
            feature.AddKnownType("System.Data.Common.DataColumnMappingCollection", "DataColumnMappingCollection");
            feature.AddKnownType("System.Data.Common.DataTableMapping", "DataTableMapping");
            feature.AddKnownType("System.Data.Common.DataTableMapping+DataTableMappingConverter", "DataTableMappingConverter");
            feature.AddKnownType("System.Data.Common.DataTableMappingCollection", "DataTableMappingCollection");
            feature.AddKnownType("System.Data.Common.DbBatch", "DbBatch");
            feature.AddKnownType("System.Data.Common.DbBatchCommand", "DbBatchCommand");
            feature.AddKnownType("System.Data.Common.DbBatchCommandCollection", "DbBatchCommandCollection");
            feature.AddKnownType("System.Data.Common.DbColumn", "DbColumn");
            feature.AddKnownType("System.Data.Common.DbCommand", "DbCommand");
            feature.AddKnownType("System.Data.Common.DbCommandBuilder", "DbCommandBuilder");
            feature.AddKnownType("System.Data.Common.DbConnection", "DbConnection");
            feature.AddKnownType("System.Data.Common.DbConnectionStringBuilder", "DbConnectionStringBuilder");
            feature.AddKnownType("System.Data.Common.DbDataAdapter", "DbDataAdapter");
            feature.AddKnownType("System.Data.Common.DbDataReader", "DbDataReader");
            feature.AddKnownType("System.Data.Common.DbDataRecord", "DbDataRecord");
            feature.AddKnownType("System.Data.Common.DbDataSource", "DbDataSource");
            feature.AddKnownType("System.Data.Common.DbDataSourceEnumerator", "DbDataSourceEnumerator");
            feature.AddKnownType("System.Data.Common.DbEnumerator", "DbEnumerator");
            feature.AddKnownType("System.Data.Common.DbException", "DbException");
            feature.AddKnownType("System.Data.Common.DbParameter", "DbParameter");
            feature.AddKnownType("System.Data.Common.DbParameterCollection", "DbParameterCollection");
            feature.AddKnownType("System.Data.Common.DbProviderFactory", "DbProviderFactory");
            feature.AddKnownType("System.Data.Common.DbProviderSpecificTypePropertyAttribute", "DbProviderSpecificTypePropertyAttribute");
            feature.AddKnownType("System.Data.Common.DbTransaction", "DbTransaction");
            feature.AddKnownType("System.Data.Common.GroupByBehavior", "GroupByBehavior");
            feature.AddKnownType("System.Data.Common.IDbColumnSchemaGenerator", "IDbColumnSchemaGenerator");
            feature.AddKnownType("System.Data.Common.IdentifierCase", "IdentifierCase");
            feature.AddKnownType("System.Data.Common.RowUpdatedEventArgs", "RowUpdatedEventArgs");
            feature.AddKnownType("System.Data.Common.RowUpdatingEventArgs", "RowUpdatingEventArgs");
            feature.AddKnownType("System.Data.Common.SupportedJoinOperators", "SupportedJoinOperators");
            feature.AddKnownType("System.Data.SqlTypes.INullable", "INullable");
            feature.AddKnownType("System.Data.SqlTypes.SqlAlreadyFilledException", "SqlAlreadyFilledException");
            feature.AddKnownType("System.Data.SqlTypes.SqlBinary", "SqlBinary");
            feature.AddKnownType("System.Data.SqlTypes.SqlBoolean", "SqlBoolean");
            feature.AddKnownType("System.Data.SqlTypes.SqlByte", "SqlByte");
            feature.AddKnownType("System.Data.SqlTypes.SqlBytes", "SqlBytes");
            feature.AddKnownType("System.Data.SqlTypes.SqlChars", "SqlChars");
            feature.AddKnownType("System.Data.SqlTypes.SqlCompareOptions", "SqlCompareOptions");
            feature.AddKnownType("System.Data.SqlTypes.SqlDateTime", "SqlDateTime");
            feature.AddKnownType("System.Data.SqlTypes.SqlDecimal", "SqlDecimal");
            feature.AddKnownType("System.Data.SqlTypes.SqlDouble", "SqlDouble");
            feature.AddKnownType("System.Data.SqlTypes.SqlGuid", "SqlGuid");
            feature.AddKnownType("System.Data.SqlTypes.SqlInt16", "SqlInt16");
            feature.AddKnownType("System.Data.SqlTypes.SqlInt32", "SqlInt32");
            feature.AddKnownType("System.Data.SqlTypes.SqlInt64", "SqlInt64");
            feature.AddKnownType("System.Data.SqlTypes.SqlMoney", "SqlMoney");
            feature.AddKnownType("System.Data.SqlTypes.SqlNotFilledException", "SqlNotFilledException");
            feature.AddKnownType("System.Data.SqlTypes.SqlNullValueException", "SqlNullValueException");
            feature.AddKnownType("System.Data.SqlTypes.SqlSingle", "SqlSingle");
            feature.AddKnownType("System.Data.SqlTypes.SqlString", "SqlString");
            feature.AddKnownType("System.Data.SqlTypes.SqlTruncateException", "SqlTruncateException");
            feature.AddKnownType("System.Data.SqlTypes.SqlTypeException", "SqlTypeException");
            feature.AddKnownType("System.Data.SqlTypes.SqlXml", "SqlXml");
            feature.AddKnownType("System.Data.SqlTypes.StorageState", "StorageState");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Xml.XmlDataDocument", "XmlDataDocument");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Diagnostics.Contracts", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractAbbreviatorAttribute", "ContractAbbreviatorAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractArgumentValidatorAttribute", "ContractArgumentValidatorAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractClassAttribute", "ContractClassAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractClassForAttribute", "ContractClassForAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractFailedEventArgs", "ContractFailedEventArgs");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractFailureKind", "ContractFailureKind");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractInvariantMethodAttribute", "ContractInvariantMethodAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractOptionAttribute", "ContractOptionAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractPublicPropertyNameAttribute", "ContractPublicPropertyNameAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractReferenceAssemblyAttribute", "ContractReferenceAssemblyAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractRuntimeIgnoredAttribute", "ContractRuntimeIgnoredAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractVerificationAttribute", "ContractVerificationAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.PureAttribute", "PureAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Diagnostics.DiagnosticSource", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Diagnostics.DiagnosticListener", "DiagnosticListener");
            feature.AddKnownType("System.Diagnostics.DiagnosticSource", "DiagnosticSource");
            feature.AddKnownType("System.Diagnostics.Activity", "Activity");
            feature.AddKnownType("System.Diagnostics.Activity+Enumerator`1", "Activity.Enumerator`1'1");
            feature.AddKnownType("System.Diagnostics.ActivityChangedEventArgs", "ActivityChangedEventArgs");
            feature.AddKnownType("System.Diagnostics.ActivityTagsCollection", "ActivityTagsCollection");
            feature.AddKnownType("System.Diagnostics.ActivityTagsCollection+Enumerator", "ActivityTagsCollection.Enumerator");
            feature.AddKnownType("System.Diagnostics.ActivityStatusCode", "ActivityStatusCode");
            feature.AddKnownType("System.Diagnostics.ActivityIdFormat", "ActivityIdFormat");
            feature.AddKnownType("System.Diagnostics.ActivitySpanId", "ActivitySpanId");
            feature.AddKnownType("System.Diagnostics.ActivitySource", "ActivitySource");
            feature.AddKnownType("System.Diagnostics.ActivityTraceFlags", "ActivityTraceFlags");
            feature.AddKnownType("System.Diagnostics.ActivityTraceId", "ActivityTraceId");
            feature.AddKnownType("System.Diagnostics.ActivitySamplingResult", "ActivitySamplingResult");
            feature.AddKnownType("System.Diagnostics.ActivityKind", "ActivityKind");
            feature.AddKnownType("System.Diagnostics.ActivityEvent", "ActivityEvent");
            feature.AddKnownType("System.Diagnostics.ActivityContext", "ActivityContext");
            feature.AddKnownType("System.Diagnostics.ActivityLink", "ActivityLink");
            feature.AddKnownType("System.Diagnostics.ActivityCreationOptions`1", "ActivityCreationOptions`1'1");
            feature.AddKnownType("System.Diagnostics.ActivityListener", "ActivityListener");
            feature.AddKnownType("System.Diagnostics.DistributedContextPropagator", "DistributedContextPropagator");
            feature.AddKnownType("System.Diagnostics.TagList", "TagList");
            feature.AddKnownType("System.Diagnostics.TagList+Enumerator", "TagList.Enumerator");
            feature.AddKnownType("System.Diagnostics.Metrics.Counter`1", "Counter`1'1");
            feature.AddKnownType("System.Diagnostics.Metrics.UpDownCounter`1", "UpDownCounter`1'1");
            feature.AddKnownType("System.Diagnostics.Metrics.Histogram`1", "Histogram`1'1");
            feature.AddKnownType("System.Diagnostics.Metrics.Instrument", "Instrument");
            feature.AddKnownType("System.Diagnostics.Metrics.Instrument`1", "Instrument`1'1");
            feature.AddKnownType("System.Diagnostics.Metrics.Measurement`1", "Measurement`1'1");
            feature.AddKnownType("System.Diagnostics.Metrics.Meter", "Meter");
            feature.AddKnownType("System.Diagnostics.Metrics.MeterListener", "MeterListener");
            feature.AddKnownType("System.Diagnostics.Metrics.ObservableCounter`1", "ObservableCounter`1'1");
            feature.AddKnownType("System.Diagnostics.Metrics.ObservableUpDownCounter`1", "ObservableUpDownCounter`1'1");
            feature.AddKnownType("System.Diagnostics.Metrics.ObservableGauge`1", "ObservableGauge`1'1");
            feature.AddKnownType("System.Diagnostics.Metrics.ObservableInstrument`1", "ObservableInstrument`1'1");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Diagnostics.FileVersionInfo", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Diagnostics.FileVersionInfo", "FileVersionInfo");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Diagnostics.PerformanceCounter", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Diagnostics.CounterCreationData", "CounterCreationData");
            feature.AddKnownType("System.Diagnostics.CounterCreationDataCollection", "CounterCreationDataCollection");
            feature.AddKnownType("System.Diagnostics.CounterSample", "CounterSample");
            feature.AddKnownType("System.Diagnostics.ICollectData", "ICollectData");
            feature.AddKnownType("System.Diagnostics.InstanceData", "InstanceData");
            feature.AddKnownType("System.Diagnostics.InstanceDataCollection", "InstanceDataCollection");
            feature.AddKnownType("System.Diagnostics.InstanceDataCollectionCollection", "InstanceDataCollectionCollection");
            feature.AddKnownType("System.Diagnostics.PerformanceCounter", "PerformanceCounter");
            feature.AddKnownType("System.Diagnostics.PerformanceCounterCategory", "PerformanceCounterCategory");
            feature.AddKnownType("System.Diagnostics.PerformanceCounterCategoryType", "PerformanceCounterCategoryType");
            feature.AddKnownType("System.Diagnostics.PerformanceCounterInstanceLifetime", "PerformanceCounterInstanceLifetime");
            feature.AddKnownType("System.Diagnostics.PerformanceCounterManager", "PerformanceCounterManager");
            feature.AddKnownType("System.Diagnostics.PerformanceCounterType", "PerformanceCounterType");
            feature.AddKnownType("System.Diagnostics.PerformanceData.CounterData", "CounterData");
            feature.AddKnownType("System.Diagnostics.PerformanceData.CounterSet", "CounterSet");
            feature.AddKnownType("System.Diagnostics.PerformanceData.CounterSetInstance", "CounterSetInstance");
            feature.AddKnownType("System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet", "CounterSetInstanceCounterDataSet");
            feature.AddKnownType("System.Diagnostics.PerformanceData.CounterSetInstanceType", "CounterSetInstanceType");
            feature.AddKnownType("System.Diagnostics.PerformanceData.CounterType", "CounterType");
            feature.AddKnownType("System.Runtime.CompilerServices.IsReadOnlyAttribute", "IsReadOnlyAttribute");
            feature.AddKnownType("System.Runtime.Versioning.OSPlatformAttribute", "OSPlatformAttribute");
            feature.AddKnownType("System.Runtime.Versioning.TargetPlatformAttribute", "TargetPlatformAttribute");
            feature.AddKnownType("System.Runtime.Versioning.SupportedOSPlatformAttribute", "SupportedOSPlatformAttribute");
            feature.AddKnownType("System.Runtime.Versioning.UnsupportedOSPlatformAttribute", "UnsupportedOSPlatformAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Diagnostics.Process", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeProcessHandle,System.Diagnostics.Process", "Microsoft.Win32.SafeHandles.SafeProcessHandle");
            feature.AddKnownType("System.Diagnostics.DataReceivedEventArgs", "DataReceivedEventArgs");
            feature.AddKnownType("System.Diagnostics.MonitoringDescriptionAttribute", "MonitoringDescriptionAttribute");
            feature.AddKnownType("System.Diagnostics.Process", "Process");
            feature.AddKnownType("System.Diagnostics.ProcessModule", "ProcessModule");
            feature.AddKnownType("System.Diagnostics.ProcessModuleCollection", "ProcessModuleCollection");
            feature.AddKnownType("System.Diagnostics.ProcessPriorityClass", "ProcessPriorityClass");
            feature.AddKnownType("System.Diagnostics.ProcessStartInfo", "ProcessStartInfo");
            feature.AddKnownType("System.Diagnostics.ProcessThread", "ProcessThread");
            feature.AddKnownType("System.Diagnostics.ProcessThreadCollection", "ProcessThreadCollection");
            feature.AddKnownType("System.Diagnostics.ProcessWindowStyle", "ProcessWindowStyle");
            feature.AddKnownType("System.Diagnostics.ThreadPriorityLevel", "ThreadPriorityLevel");
            feature.AddKnownType("System.Diagnostics.ThreadState", "ThreadState");
            feature.AddKnownType("System.Diagnostics.ThreadWaitReason", "ThreadWaitReason");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Diagnostics.StackTrace", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Diagnostics.StackFrame", "StackFrame");
            feature.AddKnownType("System.Diagnostics.StackTrace", "StackTrace");
            feature.AddKnownType("System.Diagnostics.SymbolStore.ISymbolBinder", "ISymbolBinder");
            feature.AddKnownType("System.Diagnostics.SymbolStore.ISymbolBinder1", "ISymbolBinder1");
            feature.AddKnownType("System.Diagnostics.SymbolStore.ISymbolDocument", "ISymbolDocument");
            feature.AddKnownType("System.Diagnostics.SymbolStore.ISymbolMethod", "ISymbolMethod");
            feature.AddKnownType("System.Diagnostics.SymbolStore.ISymbolNamespace", "ISymbolNamespace");
            feature.AddKnownType("System.Diagnostics.SymbolStore.ISymbolReader", "ISymbolReader");
            feature.AddKnownType("System.Diagnostics.SymbolStore.ISymbolScope", "ISymbolScope");
            feature.AddKnownType("System.Diagnostics.SymbolStore.ISymbolVariable", "ISymbolVariable");
            feature.AddKnownType("System.Diagnostics.SymbolStore.ISymbolWriter", "ISymbolWriter");
            feature.AddKnownType("System.Diagnostics.SymbolStore.SymAddressKind", "SymAddressKind");
            feature.AddKnownType("System.Diagnostics.SymbolStore.SymbolToken", "SymbolToken");
            feature.AddKnownType("System.Diagnostics.SymbolStore.SymDocumentType", "SymDocumentType");
            feature.AddKnownType("System.Diagnostics.SymbolStore.SymLanguageType", "SymLanguageType");
            feature.AddKnownType("System.Diagnostics.SymbolStore.SymLanguageVendor", "SymLanguageVendor");
            feature.AddKnownType("System.Diagnostics.SymbolStore.ISymbolDocumentWriter", "ISymbolDocumentWriter");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Diagnostics.TextWriterTraceListener", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Diagnostics.ConsoleTraceListener", "ConsoleTraceListener");
            feature.AddKnownType("System.Diagnostics.DelimitedListTraceListener", "DelimitedListTraceListener");
            feature.AddKnownType("System.Diagnostics.TextWriterTraceListener", "TextWriterTraceListener");
            feature.AddKnownType("System.Diagnostics.XmlWriterTraceListener", "XmlWriterTraceListener");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Diagnostics.TraceSource", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Diagnostics.BooleanSwitch", "BooleanSwitch");
            feature.AddKnownType("System.Diagnostics.CorrelationManager", "CorrelationManager");
            feature.AddKnownType("System.Diagnostics.DefaultTraceListener", "DefaultTraceListener");
            feature.AddKnownType("System.Diagnostics.EventTypeFilter", "EventTypeFilter");
            feature.AddKnownType("System.Diagnostics.InitializingSwitchEventArgs", "InitializingSwitchEventArgs");
            feature.AddKnownType("System.Diagnostics.InitializingTraceSourceEventArgs", "InitializingTraceSourceEventArgs");
            feature.AddKnownType("System.Diagnostics.SourceFilter", "SourceFilter");
            feature.AddKnownType("System.Diagnostics.SourceLevels", "SourceLevels");
            feature.AddKnownType("System.Diagnostics.SourceSwitch", "SourceSwitch");
            feature.AddKnownType("System.Diagnostics.Switch", "Switch");
            feature.AddKnownType("System.Diagnostics.SwitchAttribute", "SwitchAttribute");
            feature.AddKnownType("System.Diagnostics.SwitchLevelAttribute", "SwitchLevelAttribute");
            feature.AddKnownType("System.Diagnostics.Trace", "Trace");
            feature.AddKnownType("System.Diagnostics.TraceEventCache", "TraceEventCache");
            feature.AddKnownType("System.Diagnostics.TraceEventType", "TraceEventType");
            feature.AddKnownType("System.Diagnostics.TraceFilter", "TraceFilter");
            feature.AddKnownType("System.Diagnostics.TraceLevel", "TraceLevel");
            feature.AddKnownType("System.Diagnostics.TraceListener", "TraceListener");
            feature.AddKnownType("System.Diagnostics.TraceListenerCollection", "TraceListenerCollection");
            feature.AddKnownType("System.Diagnostics.TraceOptions", "TraceOptions");
            feature.AddKnownType("System.Diagnostics.TraceSource", "TraceSource");
            feature.AddKnownType("System.Diagnostics.TraceSwitch", "TraceSwitch");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Diagnostics.Tracing", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Diagnostics.Tracing.EventActivityOptions", "EventActivityOptions");
            feature.AddKnownType("System.Diagnostics.Tracing.EventAttribute", "EventAttribute");
            feature.AddKnownType("System.Diagnostics.Tracing.EventChannel", "EventChannel");
            feature.AddKnownType("System.Diagnostics.Tracing.EventCommand", "EventCommand");
            feature.AddKnownType("System.Diagnostics.Tracing.EventCommandEventArgs", "EventCommandEventArgs");
            feature.AddKnownType("System.Diagnostics.Tracing.EventDataAttribute", "EventDataAttribute");
            feature.AddKnownType("System.Diagnostics.Tracing.EventFieldAttribute", "EventFieldAttribute");
            feature.AddKnownType("System.Diagnostics.Tracing.EventFieldFormat", "EventFieldFormat");
            feature.AddKnownType("System.Diagnostics.Tracing.EventFieldTags", "EventFieldTags");
            feature.AddKnownType("System.Diagnostics.Tracing.EventIgnoreAttribute", "EventIgnoreAttribute");
            feature.AddKnownType("System.Diagnostics.Tracing.EventKeywords", "EventKeywords");
            feature.AddKnownType("System.Diagnostics.Tracing.EventLevel", "EventLevel");
            feature.AddKnownType("System.Diagnostics.Tracing.EventListener", "EventListener");
            feature.AddKnownType("System.Diagnostics.Tracing.EventManifestOptions", "EventManifestOptions");
            feature.AddKnownType("System.Diagnostics.Tracing.EventOpcode", "EventOpcode");
            feature.AddKnownType("System.Diagnostics.Tracing.EventSource", "EventSource");
            feature.AddKnownType("System.Diagnostics.Tracing.EventSource+EventData", "EventData");
            feature.AddKnownType("System.Diagnostics.Tracing.EventSourceAttribute", "EventSourceAttribute");
            feature.AddKnownType("System.Diagnostics.Tracing.EventSourceCreatedEventArgs", "EventSourceCreatedEventArgs");
            feature.AddKnownType("System.Diagnostics.Tracing.EventSourceException", "EventSourceException");
            feature.AddKnownType("System.Diagnostics.Tracing.EventSourceOptions", "EventSourceOptions");
            feature.AddKnownType("System.Diagnostics.Tracing.EventSourceSettings", "EventSourceSettings");
            feature.AddKnownType("System.Diagnostics.Tracing.EventTags", "EventTags");
            feature.AddKnownType("System.Diagnostics.Tracing.EventTask", "EventTask");
            feature.AddKnownType("System.Diagnostics.Tracing.EventWrittenEventArgs", "EventWrittenEventArgs");
            feature.AddKnownType("System.Diagnostics.Tracing.NonEventAttribute", "NonEventAttribute");
            feature.AddKnownType("System.Diagnostics.Tracing.DiagnosticCounter", "DiagnosticCounter");
            feature.AddKnownType("System.Diagnostics.Tracing.PollingCounter", "PollingCounter");
            feature.AddKnownType("System.Diagnostics.Tracing.IncrementingEventCounter", "IncrementingEventCounter");
            feature.AddKnownType("System.Diagnostics.Tracing.IncrementingPollingCounter", "IncrementingPollingCounter");
            feature.AddKnownType("System.Diagnostics.Tracing.EventCounter", "EventCounter");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Drawing.Primitives", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Drawing.Color", "Color");
            feature.AddKnownType("System.Drawing.KnownColor", "KnownColor");
            feature.AddKnownType("System.Drawing.Point", "Point");
            feature.AddKnownType("System.Drawing.PointF", "PointF");
            feature.AddKnownType("System.Drawing.Rectangle", "Rectangle");
            feature.AddKnownType("System.Drawing.RectangleF", "RectangleF");
            feature.AddKnownType("System.Drawing.Size", "Size");
            feature.AddKnownType("System.Drawing.SizeF", "SizeF");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Formats.Asn1", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Formats.Asn1.Asn1Tag", "Asn1Tag");
            feature.AddKnownType("System.Formats.Asn1.AsnContentException", "AsnContentException");
            feature.AddKnownType("System.Formats.Asn1.AsnEncodingRules", "AsnEncodingRules");
            feature.AddKnownType("System.Formats.Asn1.AsnReader", "AsnReader");
            feature.AddKnownType("System.Formats.Asn1.AsnReaderOptions", "AsnReaderOptions");
            feature.AddKnownType("System.Formats.Asn1.AsnWriter", "AsnWriter");
            feature.AddKnownType("System.Formats.Asn1.AsnWriter+Scope", "AsnWriter.Scope");
            feature.AddKnownType("System.Formats.Asn1.TagClass", "TagClass");
            feature.AddKnownType("System.Formats.Asn1.UniversalTagNumber", "UniversalTagNumber");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Formats.Tar", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Formats.Tar.GnuTarEntry", "GnuTarEntry");
            feature.AddKnownType("System.Formats.Tar.PaxGlobalExtendedAttributesTarEntry", "PaxGlobalExtendedAttributesTarEntry");
            feature.AddKnownType("System.Formats.Tar.PaxTarEntry", "PaxTarEntry");
            feature.AddKnownType("System.Formats.Tar.PosixTarEntry", "PosixTarEntry");
            feature.AddKnownType("System.Formats.Tar.TarEntry", "TarEntry");
            feature.AddKnownType("System.Formats.Tar.TarEntryFormat", "TarEntryFormat");
            feature.AddKnownType("System.Formats.Tar.TarEntryType", "TarEntryType");
            feature.AddKnownType("System.Formats.Tar.TarReader", "TarReader");
            feature.AddKnownType("System.Formats.Tar.TarWriter", "TarWriter");
            feature.AddKnownType("System.Formats.Tar.UstarTarEntry", "UstarTarEntry");
            feature.AddKnownType("System.Formats.Tar.V7TarEntry", "V7TarEntry");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.IO.Compression.Brotli", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.IO.Compression.BrotliDecoder", "BrotliDecoder");
            feature.AddKnownType("System.IO.Compression.BrotliEncoder", "BrotliEncoder");
            feature.AddKnownType("System.IO.Compression.BrotliStream", "BrotliStream");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.IO.Compression", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.IO.Compression.CompressionLevel", "CompressionLevel");
            feature.AddKnownType("System.IO.Compression.CompressionMode", "CompressionMode");
            feature.AddKnownType("System.IO.Compression.DeflateStream", "DeflateStream");
            feature.AddKnownType("System.IO.Compression.GZipStream", "GZipStream");
            feature.AddKnownType("System.IO.Compression.ZipArchive", "ZipArchive");
            feature.AddKnownType("System.IO.Compression.ZipArchiveEntry", "ZipArchiveEntry");
            feature.AddKnownType("System.IO.Compression.ZipArchiveMode", "ZipArchiveMode");
            feature.AddKnownType("System.IO.Compression.ZLibStream", "ZLibStream");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.IO.Compression.ZipFile", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.IO.FileSystem.AccessControl", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Security.AccessControl.DirectoryObjectSecurity", "DirectoryObjectSecurity");
            feature.AddKnownType("System.Security.AccessControl.DirectorySecurity", "DirectorySecurity");
            feature.AddKnownType("System.Security.AccessControl.FileSecurity", "FileSecurity");
            feature.AddKnownType("System.Security.AccessControl.FileSystemAccessRule", "FileSystemAccessRule");
            feature.AddKnownType("System.Security.AccessControl.FileSystemAuditRule", "FileSystemAuditRule");
            feature.AddKnownType("System.Security.AccessControl.FileSystemRights", "FileSystemRights");
            feature.AddKnownType("System.Security.AccessControl.FileSystemSecurity", "FileSystemSecurity");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.IO.FileSystem.DriveInfo", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.IO.DriveInfo", "DriveInfo");
            feature.AddKnownType("System.IO.DriveNotFoundException", "DriveNotFoundException");
            feature.AddKnownType("System.IO.DriveType", "DriveType");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.IO.FileSystem.Watcher", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.IO.ErrorEventArgs", "ErrorEventArgs");
            feature.AddKnownType("System.IO.FileSystemEventArgs", "FileSystemEventArgs");
            feature.AddKnownType("System.IO.FileSystemWatcher", "FileSystemWatcher");
            feature.AddKnownType("System.IO.InternalBufferOverflowException", "InternalBufferOverflowException");
            feature.AddKnownType("System.IO.NotifyFilters", "NotifyFilters");
            feature.AddKnownType("System.IO.RenamedEventArgs", "RenamedEventArgs");
            feature.AddKnownType("System.IO.WaitForChangedResult", "WaitForChangedResult");
            feature.AddKnownType("System.IO.WatcherChangeTypes", "WatcherChangeTypes");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.IO.IsolatedStorage", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.IO.IsolatedStorage.INormalizeForIsolatedStorage", "INormalizeForIsolatedStorage");
            feature.AddKnownType("System.IO.IsolatedStorage.IsolatedStorage", "IsolatedStorage");
            feature.AddKnownType("System.IO.IsolatedStorage.IsolatedStorageException", "IsolatedStorageException");
            feature.AddKnownType("System.IO.IsolatedStorage.IsolatedStorageFile", "IsolatedStorageFile");
            feature.AddKnownType("System.IO.IsolatedStorage.IsolatedStorageFileStream", "IsolatedStorageFileStream");
            feature.AddKnownType("System.IO.IsolatedStorage.IsolatedStorageScope", "IsolatedStorageScope");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.IO.MemoryMappedFiles", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle,System.IO.MemoryMappedFiles", "Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle,System.IO.MemoryMappedFiles", "Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle");
            feature.AddKnownType("System.IO.MemoryMappedFiles.MemoryMappedFile", "MemoryMappedFile");
            feature.AddKnownType("System.IO.MemoryMappedFiles.MemoryMappedFileAccess", "MemoryMappedFileAccess");
            feature.AddKnownType("System.IO.MemoryMappedFiles.MemoryMappedFileOptions", "MemoryMappedFileOptions");
            feature.AddKnownType("System.IO.MemoryMappedFiles.MemoryMappedFileRights", "MemoryMappedFileRights");
            feature.AddKnownType("System.IO.MemoryMappedFiles.MemoryMappedViewAccessor", "MemoryMappedViewAccessor");
            feature.AddKnownType("System.IO.MemoryMappedFiles.MemoryMappedViewStream", "MemoryMappedViewStream");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.IO.Pipes.AccessControl", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.IO.Pipes.PipeAccessRights", "PipeAccessRights");
            feature.AddKnownType("System.IO.Pipes.PipeAccessRule", "PipeAccessRule");
            feature.AddKnownType("System.IO.Pipes.PipeAuditRule", "PipeAuditRule");
            feature.AddKnownType("System.IO.Pipes.PipeSecurity", "PipeSecurity");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.IO.Pipes", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafePipeHandle,System.IO.Pipes", "Microsoft.Win32.SafeHandles.SafePipeHandle");
            feature.AddKnownType("System.IO.Pipes.AnonymousPipeClientStream", "AnonymousPipeClientStream");
            feature.AddKnownType("System.IO.Pipes.AnonymousPipeServerStream", "AnonymousPipeServerStream");
            feature.AddKnownType("System.IO.Pipes.NamedPipeClientStream", "NamedPipeClientStream");
            feature.AddKnownType("System.IO.Pipes.NamedPipeServerStream", "NamedPipeServerStream");
            feature.AddKnownType("System.IO.Pipes.PipeDirection", "PipeDirection");
            feature.AddKnownType("System.IO.Pipes.PipeOptions", "PipeOptions");
            feature.AddKnownType("System.IO.Pipes.PipeStream", "PipeStream");
            feature.AddKnownType("System.IO.Pipes.PipeTransmissionMode", "PipeTransmissionMode");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Linq", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Linq.IGrouping`2", "IGrouping`2'2");
            feature.AddKnownType("System.Linq.ILookup`2", "ILookup`2'2");
            feature.AddKnownType("System.Linq.IOrderedEnumerable`1", "IOrderedEnumerable`1'1");
            feature.AddKnownType("System.Linq.Lookup`2", "Lookup`2'2");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Linq.Dynamic.Core.DefaultAssemblyHelper", "DefaultAssemblyHelper");
            feature.AddKnownType("System.Linq.Dynamic.Core.DefaultQueryableAnalyzer", "DefaultQueryableAnalyzer");
            feature.AddKnownType("System.Linq.Dynamic.Core.DynamicClass", "DynamicClass");
            feature.AddKnownType("System.Linq.Dynamic.Core.DynamicGetMemberBinder", "DynamicGetMemberBinder");
            feature.AddKnownType("System.Linq.Dynamic.Core.DynamicOrdering", "DynamicOrdering");
            feature.AddKnownType("System.Linq.Dynamic.Core.DynamicProperty", "DynamicProperty");
            feature.AddKnownType("System.Linq.Dynamic.Core.ExtensibilityPoint", "ExtensibilityPoint");
            feature.AddKnownType("System.Linq.Dynamic.Core.GroupResult", "GroupResult");
            feature.AddKnownType("System.Linq.Dynamic.Core.IAssemblyHelper", "IAssemblyHelper");
            feature.AddKnownType("System.Linq.Dynamic.Core.IQueryableAnalyzer", "IQueryableAnalyzer");
            feature.AddKnownType("System.Linq.Dynamic.Core.PagedResult", "PagedResult");
            feature.AddKnownType("System.Linq.Dynamic.Core.PagedResult`1", "PagedResult`1'1");
            feature.AddKnownType("System.Linq.Dynamic.Core.ParsingConfig", "ParsingConfig");
            feature.AddKnownType("System.Linq.Dynamic.Core.CustomTypeProviders.AbstractDynamicLinqCustomTypeProvider", "AbstractDynamicLinqCustomTypeProvider");
            feature.AddKnownType("System.Linq.Dynamic.Core.CustomTypeProviders.DefaultDynamicLinqCustomTypeProvider", "DefaultDynamicLinqCustomTypeProvider");
            feature.AddKnownType("System.Linq.Dynamic.Core.CustomTypeProviders.DynamicLinqTypeAttribute", "DynamicLinqTypeAttribute");
            feature.AddKnownType("System.Linq.Dynamic.Core.CustomTypeProviders.IDynamicLinkCustomTypeProvider", "IDynamicLinkCustomTypeProvider");
            feature.AddKnownType("System.Linq.Dynamic.Core.CustomTypeProviders.IDynamicLinqCustomTypeProvider", "IDynamicLinqCustomTypeProvider");
            feature.AddKnownType("System.Linq.Dynamic.Core.Exceptions.ParseException", "ParseException");
            feature.AddKnownType("System.Linq.Dynamic.Core.Parser.ConstantExpressionWrapper", "ConstantExpressionWrapper");
            feature.AddKnownType("System.Linq.Dynamic.Core.Parser.ExpressionHelper", "ExpressionHelper");
            feature.AddKnownType("System.Linq.Dynamic.Core.Parser.ExpressionParser", "ExpressionParser");
            feature.AddKnownType("System.Linq.Dynamic.Core.Parser.ExpressionPromoter", "ExpressionPromoter");
            feature.AddKnownType("System.Linq.Dynamic.Core.Parser.IConstantExpressionWrapper", "IConstantExpressionWrapper");
            feature.AddKnownType("System.Linq.Dynamic.Core.Parser.IExpressionHelper", "IExpressionHelper");
            feature.AddKnownType("System.Linq.Dynamic.Core.Parser.IExpressionPromoter", "IExpressionPromoter");
            feature.AddKnownType("System.Linq.Dynamic.Core.Parser.IKeywordsHelper", "IKeywordsHelper");
            feature.AddKnownType("System.Linq.Dynamic.Core.Parser.ITypeFinder", "ITypeFinder");
            feature.AddKnownType("System.Linq.Dynamic.Core.Parser.KeywordsHelper", "KeywordsHelper");
            feature.AddKnownType("System.Linq.Dynamic.Core.Parser.NumberParser", "NumberParser");
            feature.AddKnownType("System.Linq.Dynamic.Core.Parser.TypeFinder", "TypeFinder");
            feature.AddKnownType("System.Linq.Dynamic.Core.Parser.WrappedValue`1", "WrappedValue`1'1");
            feature.AddKnownType("System.Linq.Dynamic.Core.Parser.SupportedMethods.CompareConversionType", "CompareConversionType");
            feature.AddKnownType("System.Linq.Dynamic.Core.Parser.SupportedMethods.IDictionarySignatures", "IDictionarySignatures");
            feature.AddKnownType("System.Linq.Dynamic.Core.Parser.SupportedMethods.IEnumerableSignatures", "IEnumerableSignatures");
            feature.AddKnownType("System.Linq.Dynamic.Core.Parser.SupportedMethods.IQueryableSignatures", "IQueryableSignatures");
            feature.AddKnownType("System.Linq.Dynamic.Core.Parser.SupportedMethods.MethodData", "MethodData");
            feature.AddKnownType("System.Linq.Dynamic.Core.Parser.SupportedMethods.MethodFinder", "MethodFinder");
            feature.AddKnownType("System.Linq.Dynamic.Core.Parser.SupportedOperands.IAddSignatures", "IAddSignatures");
            feature.AddKnownType("System.Linq.Dynamic.Core.Parser.SupportedOperands.IArithmeticSignatures", "IArithmeticSignatures");
            feature.AddKnownType("System.Linq.Dynamic.Core.Parser.SupportedOperands.IEqualitySignatures", "IEqualitySignatures");
            feature.AddKnownType("System.Linq.Dynamic.Core.Parser.SupportedOperands.ILogicalSignatures", "ILogicalSignatures");
            feature.AddKnownType("System.Linq.Dynamic.Core.Parser.SupportedOperands.INegationSignatures", "INegationSignatures");
            feature.AddKnownType("System.Linq.Dynamic.Core.Parser.SupportedOperands.INotSignatures", "INotSignatures");
            feature.AddKnownType("System.Linq.Dynamic.Core.Parser.SupportedOperands.IRelationalSignatures", "IRelationalSignatures");
            feature.AddKnownType("System.Linq.Dynamic.Core.Parser.SupportedOperands.IShiftSignatures", "IShiftSignatures");
            feature.AddKnownType("System.Linq.Dynamic.Core.Parser.SupportedOperands.ISubtractSignatures", "ISubtractSignatures");
            feature.AddKnownType("System.Linq.Dynamic.Core.Tokenizer.TextParser", "TextParser");
            feature.AddKnownType("System.Linq.Dynamic.Core.Tokenizer.Token", "Token");
            feature.AddKnownType("System.Linq.Dynamic.Core.Tokenizer.TokenId", "TokenId");
            feature.AddKnownType("System.Linq.Dynamic.Core.TypeConverters.CustomDateTimeConverter", "CustomDateTimeConverter");
            feature.AddKnownType("System.Linq.Dynamic.Core.TypeConverters.ITypeConverterFactory", "ITypeConverterFactory");
            feature.AddKnownType("System.Linq.Dynamic.Core.TypeConverters.TypeConverterFactory", "TypeConverterFactory");
            feature.AddKnownType("System.Linq.Dynamic.Core.Util.ParameterExpressionRenamer", "ParameterExpressionRenamer");
            feature.AddKnownType("System.Linq.Dynamic.Core.Validation.ValidatedNotNullAttribute", "ValidatedNotNullAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Linq.Expressions", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Dynamic.BinaryOperationBinder", "BinaryOperationBinder");
            feature.AddKnownType("System.Dynamic.BindingRestrictions", "BindingRestrictions");
            feature.AddKnownType("System.Dynamic.CallInfo", "CallInfo");
            feature.AddKnownType("System.Dynamic.ConvertBinder", "ConvertBinder");
            feature.AddKnownType("System.Dynamic.CreateInstanceBinder", "CreateInstanceBinder");
            feature.AddKnownType("System.Dynamic.DeleteIndexBinder", "DeleteIndexBinder");
            feature.AddKnownType("System.Dynamic.DeleteMemberBinder", "DeleteMemberBinder");
            feature.AddKnownType("System.Dynamic.DynamicMetaObject", "DynamicMetaObject");
            feature.AddKnownType("System.Dynamic.DynamicMetaObjectBinder", "DynamicMetaObjectBinder");
            feature.AddKnownType("System.Dynamic.DynamicObject", "DynamicObject");
            feature.AddKnownType("System.Dynamic.ExpandoObject", "ExpandoObject");
            feature.AddKnownType("System.Dynamic.GetIndexBinder", "GetIndexBinder");
            feature.AddKnownType("System.Dynamic.GetMemberBinder", "GetMemberBinder");
            feature.AddKnownType("System.Dynamic.IDynamicMetaObjectProvider", "IDynamicMetaObjectProvider");
            feature.AddKnownType("System.Dynamic.IInvokeOnGetBinder", "IInvokeOnGetBinder");
            feature.AddKnownType("System.Dynamic.InvokeBinder", "InvokeBinder");
            feature.AddKnownType("System.Dynamic.InvokeMemberBinder", "InvokeMemberBinder");
            feature.AddKnownType("System.Dynamic.SetIndexBinder", "SetIndexBinder");
            feature.AddKnownType("System.Dynamic.SetMemberBinder", "SetMemberBinder");
            feature.AddKnownType("System.Dynamic.UnaryOperationBinder", "UnaryOperationBinder");
            feature.AddKnownType("System.Linq.IOrderedQueryable", "IOrderedQueryable");
            feature.AddKnownType("System.Linq.IOrderedQueryable`1", "IOrderedQueryable`1'1");
            feature.AddKnownType("System.Linq.IQueryable", "IQueryable");
            feature.AddKnownType("System.Linq.IQueryable`1", "IQueryable`1'1");
            feature.AddKnownType("System.Linq.IQueryProvider", "IQueryProvider");
            feature.AddKnownType("System.Linq.Expressions.BinaryExpression", "BinaryExpression");
            feature.AddKnownType("System.Linq.Expressions.BlockExpression", "BlockExpression");
            feature.AddKnownType("System.Linq.Expressions.CatchBlock", "CatchBlock");
            feature.AddKnownType("System.Linq.Expressions.ConditionalExpression", "ConditionalExpression");
            feature.AddKnownType("System.Linq.Expressions.ConstantExpression", "ConstantExpression");
            feature.AddKnownType("System.Linq.Expressions.DebugInfoExpression", "DebugInfoExpression");
            feature.AddKnownType("System.Linq.Expressions.DefaultExpression", "DefaultExpression");
            feature.AddKnownType("System.Linq.Expressions.DynamicExpression", "DynamicExpression");
            feature.AddKnownType("System.Linq.Expressions.DynamicExpressionVisitor", "DynamicExpressionVisitor");
            feature.AddKnownType("System.Linq.Expressions.ElementInit", "ElementInit");
            feature.AddKnownType("System.Linq.Expressions.Expression", "Expression");
            feature.AddKnownType("System.Linq.Expressions.Expression`1", "Expression`1'1");
            feature.AddKnownType("System.Linq.Expressions.ExpressionType", "ExpressionType");
            feature.AddKnownType("System.Linq.Expressions.ExpressionVisitor", "ExpressionVisitor");
            feature.AddKnownType("System.Linq.Expressions.GotoExpression", "GotoExpression");
            feature.AddKnownType("System.Linq.Expressions.GotoExpressionKind", "GotoExpressionKind");
            feature.AddKnownType("System.Linq.Expressions.IArgumentProvider", "IArgumentProvider");
            feature.AddKnownType("System.Linq.Expressions.IDynamicExpression", "IDynamicExpression");
            feature.AddKnownType("System.Linq.Expressions.IndexExpression", "IndexExpression");
            feature.AddKnownType("System.Linq.Expressions.InvocationExpression", "InvocationExpression");
            feature.AddKnownType("System.Linq.Expressions.LabelExpression", "LabelExpression");
            feature.AddKnownType("System.Linq.Expressions.LabelTarget", "LabelTarget");
            feature.AddKnownType("System.Linq.Expressions.LambdaExpression", "LambdaExpression");
            feature.AddKnownType("System.Linq.Expressions.ListInitExpression", "ListInitExpression");
            feature.AddKnownType("System.Linq.Expressions.LoopExpression", "LoopExpression");
            feature.AddKnownType("System.Linq.Expressions.MemberAssignment", "MemberAssignment");
            feature.AddKnownType("System.Linq.Expressions.MemberBinding", "MemberBinding");
            feature.AddKnownType("System.Linq.Expressions.MemberBindingType", "MemberBindingType");
            feature.AddKnownType("System.Linq.Expressions.MemberExpression", "MemberExpression");
            feature.AddKnownType("System.Linq.Expressions.MemberInitExpression", "MemberInitExpression");
            feature.AddKnownType("System.Linq.Expressions.MemberListBinding", "MemberListBinding");
            feature.AddKnownType("System.Linq.Expressions.MemberMemberBinding", "MemberMemberBinding");
            feature.AddKnownType("System.Linq.Expressions.MethodCallExpression", "MethodCallExpression");
            feature.AddKnownType("System.Linq.Expressions.NewArrayExpression", "NewArrayExpression");
            feature.AddKnownType("System.Linq.Expressions.NewExpression", "NewExpression");
            feature.AddKnownType("System.Linq.Expressions.ParameterExpression", "ParameterExpression");
            feature.AddKnownType("System.Linq.Expressions.RuntimeVariablesExpression", "RuntimeVariablesExpression");
            feature.AddKnownType("System.Linq.Expressions.SwitchCase", "SwitchCase");
            feature.AddKnownType("System.Linq.Expressions.SwitchExpression", "SwitchExpression");
            feature.AddKnownType("System.Linq.Expressions.SymbolDocumentInfo", "SymbolDocumentInfo");
            feature.AddKnownType("System.Linq.Expressions.TryExpression", "TryExpression");
            feature.AddKnownType("System.Linq.Expressions.TypeBinaryExpression", "TypeBinaryExpression");
            feature.AddKnownType("System.Linq.Expressions.UnaryExpression", "UnaryExpression");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.CallSite", "CallSite");
            feature.AddKnownType("System.Runtime.CompilerServices.CallSite`1", "CallSite`1'1");
            feature.AddKnownType("System.Runtime.CompilerServices.CallSiteBinder", "CallSiteBinder");
            feature.AddKnownType("System.Runtime.CompilerServices.DebugInfoGenerator", "DebugInfoGenerator");
            feature.AddKnownType("System.Runtime.CompilerServices.DynamicAttribute", "DynamicAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.IRuntimeVariables", "IRuntimeVariables");
            feature.AddKnownType("System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1", "ReadOnlyCollectionBuilder`1'1");
            feature.AddKnownType("System.Runtime.CompilerServices.RuleCache`1", "RuleCache`1'1");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Linq.Parallel", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Linq.OrderedParallelQuery`1", "OrderedParallelQuery`1'1");
            feature.AddKnownType("System.Linq.ParallelExecutionMode", "ParallelExecutionMode");
            feature.AddKnownType("System.Linq.ParallelMergeOptions", "ParallelMergeOptions");
            feature.AddKnownType("System.Linq.ParallelQuery", "ParallelQuery");
            feature.AddKnownType("System.Linq.ParallelQuery`1", "ParallelQuery`1'1");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Linq.Queryable", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Linq.EnumerableExecutor", "EnumerableExecutor");
            feature.AddKnownType("System.Linq.EnumerableExecutor`1", "EnumerableExecutor`1'1");
            feature.AddKnownType("System.Linq.EnumerableQuery", "EnumerableQuery");
            feature.AddKnownType("System.Linq.EnumerableQuery`1", "EnumerableQuery`1'1");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Memory", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.SequencePosition", "SequencePosition");
            feature.AddKnownType("System.MemoryExtensions+TryWriteInterpolatedStringHandler", "MemoryExtensions.TryWriteInterpolatedStringHandler");
            feature.AddKnownType("System.Buffers.ArrayBufferWriter`1", "ArrayBufferWriter`1'1");
            feature.AddKnownType("System.Buffers.IBufferWriter`1", "IBufferWriter`1'1");
            feature.AddKnownType("System.Buffers.MemoryPool`1", "MemoryPool`1'1");
            feature.AddKnownType("System.Buffers.ReadOnlySequenceSegment`1", "ReadOnlySequenceSegment`1'1");
            feature.AddKnownType("System.Buffers.ReadOnlySequence`1", "ReadOnlySequence`1'1");
            feature.AddKnownType("System.Buffers.ReadOnlySequence`1+Enumerator", "ReadOnlySequence`1'1.Enumerator'1");
            feature.AddKnownType("System.Buffers.SequenceReader`1", "SequenceReader`1'1");
            feature.AddKnownType("System.Buffers.StandardFormat", "StandardFormat");
            feature.AddKnownType("System.Runtime.CompilerServices.IsUnmanagedAttribute", "IsUnmanagedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.ScopedRefAttribute", "ScopedRefAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Text.SpanLineEnumerator", "SpanLineEnumerator");
            feature.AddKnownType("System.Text.SpanRuneEnumerator", "SpanRuneEnumerator");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Net.Http", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Net.Http.ByteArrayContent", "ByteArrayContent");
            feature.AddKnownType("System.Net.Http.ClientCertificateOption", "ClientCertificateOption");
            feature.AddKnownType("System.Net.Http.DelegatingHandler", "DelegatingHandler");
            feature.AddKnownType("System.Net.Http.FormUrlEncodedContent", "FormUrlEncodedContent");
            feature.AddKnownType("System.Net.Http.HttpClient", "HttpClient");
            feature.AddKnownType("System.Net.Http.HttpClientHandler", "HttpClientHandler");
            feature.AddKnownType("System.Net.Http.HttpCompletionOption", "HttpCompletionOption");
            feature.AddKnownType("System.Net.Http.HttpContent", "HttpContent");
            feature.AddKnownType("System.Net.Http.HttpMessageHandler", "HttpMessageHandler");
            feature.AddKnownType("System.Net.Http.HttpMessageInvoker", "HttpMessageInvoker");
            feature.AddKnownType("System.Net.Http.HttpMethod", "HttpMethod");
            feature.AddKnownType("System.Net.Http.HttpProtocolException", "HttpProtocolException");
            feature.AddKnownType("System.Net.Http.HttpRequestException", "HttpRequestException");
            feature.AddKnownType("System.Net.Http.HttpRequestMessage", "HttpRequestMessage");
            feature.AddKnownType("System.Net.Http.HttpRequestOptionsKey`1", "HttpRequestOptionsKey`1'1");
            feature.AddKnownType("System.Net.Http.HttpRequestOptions", "HttpRequestOptions");
            feature.AddKnownType("System.Net.Http.HttpResponseMessage", "HttpResponseMessage");
            feature.AddKnownType("System.Net.Http.HttpVersionPolicy", "HttpVersionPolicy");
            feature.AddKnownType("System.Net.Http.MessageProcessingHandler", "MessageProcessingHandler");
            feature.AddKnownType("System.Net.Http.MultipartContent", "MultipartContent");
            feature.AddKnownType("System.Net.Http.MultipartFormDataContent", "MultipartFormDataContent");
            feature.AddKnownType("System.Net.Http.ReadOnlyMemoryContent", "ReadOnlyMemoryContent");
            feature.AddKnownType("System.Net.Http.SocketsHttpHandler", "SocketsHttpHandler");
            feature.AddKnownType("System.Net.Http.SocketsHttpConnectionContext", "SocketsHttpConnectionContext");
            feature.AddKnownType("System.Net.Http.SocketsHttpPlaintextStreamFilterContext", "SocketsHttpPlaintextStreamFilterContext");
            feature.AddKnownType("System.Net.Http.HttpKeepAlivePingPolicy", "HttpKeepAlivePingPolicy");
            feature.AddKnownType("System.Net.Http.StreamContent", "StreamContent");
            feature.AddKnownType("System.Net.Http.StringContent", "StringContent");
            feature.AddKnownType("System.Net.Http.Headers.AuthenticationHeaderValue", "AuthenticationHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.CacheControlHeaderValue", "CacheControlHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.ContentDispositionHeaderValue", "ContentDispositionHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.ContentRangeHeaderValue", "ContentRangeHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.EntityTagHeaderValue", "EntityTagHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.HeaderStringValues", "HeaderStringValues");
            feature.AddKnownType("System.Net.Http.Headers.HeaderStringValues+Enumerator", "HeaderStringValues.Enumerator");
            feature.AddKnownType("System.Net.Http.Headers.HttpContentHeaders", "HttpContentHeaders");
            feature.AddKnownType("System.Net.Http.Headers.HttpHeaders", "HttpHeaders");
            feature.AddKnownType("System.Net.Http.Headers.HttpHeadersNonValidated", "HttpHeadersNonValidated");
            feature.AddKnownType("System.Net.Http.Headers.HttpHeadersNonValidated+Enumerator", "HttpHeadersNonValidated.Enumerator");
            feature.AddKnownType("System.Net.Http.Headers.HttpHeaderValueCollection`1", "HttpHeaderValueCollection`1'1");
            feature.AddKnownType("System.Net.Http.Headers.HttpRequestHeaders", "HttpRequestHeaders");
            feature.AddKnownType("System.Net.Http.Headers.HttpResponseHeaders", "HttpResponseHeaders");
            feature.AddKnownType("System.Net.Http.Headers.MediaTypeHeaderValue", "MediaTypeHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.MediaTypeWithQualityHeaderValue", "MediaTypeWithQualityHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.NameValueHeaderValue", "NameValueHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.NameValueWithParametersHeaderValue", "NameValueWithParametersHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.ProductHeaderValue", "ProductHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.ProductInfoHeaderValue", "ProductInfoHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.RangeConditionHeaderValue", "RangeConditionHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.RangeHeaderValue", "RangeHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.RangeItemHeaderValue", "RangeItemHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.RetryConditionHeaderValue", "RetryConditionHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.StringWithQualityHeaderValue", "StringWithQualityHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.TransferCodingHeaderValue", "TransferCodingHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.TransferCodingWithQualityHeaderValue", "TransferCodingWithQualityHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.ViaHeaderValue", "ViaHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.WarningHeaderValue", "WarningHeaderValue");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Net.Http.Json", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Net.Http.Json.JsonContent", "JsonContent");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Net.HttpListener", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Net.HttpListener", "HttpListener");
            feature.AddKnownType("System.Net.HttpListenerBasicIdentity", "HttpListenerBasicIdentity");
            feature.AddKnownType("System.Net.HttpListenerContext", "HttpListenerContext");
            feature.AddKnownType("System.Net.HttpListenerException", "HttpListenerException");
            feature.AddKnownType("System.Net.HttpListenerPrefixCollection", "HttpListenerPrefixCollection");
            feature.AddKnownType("System.Net.HttpListenerRequest", "HttpListenerRequest");
            feature.AddKnownType("System.Net.HttpListenerResponse", "HttpListenerResponse");
            feature.AddKnownType("System.Net.HttpListenerTimeoutManager", "HttpListenerTimeoutManager");
            feature.AddKnownType("System.Net.WebSockets.HttpListenerWebSocketContext", "HttpListenerWebSocketContext");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Net.Mail", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Net.Mail.AlternateView", "AlternateView");
            feature.AddKnownType("System.Net.Mail.AlternateViewCollection", "AlternateViewCollection");
            feature.AddKnownType("System.Net.Mail.Attachment", "Attachment");
            feature.AddKnownType("System.Net.Mail.AttachmentBase", "AttachmentBase");
            feature.AddKnownType("System.Net.Mail.AttachmentCollection", "AttachmentCollection");
            feature.AddKnownType("System.Net.Mail.DeliveryNotificationOptions", "DeliveryNotificationOptions");
            feature.AddKnownType("System.Net.Mail.LinkedResource", "LinkedResource");
            feature.AddKnownType("System.Net.Mail.LinkedResourceCollection", "LinkedResourceCollection");
            feature.AddKnownType("System.Net.Mail.MailAddress", "MailAddress");
            feature.AddKnownType("System.Net.Mail.MailAddressCollection", "MailAddressCollection");
            feature.AddKnownType("System.Net.Mail.MailMessage", "MailMessage");
            feature.AddKnownType("System.Net.Mail.MailPriority", "MailPriority");
            feature.AddKnownType("System.Net.Mail.SmtpClient", "SmtpClient");
            feature.AddKnownType("System.Net.Mail.SmtpDeliveryFormat", "SmtpDeliveryFormat");
            feature.AddKnownType("System.Net.Mail.SmtpDeliveryMethod", "SmtpDeliveryMethod");
            feature.AddKnownType("System.Net.Mail.SmtpException", "SmtpException");
            feature.AddKnownType("System.Net.Mail.SmtpFailedRecipientException", "SmtpFailedRecipientException");
            feature.AddKnownType("System.Net.Mail.SmtpFailedRecipientsException", "SmtpFailedRecipientsException");
            feature.AddKnownType("System.Net.Mail.SmtpStatusCode", "SmtpStatusCode");
            feature.AddKnownType("System.Net.Mime.ContentDisposition", "ContentDisposition");
            feature.AddKnownType("System.Net.Mime.ContentType", "ContentType");
            feature.AddKnownType("System.Net.Mime.TransferEncoding", "TransferEncoding");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Net.NameResolution", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Net.IPHostEntry", "IPHostEntry");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Net.NetworkInformation", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Net.NetworkInformation.DuplicateAddressDetectionState", "DuplicateAddressDetectionState");
            feature.AddKnownType("System.Net.NetworkInformation.GatewayIPAddressInformation", "GatewayIPAddressInformation");
            feature.AddKnownType("System.Net.NetworkInformation.GatewayIPAddressInformationCollection", "GatewayIPAddressInformationCollection");
            feature.AddKnownType("System.Net.NetworkInformation.IcmpV4Statistics", "IcmpV4Statistics");
            feature.AddKnownType("System.Net.NetworkInformation.IcmpV6Statistics", "IcmpV6Statistics");
            feature.AddKnownType("System.Net.NetworkInformation.IPAddressInformation", "IPAddressInformation");
            feature.AddKnownType("System.Net.NetworkInformation.IPAddressInformationCollection", "IPAddressInformationCollection");
            feature.AddKnownType("System.Net.NetworkInformation.IPGlobalProperties", "IPGlobalProperties");
            feature.AddKnownType("System.Net.NetworkInformation.IPGlobalStatistics", "IPGlobalStatistics");
            feature.AddKnownType("System.Net.NetworkInformation.IPInterfaceProperties", "IPInterfaceProperties");
            feature.AddKnownType("System.Net.NetworkInformation.IPInterfaceStatistics", "IPInterfaceStatistics");
            feature.AddKnownType("System.Net.NetworkInformation.IPv4InterfaceProperties", "IPv4InterfaceProperties");
            feature.AddKnownType("System.Net.NetworkInformation.IPv4InterfaceStatistics", "IPv4InterfaceStatistics");
            feature.AddKnownType("System.Net.NetworkInformation.IPv6InterfaceProperties", "IPv6InterfaceProperties");
            feature.AddKnownType("System.Net.NetworkInformation.MulticastIPAddressInformation", "MulticastIPAddressInformation");
            feature.AddKnownType("System.Net.NetworkInformation.MulticastIPAddressInformationCollection", "MulticastIPAddressInformationCollection");
            feature.AddKnownType("System.Net.NetworkInformation.NetBiosNodeType", "NetBiosNodeType");
            feature.AddKnownType("System.Net.NetworkInformation.NetworkAvailabilityEventArgs", "NetworkAvailabilityEventArgs");
            feature.AddKnownType("System.Net.NetworkInformation.NetworkChange", "NetworkChange");
            feature.AddKnownType("System.Net.NetworkInformation.NetworkInformationException", "NetworkInformationException");
            feature.AddKnownType("System.Net.NetworkInformation.NetworkInterface", "NetworkInterface");
            feature.AddKnownType("System.Net.NetworkInformation.NetworkInterfaceComponent", "NetworkInterfaceComponent");
            feature.AddKnownType("System.Net.NetworkInformation.NetworkInterfaceType", "NetworkInterfaceType");
            feature.AddKnownType("System.Net.NetworkInformation.OperationalStatus", "OperationalStatus");
            feature.AddKnownType("System.Net.NetworkInformation.PhysicalAddress", "PhysicalAddress");
            feature.AddKnownType("System.Net.NetworkInformation.PrefixOrigin", "PrefixOrigin");
            feature.AddKnownType("System.Net.NetworkInformation.ScopeLevel", "ScopeLevel");
            feature.AddKnownType("System.Net.NetworkInformation.SuffixOrigin", "SuffixOrigin");
            feature.AddKnownType("System.Net.NetworkInformation.TcpConnectionInformation", "TcpConnectionInformation");
            feature.AddKnownType("System.Net.NetworkInformation.TcpState", "TcpState");
            feature.AddKnownType("System.Net.NetworkInformation.TcpStatistics", "TcpStatistics");
            feature.AddKnownType("System.Net.NetworkInformation.UdpStatistics", "UdpStatistics");
            feature.AddKnownType("System.Net.NetworkInformation.UnicastIPAddressInformation", "UnicastIPAddressInformation");
            feature.AddKnownType("System.Net.NetworkInformation.UnicastIPAddressInformationCollection", "UnicastIPAddressInformationCollection");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Net.Ping", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Net.NetworkInformation.IPStatus", "IPStatus");
            feature.AddKnownType("System.Net.NetworkInformation.Ping", "Ping");
            feature.AddKnownType("System.Net.NetworkInformation.PingCompletedEventArgs", "PingCompletedEventArgs");
            feature.AddKnownType("System.Net.NetworkInformation.PingException", "PingException");
            feature.AddKnownType("System.Net.NetworkInformation.PingOptions", "PingOptions");
            feature.AddKnownType("System.Net.NetworkInformation.PingReply", "PingReply");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Net.Primitives", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Net.AuthenticationSchemes", "AuthenticationSchemes");
            feature.AddKnownType("System.Net.Cookie", "Cookie");
            feature.AddKnownType("System.Net.CookieCollection", "CookieCollection");
            feature.AddKnownType("System.Net.CookieContainer", "CookieContainer");
            feature.AddKnownType("System.Net.CookieException", "CookieException");
            feature.AddKnownType("System.Net.CredentialCache", "CredentialCache");
            feature.AddKnownType("System.Net.DecompressionMethods", "DecompressionMethods");
            feature.AddKnownType("System.Net.DnsEndPoint", "DnsEndPoint");
            feature.AddKnownType("System.Net.EndPoint", "EndPoint");
            feature.AddKnownType("System.Net.HttpStatusCode", "HttpStatusCode");
            feature.AddKnownType("System.Net.ICredentials", "ICredentials");
            feature.AddKnownType("System.Net.ICredentialsByHost", "ICredentialsByHost");
            feature.AddKnownType("System.Net.IPAddress", "IPAddress");
            feature.AddKnownType("System.Net.IPEndPoint", "IPEndPoint");
            feature.AddKnownType("System.Net.IWebProxy", "IWebProxy");
            feature.AddKnownType("System.Net.NetworkCredential", "NetworkCredential");
            feature.AddKnownType("System.Net.SocketAddress", "SocketAddress");
            feature.AddKnownType("System.Net.TransportContext", "TransportContext");
            feature.AddKnownType("System.Net.Cache.RequestCacheLevel", "RequestCacheLevel");
            feature.AddKnownType("System.Net.Cache.RequestCachePolicy", "RequestCachePolicy");
            feature.AddKnownType("System.Net.NetworkInformation.IPAddressCollection", "IPAddressCollection");
            feature.AddKnownType("System.Net.Security.AuthenticationLevel", "AuthenticationLevel");
            feature.AddKnownType("System.Net.Security.SslPolicyErrors", "SslPolicyErrors");
            feature.AddKnownType("System.Net.Sockets.AddressFamily", "AddressFamily");
            feature.AddKnownType("System.Net.Sockets.SocketError", "SocketError");
            feature.AddKnownType("System.Net.Sockets.SocketException", "SocketException");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Security.Authentication.CipherAlgorithmType", "CipherAlgorithmType");
            feature.AddKnownType("System.Security.Authentication.ExchangeAlgorithmType", "ExchangeAlgorithmType");
            feature.AddKnownType("System.Security.Authentication.HashAlgorithmType", "HashAlgorithmType");
            feature.AddKnownType("System.Security.Authentication.SslProtocols", "SslProtocols");
            feature.AddKnownType("System.Security.Authentication.ExtendedProtection.ChannelBinding", "ChannelBinding");
            feature.AddKnownType("System.Security.Authentication.ExtendedProtection.ChannelBindingKind", "ChannelBindingKind");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Net.Quic", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Net.Quic.QuicAbortDirection", "QuicAbortDirection");
            feature.AddKnownType("System.Net.Quic.QuicClientConnectionOptions", "QuicClientConnectionOptions");
            feature.AddKnownType("System.Net.Quic.QuicConnection", "QuicConnection");
            feature.AddKnownType("System.Net.Quic.QuicConnectionOptions", "QuicConnectionOptions");
            feature.AddKnownType("System.Net.Quic.QuicError", "QuicError");
            feature.AddKnownType("System.Net.Quic.QuicException", "QuicException");
            feature.AddKnownType("System.Net.Quic.QuicListener", "QuicListener");
            feature.AddKnownType("System.Net.Quic.QuicListenerOptions", "QuicListenerOptions");
            feature.AddKnownType("System.Net.Quic.QuicServerConnectionOptions", "QuicServerConnectionOptions");
            feature.AddKnownType("System.Net.Quic.QuicStream", "QuicStream");
            feature.AddKnownType("System.Net.Quic.QuicStreamType", "QuicStreamType");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Net.Requests", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Net.AuthenticationManager", "AuthenticationManager");
            feature.AddKnownType("System.Net.Authorization", "Authorization");
            feature.AddKnownType("System.Net.FileWebRequest", "FileWebRequest");
            feature.AddKnownType("System.Net.FileWebResponse", "FileWebResponse");
            feature.AddKnownType("System.Net.FtpStatusCode", "FtpStatusCode");
            feature.AddKnownType("System.Net.FtpWebRequest", "FtpWebRequest");
            feature.AddKnownType("System.Net.FtpWebResponse", "FtpWebResponse");
            feature.AddKnownType("System.Net.GlobalProxySelection", "GlobalProxySelection");
            feature.AddKnownType("System.Net.HttpWebRequest", "HttpWebRequest");
            feature.AddKnownType("System.Net.HttpWebResponse", "HttpWebResponse");
            feature.AddKnownType("System.Net.IAuthenticationModule", "IAuthenticationModule");
            feature.AddKnownType("System.Net.ICredentialPolicy", "ICredentialPolicy");
            feature.AddKnownType("System.Net.IWebRequestCreate", "IWebRequestCreate");
            feature.AddKnownType("System.Net.ProtocolViolationException", "ProtocolViolationException");
            feature.AddKnownType("System.Net.WebException", "WebException");
            feature.AddKnownType("System.Net.WebExceptionStatus", "WebExceptionStatus");
            feature.AddKnownType("System.Net.WebRequest", "WebRequest");
            feature.AddKnownType("System.Net.WebResponse", "WebResponse");
            feature.AddKnownType("System.Net.Cache.HttpCacheAgeControl", "HttpCacheAgeControl");
            feature.AddKnownType("System.Net.Cache.HttpRequestCacheLevel", "HttpRequestCacheLevel");
            feature.AddKnownType("System.Net.Cache.HttpRequestCachePolicy", "HttpRequestCachePolicy");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Net.Security", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Net.Security.AuthenticatedStream", "AuthenticatedStream");
            feature.AddKnownType("System.Net.Security.CipherSuitesPolicy", "CipherSuitesPolicy");
            feature.AddKnownType("System.Net.Security.EncryptionPolicy", "EncryptionPolicy");
            feature.AddKnownType("System.Net.Security.NegotiateAuthentication", "NegotiateAuthentication");
            feature.AddKnownType("System.Net.Security.NegotiateAuthenticationClientOptions", "NegotiateAuthenticationClientOptions");
            feature.AddKnownType("System.Net.Security.NegotiateAuthenticationServerOptions", "NegotiateAuthenticationServerOptions");
            feature.AddKnownType("System.Net.Security.NegotiateAuthenticationStatusCode", "NegotiateAuthenticationStatusCode");
            feature.AddKnownType("System.Net.Security.NegotiateStream", "NegotiateStream");
            feature.AddKnownType("System.Net.Security.ProtectionLevel", "ProtectionLevel");
            feature.AddKnownType("System.Net.Security.SslApplicationProtocol", "SslApplicationProtocol");
            feature.AddKnownType("System.Net.Security.SslCertificateTrust", "SslCertificateTrust");
            feature.AddKnownType("System.Net.Security.SslClientAuthenticationOptions", "SslClientAuthenticationOptions");
            feature.AddKnownType("System.Net.Security.SslClientHelloInfo", "SslClientHelloInfo");
            feature.AddKnownType("System.Net.Security.SslServerAuthenticationOptions", "SslServerAuthenticationOptions");
            feature.AddKnownType("System.Net.Security.SslStream", "SslStream");
            feature.AddKnownType("System.Net.Security.SslStreamCertificateContext", "SslStreamCertificateContext");
            feature.AddKnownType("System.Net.Security.TlsCipherSuite", "TlsCipherSuite");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Security.Authentication.AuthenticationException", "AuthenticationException");
            feature.AddKnownType("System.Security.Authentication.InvalidCredentialException", "InvalidCredentialException");
            feature.AddKnownType("System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy", "ExtendedProtectionPolicy");
            feature.AddKnownType("System.Security.Authentication.ExtendedProtection.PolicyEnforcement", "PolicyEnforcement");
            feature.AddKnownType("System.Security.Authentication.ExtendedProtection.ProtectionScenario", "ProtectionScenario");
            feature.AddKnownType("System.Security.Authentication.ExtendedProtection.ServiceNameCollection", "ServiceNameCollection");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Net.ServicePoint", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Net.SecurityProtocolType", "SecurityProtocolType");
            feature.AddKnownType("System.Net.ServicePoint", "ServicePoint");
            feature.AddKnownType("System.Net.ServicePointManager", "ServicePointManager");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Net.Sockets", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Net.Sockets.IOControlCode", "IOControlCode");
            feature.AddKnownType("System.Net.Sockets.IPPacketInformation", "IPPacketInformation");
            feature.AddKnownType("System.Net.Sockets.IPProtectionLevel", "IPProtectionLevel");
            feature.AddKnownType("System.Net.Sockets.IPv6MulticastOption", "IPv6MulticastOption");
            feature.AddKnownType("System.Net.Sockets.LingerOption", "LingerOption");
            feature.AddKnownType("System.Net.Sockets.MulticastOption", "MulticastOption");
            feature.AddKnownType("System.Net.Sockets.NetworkStream", "NetworkStream");
            feature.AddKnownType("System.Net.Sockets.ProtocolFamily", "ProtocolFamily");
            feature.AddKnownType("System.Net.Sockets.ProtocolType", "ProtocolType");
            feature.AddKnownType("System.Net.Sockets.SafeSocketHandle", "SafeSocketHandle");
            feature.AddKnownType("System.Net.Sockets.SelectMode", "SelectMode");
            feature.AddKnownType("System.Net.Sockets.SendPacketsElement", "SendPacketsElement");
            feature.AddKnownType("System.Net.Sockets.Socket", "Socket");
            feature.AddKnownType("System.Net.Sockets.SocketAsyncEventArgs", "SocketAsyncEventArgs");
            feature.AddKnownType("System.Net.Sockets.SocketAsyncOperation", "SocketAsyncOperation");
            feature.AddKnownType("System.Net.Sockets.SocketFlags", "SocketFlags");
            feature.AddKnownType("System.Net.Sockets.SocketInformation", "SocketInformation");
            feature.AddKnownType("System.Net.Sockets.SocketInformationOptions", "SocketInformationOptions");
            feature.AddKnownType("System.Net.Sockets.SocketOptionLevel", "SocketOptionLevel");
            feature.AddKnownType("System.Net.Sockets.SocketOptionName", "SocketOptionName");
            feature.AddKnownType("System.Net.Sockets.SocketReceiveFromResult", "SocketReceiveFromResult");
            feature.AddKnownType("System.Net.Sockets.SocketReceiveMessageFromResult", "SocketReceiveMessageFromResult");
            feature.AddKnownType("System.Net.Sockets.SocketShutdown", "SocketShutdown");
            feature.AddKnownType("System.Net.Sockets.SocketType", "SocketType");
            feature.AddKnownType("System.Net.Sockets.TcpClient", "TcpClient");
            feature.AddKnownType("System.Net.Sockets.TcpListener", "TcpListener");
            feature.AddKnownType("System.Net.Sockets.TransmitFileOptions", "TransmitFileOptions");
            feature.AddKnownType("System.Net.Sockets.UdpClient", "UdpClient");
            feature.AddKnownType("System.Net.Sockets.UdpReceiveResult", "UdpReceiveResult");
            feature.AddKnownType("System.Net.Sockets.UnixDomainSocketEndPoint", "UnixDomainSocketEndPoint");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Net.WebClient", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Net.DownloadDataCompletedEventArgs", "DownloadDataCompletedEventArgs");
            feature.AddKnownType("System.Net.DownloadProgressChangedEventArgs", "DownloadProgressChangedEventArgs");
            feature.AddKnownType("System.Net.DownloadStringCompletedEventArgs", "DownloadStringCompletedEventArgs");
            feature.AddKnownType("System.Net.OpenReadCompletedEventArgs", "OpenReadCompletedEventArgs");
            feature.AddKnownType("System.Net.OpenWriteCompletedEventArgs", "OpenWriteCompletedEventArgs");
            feature.AddKnownType("System.Net.UploadDataCompletedEventArgs", "UploadDataCompletedEventArgs");
            feature.AddKnownType("System.Net.UploadFileCompletedEventArgs", "UploadFileCompletedEventArgs");
            feature.AddKnownType("System.Net.UploadProgressChangedEventArgs", "UploadProgressChangedEventArgs");
            feature.AddKnownType("System.Net.UploadStringCompletedEventArgs", "UploadStringCompletedEventArgs");
            feature.AddKnownType("System.Net.UploadValuesCompletedEventArgs", "UploadValuesCompletedEventArgs");
            feature.AddKnownType("System.Net.WebClient", "WebClient");
            feature.AddKnownType("System.Net.WriteStreamClosedEventArgs", "WriteStreamClosedEventArgs");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Net.WebHeaderCollection", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Net.HttpRequestHeader", "HttpRequestHeader");
            feature.AddKnownType("System.Net.HttpResponseHeader", "HttpResponseHeader");
            feature.AddKnownType("System.Net.WebHeaderCollection", "WebHeaderCollection");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Net.WebProxy", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Net.IWebProxyScript", "IWebProxyScript");
            feature.AddKnownType("System.Net.WebProxy", "WebProxy");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Net.WebSockets.Client", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Net.WebSockets.ClientWebSocket", "ClientWebSocket");
            feature.AddKnownType("System.Net.WebSockets.ClientWebSocketOptions", "ClientWebSocketOptions");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Net.WebSockets", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Net.WebSockets.ValueWebSocketReceiveResult", "ValueWebSocketReceiveResult");
            feature.AddKnownType("System.Net.WebSockets.WebSocket", "WebSocket");
            feature.AddKnownType("System.Net.WebSockets.WebSocketCloseStatus", "WebSocketCloseStatus");
            feature.AddKnownType("System.Net.WebSockets.WebSocketContext", "WebSocketContext");
            feature.AddKnownType("System.Net.WebSockets.WebSocketError", "WebSocketError");
            feature.AddKnownType("System.Net.WebSockets.WebSocketException", "WebSocketException");
            feature.AddKnownType("System.Net.WebSockets.WebSocketMessageType", "WebSocketMessageType");
            feature.AddKnownType("System.Net.WebSockets.WebSocketReceiveResult", "WebSocketReceiveResult");
            feature.AddKnownType("System.Net.WebSockets.WebSocketState", "WebSocketState");
            feature.AddKnownType("System.Net.WebSockets.WebSocketCreationOptions", "WebSocketCreationOptions");
            feature.AddKnownType("System.Net.WebSockets.WebSocketDeflateOptions", "WebSocketDeflateOptions");
            feature.AddKnownType("System.Net.WebSockets.WebSocketMessageFlags", "WebSocketMessageFlags");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Numerics.Vectors", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Numerics.Matrix3x2", "Matrix3x2");
            feature.AddKnownType("System.Numerics.Matrix4x4", "Matrix4x4");
            feature.AddKnownType("System.Numerics.Plane", "Plane");
            feature.AddKnownType("System.Numerics.Quaternion", "Quaternion");
            feature.AddKnownType("System.Numerics.Vector`1", "Vector`1'1");
            feature.AddKnownType("System.Numerics.Vector2", "Vector2");
            feature.AddKnownType("System.Numerics.Vector3", "Vector3");
            feature.AddKnownType("System.Numerics.Vector4", "Vector4");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.ObjectModel", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Collections.ObjectModel.KeyedCollection`2", "KeyedCollection`2'2");
            feature.AddKnownType("System.Collections.ObjectModel.ObservableCollection`1", "ObservableCollection`1'1");
            feature.AddKnownType("System.Collections.ObjectModel.ReadOnlyObservableCollection`1", "ReadOnlyObservableCollection`1'1");
            feature.AddKnownType("System.Collections.Specialized.INotifyCollectionChanged", "INotifyCollectionChanged");
            feature.AddKnownType("System.Collections.Specialized.NotifyCollectionChangedAction", "NotifyCollectionChangedAction");
            feature.AddKnownType("System.Collections.Specialized.NotifyCollectionChangedEventArgs", "NotifyCollectionChangedEventArgs");
            feature.AddKnownType("System.ComponentModel.DataErrorsChangedEventArgs", "DataErrorsChangedEventArgs");
            feature.AddKnownType("System.ComponentModel.INotifyDataErrorInfo", "INotifyDataErrorInfo");
            feature.AddKnownType("System.ComponentModel.INotifyPropertyChanged", "INotifyPropertyChanged");
            feature.AddKnownType("System.ComponentModel.INotifyPropertyChanging", "INotifyPropertyChanging");
            feature.AddKnownType("System.ComponentModel.PropertyChangedEventArgs", "PropertyChangedEventArgs");
            feature.AddKnownType("System.ComponentModel.PropertyChangingEventArgs", "PropertyChangingEventArgs");
            feature.AddKnownType("System.ComponentModel.TypeConverterAttribute", "TypeConverterAttribute");
            feature.AddKnownType("System.ComponentModel.TypeDescriptionProviderAttribute", "TypeDescriptionProviderAttribute");
            feature.AddKnownType("System.Reflection.ICustomTypeProvider", "ICustomTypeProvider");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Windows.Input.ICommand", "ICommand");
            feature.AddKnownType("System.Windows.Markup.ValueSerializerAttribute", "ValueSerializerAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Reflection.DispatchProxy", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Reflection.DispatchProxy", "DispatchProxy");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Reflection.Emit", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Reflection.Emit.AssemblyBuilder", "AssemblyBuilder");
            feature.AddKnownType("System.Reflection.Emit.AssemblyBuilderAccess", "AssemblyBuilderAccess");
            feature.AddKnownType("System.Reflection.Emit.ConstructorBuilder", "ConstructorBuilder");
            feature.AddKnownType("System.Reflection.Emit.EnumBuilder", "EnumBuilder");
            feature.AddKnownType("System.Reflection.Emit.EventBuilder", "EventBuilder");
            feature.AddKnownType("System.Reflection.Emit.FieldBuilder", "FieldBuilder");
            feature.AddKnownType("System.Reflection.Emit.GenericTypeParameterBuilder", "GenericTypeParameterBuilder");
            feature.AddKnownType("System.Reflection.Emit.MethodBuilder", "MethodBuilder");
            feature.AddKnownType("System.Reflection.Emit.ModuleBuilder", "ModuleBuilder");
            feature.AddKnownType("System.Reflection.Emit.PropertyBuilder", "PropertyBuilder");
            feature.AddKnownType("System.Reflection.Emit.TypeBuilder", "TypeBuilder");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Reflection.Emit.ILGeneration", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Reflection.Emit.CustomAttributeBuilder", "CustomAttributeBuilder");
            feature.AddKnownType("System.Reflection.Emit.ILGenerator", "ILGenerator");
            feature.AddKnownType("System.Reflection.Emit.Label", "Label");
            feature.AddKnownType("System.Reflection.Emit.LocalBuilder", "LocalBuilder");
            feature.AddKnownType("System.Reflection.Emit.ParameterBuilder", "ParameterBuilder");
            feature.AddKnownType("System.Reflection.Emit.SignatureHelper", "SignatureHelper");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Reflection.Emit.Lightweight", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Reflection.Emit.DynamicILInfo", "DynamicILInfo");
            feature.AddKnownType("System.Reflection.Emit.DynamicMethod", "DynamicMethod");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Reflection.Metadata", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Reflection.AssemblyFlags", "AssemblyFlags");
            feature.AddKnownType("System.Reflection.AssemblyHashAlgorithm", "AssemblyHashAlgorithm");
            feature.AddKnownType("System.Reflection.DeclarativeSecurityAction", "DeclarativeSecurityAction");
            feature.AddKnownType("System.Reflection.ManifestResourceAttributes", "ManifestResourceAttributes");
            feature.AddKnownType("System.Reflection.MethodImportAttributes", "MethodImportAttributes");
            feature.AddKnownType("System.Reflection.MethodSemanticsAttributes", "MethodSemanticsAttributes");
            feature.AddKnownType("System.Reflection.Metadata.ArrayShape", "ArrayShape");
            feature.AddKnownType("System.Reflection.Metadata.AssemblyDefinition", "AssemblyDefinition");
            feature.AddKnownType("System.Reflection.Metadata.AssemblyDefinitionHandle", "AssemblyDefinitionHandle");
            feature.AddKnownType("System.Reflection.Metadata.AssemblyFile", "AssemblyFile");
            feature.AddKnownType("System.Reflection.Metadata.AssemblyFileHandle", "AssemblyFileHandle");
            feature.AddKnownType("System.Reflection.Metadata.AssemblyFileHandleCollection", "AssemblyFileHandleCollection");
            feature.AddKnownType("System.Reflection.Metadata.AssemblyFileHandleCollection+Enumerator", "AssemblyFileHandleCollection.Enumerator");
            feature.AddKnownType("System.Reflection.Metadata.AssemblyReference", "AssemblyReference");
            feature.AddKnownType("System.Reflection.Metadata.AssemblyReferenceHandle", "AssemblyReferenceHandle");
            feature.AddKnownType("System.Reflection.Metadata.AssemblyReferenceHandleCollection", "AssemblyReferenceHandleCollection");
            feature.AddKnownType("System.Reflection.Metadata.AssemblyReferenceHandleCollection+Enumerator", "AssemblyReferenceHandleCollection.Enumerator");
            feature.AddKnownType("System.Reflection.Metadata.Blob", "Blob");
            feature.AddKnownType("System.Reflection.Metadata.BlobBuilder", "BlobBuilder");
            feature.AddKnownType("System.Reflection.Metadata.BlobBuilder+Blobs", "BlobBuilder.Blobs");
            feature.AddKnownType("System.Reflection.Metadata.BlobContentId", "BlobContentId");
            feature.AddKnownType("System.Reflection.Metadata.BlobHandle", "BlobHandle");
            feature.AddKnownType("System.Reflection.Metadata.BlobReader", "BlobReader");
            feature.AddKnownType("System.Reflection.Metadata.BlobWriter", "BlobWriter");
            feature.AddKnownType("System.Reflection.Metadata.Constant", "Constant");
            feature.AddKnownType("System.Reflection.Metadata.ConstantHandle", "ConstantHandle");
            feature.AddKnownType("System.Reflection.Metadata.ConstantTypeCode", "ConstantTypeCode");
            feature.AddKnownType("System.Reflection.Metadata.CustomAttribute", "CustomAttribute");
            feature.AddKnownType("System.Reflection.Metadata.CustomAttributeHandle", "CustomAttributeHandle");
            feature.AddKnownType("System.Reflection.Metadata.CustomAttributeHandleCollection", "CustomAttributeHandleCollection");
            feature.AddKnownType("System.Reflection.Metadata.CustomAttributeHandleCollection+Enumerator", "CustomAttributeHandleCollection.Enumerator");
            feature.AddKnownType("System.Reflection.Metadata.CustomAttributeNamedArgumentKind", "CustomAttributeNamedArgumentKind");
            feature.AddKnownType("System.Reflection.Metadata.CustomAttributeNamedArgument`1", "CustomAttributeNamedArgument`1'1");
            feature.AddKnownType("System.Reflection.Metadata.CustomAttributeTypedArgument`1", "CustomAttributeTypedArgument`1'1");
            feature.AddKnownType("System.Reflection.Metadata.CustomAttributeValue`1", "CustomAttributeValue`1'1");
            feature.AddKnownType("System.Reflection.Metadata.CustomDebugInformation", "CustomDebugInformation");
            feature.AddKnownType("System.Reflection.Metadata.CustomDebugInformationHandle", "CustomDebugInformationHandle");
            feature.AddKnownType("System.Reflection.Metadata.CustomDebugInformationHandleCollection", "CustomDebugInformationHandleCollection");
            feature.AddKnownType("System.Reflection.Metadata.CustomDebugInformationHandleCollection+Enumerator", "CustomDebugInformationHandleCollection.Enumerator");
            feature.AddKnownType("System.Reflection.Metadata.DebugMetadataHeader", "DebugMetadataHeader");
            feature.AddKnownType("System.Reflection.Metadata.DeclarativeSecurityAttribute", "DeclarativeSecurityAttribute");
            feature.AddKnownType("System.Reflection.Metadata.DeclarativeSecurityAttributeHandle", "DeclarativeSecurityAttributeHandle");
            feature.AddKnownType("System.Reflection.Metadata.DeclarativeSecurityAttributeHandleCollection", "DeclarativeSecurityAttributeHandleCollection");
            feature.AddKnownType("System.Reflection.Metadata.DeclarativeSecurityAttributeHandleCollection+Enumerator", "DeclarativeSecurityAttributeHandleCollection.Enumerator");
            feature.AddKnownType("System.Reflection.Metadata.Document", "Document");
            feature.AddKnownType("System.Reflection.Metadata.DocumentHandle", "DocumentHandle");
            feature.AddKnownType("System.Reflection.Metadata.DocumentHandleCollection", "DocumentHandleCollection");
            feature.AddKnownType("System.Reflection.Metadata.DocumentHandleCollection+Enumerator", "DocumentHandleCollection.Enumerator");
            feature.AddKnownType("System.Reflection.Metadata.DocumentNameBlobHandle", "DocumentNameBlobHandle");
            feature.AddKnownType("System.Reflection.Metadata.EntityHandle", "EntityHandle");
            feature.AddKnownType("System.Reflection.Metadata.EventAccessors", "EventAccessors");
            feature.AddKnownType("System.Reflection.Metadata.EventDefinition", "EventDefinition");
            feature.AddKnownType("System.Reflection.Metadata.EventDefinitionHandle", "EventDefinitionHandle");
            feature.AddKnownType("System.Reflection.Metadata.EventDefinitionHandleCollection", "EventDefinitionHandleCollection");
            feature.AddKnownType("System.Reflection.Metadata.EventDefinitionHandleCollection+Enumerator", "EventDefinitionHandleCollection.Enumerator");
            feature.AddKnownType("System.Reflection.Metadata.ExceptionRegion", "ExceptionRegion");
            feature.AddKnownType("System.Reflection.Metadata.ExceptionRegionKind", "ExceptionRegionKind");
            feature.AddKnownType("System.Reflection.Metadata.ExportedType", "ExportedType");
            feature.AddKnownType("System.Reflection.Metadata.ExportedTypeHandle", "ExportedTypeHandle");
            feature.AddKnownType("System.Reflection.Metadata.ExportedTypeHandleCollection", "ExportedTypeHandleCollection");
            feature.AddKnownType("System.Reflection.Metadata.ExportedTypeHandleCollection+Enumerator", "ExportedTypeHandleCollection.Enumerator");
            feature.AddKnownType("System.Reflection.Metadata.FieldDefinition", "FieldDefinition");
            feature.AddKnownType("System.Reflection.Metadata.FieldDefinitionHandle", "FieldDefinitionHandle");
            feature.AddKnownType("System.Reflection.Metadata.FieldDefinitionHandleCollection", "FieldDefinitionHandleCollection");
            feature.AddKnownType("System.Reflection.Metadata.FieldDefinitionHandleCollection+Enumerator", "FieldDefinitionHandleCollection.Enumerator");
            feature.AddKnownType("System.Reflection.Metadata.GenericParameter", "GenericParameter");
            feature.AddKnownType("System.Reflection.Metadata.GenericParameterConstraint", "GenericParameterConstraint");
            feature.AddKnownType("System.Reflection.Metadata.GenericParameterConstraintHandle", "GenericParameterConstraintHandle");
            feature.AddKnownType("System.Reflection.Metadata.GenericParameterConstraintHandleCollection", "GenericParameterConstraintHandleCollection");
            feature.AddKnownType("System.Reflection.Metadata.GenericParameterConstraintHandleCollection+Enumerator", "GenericParameterConstraintHandleCollection.Enumerator");
            feature.AddKnownType("System.Reflection.Metadata.GenericParameterHandle", "GenericParameterHandle");
            feature.AddKnownType("System.Reflection.Metadata.GenericParameterHandleCollection", "GenericParameterHandleCollection");
            feature.AddKnownType("System.Reflection.Metadata.GenericParameterHandleCollection+Enumerator", "GenericParameterHandleCollection.Enumerator");
            feature.AddKnownType("System.Reflection.Metadata.GuidHandle", "GuidHandle");
            feature.AddKnownType("System.Reflection.Metadata.Handle", "Handle");
            feature.AddKnownType("System.Reflection.Metadata.HandleComparer", "HandleComparer");
            feature.AddKnownType("System.Reflection.Metadata.HandleKind", "HandleKind");
            feature.AddKnownType("System.Reflection.Metadata.IConstructedTypeProvider`1", "IConstructedTypeProvider`1'1");
            feature.AddKnownType("System.Reflection.Metadata.ICustomAttributeTypeProvider`1", "ICustomAttributeTypeProvider`1'1");
            feature.AddKnownType("System.Reflection.Metadata.ILOpCode", "ILOpCode");
            feature.AddKnownType("System.Reflection.Metadata.ImageFormatLimitationException", "ImageFormatLimitationException");
            feature.AddKnownType("System.Reflection.Metadata.ImportDefinition", "ImportDefinition");
            feature.AddKnownType("System.Reflection.Metadata.ImportDefinitionCollection", "ImportDefinitionCollection");
            feature.AddKnownType("System.Reflection.Metadata.ImportDefinitionCollection+Enumerator", "ImportDefinitionCollection.Enumerator");
            feature.AddKnownType("System.Reflection.Metadata.ImportDefinitionKind", "ImportDefinitionKind");
            feature.AddKnownType("System.Reflection.Metadata.ImportScope", "ImportScope");
            feature.AddKnownType("System.Reflection.Metadata.ImportScopeCollection", "ImportScopeCollection");
            feature.AddKnownType("System.Reflection.Metadata.ImportScopeCollection+Enumerator", "ImportScopeCollection.Enumerator");
            feature.AddKnownType("System.Reflection.Metadata.ImportScopeHandle", "ImportScopeHandle");
            feature.AddKnownType("System.Reflection.Metadata.InterfaceImplementation", "InterfaceImplementation");
            feature.AddKnownType("System.Reflection.Metadata.InterfaceImplementationHandle", "InterfaceImplementationHandle");
            feature.AddKnownType("System.Reflection.Metadata.InterfaceImplementationHandleCollection", "InterfaceImplementationHandleCollection");
            feature.AddKnownType("System.Reflection.Metadata.InterfaceImplementationHandleCollection+Enumerator", "InterfaceImplementationHandleCollection.Enumerator");
            feature.AddKnownType("System.Reflection.Metadata.ISignatureTypeProvider`2", "ISignatureTypeProvider`2'2");
            feature.AddKnownType("System.Reflection.Metadata.ISimpleTypeProvider`1", "ISimpleTypeProvider`1'1");
            feature.AddKnownType("System.Reflection.Metadata.ISZArrayTypeProvider`1", "ISZArrayTypeProvider`1'1");
            feature.AddKnownType("System.Reflection.Metadata.LocalConstant", "LocalConstant");
            feature.AddKnownType("System.Reflection.Metadata.LocalConstantHandle", "LocalConstantHandle");
            feature.AddKnownType("System.Reflection.Metadata.LocalConstantHandleCollection", "LocalConstantHandleCollection");
            feature.AddKnownType("System.Reflection.Metadata.LocalConstantHandleCollection+Enumerator", "LocalConstantHandleCollection.Enumerator");
            feature.AddKnownType("System.Reflection.Metadata.LocalScope", "LocalScope");
            feature.AddKnownType("System.Reflection.Metadata.LocalScopeHandle", "LocalScopeHandle");
            feature.AddKnownType("System.Reflection.Metadata.LocalScopeHandleCollection", "LocalScopeHandleCollection");
            feature.AddKnownType("System.Reflection.Metadata.LocalScopeHandleCollection+ChildrenEnumerator", "LocalScopeHandleCollection.ChildrenEnumerator");
            feature.AddKnownType("System.Reflection.Metadata.LocalScopeHandleCollection+Enumerator", "LocalScopeHandleCollection.Enumerator");
            feature.AddKnownType("System.Reflection.Metadata.LocalVariable", "LocalVariable");
            feature.AddKnownType("System.Reflection.Metadata.LocalVariableAttributes", "LocalVariableAttributes");
            feature.AddKnownType("System.Reflection.Metadata.LocalVariableHandle", "LocalVariableHandle");
            feature.AddKnownType("System.Reflection.Metadata.LocalVariableHandleCollection", "LocalVariableHandleCollection");
            feature.AddKnownType("System.Reflection.Metadata.LocalVariableHandleCollection+Enumerator", "LocalVariableHandleCollection.Enumerator");
            feature.AddKnownType("System.Reflection.Metadata.ManifestResource", "ManifestResource");
            feature.AddKnownType("System.Reflection.Metadata.ManifestResourceHandle", "ManifestResourceHandle");
            feature.AddKnownType("System.Reflection.Metadata.ManifestResourceHandleCollection", "ManifestResourceHandleCollection");
            feature.AddKnownType("System.Reflection.Metadata.ManifestResourceHandleCollection+Enumerator", "ManifestResourceHandleCollection.Enumerator");
            feature.AddKnownType("System.Reflection.Metadata.MemberReference", "MemberReference");
            feature.AddKnownType("System.Reflection.Metadata.MemberReferenceHandle", "MemberReferenceHandle");
            feature.AddKnownType("System.Reflection.Metadata.MemberReferenceHandleCollection", "MemberReferenceHandleCollection");
            feature.AddKnownType("System.Reflection.Metadata.MemberReferenceHandleCollection+Enumerator", "MemberReferenceHandleCollection.Enumerator");
            feature.AddKnownType("System.Reflection.Metadata.MemberReferenceKind", "MemberReferenceKind");
            feature.AddKnownType("System.Reflection.Metadata.MetadataKind", "MetadataKind");
            feature.AddKnownType("System.Reflection.Metadata.MetadataReader", "MetadataReader");
            feature.AddKnownType("System.Reflection.Metadata.MetadataReaderOptions", "MetadataReaderOptions");
            feature.AddKnownType("System.Reflection.Metadata.MetadataReaderProvider", "MetadataReaderProvider");
            feature.AddKnownType("System.Reflection.Metadata.MetadataStreamOptions", "MetadataStreamOptions");
            feature.AddKnownType("System.Reflection.Metadata.MetadataStringComparer", "MetadataStringComparer");
            feature.AddKnownType("System.Reflection.Metadata.MetadataStringDecoder", "MetadataStringDecoder");
            feature.AddKnownType("System.Reflection.Metadata.MethodBodyBlock", "MethodBodyBlock");
            feature.AddKnownType("System.Reflection.Metadata.MethodDebugInformation", "MethodDebugInformation");
            feature.AddKnownType("System.Reflection.Metadata.MethodDebugInformationHandle", "MethodDebugInformationHandle");
            feature.AddKnownType("System.Reflection.Metadata.MethodDebugInformationHandleCollection", "MethodDebugInformationHandleCollection");
            feature.AddKnownType("System.Reflection.Metadata.MethodDebugInformationHandleCollection+Enumerator", "MethodDebugInformationHandleCollection.Enumerator");
            feature.AddKnownType("System.Reflection.Metadata.MethodDefinition", "MethodDefinition");
            feature.AddKnownType("System.Reflection.Metadata.MethodDefinitionHandle", "MethodDefinitionHandle");
            feature.AddKnownType("System.Reflection.Metadata.MethodDefinitionHandleCollection", "MethodDefinitionHandleCollection");
            feature.AddKnownType("System.Reflection.Metadata.MethodDefinitionHandleCollection+Enumerator", "MethodDefinitionHandleCollection.Enumerator");
            feature.AddKnownType("System.Reflection.Metadata.MethodImplementation", "MethodImplementation");
            feature.AddKnownType("System.Reflection.Metadata.MethodImplementationHandle", "MethodImplementationHandle");
            feature.AddKnownType("System.Reflection.Metadata.MethodImplementationHandleCollection", "MethodImplementationHandleCollection");
            feature.AddKnownType("System.Reflection.Metadata.MethodImplementationHandleCollection+Enumerator", "MethodImplementationHandleCollection.Enumerator");
            feature.AddKnownType("System.Reflection.Metadata.MethodImport", "MethodImport");
            feature.AddKnownType("System.Reflection.Metadata.MethodSignature`1", "MethodSignature`1'1");
            feature.AddKnownType("System.Reflection.Metadata.MethodSpecification", "MethodSpecification");
            feature.AddKnownType("System.Reflection.Metadata.MethodSpecificationHandle", "MethodSpecificationHandle");
            feature.AddKnownType("System.Reflection.Metadata.ModuleDefinition", "ModuleDefinition");
            feature.AddKnownType("System.Reflection.Metadata.ModuleDefinitionHandle", "ModuleDefinitionHandle");
            feature.AddKnownType("System.Reflection.Metadata.ModuleReference", "ModuleReference");
            feature.AddKnownType("System.Reflection.Metadata.ModuleReferenceHandle", "ModuleReferenceHandle");
            feature.AddKnownType("System.Reflection.Metadata.NamespaceDefinition", "NamespaceDefinition");
            feature.AddKnownType("System.Reflection.Metadata.NamespaceDefinitionHandle", "NamespaceDefinitionHandle");
            feature.AddKnownType("System.Reflection.Metadata.Parameter", "Parameter");
            feature.AddKnownType("System.Reflection.Metadata.ParameterHandle", "ParameterHandle");
            feature.AddKnownType("System.Reflection.Metadata.ParameterHandleCollection", "ParameterHandleCollection");
            feature.AddKnownType("System.Reflection.Metadata.ParameterHandleCollection+Enumerator", "ParameterHandleCollection.Enumerator");
            feature.AddKnownType("System.Reflection.Metadata.PrimitiveSerializationTypeCode", "PrimitiveSerializationTypeCode");
            feature.AddKnownType("System.Reflection.Metadata.PrimitiveTypeCode", "PrimitiveTypeCode");
            feature.AddKnownType("System.Reflection.Metadata.PropertyAccessors", "PropertyAccessors");
            feature.AddKnownType("System.Reflection.Metadata.PropertyDefinition", "PropertyDefinition");
            feature.AddKnownType("System.Reflection.Metadata.PropertyDefinitionHandle", "PropertyDefinitionHandle");
            feature.AddKnownType("System.Reflection.Metadata.PropertyDefinitionHandleCollection", "PropertyDefinitionHandleCollection");
            feature.AddKnownType("System.Reflection.Metadata.PropertyDefinitionHandleCollection+Enumerator", "PropertyDefinitionHandleCollection.Enumerator");
            feature.AddKnownType("System.Reflection.Metadata.ReservedBlob`1", "ReservedBlob`1'1");
            feature.AddKnownType("System.Reflection.Metadata.SequencePoint", "SequencePoint");
            feature.AddKnownType("System.Reflection.Metadata.SequencePointCollection", "SequencePointCollection");
            feature.AddKnownType("System.Reflection.Metadata.SequencePointCollection+Enumerator", "SequencePointCollection.Enumerator");
            feature.AddKnownType("System.Reflection.Metadata.SerializationTypeCode", "SerializationTypeCode");
            feature.AddKnownType("System.Reflection.Metadata.SignatureAttributes", "SignatureAttributes");
            feature.AddKnownType("System.Reflection.Metadata.SignatureCallingConvention", "SignatureCallingConvention");
            feature.AddKnownType("System.Reflection.Metadata.SignatureHeader", "SignatureHeader");
            feature.AddKnownType("System.Reflection.Metadata.SignatureKind", "SignatureKind");
            feature.AddKnownType("System.Reflection.Metadata.SignatureTypeCode", "SignatureTypeCode");
            feature.AddKnownType("System.Reflection.Metadata.SignatureTypeKind", "SignatureTypeKind");
            feature.AddKnownType("System.Reflection.Metadata.StandaloneSignature", "StandaloneSignature");
            feature.AddKnownType("System.Reflection.Metadata.StandaloneSignatureHandle", "StandaloneSignatureHandle");
            feature.AddKnownType("System.Reflection.Metadata.StandaloneSignatureKind", "StandaloneSignatureKind");
            feature.AddKnownType("System.Reflection.Metadata.StringHandle", "StringHandle");
            feature.AddKnownType("System.Reflection.Metadata.TypeDefinition", "TypeDefinition");
            feature.AddKnownType("System.Reflection.Metadata.TypeDefinitionHandle", "TypeDefinitionHandle");
            feature.AddKnownType("System.Reflection.Metadata.TypeDefinitionHandleCollection", "TypeDefinitionHandleCollection");
            feature.AddKnownType("System.Reflection.Metadata.TypeDefinitionHandleCollection+Enumerator", "TypeDefinitionHandleCollection.Enumerator");
            feature.AddKnownType("System.Reflection.Metadata.TypeLayout", "TypeLayout");
            feature.AddKnownType("System.Reflection.Metadata.TypeReference", "TypeReference");
            feature.AddKnownType("System.Reflection.Metadata.TypeReferenceHandle", "TypeReferenceHandle");
            feature.AddKnownType("System.Reflection.Metadata.TypeReferenceHandleCollection", "TypeReferenceHandleCollection");
            feature.AddKnownType("System.Reflection.Metadata.TypeReferenceHandleCollection+Enumerator", "TypeReferenceHandleCollection.Enumerator");
            feature.AddKnownType("System.Reflection.Metadata.TypeSpecification", "TypeSpecification");
            feature.AddKnownType("System.Reflection.Metadata.TypeSpecificationHandle", "TypeSpecificationHandle");
            feature.AddKnownType("System.Reflection.Metadata.UserStringHandle", "UserStringHandle");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.ArrayShapeEncoder", "ArrayShapeEncoder");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.BlobEncoder", "BlobEncoder");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.ControlFlowBuilder", "ControlFlowBuilder");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.CustomAttributeArrayTypeEncoder", "CustomAttributeArrayTypeEncoder");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.CustomAttributeElementTypeEncoder", "CustomAttributeElementTypeEncoder");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.CustomAttributeNamedArgumentsEncoder", "CustomAttributeNamedArgumentsEncoder");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.CustomModifiersEncoder", "CustomModifiersEncoder");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry", "EditAndContinueLogEntry");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.EditAndContinueOperation", "EditAndContinueOperation");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder", "ExceptionRegionEncoder");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.FieldTypeEncoder", "FieldTypeEncoder");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.FixedArgumentsEncoder", "FixedArgumentsEncoder");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.FunctionPointerAttributes", "FunctionPointerAttributes");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.GenericTypeArgumentsEncoder", "GenericTypeArgumentsEncoder");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.HeapIndex", "HeapIndex");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.InstructionEncoder", "InstructionEncoder");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.LabelHandle", "LabelHandle");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.LiteralEncoder", "LiteralEncoder");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.LiteralsEncoder", "LiteralsEncoder");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.LocalVariablesEncoder", "LocalVariablesEncoder");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.LocalVariableTypeEncoder", "LocalVariableTypeEncoder");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.MetadataAggregator", "MetadataAggregator");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.MetadataBuilder", "MetadataBuilder");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.MetadataRootBuilder", "MetadataRootBuilder");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.MetadataSizes", "MetadataSizes");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.MethodBodyAttributes", "MethodBodyAttributes");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder", "MethodBodyStreamEncoder");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder+MethodBody", "MethodBodyStreamEncoder.MethodBody");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.MethodSignatureEncoder", "MethodSignatureEncoder");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.NamedArgumentsEncoder", "NamedArgumentsEncoder");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.NamedArgumentTypeEncoder", "NamedArgumentTypeEncoder");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.NameEncoder", "NameEncoder");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.ParametersEncoder", "ParametersEncoder");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.ParameterTypeEncoder", "ParameterTypeEncoder");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.PermissionSetEncoder", "PermissionSetEncoder");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.PortablePdbBuilder", "PortablePdbBuilder");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.ReturnTypeEncoder", "ReturnTypeEncoder");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.ScalarEncoder", "ScalarEncoder");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.SignatureDecoder`2", "SignatureDecoder`2'2");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.SignatureTypeEncoder", "SignatureTypeEncoder");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.TableIndex", "TableIndex");
            feature.AddKnownType("System.Reflection.Metadata.Ecma335.VectorEncoder", "VectorEncoder");
            feature.AddKnownType("System.Reflection.PortableExecutable.Characteristics", "Characteristics");
            feature.AddKnownType("System.Reflection.PortableExecutable.CodeViewDebugDirectoryData", "CodeViewDebugDirectoryData");
            feature.AddKnownType("System.Reflection.PortableExecutable.CoffHeader", "CoffHeader");
            feature.AddKnownType("System.Reflection.PortableExecutable.CorFlags", "CorFlags");
            feature.AddKnownType("System.Reflection.PortableExecutable.CorHeader", "CorHeader");
            feature.AddKnownType("System.Reflection.PortableExecutable.DebugDirectoryBuilder", "DebugDirectoryBuilder");
            feature.AddKnownType("System.Reflection.PortableExecutable.DebugDirectoryEntry", "DebugDirectoryEntry");
            feature.AddKnownType("System.Reflection.PortableExecutable.DebugDirectoryEntryType", "DebugDirectoryEntryType");
            feature.AddKnownType("System.Reflection.PortableExecutable.DirectoryEntry", "DirectoryEntry");
            feature.AddKnownType("System.Reflection.PortableExecutable.DllCharacteristics", "DllCharacteristics");
            feature.AddKnownType("System.Reflection.PortableExecutable.Machine", "Machine");
            feature.AddKnownType("System.Reflection.PortableExecutable.ManagedPEBuilder", "ManagedPEBuilder");
            feature.AddKnownType("System.Reflection.PortableExecutable.PdbChecksumDebugDirectoryData", "PdbChecksumDebugDirectoryData");
            feature.AddKnownType("System.Reflection.PortableExecutable.PEBuilder", "PEBuilder");
            feature.AddKnownType("System.Reflection.PortableExecutable.PEBuilder+Section", "Section");
            feature.AddKnownType("System.Reflection.PortableExecutable.PEDirectoriesBuilder", "PEDirectoriesBuilder");
            feature.AddKnownType("System.Reflection.PortableExecutable.PEHeader", "PEHeader");
            feature.AddKnownType("System.Reflection.PortableExecutable.PEHeaderBuilder", "PEHeaderBuilder");
            feature.AddKnownType("System.Reflection.PortableExecutable.PEHeaders", "PEHeaders");
            feature.AddKnownType("System.Reflection.PortableExecutable.PEMagic", "PEMagic");
            feature.AddKnownType("System.Reflection.PortableExecutable.PEMemoryBlock", "PEMemoryBlock");
            feature.AddKnownType("System.Reflection.PortableExecutable.PEReader", "PEReader");
            feature.AddKnownType("System.Reflection.PortableExecutable.PEStreamOptions", "PEStreamOptions");
            feature.AddKnownType("System.Reflection.PortableExecutable.ResourceSectionBuilder", "ResourceSectionBuilder");
            feature.AddKnownType("System.Reflection.PortableExecutable.SectionCharacteristics", "SectionCharacteristics");
            feature.AddKnownType("System.Reflection.PortableExecutable.SectionHeader", "SectionHeader");
            feature.AddKnownType("System.Reflection.PortableExecutable.SectionLocation", "SectionLocation");
            feature.AddKnownType("System.Reflection.PortableExecutable.Subsystem", "Subsystem");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Reflection.Primitives", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Reflection.Emit.FlowControl", "FlowControl");
            feature.AddKnownType("System.Reflection.Emit.OpCode", "OpCode");
            feature.AddKnownType("System.Reflection.Emit.OpCodes", "OpCodes");
            feature.AddKnownType("System.Reflection.Emit.OpCodeType", "OpCodeType");
            feature.AddKnownType("System.Reflection.Emit.OperandType", "OperandType");
            feature.AddKnownType("System.Reflection.Emit.PackingSize", "PackingSize");
            feature.AddKnownType("System.Reflection.Emit.StackBehaviour", "StackBehaviour");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Reflection.TypeExtensions", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Resources.Writer", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Resources.IResourceWriter", "IResourceWriter");
            feature.AddKnownType("System.Resources.ResourceWriter", "ResourceWriter");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Runtime.CompilerServices.VisualC", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.CppInlineNamespaceAttribute", "CppInlineNamespaceAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.HasCopySemanticsAttribute", "HasCopySemanticsAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NativeCppClassAttribute", "NativeCppClassAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RequiredAttributeAttribute", "RequiredAttributeAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.ScopelessEnumAttribute", "ScopelessEnumAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.AssemblyAttributesGoHere", "AssemblyAttributesGoHere");
            feature.AddKnownType("System.Runtime.CompilerServices.AssemblyAttributesGoHereS", "AssemblyAttributesGoHereS");
            feature.AddKnownType("System.Runtime.CompilerServices.AssemblyAttributesGoHereM", "AssemblyAttributesGoHereM");
            feature.AddKnownType("System.Runtime.CompilerServices.AssemblyAttributesGoHereSM", "AssemblyAttributesGoHereSM");
            feature.AddKnownType("System.Runtime.CompilerServices.DecoratedNameAttribute", "DecoratedNameAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.SuppressMergeCheckAttribute", "SuppressMergeCheckAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Runtime", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid,System.Runtime", "Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid,System.Runtime", "Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeFileHandle,System.Runtime", "Microsoft.Win32.SafeHandles.SafeFileHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid,System.Runtime", "Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid,System.Runtime", "Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeWaitHandle,System.Runtime", "Microsoft.Win32.SafeHandles.SafeWaitHandle");
            feature.AddKnownType("System.AccessViolationException", "AccessViolationException");
            feature.AddKnownType("System.AggregateException", "AggregateException");
            feature.AddKnownType("System.AppDomain", "AppDomain");
            feature.AddKnownType("System.AppDomainSetup", "AppDomainSetup");
            feature.AddKnownType("System.AppDomainUnloadedException", "AppDomainUnloadedException");
            feature.AddKnownType("System.ApplicationException", "ApplicationException");
            feature.AddKnownType("System.ApplicationId", "ApplicationId");
            feature.AddKnownType("System.ArgumentException", "ArgumentException");
            feature.AddKnownType("System.ArgumentNullException", "ArgumentNullException");
            feature.AddKnownType("System.ArgumentOutOfRangeException", "ArgumentOutOfRangeException");
            feature.AddKnownType("System.ArithmeticException", "ArithmeticException");
            feature.AddKnownType("System.ArraySegment`1", "ArraySegment`1'1");
            feature.AddKnownType("System.ArraySegment`1+Enumerator", "ArraySegment`1'1.Enumerator'1");
            feature.AddKnownType("System.ArrayTypeMismatchException", "ArrayTypeMismatchException");
            feature.AddKnownType("System.AssemblyLoadEventArgs", "AssemblyLoadEventArgs");
            feature.AddKnownType("System.Attribute", "Attribute");
            feature.AddKnownType("System.AttributeTargets", "AttributeTargets");
            feature.AddKnownType("System.AttributeUsageAttribute", "AttributeUsageAttribute");
            feature.AddKnownType("System.BadImageFormatException", "BadImageFormatException");
            feature.AddKnownType("System.Base64FormattingOptions", "Base64FormattingOptions");
            feature.AddKnownType("System.CannotUnloadAppDomainException", "CannotUnloadAppDomainException");
            feature.AddKnownType("System.CharEnumerator", "CharEnumerator");
            feature.AddKnownType("System.CLSCompliantAttribute", "CLSCompliantAttribute");
            feature.AddKnownType("System.ContextBoundObject", "ContextBoundObject");
            feature.AddKnownType("System.ContextMarshalException", "ContextMarshalException");
            feature.AddKnownType("System.ContextStaticAttribute", "ContextStaticAttribute");
            feature.AddKnownType("System.DateOnly", "DateOnly");
            feature.AddKnownType("System.DateTimeKind", "DateTimeKind");
            feature.AddKnownType("System.DateTimeOffset", "DateTimeOffset");
            feature.AddKnownType("System.DayOfWeek", "DayOfWeek");
            feature.AddKnownType("System.DBNull", "DBNull");
            feature.AddKnownType("System.DivideByZeroException", "DivideByZeroException");
            feature.AddKnownType("System.DuplicateWaitObjectException", "DuplicateWaitObjectException");
            feature.AddKnownType("System.EntryPointNotFoundException", "EntryPointNotFoundException");
            feature.AddKnownType("System.Environment+SpecialFolder", "Environment.SpecialFolder");
            feature.AddKnownType("System.Environment+SpecialFolderOption", "Environment.SpecialFolderOption");
            feature.AddKnownType("System.EnvironmentVariableTarget", "EnvironmentVariableTarget");
            feature.AddKnownType("System.EventArgs", "EventArgs");
            feature.AddKnownType("System.Exception", "Exception");
            feature.AddKnownType("System.ExecutionEngineException", "ExecutionEngineException");
            feature.AddKnownType("System.FieldAccessException", "FieldAccessException");
            feature.AddKnownType("System.FlagsAttribute", "FlagsAttribute");
            feature.AddKnownType("System.FormatException", "FormatException");
            feature.AddKnownType("System.FormattableString", "FormattableString");
            feature.AddKnownType("System.GCCollectionMode", "GCCollectionMode");
            feature.AddKnownType("System.GCGenerationInfo", "GCGenerationInfo");
            feature.AddKnownType("System.GCKind", "GCKind");
            feature.AddKnownType("System.GCMemoryInfo", "GCMemoryInfo");
            feature.AddKnownType("System.GCNotificationStatus", "GCNotificationStatus");
            feature.AddKnownType("System.Guid", "Guid");
            feature.AddKnownType("System.Half", "Half");
            feature.AddKnownType("System.HashCode", "HashCode");
            feature.AddKnownType("System.IAsyncDisposable", "IAsyncDisposable");
            feature.AddKnownType("System.ICloneable", "ICloneable");
            feature.AddKnownType("System.IComparable", "IComparable");
            feature.AddKnownType("System.IComparable`1", "IComparable`1'1");
            feature.AddKnownType("System.IConvertible", "IConvertible");
            feature.AddKnownType("System.ICustomFormatter", "ICustomFormatter");
            feature.AddKnownType("System.IEquatable`1", "IEquatable`1'1");
            feature.AddKnownType("System.IFormatProvider", "IFormatProvider");
            feature.AddKnownType("System.IFormattable", "IFormattable");
            feature.AddKnownType("System.Index", "Index");
            feature.AddKnownType("System.IndexOutOfRangeException", "IndexOutOfRangeException");
            feature.AddKnownType("System.InsufficientExecutionStackException", "InsufficientExecutionStackException");
            feature.AddKnownType("System.InsufficientMemoryException", "InsufficientMemoryException");
            feature.AddKnownType("System.Int128", "Int128");
            feature.AddKnownType("System.InvalidCastException", "InvalidCastException");
            feature.AddKnownType("System.InvalidOperationException", "InvalidOperationException");
            feature.AddKnownType("System.InvalidProgramException", "InvalidProgramException");
            feature.AddKnownType("System.InvalidTimeZoneException", "InvalidTimeZoneException");
            feature.AddKnownType("System.IObservable`1", "IObservable`1'1");
            feature.AddKnownType("System.IObserver`1", "IObserver`1'1");
            feature.AddKnownType("System.IParsable`1", "IParsable`1'1");
            feature.AddKnownType("System.IProgress`1", "IProgress`1'1");
            feature.AddKnownType("System.ISpanFormattable", "ISpanFormattable");
            feature.AddKnownType("System.ISpanParsable`1", "ISpanParsable`1'1");
            feature.AddKnownType("System.Lazy`1", "Lazy`1'1");
            feature.AddKnownType("System.Lazy`2", "Lazy`2'2");
            feature.AddKnownType("System.LoaderOptimization", "LoaderOptimization");
            feature.AddKnownType("System.LoaderOptimizationAttribute", "LoaderOptimizationAttribute");
            feature.AddKnownType("System.MarshalByRefObject", "MarshalByRefObject");
            feature.AddKnownType("System.MemberAccessException", "MemberAccessException");
            feature.AddKnownType("System.Memory`1", "Memory`1'1");
            feature.AddKnownType("System.MethodAccessException", "MethodAccessException");
            feature.AddKnownType("System.MidpointRounding", "MidpointRounding");
            feature.AddKnownType("System.MissingFieldException", "MissingFieldException");
            feature.AddKnownType("System.MissingMemberException", "MissingMemberException");
            feature.AddKnownType("System.MissingMethodException", "MissingMethodException");
            feature.AddKnownType("System.ModuleHandle", "ModuleHandle");
            feature.AddKnownType("System.MTAThreadAttribute", "MTAThreadAttribute");
            feature.AddKnownType("System.MulticastNotSupportedException", "MulticastNotSupportedException");
            feature.AddKnownType("System.NonSerializedAttribute", "NonSerializedAttribute");
            feature.AddKnownType("System.NotFiniteNumberException", "NotFiniteNumberException");
            feature.AddKnownType("System.NotImplementedException", "NotImplementedException");
            feature.AddKnownType("System.NotSupportedException", "NotSupportedException");
            feature.AddKnownType("System.NullReferenceException", "NullReferenceException");
            feature.AddKnownType("System.ObjectDisposedException", "ObjectDisposedException");
            feature.AddKnownType("System.ObsoleteAttribute", "ObsoleteAttribute");
            feature.AddKnownType("System.OperatingSystem", "OperatingSystem");
            feature.AddKnownType("System.OperationCanceledException", "OperationCanceledException");
            feature.AddKnownType("System.OutOfMemoryException", "OutOfMemoryException");
            feature.AddKnownType("System.OverflowException", "OverflowException");
            feature.AddKnownType("System.ParamArrayAttribute", "ParamArrayAttribute");
            feature.AddKnownType("System.PlatformID", "PlatformID");
            feature.AddKnownType("System.PlatformNotSupportedException", "PlatformNotSupportedException");
            feature.AddKnownType("System.Progress`1", "Progress`1'1");
            feature.AddKnownType("System.Random", "Random");
            feature.AddKnownType("System.Range", "Range");
            feature.AddKnownType("System.RankException", "RankException");
            feature.AddKnownType("System.ReadOnlyMemory`1", "ReadOnlyMemory`1'1");
            feature.AddKnownType("System.ReadOnlySpan`1", "ReadOnlySpan`1'1");
            feature.AddKnownType("System.ReadOnlySpan`1+Enumerator", "ReadOnlySpan`1'1.Enumerator'1");
            feature.AddKnownType("System.ResolveEventArgs", "ResolveEventArgs");
            feature.AddKnownType("System.SerializableAttribute", "SerializableAttribute");
            feature.AddKnownType("System.Span`1", "Span`1'1");
            feature.AddKnownType("System.Span`1+Enumerator", "Span`1'1.Enumerator'1");
            feature.AddKnownType("System.StackOverflowException", "StackOverflowException");
            feature.AddKnownType("System.STAThreadAttribute", "STAThreadAttribute");
            feature.AddKnownType("System.StringComparer", "StringComparer");
            feature.AddKnownType("System.StringComparison", "StringComparison");
            feature.AddKnownType("System.StringSplitOptions", "StringSplitOptions");
            feature.AddKnownType("System.SystemException", "SystemException");
            feature.AddKnownType("System.ThreadStaticAttribute", "ThreadStaticAttribute");
            feature.AddKnownType("System.TimeOnly", "TimeOnly");
            feature.AddKnownType("System.TimeoutException", "TimeoutException");
            feature.AddKnownType("System.TimeSpan", "TimeSpan");
            feature.AddKnownType("System.TimeZone", "TimeZone");
            feature.AddKnownType("System.TimeZoneInfo", "TimeZoneInfo");
            feature.AddKnownType("System.TimeZoneInfo+AdjustmentRule", "TimeZoneInfo.AdjustmentRule");
            feature.AddKnownType("System.TimeZoneInfo+TransitionTime", "TimeZoneInfo.TransitionTime");
            feature.AddKnownType("System.TimeZoneNotFoundException", "TimeZoneNotFoundException");
            feature.AddKnownType("System.Tuple`1", "Tuple`1'1");
            feature.AddKnownType("System.Tuple`2", "Tuple`2'2");
            feature.AddKnownType("System.Tuple`3", "Tuple`3'3");
            feature.AddKnownType("System.Tuple`4", "Tuple`4'4");
            feature.AddKnownType("System.Tuple`5", "Tuple`5'5");
            feature.AddKnownType("System.Tuple`6", "Tuple`6'6");
            feature.AddKnownType("System.Tuple`7", "Tuple`7'7");
            feature.AddKnownType("System.Tuple`8", "Tuple`8'8");
            feature.AddKnownType("System.Type", "Type");
            feature.AddKnownType("System.TypeAccessException", "TypeAccessException");
            feature.AddKnownType("System.TypeCode", "TypeCode");
            feature.AddKnownType("System.TypeInitializationException", "TypeInitializationException");
            feature.AddKnownType("System.TypeLoadException", "TypeLoadException");
            feature.AddKnownType("System.TypeUnloadedException", "TypeUnloadedException");
            feature.AddKnownType("System.UInt128", "UInt128");
            feature.AddKnownType("System.UnauthorizedAccessException", "UnauthorizedAccessException");
            feature.AddKnownType("System.UnhandledExceptionEventArgs", "UnhandledExceptionEventArgs");
            feature.AddKnownType("System.ValueTuple", "ValueTuple");
            feature.AddKnownType("System.ValueTuple`1", "ValueTuple`1'1");
            feature.AddKnownType("System.ValueTuple`2", "ValueTuple`2'2");
            feature.AddKnownType("System.ValueTuple`3", "ValueTuple`3'3");
            feature.AddKnownType("System.ValueTuple`4", "ValueTuple`4'4");
            feature.AddKnownType("System.ValueTuple`5", "ValueTuple`5'5");
            feature.AddKnownType("System.ValueTuple`6", "ValueTuple`6'6");
            feature.AddKnownType("System.ValueTuple`7", "ValueTuple`7'7");
            feature.AddKnownType("System.ValueTuple`8", "ValueTuple`8'8");
            feature.AddKnownType("System.Version", "Version");
            feature.AddKnownType("System.WeakReference", "WeakReference");
            feature.AddKnownType("System.WeakReference`1", "WeakReference`1'1");
            feature.AddKnownType("System.FileStyleUriParser", "FileStyleUriParser");
            feature.AddKnownType("System.FtpStyleUriParser", "FtpStyleUriParser");
            feature.AddKnownType("System.GenericUriParser", "GenericUriParser");
            feature.AddKnownType("System.GenericUriParserOptions", "GenericUriParserOptions");
            feature.AddKnownType("System.GopherStyleUriParser", "GopherStyleUriParser");
            feature.AddKnownType("System.HttpStyleUriParser", "HttpStyleUriParser");
            feature.AddKnownType("System.LdapStyleUriParser", "LdapStyleUriParser");
            feature.AddKnownType("System.NetPipeStyleUriParser", "NetPipeStyleUriParser");
            feature.AddKnownType("System.NetTcpStyleUriParser", "NetTcpStyleUriParser");
            feature.AddKnownType("System.NewsStyleUriParser", "NewsStyleUriParser");
            feature.AddKnownType("System.Uri", "Uri");
            feature.AddKnownType("System.UriBuilder", "UriBuilder");
            feature.AddKnownType("System.UriComponents", "UriComponents");
            feature.AddKnownType("System.UriCreationOptions", "UriCreationOptions");
            feature.AddKnownType("System.UriFormat", "UriFormat");
            feature.AddKnownType("System.UriFormatException", "UriFormatException");
            feature.AddKnownType("System.UriHostNameType", "UriHostNameType");
            feature.AddKnownType("System.UriKind", "UriKind");
            feature.AddKnownType("System.UriParser", "UriParser");
            feature.AddKnownType("System.UriPartial", "UriPartial");
            feature.AddKnownType("System.Buffers.ArrayPool`1", "ArrayPool`1'1");
            feature.AddKnownType("System.Buffers.IMemoryOwner`1", "IMemoryOwner`1'1");
            feature.AddKnownType("System.Buffers.IPinnable", "IPinnable");
            feature.AddKnownType("System.Buffers.MemoryHandle", "MemoryHandle");
            feature.AddKnownType("System.Buffers.MemoryManager`1", "MemoryManager`1'1");
            feature.AddKnownType("System.Buffers.OperationStatus", "OperationStatus");
            feature.AddKnownType("System.CodeDom.Compiler.GeneratedCodeAttribute", "GeneratedCodeAttribute");
            feature.AddKnownType("System.CodeDom.Compiler.IndentedTextWriter", "IndentedTextWriter");
            feature.AddKnownType("System.Collections.ArrayList", "ArrayList");
            feature.AddKnownType("System.Collections.Comparer", "Comparer");
            feature.AddKnownType("System.Collections.DictionaryEntry", "DictionaryEntry");
            feature.AddKnownType("System.Collections.Hashtable", "Hashtable");
            feature.AddKnownType("System.Collections.ICollection", "ICollection");
            feature.AddKnownType("System.Collections.IComparer", "IComparer");
            feature.AddKnownType("System.Collections.IDictionary", "IDictionary");
            feature.AddKnownType("System.Collections.IDictionaryEnumerator", "IDictionaryEnumerator");
            feature.AddKnownType("System.Collections.IEqualityComparer", "IEqualityComparer");
            feature.AddKnownType("System.Collections.IHashCodeProvider", "IHashCodeProvider");
            feature.AddKnownType("System.Collections.IList", "IList");
            feature.AddKnownType("System.Collections.IStructuralComparable", "IStructuralComparable");
            feature.AddKnownType("System.Collections.IStructuralEquatable", "IStructuralEquatable");
            feature.AddKnownType("System.Collections.Generic.IAsyncEnumerable`1", "IAsyncEnumerable`1'1");
            feature.AddKnownType("System.Collections.Generic.IAsyncEnumerator`1", "IAsyncEnumerator`1'1");
            feature.AddKnownType("System.Collections.Generic.IComparer`1", "IComparer`1'1");
            feature.AddKnownType("System.Collections.Generic.IDictionary`2", "IDictionary`2'2");
            feature.AddKnownType("System.Collections.Generic.IEqualityComparer`1", "IEqualityComparer`1'1");
            feature.AddKnownType("System.Collections.Generic.IReadOnlyDictionary`2", "IReadOnlyDictionary`2'2");
            feature.AddKnownType("System.Collections.Generic.IReadOnlySet`1", "IReadOnlySet`1'1");
            feature.AddKnownType("System.Collections.Generic.ISet`1", "ISet`1'1");
            feature.AddKnownType("System.Collections.Generic.KeyNotFoundException", "KeyNotFoundException");
            feature.AddKnownType("System.Collections.Generic.KeyValuePair`2", "KeyValuePair`2'2");
            feature.AddKnownType("System.Collections.ObjectModel.Collection`1", "Collection`1'1");
            feature.AddKnownType("System.Collections.ObjectModel.ReadOnlyCollection`1", "ReadOnlyCollection`1'1");
            feature.AddKnownType("System.Collections.ObjectModel.ReadOnlyDictionary`2", "ReadOnlyDictionary`2'2");
            feature.AddKnownType("System.Collections.ObjectModel.ReadOnlyDictionary`2+KeyCollection", "ReadOnlyDictionary`2'2.KeyCollection'2");
            feature.AddKnownType("System.Collections.ObjectModel.ReadOnlyDictionary`2+ValueCollection", "ReadOnlyDictionary`2'2.ValueCollection'2");
            feature.AddKnownType("System.ComponentModel.DefaultValueAttribute", "DefaultValueAttribute");
            feature.AddKnownType("System.ComponentModel.EditorBrowsableAttribute", "EditorBrowsableAttribute");
            feature.AddKnownType("System.ComponentModel.EditorBrowsableState", "EditorBrowsableState");
            feature.AddKnownType("System.Configuration.Assemblies.AssemblyHashAlgorithm", "AssemblyHashAlgorithm");
            feature.AddKnownType("System.Configuration.Assemblies.AssemblyVersionCompatibility", "AssemblyVersionCompatibility");
            feature.AddKnownType("System.Diagnostics.ConditionalAttribute", "ConditionalAttribute");
            feature.AddKnownType("System.Diagnostics.Debug+AssertInterpolatedStringHandler", "Debug.AssertInterpolatedStringHandler");
            feature.AddKnownType("System.Diagnostics.Debug+WriteIfInterpolatedStringHandler", "Debug.WriteIfInterpolatedStringHandler");
            feature.AddKnownType("System.Diagnostics.DebuggableAttribute", "DebuggableAttribute");
            feature.AddKnownType("System.Diagnostics.DebuggableAttribute+DebuggingModes", "DebuggableAttribute.DebuggingModes");
            feature.AddKnownType("System.Diagnostics.DebuggerBrowsableAttribute", "DebuggerBrowsableAttribute");
            feature.AddKnownType("System.Diagnostics.DebuggerBrowsableState", "DebuggerBrowsableState");
            feature.AddKnownType("System.Diagnostics.DebuggerDisplayAttribute", "DebuggerDisplayAttribute");
            feature.AddKnownType("System.Diagnostics.DebuggerHiddenAttribute", "DebuggerHiddenAttribute");
            feature.AddKnownType("System.Diagnostics.DebuggerNonUserCodeAttribute", "DebuggerNonUserCodeAttribute");
            feature.AddKnownType("System.Diagnostics.DebuggerStepperBoundaryAttribute", "DebuggerStepperBoundaryAttribute");
            feature.AddKnownType("System.Diagnostics.DebuggerStepThroughAttribute", "DebuggerStepThroughAttribute");
            feature.AddKnownType("System.Diagnostics.DebuggerTypeProxyAttribute", "DebuggerTypeProxyAttribute");
            feature.AddKnownType("System.Diagnostics.DebuggerVisualizerAttribute", "DebuggerVisualizerAttribute");
            feature.AddKnownType("System.Diagnostics.StackTraceHiddenAttribute", "StackTraceHiddenAttribute");
            feature.AddKnownType("System.Diagnostics.Stopwatch", "Stopwatch");
            feature.AddKnownType("System.Diagnostics.UnreachableException", "UnreachableException");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.AllowNullAttribute", "AllowNullAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.ConstantExpectedAttribute", "ConstantExpectedAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.DisallowNullAttribute", "DisallowNullAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute", "DoesNotReturnAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute", "DoesNotReturnIfAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute", "DynamicallyAccessedMembersAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes", "DynamicallyAccessedMemberTypes");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute", "DynamicDependencyAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute", "ExcludeFromCodeCoverageAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.MaybeNullAttribute", "MaybeNullAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute", "MaybeNullWhenAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.MemberNotNullAttribute", "MemberNotNullAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute", "MemberNotNullWhenAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.NotNullAttribute", "NotNullAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute", "NotNullIfNotNullAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.NotNullWhenAttribute", "NotNullWhenAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.UnscopedRefAttribute", "UnscopedRefAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.RequiresAssemblyFilesAttribute", "RequiresAssemblyFilesAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute", "RequiresDynamicCodeAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute", "RequiresUnreferencedCodeAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.SetsRequiredMembersAttribute", "SetsRequiredMembersAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.StringSyntaxAttribute", "StringSyntaxAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute", "SuppressMessageAttribute");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute", "UnconditionalSuppressMessageAttribute");
            feature.AddKnownType("System.Globalization.Calendar", "Calendar");
            feature.AddKnownType("System.Globalization.CalendarAlgorithmType", "CalendarAlgorithmType");
            feature.AddKnownType("System.Globalization.CalendarWeekRule", "CalendarWeekRule");
            feature.AddKnownType("System.Globalization.ChineseLunisolarCalendar", "ChineseLunisolarCalendar");
            feature.AddKnownType("System.Globalization.CompareInfo", "CompareInfo");
            feature.AddKnownType("System.Globalization.CompareOptions", "CompareOptions");
            feature.AddKnownType("System.Globalization.CultureInfo", "CultureInfo");
            feature.AddKnownType("System.Globalization.CultureNotFoundException", "CultureNotFoundException");
            feature.AddKnownType("System.Globalization.CultureTypes", "CultureTypes");
            feature.AddKnownType("System.Globalization.DateTimeFormatInfo", "DateTimeFormatInfo");
            feature.AddKnownType("System.Globalization.DateTimeStyles", "DateTimeStyles");
            feature.AddKnownType("System.Globalization.DaylightTime", "DaylightTime");
            feature.AddKnownType("System.Globalization.DigitShapes", "DigitShapes");
            feature.AddKnownType("System.Globalization.EastAsianLunisolarCalendar", "EastAsianLunisolarCalendar");
            feature.AddKnownType("System.Globalization.GregorianCalendar", "GregorianCalendar");
            feature.AddKnownType("System.Globalization.GregorianCalendarTypes", "GregorianCalendarTypes");
            feature.AddKnownType("System.Globalization.HebrewCalendar", "HebrewCalendar");
            feature.AddKnownType("System.Globalization.HijriCalendar", "HijriCalendar");
            feature.AddKnownType("System.Globalization.IdnMapping", "IdnMapping");
            feature.AddKnownType("System.Globalization.JapaneseCalendar", "JapaneseCalendar");
            feature.AddKnownType("System.Globalization.JapaneseLunisolarCalendar", "JapaneseLunisolarCalendar");
            feature.AddKnownType("System.Globalization.JulianCalendar", "JulianCalendar");
            feature.AddKnownType("System.Globalization.KoreanCalendar", "KoreanCalendar");
            feature.AddKnownType("System.Globalization.KoreanLunisolarCalendar", "KoreanLunisolarCalendar");
            feature.AddKnownType("System.Globalization.NumberFormatInfo", "NumberFormatInfo");
            feature.AddKnownType("System.Globalization.NumberStyles", "NumberStyles");
            feature.AddKnownType("System.Globalization.PersianCalendar", "PersianCalendar");
            feature.AddKnownType("System.Globalization.RegionInfo", "RegionInfo");
            feature.AddKnownType("System.Globalization.SortKey", "SortKey");
            feature.AddKnownType("System.Globalization.SortVersion", "SortVersion");
            feature.AddKnownType("System.Globalization.StringInfo", "StringInfo");
            feature.AddKnownType("System.Globalization.TaiwanCalendar", "TaiwanCalendar");
            feature.AddKnownType("System.Globalization.TaiwanLunisolarCalendar", "TaiwanLunisolarCalendar");
            feature.AddKnownType("System.Globalization.TextElementEnumerator", "TextElementEnumerator");
            feature.AddKnownType("System.Globalization.TextInfo", "TextInfo");
            feature.AddKnownType("System.Globalization.ThaiBuddhistCalendar", "ThaiBuddhistCalendar");
            feature.AddKnownType("System.Globalization.TimeSpanStyles", "TimeSpanStyles");
            feature.AddKnownType("System.Globalization.UmAlQuraCalendar", "UmAlQuraCalendar");
            feature.AddKnownType("System.Globalization.UnicodeCategory", "UnicodeCategory");
            feature.AddKnownType("System.IO.BinaryReader", "BinaryReader");
            feature.AddKnownType("System.IO.BinaryWriter", "BinaryWriter");
            feature.AddKnownType("System.IO.BufferedStream", "BufferedStream");
            feature.AddKnownType("System.IO.DirectoryInfo", "DirectoryInfo");
            feature.AddKnownType("System.IO.DirectoryNotFoundException", "DirectoryNotFoundException");
            feature.AddKnownType("System.IO.EndOfStreamException", "EndOfStreamException");
            feature.AddKnownType("System.IO.EnumerationOptions", "EnumerationOptions");
            feature.AddKnownType("System.IO.FileAccess", "FileAccess");
            feature.AddKnownType("System.IO.FileAttributes", "FileAttributes");
            feature.AddKnownType("System.IO.FileInfo", "FileInfo");
            feature.AddKnownType("System.IO.FileLoadException", "FileLoadException");
            feature.AddKnownType("System.IO.FileMode", "FileMode");
            feature.AddKnownType("System.IO.FileNotFoundException", "FileNotFoundException");
            feature.AddKnownType("System.IO.FileOptions", "FileOptions");
            feature.AddKnownType("System.IO.FileShare", "FileShare");
            feature.AddKnownType("System.IO.FileStream", "FileStream");
            feature.AddKnownType("System.IO.FileStreamOptions", "FileStreamOptions");
            feature.AddKnownType("System.IO.FileSystemInfo", "FileSystemInfo");
            feature.AddKnownType("System.IO.HandleInheritability", "HandleInheritability");
            feature.AddKnownType("System.IO.InvalidDataException", "InvalidDataException");
            feature.AddKnownType("System.IO.IOException", "IOException");
            feature.AddKnownType("System.IO.MatchCasing", "MatchCasing");
            feature.AddKnownType("System.IO.MatchType", "MatchType");
            feature.AddKnownType("System.IO.MemoryStream", "MemoryStream");
            feature.AddKnownType("System.IO.PathTooLongException", "PathTooLongException");
            feature.AddKnownType("System.IO.SearchOption", "SearchOption");
            feature.AddKnownType("System.IO.SeekOrigin", "SeekOrigin");
            feature.AddKnownType("System.IO.Stream", "Stream");
            feature.AddKnownType("System.IO.StreamReader", "StreamReader");
            feature.AddKnownType("System.IO.StreamWriter", "StreamWriter");
            feature.AddKnownType("System.IO.StringReader", "StringReader");
            feature.AddKnownType("System.IO.StringWriter", "StringWriter");
            feature.AddKnownType("System.IO.TextReader", "TextReader");
            feature.AddKnownType("System.IO.TextWriter", "TextWriter");
            feature.AddKnownType("System.IO.UnixFileMode", "UnixFileMode");
            feature.AddKnownType("System.IO.UnmanagedMemoryStream", "UnmanagedMemoryStream");
            feature.AddKnownType("System.IO.Enumeration.FileSystemEntry", "FileSystemEntry");
            feature.AddKnownType("System.IO.Enumeration.FileSystemEnumerable`1", "FileSystemEnumerable`1'1");
            feature.AddKnownType("System.IO.Enumeration.FileSystemEnumerator`1", "FileSystemEnumerator`1'1");
            feature.AddKnownType("System.Numerics.IAdditionOperators`3", "IAdditionOperators`3'3");
            feature.AddKnownType("System.Numerics.IAdditiveIdentity`2", "IAdditiveIdentity`2'2");
            feature.AddKnownType("System.Numerics.IBinaryFloatingPointIeee754`1", "IBinaryFloatingPointIeee754`1'1");
            feature.AddKnownType("System.Numerics.IBinaryInteger`1", "IBinaryInteger`1'1");
            feature.AddKnownType("System.Numerics.IBinaryNumber`1", "IBinaryNumber`1'1");
            feature.AddKnownType("System.Numerics.IBitwiseOperators`3", "IBitwiseOperators`3'3");
            feature.AddKnownType("System.Numerics.IComparisonOperators`3", "IComparisonOperators`3'3");
            feature.AddKnownType("System.Numerics.IDecrementOperators`1", "IDecrementOperators`1'1");
            feature.AddKnownType("System.Numerics.IDivisionOperators`3", "IDivisionOperators`3'3");
            feature.AddKnownType("System.Numerics.IEqualityOperators`3", "IEqualityOperators`3'3");
            feature.AddKnownType("System.Numerics.IExponentialFunctions`1", "IExponentialFunctions`1'1");
            feature.AddKnownType("System.Numerics.IFloatingPointConstants`1", "IFloatingPointConstants`1'1");
            feature.AddKnownType("System.Numerics.IFloatingPointIeee754`1", "IFloatingPointIeee754`1'1");
            feature.AddKnownType("System.Numerics.IFloatingPoint`1", "IFloatingPoint`1'1");
            feature.AddKnownType("System.Numerics.IHyperbolicFunctions`1", "IHyperbolicFunctions`1'1");
            feature.AddKnownType("System.Numerics.IIncrementOperators`1", "IIncrementOperators`1'1");
            feature.AddKnownType("System.Numerics.ILogarithmicFunctions`1", "ILogarithmicFunctions`1'1");
            feature.AddKnownType("System.Numerics.IMinMaxValue`1", "IMinMaxValue`1'1");
            feature.AddKnownType("System.Numerics.IModulusOperators`3", "IModulusOperators`3'3");
            feature.AddKnownType("System.Numerics.IMultiplicativeIdentity`2", "IMultiplicativeIdentity`2'2");
            feature.AddKnownType("System.Numerics.IMultiplyOperators`3", "IMultiplyOperators`3'3");
            feature.AddKnownType("System.Numerics.INumberBase`1", "INumberBase`1'1");
            feature.AddKnownType("System.Numerics.INumber`1", "INumber`1'1");
            feature.AddKnownType("System.Numerics.IPowerFunctions`1", "IPowerFunctions`1'1");
            feature.AddKnownType("System.Numerics.IRootFunctions`1", "IRootFunctions`1'1");
            feature.AddKnownType("System.Numerics.IShiftOperators`3", "IShiftOperators`3'3");
            feature.AddKnownType("System.Numerics.ISignedNumber`1", "ISignedNumber`1'1");
            feature.AddKnownType("System.Numerics.ISubtractionOperators`3", "ISubtractionOperators`3'3");
            feature.AddKnownType("System.Numerics.ITrigonometricFunctions`1", "ITrigonometricFunctions`1'1");
            feature.AddKnownType("System.Numerics.IUnaryNegationOperators`2", "IUnaryNegationOperators`2'2");
            feature.AddKnownType("System.Numerics.IUnaryPlusOperators`2", "IUnaryPlusOperators`2'2");
            feature.AddKnownType("System.Numerics.IUnsignedNumber`1", "IUnsignedNumber`1'1");
            feature.AddKnownType("System.Reflection.AmbiguousMatchException", "AmbiguousMatchException");
            feature.AddKnownType("System.Reflection.Assembly", "Assembly");
            feature.AddKnownType("System.Reflection.AssemblyAlgorithmIdAttribute", "AssemblyAlgorithmIdAttribute");
            feature.AddKnownType("System.Reflection.AssemblyCompanyAttribute", "AssemblyCompanyAttribute");
            feature.AddKnownType("System.Reflection.AssemblyConfigurationAttribute", "AssemblyConfigurationAttribute");
            feature.AddKnownType("System.Reflection.AssemblyContentType", "AssemblyContentType");
            feature.AddKnownType("System.Reflection.AssemblyCopyrightAttribute", "AssemblyCopyrightAttribute");
            feature.AddKnownType("System.Reflection.AssemblyCultureAttribute", "AssemblyCultureAttribute");
            feature.AddKnownType("System.Reflection.AssemblyDefaultAliasAttribute", "AssemblyDefaultAliasAttribute");
            feature.AddKnownType("System.Reflection.AssemblyDelaySignAttribute", "AssemblyDelaySignAttribute");
            feature.AddKnownType("System.Reflection.AssemblyDescriptionAttribute", "AssemblyDescriptionAttribute");
            feature.AddKnownType("System.Reflection.AssemblyFileVersionAttribute", "AssemblyFileVersionAttribute");
            feature.AddKnownType("System.Reflection.AssemblyFlagsAttribute", "AssemblyFlagsAttribute");
            feature.AddKnownType("System.Reflection.AssemblyInformationalVersionAttribute", "AssemblyInformationalVersionAttribute");
            feature.AddKnownType("System.Reflection.AssemblyKeyFileAttribute", "AssemblyKeyFileAttribute");
            feature.AddKnownType("System.Reflection.AssemblyKeyNameAttribute", "AssemblyKeyNameAttribute");
            feature.AddKnownType("System.Reflection.AssemblyMetadataAttribute", "AssemblyMetadataAttribute");
            feature.AddKnownType("System.Reflection.AssemblyName", "AssemblyName");
            feature.AddKnownType("System.Reflection.AssemblyNameFlags", "AssemblyNameFlags");
            feature.AddKnownType("System.Reflection.AssemblyNameProxy", "AssemblyNameProxy");
            feature.AddKnownType("System.Reflection.AssemblyProductAttribute", "AssemblyProductAttribute");
            feature.AddKnownType("System.Reflection.AssemblySignatureKeyAttribute", "AssemblySignatureKeyAttribute");
            feature.AddKnownType("System.Reflection.AssemblyTitleAttribute", "AssemblyTitleAttribute");
            feature.AddKnownType("System.Reflection.AssemblyTrademarkAttribute", "AssemblyTrademarkAttribute");
            feature.AddKnownType("System.Reflection.AssemblyVersionAttribute", "AssemblyVersionAttribute");
            feature.AddKnownType("System.Reflection.Binder", "Binder");
            feature.AddKnownType("System.Reflection.BindingFlags", "BindingFlags");
            feature.AddKnownType("System.Reflection.CallingConventions", "CallingConventions");
            feature.AddKnownType("System.Reflection.ConstructorInfo", "ConstructorInfo");
            feature.AddKnownType("System.Reflection.CustomAttributeData", "CustomAttributeData");
            feature.AddKnownType("System.Reflection.CustomAttributeFormatException", "CustomAttributeFormatException");
            feature.AddKnownType("System.Reflection.CustomAttributeNamedArgument", "CustomAttributeNamedArgument");
            feature.AddKnownType("System.Reflection.CustomAttributeTypedArgument", "CustomAttributeTypedArgument");
            feature.AddKnownType("System.Reflection.DefaultMemberAttribute", "DefaultMemberAttribute");
            feature.AddKnownType("System.Reflection.EventAttributes", "EventAttributes");
            feature.AddKnownType("System.Reflection.EventInfo", "EventInfo");
            feature.AddKnownType("System.Reflection.ExceptionHandlingClause", "ExceptionHandlingClause");
            feature.AddKnownType("System.Reflection.ExceptionHandlingClauseOptions", "ExceptionHandlingClauseOptions");
            feature.AddKnownType("System.Reflection.FieldAttributes", "FieldAttributes");
            feature.AddKnownType("System.Reflection.FieldInfo", "FieldInfo");
            feature.AddKnownType("System.Reflection.GenericParameterAttributes", "GenericParameterAttributes");
            feature.AddKnownType("System.Reflection.ICustomAttributeProvider", "ICustomAttributeProvider");
            feature.AddKnownType("System.Reflection.ImageFileMachine", "ImageFileMachine");
            feature.AddKnownType("System.Reflection.InterfaceMapping", "InterfaceMapping");
            feature.AddKnownType("System.Reflection.InvalidFilterCriteriaException", "InvalidFilterCriteriaException");
            feature.AddKnownType("System.Reflection.IReflect", "IReflect");
            feature.AddKnownType("System.Reflection.IReflectableType", "IReflectableType");
            feature.AddKnownType("System.Reflection.LocalVariableInfo", "LocalVariableInfo");
            feature.AddKnownType("System.Reflection.ManifestResourceInfo", "ManifestResourceInfo");
            feature.AddKnownType("System.Reflection.MemberInfo", "MemberInfo");
            feature.AddKnownType("System.Reflection.MemberTypes", "MemberTypes");
            feature.AddKnownType("System.Reflection.MethodAttributes", "MethodAttributes");
            feature.AddKnownType("System.Reflection.MethodBase", "MethodBase");
            feature.AddKnownType("System.Reflection.MethodBody", "MethodBody");
            feature.AddKnownType("System.Reflection.MethodImplAttributes", "MethodImplAttributes");
            feature.AddKnownType("System.Reflection.MethodInfo", "MethodInfo");
            feature.AddKnownType("System.Reflection.Missing", "Missing");
            feature.AddKnownType("System.Reflection.Module", "Module");
            feature.AddKnownType("System.Reflection.NullabilityInfo", "NullabilityInfo");
            feature.AddKnownType("System.Reflection.NullabilityInfoContext", "NullabilityInfoContext");
            feature.AddKnownType("System.Reflection.NullabilityState", "NullabilityState");
            feature.AddKnownType("System.Reflection.ObfuscateAssemblyAttribute", "ObfuscateAssemblyAttribute");
            feature.AddKnownType("System.Reflection.ObfuscationAttribute", "ObfuscationAttribute");
            feature.AddKnownType("System.Reflection.ParameterAttributes", "ParameterAttributes");
            feature.AddKnownType("System.Reflection.ParameterInfo", "ParameterInfo");
            feature.AddKnownType("System.Reflection.ParameterModifier", "ParameterModifier");
            feature.AddKnownType("System.Reflection.Pointer", "Pointer");
            feature.AddKnownType("System.Reflection.PortableExecutableKinds", "PortableExecutableKinds");
            feature.AddKnownType("System.Reflection.ProcessorArchitecture", "ProcessorArchitecture");
            feature.AddKnownType("System.Reflection.PropertyAttributes", "PropertyAttributes");
            feature.AddKnownType("System.Reflection.PropertyInfo", "PropertyInfo");
            feature.AddKnownType("System.Reflection.ReflectionContext", "ReflectionContext");
            feature.AddKnownType("System.Reflection.ReflectionTypeLoadException", "ReflectionTypeLoadException");
            feature.AddKnownType("System.Reflection.ResourceAttributes", "ResourceAttributes");
            feature.AddKnownType("System.Reflection.ResourceLocation", "ResourceLocation");
            feature.AddKnownType("System.Reflection.StrongNameKeyPair", "StrongNameKeyPair");
            feature.AddKnownType("System.Reflection.TargetException", "TargetException");
            feature.AddKnownType("System.Reflection.TargetInvocationException", "TargetInvocationException");
            feature.AddKnownType("System.Reflection.TargetParameterCountException", "TargetParameterCountException");
            feature.AddKnownType("System.Reflection.TypeAttributes", "TypeAttributes");
            feature.AddKnownType("System.Reflection.TypeDelegator", "TypeDelegator");
            feature.AddKnownType("System.Reflection.TypeInfo", "TypeInfo");
            feature.AddKnownType("System.Resources.IResourceReader", "IResourceReader");
            feature.AddKnownType("System.Resources.MissingManifestResourceException", "MissingManifestResourceException");
            feature.AddKnownType("System.Resources.MissingSatelliteAssemblyException", "MissingSatelliteAssemblyException");
            feature.AddKnownType("System.Resources.NeutralResourcesLanguageAttribute", "NeutralResourcesLanguageAttribute");
            feature.AddKnownType("System.Resources.ResourceManager", "ResourceManager");
            feature.AddKnownType("System.Resources.ResourceReader", "ResourceReader");
            feature.AddKnownType("System.Resources.ResourceSet", "ResourceSet");
            feature.AddKnownType("System.Resources.SatelliteContractVersionAttribute", "SatelliteContractVersionAttribute");
            feature.AddKnownType("System.Resources.UltimateResourceFallbackLocation", "UltimateResourceFallbackLocation");
            feature.AddKnownType("System.Runtime.AmbiguousImplementationException", "AmbiguousImplementationException");
            feature.AddKnownType("System.Runtime.AssemblyTargetedPatchBandAttribute", "AssemblyTargetedPatchBandAttribute");
            feature.AddKnownType("System.Runtime.DependentHandle", "DependentHandle");
            feature.AddKnownType("System.Runtime.GCLargeObjectHeapCompactionMode", "GCLargeObjectHeapCompactionMode");
            feature.AddKnownType("System.Runtime.GCLatencyMode", "GCLatencyMode");
            feature.AddKnownType("System.Runtime.MemoryFailPoint", "MemoryFailPoint");
            feature.AddKnownType("System.Runtime.TargetedPatchingOptOutAttribute", "TargetedPatchingOptOutAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.IsUnmanagedAttribute", "IsUnmanagedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.ScopedRefAttribute", "ScopedRefAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.AccessedThroughPropertyAttribute", "AccessedThroughPropertyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.AsyncIteratorMethodBuilder", "AsyncIteratorMethodBuilder");
            feature.AddKnownType("System.Runtime.CompilerServices.AsyncIteratorStateMachineAttribute", "AsyncIteratorStateMachineAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.AsyncMethodBuilderAttribute", "AsyncMethodBuilderAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.AsyncStateMachineAttribute", "AsyncStateMachineAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.AsyncTaskMethodBuilder", "AsyncTaskMethodBuilder");
            feature.AddKnownType("System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1", "AsyncTaskMethodBuilder`1'1");
            feature.AddKnownType("System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder", "AsyncValueTaskMethodBuilder");
            feature.AddKnownType("System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1", "AsyncValueTaskMethodBuilder`1'1");
            feature.AddKnownType("System.Runtime.CompilerServices.AsyncVoidMethodBuilder", "AsyncVoidMethodBuilder");
            feature.AddKnownType("System.Runtime.CompilerServices.CallConvCdecl", "CallConvCdecl");
            feature.AddKnownType("System.Runtime.CompilerServices.CallConvFastcall", "CallConvFastcall");
            feature.AddKnownType("System.Runtime.CompilerServices.CallConvMemberFunction", "CallConvMemberFunction");
            feature.AddKnownType("System.Runtime.CompilerServices.CallConvStdcall", "CallConvStdcall");
            feature.AddKnownType("System.Runtime.CompilerServices.CallConvSuppressGCTransition", "CallConvSuppressGCTransition");
            feature.AddKnownType("System.Runtime.CompilerServices.CallConvThiscall", "CallConvThiscall");
            feature.AddKnownType("System.Runtime.CompilerServices.CallerArgumentExpressionAttribute", "CallerArgumentExpressionAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.CallerFilePathAttribute", "CallerFilePathAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.CallerLineNumberAttribute", "CallerLineNumberAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.CallerMemberNameAttribute", "CallerMemberNameAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.CompilationRelaxations", "CompilationRelaxations");
            feature.AddKnownType("System.Runtime.CompilerServices.CompilationRelaxationsAttribute", "CompilationRelaxationsAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute", "CompilerFeatureRequiredAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.CompilerGeneratedAttribute", "CompilerGeneratedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.CompilerGlobalScopeAttribute", "CompilerGlobalScopeAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.ConditionalWeakTable`2", "ConditionalWeakTable`2'2");
            feature.AddKnownType("System.Runtime.CompilerServices.ConfiguredAsyncDisposable", "ConfiguredAsyncDisposable");
            feature.AddKnownType("System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1", "ConfiguredCancelableAsyncEnumerable`1'1");
            feature.AddKnownType("System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1+Enumerator", "ConfiguredCancelableAsyncEnumerable`1'1.Enumerator'1");
            feature.AddKnownType("System.Runtime.CompilerServices.ConfiguredTaskAwaitable", "ConfiguredTaskAwaitable");
            feature.AddKnownType("System.Runtime.CompilerServices.ConfiguredTaskAwaitable+ConfiguredTaskAwaiter", "ConfiguredTaskAwaitable.ConfiguredTaskAwaiter");
            feature.AddKnownType("System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1", "ConfiguredTaskAwaitable`1'1");
            feature.AddKnownType("System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter", "ConfiguredTaskAwaitable`1'1.ConfiguredTaskAwaiter'1");
            feature.AddKnownType("System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable", "ConfiguredValueTaskAwaitable");
            feature.AddKnownType("System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable+ConfiguredValueTaskAwaiter", "ConfiguredValueTaskAwaitable.ConfiguredValueTaskAwaiter");
            feature.AddKnownType("System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1", "ConfiguredValueTaskAwaitable`1'1");
            feature.AddKnownType("System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1+ConfiguredValueTaskAwaiter", "ConfiguredValueTaskAwaitable`1'1.ConfiguredValueTaskAwaiter'1");
            feature.AddKnownType("System.Runtime.CompilerServices.CustomConstantAttribute", "CustomConstantAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.DateTimeConstantAttribute", "DateTimeConstantAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.DecimalConstantAttribute", "DecimalConstantAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.DefaultDependencyAttribute", "DefaultDependencyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.DefaultInterpolatedStringHandler", "DefaultInterpolatedStringHandler");
            feature.AddKnownType("System.Runtime.CompilerServices.DependencyAttribute", "DependencyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.DisablePrivateReflectionAttribute", "DisablePrivateReflectionAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.DisableRuntimeMarshallingAttribute", "DisableRuntimeMarshallingAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.DiscardableAttribute", "DiscardableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.EnumeratorCancellationAttribute", "EnumeratorCancellationAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.ExtensionAttribute", "ExtensionAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.FixedAddressValueTypeAttribute", "FixedAddressValueTypeAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.FixedBufferAttribute", "FixedBufferAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.IAsyncStateMachine", "IAsyncStateMachine");
            feature.AddKnownType("System.Runtime.CompilerServices.ICriticalNotifyCompletion", "ICriticalNotifyCompletion");
            feature.AddKnownType("System.Runtime.CompilerServices.IndexerNameAttribute", "IndexerNameAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.INotifyCompletion", "INotifyCompletion");
            feature.AddKnownType("System.Runtime.CompilerServices.InternalsVisibleToAttribute", "InternalsVisibleToAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute", "InterpolatedStringHandlerArgumentAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.InterpolatedStringHandlerAttribute", "InterpolatedStringHandlerAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.IsByRefLikeAttribute", "IsByRefLikeAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.IsReadOnlyAttribute", "IsReadOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.IStrongBox", "IStrongBox");
            feature.AddKnownType("System.Runtime.CompilerServices.IteratorStateMachineAttribute", "IteratorStateMachineAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.ITuple", "ITuple");
            feature.AddKnownType("System.Runtime.CompilerServices.LoadHint", "LoadHint");
            feature.AddKnownType("System.Runtime.CompilerServices.MethodCodeType", "MethodCodeType");
            feature.AddKnownType("System.Runtime.CompilerServices.MethodImplAttribute", "MethodImplAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.MethodImplOptions", "MethodImplOptions");
            feature.AddKnownType("System.Runtime.CompilerServices.ModuleInitializerAttribute", "ModuleInitializerAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder", "PoolingAsyncValueTaskMethodBuilder");
            feature.AddKnownType("System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1", "PoolingAsyncValueTaskMethodBuilder`1'1");
            feature.AddKnownType("System.Runtime.CompilerServices.RequiredMemberAttribute", "RequiredMemberAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.ReferenceAssemblyAttribute", "ReferenceAssemblyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RuntimeCompatibilityAttribute", "RuntimeCompatibilityAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RuntimeWrappedException", "RuntimeWrappedException");
            feature.AddKnownType("System.Runtime.CompilerServices.SkipLocalsInitAttribute", "SkipLocalsInitAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.SpecialNameAttribute", "SpecialNameAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.StateMachineAttribute", "StateMachineAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.StringFreezingAttribute", "StringFreezingAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.StrongBox`1", "StrongBox`1'1");
            feature.AddKnownType("System.Runtime.CompilerServices.SuppressIldasmAttribute", "SuppressIldasmAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.SwitchExpressionException", "SwitchExpressionException");
            feature.AddKnownType("System.Runtime.CompilerServices.TaskAwaiter", "TaskAwaiter");
            feature.AddKnownType("System.Runtime.CompilerServices.TaskAwaiter`1", "TaskAwaiter`1'1");
            feature.AddKnownType("System.Runtime.CompilerServices.TupleElementNamesAttribute", "TupleElementNamesAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.TypeForwardedFromAttribute", "TypeForwardedFromAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.TypeForwardedToAttribute", "TypeForwardedToAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.UnsafeValueTypeAttribute", "UnsafeValueTypeAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.ValueTaskAwaiter", "ValueTaskAwaiter");
            feature.AddKnownType("System.Runtime.CompilerServices.ValueTaskAwaiter`1", "ValueTaskAwaiter`1'1");
            feature.AddKnownType("System.Runtime.CompilerServices.YieldAwaitable", "YieldAwaitable");
            feature.AddKnownType("System.Runtime.CompilerServices.YieldAwaitable+YieldAwaiter", "YieldAwaitable.YieldAwaiter");
            feature.AddKnownType("System.Runtime.ConstrainedExecution.Cer", "Cer");
            feature.AddKnownType("System.Runtime.ConstrainedExecution.Consistency", "Consistency");
            feature.AddKnownType("System.Runtime.ConstrainedExecution.CriticalFinalizerObject", "CriticalFinalizerObject");
            feature.AddKnownType("System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute", "PrePrepareMethodAttribute");
            feature.AddKnownType("System.Runtime.ConstrainedExecution.ReliabilityContractAttribute", "ReliabilityContractAttribute");
            feature.AddKnownType("System.Runtime.ExceptionServices.ExceptionDispatchInfo", "ExceptionDispatchInfo");
            feature.AddKnownType("System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs", "FirstChanceExceptionEventArgs");
            feature.AddKnownType("System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute", "HandleProcessCorruptedStateExceptionsAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.Architecture", "Architecture");
            feature.AddKnownType("System.Runtime.InteropServices.CharSet", "CharSet");
            feature.AddKnownType("System.Runtime.InteropServices.ComVisibleAttribute", "ComVisibleAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.CriticalHandle", "CriticalHandle");
            feature.AddKnownType("System.Runtime.InteropServices.ExternalException", "ExternalException");
            feature.AddKnownType("System.Runtime.InteropServices.FieldOffsetAttribute", "FieldOffsetAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.GCHandle", "GCHandle");
            feature.AddKnownType("System.Runtime.InteropServices.GCHandleType", "GCHandleType");
            feature.AddKnownType("System.Runtime.InteropServices.InAttribute", "InAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.LayoutKind", "LayoutKind");
            feature.AddKnownType("System.Runtime.InteropServices.OSPlatform", "OSPlatform");
            feature.AddKnownType("System.Runtime.InteropServices.OutAttribute", "OutAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.SafeBuffer", "SafeBuffer");
            feature.AddKnownType("System.Runtime.InteropServices.SafeHandle", "SafeHandle");
            feature.AddKnownType("System.Runtime.InteropServices.StructLayoutAttribute", "StructLayoutAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.SuppressGCTransitionAttribute", "SuppressGCTransitionAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.UnmanagedType", "UnmanagedType");
            feature.AddKnownType("System.Runtime.InteropServices.Marshalling.ContiguousCollectionMarshallerAttribute", "ContiguousCollectionMarshallerAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.Marshalling.CustomMarshallerAttribute", "CustomMarshallerAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.Marshalling.CustomMarshallerAttribute+GenericPlaceholder", "CustomMarshallerAttribute.GenericPlaceholder");
            feature.AddKnownType("System.Runtime.InteropServices.Marshalling.MarshalMode", "MarshalMode");
            feature.AddKnownType("System.Runtime.InteropServices.Marshalling.NativeMarshallingAttribute", "NativeMarshallingAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2+ManagedToUnmanagedIn", "ReadOnlySpanMarshaller`2'2.ManagedToUnmanagedIn'2");
            feature.AddKnownType("System.Runtime.InteropServices.Marshalling.SpanMarshaller`2+ManagedToUnmanagedIn", "SpanMarshaller`2'2.ManagedToUnmanagedIn'2");
            feature.AddKnownType("System.Runtime.Remoting.ObjectHandle", "ObjectHandle");
            feature.AddKnownType("System.Runtime.Serialization.IDeserializationCallback", "IDeserializationCallback");
            feature.AddKnownType("System.Runtime.Serialization.IFormatterConverter", "IFormatterConverter");
            feature.AddKnownType("System.Runtime.Serialization.IObjectReference", "IObjectReference");
            feature.AddKnownType("System.Runtime.Serialization.ISafeSerializationData", "ISafeSerializationData");
            feature.AddKnownType("System.Runtime.Serialization.ISerializable", "ISerializable");
            feature.AddKnownType("System.Runtime.Serialization.OnDeserializedAttribute", "OnDeserializedAttribute");
            feature.AddKnownType("System.Runtime.Serialization.OnDeserializingAttribute", "OnDeserializingAttribute");
            feature.AddKnownType("System.Runtime.Serialization.OnSerializedAttribute", "OnSerializedAttribute");
            feature.AddKnownType("System.Runtime.Serialization.OnSerializingAttribute", "OnSerializingAttribute");
            feature.AddKnownType("System.Runtime.Serialization.OptionalFieldAttribute", "OptionalFieldAttribute");
            feature.AddKnownType("System.Runtime.Serialization.SafeSerializationEventArgs", "SafeSerializationEventArgs");
            feature.AddKnownType("System.Runtime.Serialization.SerializationEntry", "SerializationEntry");
            feature.AddKnownType("System.Runtime.Serialization.SerializationException", "SerializationException");
            feature.AddKnownType("System.Runtime.Serialization.SerializationInfo", "SerializationInfo");
            feature.AddKnownType("System.Runtime.Serialization.SerializationInfoEnumerator", "SerializationInfoEnumerator");
            feature.AddKnownType("System.Runtime.Serialization.StreamingContext", "StreamingContext");
            feature.AddKnownType("System.Runtime.Serialization.StreamingContextStates", "StreamingContextStates");
            feature.AddKnownType("System.Runtime.Versioning.ComponentGuaranteesAttribute", "ComponentGuaranteesAttribute");
            feature.AddKnownType("System.Runtime.Versioning.ComponentGuaranteesOptions", "ComponentGuaranteesOptions");
            feature.AddKnownType("System.Runtime.Versioning.FrameworkName", "FrameworkName");
            feature.AddKnownType("System.Runtime.Versioning.ObsoletedOSPlatformAttribute", "ObsoletedOSPlatformAttribute");
            feature.AddKnownType("System.Runtime.Versioning.OSPlatformAttribute", "OSPlatformAttribute");
            feature.AddKnownType("System.Runtime.Versioning.RequiresPreviewFeaturesAttribute", "RequiresPreviewFeaturesAttribute");
            feature.AddKnownType("System.Runtime.Versioning.ResourceConsumptionAttribute", "ResourceConsumptionAttribute");
            feature.AddKnownType("System.Runtime.Versioning.ResourceExposureAttribute", "ResourceExposureAttribute");
            feature.AddKnownType("System.Runtime.Versioning.ResourceScope", "ResourceScope");
            feature.AddKnownType("System.Runtime.Versioning.SupportedOSPlatformAttribute", "SupportedOSPlatformAttribute");
            feature.AddKnownType("System.Runtime.Versioning.SupportedOSPlatformGuardAttribute", "SupportedOSPlatformGuardAttribute");
            feature.AddKnownType("System.Runtime.Versioning.TargetFrameworkAttribute", "TargetFrameworkAttribute");
            feature.AddKnownType("System.Runtime.Versioning.TargetPlatformAttribute", "TargetPlatformAttribute");
            feature.AddKnownType("System.Runtime.Versioning.UnsupportedOSPlatformAttribute", "UnsupportedOSPlatformAttribute");
            feature.AddKnownType("System.Runtime.Versioning.UnsupportedOSPlatformGuardAttribute", "UnsupportedOSPlatformGuardAttribute");
            feature.AddKnownType("System.Security.AllowPartiallyTrustedCallersAttribute", "AllowPartiallyTrustedCallersAttribute");
            feature.AddKnownType("System.Security.IPermission", "IPermission");
            feature.AddKnownType("System.Security.ISecurityEncodable", "ISecurityEncodable");
            feature.AddKnownType("System.Security.IStackWalk", "IStackWalk");
            feature.AddKnownType("System.Security.PartialTrustVisibilityLevel", "PartialTrustVisibilityLevel");
            feature.AddKnownType("System.Security.PermissionSet", "PermissionSet");
            feature.AddKnownType("System.Security.SecurityCriticalAttribute", "SecurityCriticalAttribute");
            feature.AddKnownType("System.Security.SecurityCriticalScope", "SecurityCriticalScope");
            feature.AddKnownType("System.Security.SecurityElement", "SecurityElement");
            feature.AddKnownType("System.Security.SecurityException", "SecurityException");
            feature.AddKnownType("System.Security.SecurityRulesAttribute", "SecurityRulesAttribute");
            feature.AddKnownType("System.Security.SecurityRuleSet", "SecurityRuleSet");
            feature.AddKnownType("System.Security.SecuritySafeCriticalAttribute", "SecuritySafeCriticalAttribute");
            feature.AddKnownType("System.Security.SecurityTransparentAttribute", "SecurityTransparentAttribute");
            feature.AddKnownType("System.Security.SecurityTreatAsSafeAttribute", "SecurityTreatAsSafeAttribute");
            feature.AddKnownType("System.Security.SuppressUnmanagedCodeSecurityAttribute", "SuppressUnmanagedCodeSecurityAttribute");
            feature.AddKnownType("System.Security.UnverifiableCodeAttribute", "UnverifiableCodeAttribute");
            feature.AddKnownType("System.Security.VerificationException", "VerificationException");
            feature.AddKnownType("System.Security.Cryptography.CryptographicException", "CryptographicException");
            feature.AddKnownType("System.Security.Permissions.CodeAccessSecurityAttribute", "CodeAccessSecurityAttribute");
            feature.AddKnownType("System.Security.Permissions.PermissionState", "PermissionState");
            feature.AddKnownType("System.Security.Permissions.SecurityAction", "SecurityAction");
            feature.AddKnownType("System.Security.Permissions.SecurityAttribute", "SecurityAttribute");
            feature.AddKnownType("System.Security.Permissions.SecurityPermissionAttribute", "SecurityPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.SecurityPermissionFlag", "SecurityPermissionFlag");
            feature.AddKnownType("System.Security.Principal.IIdentity", "IIdentity");
            feature.AddKnownType("System.Security.Principal.IPrincipal", "IPrincipal");
            feature.AddKnownType("System.Security.Principal.PrincipalPolicy", "PrincipalPolicy");
            feature.AddKnownType("System.Security.Principal.TokenImpersonationLevel", "TokenImpersonationLevel");
            feature.AddKnownType("System.Text.Decoder", "Decoder");
            feature.AddKnownType("System.Text.DecoderExceptionFallback", "DecoderExceptionFallback");
            feature.AddKnownType("System.Text.DecoderExceptionFallbackBuffer", "DecoderExceptionFallbackBuffer");
            feature.AddKnownType("System.Text.DecoderFallback", "DecoderFallback");
            feature.AddKnownType("System.Text.DecoderFallbackBuffer", "DecoderFallbackBuffer");
            feature.AddKnownType("System.Text.DecoderFallbackException", "DecoderFallbackException");
            feature.AddKnownType("System.Text.DecoderReplacementFallback", "DecoderReplacementFallback");
            feature.AddKnownType("System.Text.DecoderReplacementFallbackBuffer", "DecoderReplacementFallbackBuffer");
            feature.AddKnownType("System.Text.Encoder", "Encoder");
            feature.AddKnownType("System.Text.EncoderExceptionFallback", "EncoderExceptionFallback");
            feature.AddKnownType("System.Text.EncoderExceptionFallbackBuffer", "EncoderExceptionFallbackBuffer");
            feature.AddKnownType("System.Text.EncoderFallback", "EncoderFallback");
            feature.AddKnownType("System.Text.EncoderFallbackBuffer", "EncoderFallbackBuffer");
            feature.AddKnownType("System.Text.EncoderFallbackException", "EncoderFallbackException");
            feature.AddKnownType("System.Text.EncoderReplacementFallback", "EncoderReplacementFallback");
            feature.AddKnownType("System.Text.EncoderReplacementFallbackBuffer", "EncoderReplacementFallbackBuffer");
            feature.AddKnownType("System.Text.Encoding", "Encoding");
            feature.AddKnownType("System.Text.EncodingInfo", "EncodingInfo");
            feature.AddKnownType("System.Text.EncodingProvider", "EncodingProvider");
            feature.AddKnownType("System.Text.NormalizationForm", "NormalizationForm");
            feature.AddKnownType("System.Text.Rune", "Rune");
            feature.AddKnownType("System.Text.StringBuilder", "StringBuilder");
            feature.AddKnownType("System.Text.StringBuilder+AppendInterpolatedStringHandler", "StringBuilder.AppendInterpolatedStringHandler");
            feature.AddKnownType("System.Text.StringBuilder+ChunkEnumerator", "StringBuilder.ChunkEnumerator");
            feature.AddKnownType("System.Text.StringRuneEnumerator", "StringRuneEnumerator");
            feature.AddKnownType("System.Threading.CancellationToken", "CancellationToken");
            feature.AddKnownType("System.Threading.CancellationTokenRegistration", "CancellationTokenRegistration");
            feature.AddKnownType("System.Threading.CancellationTokenSource", "CancellationTokenSource");
            feature.AddKnownType("System.Threading.LazyThreadSafetyMode", "LazyThreadSafetyMode");
            feature.AddKnownType("System.Threading.PeriodicTimer", "PeriodicTimer");
            feature.AddKnownType("System.Threading.Timer", "Timer");
            feature.AddKnownType("System.Threading.WaitHandle", "WaitHandle");
            feature.AddKnownType("System.Threading.Tasks.ConcurrentExclusiveSchedulerPair", "ConcurrentExclusiveSchedulerPair");
            feature.AddKnownType("System.Threading.Tasks.Task", "Task");
            feature.AddKnownType("System.Threading.Tasks.Task`1", "Task`1'1");
            feature.AddKnownType("System.Threading.Tasks.TaskCanceledException", "TaskCanceledException");
            feature.AddKnownType("System.Threading.Tasks.TaskCompletionSource", "TaskCompletionSource");
            feature.AddKnownType("System.Threading.Tasks.TaskCompletionSource`1", "TaskCompletionSource`1'1");
            feature.AddKnownType("System.Threading.Tasks.TaskContinuationOptions", "TaskContinuationOptions");
            feature.AddKnownType("System.Threading.Tasks.TaskCreationOptions", "TaskCreationOptions");
            feature.AddKnownType("System.Threading.Tasks.TaskFactory", "TaskFactory");
            feature.AddKnownType("System.Threading.Tasks.TaskFactory`1", "TaskFactory`1'1");
            feature.AddKnownType("System.Threading.Tasks.TaskScheduler", "TaskScheduler");
            feature.AddKnownType("System.Threading.Tasks.TaskSchedulerException", "TaskSchedulerException");
            feature.AddKnownType("System.Threading.Tasks.TaskStatus", "TaskStatus");
            feature.AddKnownType("System.Threading.Tasks.UnobservedTaskExceptionEventArgs", "UnobservedTaskExceptionEventArgs");
            feature.AddKnownType("System.Threading.Tasks.ValueTask", "ValueTask");
            feature.AddKnownType("System.Threading.Tasks.ValueTask`1", "ValueTask`1'1");
            feature.AddKnownType("System.Threading.Tasks.Sources.IValueTaskSource", "IValueTaskSource");
            feature.AddKnownType("System.Threading.Tasks.Sources.IValueTaskSource`1", "IValueTaskSource`1'1");
            feature.AddKnownType("System.Threading.Tasks.Sources.ManualResetValueTaskSourceCore`1", "ManualResetValueTaskSourceCore`1'1");
            feature.AddKnownType("System.Threading.Tasks.Sources.ValueTaskSourceOnCompletedFlags", "ValueTaskSourceOnCompletedFlags");
            feature.AddKnownType("System.Threading.Tasks.Sources.ValueTaskSourceStatus", "ValueTaskSourceStatus");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Runtime.InteropServices", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.DataMisalignedException", "DataMisalignedException");
            feature.AddKnownType("System.DllNotFoundException", "DllNotFoundException");
            feature.AddKnownType("System.IO.UnmanagedMemoryAccessor", "UnmanagedMemoryAccessor");
            feature.AddKnownType("System.Runtime.CompilerServices.IsUnmanagedAttribute", "IsUnmanagedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.IDispatchConstantAttribute", "IDispatchConstantAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.IUnknownConstantAttribute", "IUnknownConstantAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.AutomationProxyAttribute", "AutomationProxyAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ComAliasNameAttribute", "ComAliasNameAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ComAwareEventInfo", "ComAwareEventInfo");
            feature.AddKnownType("System.Runtime.InteropServices.ComCompatibleVersionAttribute", "ComCompatibleVersionAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ComConversionLossAttribute", "ComConversionLossAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ComRegisterFunctionAttribute", "ComRegisterFunctionAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ComUnregisterFunctionAttribute", "ComUnregisterFunctionAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.HandleCollector", "HandleCollector");
            feature.AddKnownType("System.Runtime.InteropServices.ImportedFromTypeLibAttribute", "ImportedFromTypeLibAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute", "ManagedToNativeComInteropStubAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute", "PrimaryInteropAssemblyAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.TypeLibFuncAttribute", "TypeLibFuncAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.TypeLibFuncFlags", "TypeLibFuncFlags");
            feature.AddKnownType("System.Runtime.InteropServices.TypeLibImportClassAttribute", "TypeLibImportClassAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.TypeLibTypeAttribute", "TypeLibTypeAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.TypeLibTypeFlags", "TypeLibTypeFlags");
            feature.AddKnownType("System.Runtime.InteropServices.TypeLibVarAttribute", "TypeLibVarAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.TypeLibVarFlags", "TypeLibVarFlags");
            feature.AddKnownType("System.Runtime.InteropServices.TypeLibVersionAttribute", "TypeLibVersionAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.AllowReversePInvokeCallsAttribute", "AllowReversePInvokeCallsAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ArrayWithOffset", "ArrayWithOffset");
            feature.AddKnownType("System.Runtime.InteropServices.BestFitMappingAttribute", "BestFitMappingAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.BStrWrapper", "BStrWrapper");
            feature.AddKnownType("System.Runtime.InteropServices.CallingConvention", "CallingConvention");
            feature.AddKnownType("System.Runtime.InteropServices.ClassInterfaceAttribute", "ClassInterfaceAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ClassInterfaceType", "ClassInterfaceType");
            feature.AddKnownType("System.Runtime.InteropServices.CLong", "CLong");
            feature.AddKnownType("System.Runtime.InteropServices.CoClassAttribute", "CoClassAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ComDefaultInterfaceAttribute", "ComDefaultInterfaceAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ComEventInterfaceAttribute", "ComEventInterfaceAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.COMException", "COMException");
            feature.AddKnownType("System.Runtime.InteropServices.ComImportAttribute", "ComImportAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ComInterfaceType", "ComInterfaceType");
            feature.AddKnownType("System.Runtime.InteropServices.ComMemberType", "ComMemberType");
            feature.AddKnownType("System.Runtime.InteropServices.ComSourceInterfacesAttribute", "ComSourceInterfacesAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ComWrappers", "ComWrappers");
            feature.AddKnownType("System.Runtime.InteropServices.ComWrappers+ComInterfaceEntry", "ComWrappers.ComInterfaceEntry");
            feature.AddKnownType("System.Runtime.InteropServices.ComWrappers+ComInterfaceDispatch", "ComWrappers.ComInterfaceDispatch");
            feature.AddKnownType("System.Runtime.InteropServices.CreateComInterfaceFlags", "CreateComInterfaceFlags");
            feature.AddKnownType("System.Runtime.InteropServices.CreateObjectFlags", "CreateObjectFlags");
            feature.AddKnownType("System.Runtime.InteropServices.CULong", "CULong");
            feature.AddKnownType("System.Runtime.InteropServices.CurrencyWrapper", "CurrencyWrapper");
            feature.AddKnownType("System.Runtime.InteropServices.CustomQueryInterfaceMode", "CustomQueryInterfaceMode");
            feature.AddKnownType("System.Runtime.InteropServices.CustomQueryInterfaceResult", "CustomQueryInterfaceResult");
            feature.AddKnownType("System.Runtime.InteropServices.DefaultCharSetAttribute", "DefaultCharSetAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute", "DefaultDllImportSearchPathsAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.DefaultParameterValueAttribute", "DefaultParameterValueAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.DispatchWrapper", "DispatchWrapper");
            feature.AddKnownType("System.Runtime.InteropServices.DispIdAttribute", "DispIdAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.DllImportAttribute", "DllImportAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.DllImportSearchPath", "DllImportSearchPath");
            feature.AddKnownType("System.Runtime.InteropServices.DynamicInterfaceCastableImplementationAttribute", "DynamicInterfaceCastableImplementationAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ErrorWrapper", "ErrorWrapper");
            feature.AddKnownType("System.Runtime.InteropServices.GuidAttribute", "GuidAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.HandleRef", "HandleRef");
            feature.AddKnownType("System.Runtime.InteropServices.ICustomAdapter", "ICustomAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.ICustomFactory", "ICustomFactory");
            feature.AddKnownType("System.Runtime.InteropServices.ICustomMarshaler", "ICustomMarshaler");
            feature.AddKnownType("System.Runtime.InteropServices.ICustomQueryInterface", "ICustomQueryInterface");
            feature.AddKnownType("System.Runtime.InteropServices.IDynamicInterfaceCastable", "IDynamicInterfaceCastable");
            feature.AddKnownType("System.Runtime.InteropServices.InterfaceTypeAttribute", "InterfaceTypeAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.InvalidComObjectException", "InvalidComObjectException");
            feature.AddKnownType("System.Runtime.InteropServices.InvalidOleVariantTypeException", "InvalidOleVariantTypeException");
            feature.AddKnownType("System.Runtime.InteropServices.LCIDConversionAttribute", "LCIDConversionAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.LibraryImportAttribute", "LibraryImportAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.MarshalAsAttribute", "MarshalAsAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.MarshalDirectiveException", "MarshalDirectiveException");
            feature.AddKnownType("System.Runtime.InteropServices.NFloat", "NFloat");
            feature.AddKnownType("System.Runtime.InteropServices.OptionalAttribute", "OptionalAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.PosixSignal", "PosixSignal");
            feature.AddKnownType("System.Runtime.InteropServices.PosixSignalContext", "PosixSignalContext");
            feature.AddKnownType("System.Runtime.InteropServices.PosixSignalRegistration", "PosixSignalRegistration");
            feature.AddKnownType("System.Runtime.InteropServices.PreserveSigAttribute", "PreserveSigAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ProgIdAttribute", "ProgIdAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.SafeArrayRankMismatchException", "SafeArrayRankMismatchException");
            feature.AddKnownType("System.Runtime.InteropServices.SafeArrayTypeMismatchException", "SafeArrayTypeMismatchException");
            feature.AddKnownType("System.Runtime.InteropServices.SEHException", "SEHException");
            feature.AddKnownType("System.Runtime.InteropServices.StandardOleMarshalObject", "StandardOleMarshalObject");
            feature.AddKnownType("System.Runtime.InteropServices.StringMarshalling", "StringMarshalling");
            feature.AddKnownType("System.Runtime.InteropServices.TypeIdentifierAttribute", "TypeIdentifierAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.UnknownWrapper", "UnknownWrapper");
            feature.AddKnownType("System.Runtime.InteropServices.UnmanagedCallConvAttribute", "UnmanagedCallConvAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.UnmanagedCallersOnlyAttribute", "UnmanagedCallersOnlyAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute", "UnmanagedFunctionPointerAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.VarEnum", "VarEnum");
            feature.AddKnownType("System.Runtime.InteropServices.VariantWrapper", "VariantWrapper");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.ADVF", "ADVF");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.DATADIR", "DATADIR");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.DVASPECT", "DVASPECT");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.FORMATETC", "FORMATETC");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IAdviseSink", "IAdviseSink");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IDataObject", "IDataObject");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IEnumFORMATETC", "IEnumFORMATETC");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IEnumSTATDATA", "IEnumSTATDATA");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.STATDATA", "STATDATA");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.STGMEDIUM", "STGMEDIUM");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.TYMED", "TYMED");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.BINDPTR", "BINDPTR");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.BIND_OPTS", "BIND_OPTS");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.CALLCONV", "CALLCONV");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.CONNECTDATA", "CONNECTDATA");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.DESCKIND", "DESCKIND");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.DISPPARAMS", "DISPPARAMS");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.ELEMDESC", "ELEMDESC");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.ELEMDESC+DESCUNION", "ELEMDESC.DESCUNION");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.EXCEPINFO", "EXCEPINFO");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.FILETIME", "FILETIME");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.FUNCDESC", "FUNCDESC");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.FUNCFLAGS", "FUNCFLAGS");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.FUNCKIND", "FUNCKIND");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IBindCtx", "IBindCtx");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IConnectionPoint", "IConnectionPoint");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IConnectionPointContainer", "IConnectionPointContainer");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IDLDESC", "IDLDESC");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IDLFLAG", "IDLFLAG");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints", "IEnumConnectionPoints");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IEnumConnections", "IEnumConnections");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IEnumMoniker", "IEnumMoniker");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IEnumString", "IEnumString");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IEnumVARIANT", "IEnumVARIANT");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IMoniker", "IMoniker");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS", "IMPLTYPEFLAGS");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.INVOKEKIND", "INVOKEKIND");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IPersistFile", "IPersistFile");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IRunningObjectTable", "IRunningObjectTable");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IStream", "IStream");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.ITypeComp", "ITypeComp");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.ITypeInfo", "ITypeInfo");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.ITypeInfo2", "ITypeInfo2");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.ITypeLib", "ITypeLib");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.ITypeLib2", "ITypeLib2");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.LIBFLAGS", "LIBFLAGS");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.PARAMDESC", "PARAMDESC");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.PARAMFLAG", "PARAMFLAG");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.STATSTG", "STATSTG");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.SYSKIND", "SYSKIND");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.TYPEATTR", "TYPEATTR");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.TYPEDESC", "TYPEDESC");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.TYPEFLAGS", "TYPEFLAGS");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.TYPEKIND", "TYPEKIND");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.TYPELIBATTR", "TYPELIBATTR");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.VARDESC", "VARDESC");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.VARDESC+DESCUNION", "VARDESC.DESCUNION");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.VARFLAGS", "VARFLAGS");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.VARKIND", "VARKIND");
            feature.AddKnownType("System.Runtime.InteropServices.Marshalling.AnsiStringMarshaller+ManagedToUnmanagedIn", "AnsiStringMarshaller.ManagedToUnmanagedIn");
            feature.AddKnownType("System.Runtime.InteropServices.Marshalling.ArrayMarshaller`2+ManagedToUnmanagedIn", "ArrayMarshaller`2'2.ManagedToUnmanagedIn'2");
            feature.AddKnownType("System.Runtime.InteropServices.Marshalling.BStrStringMarshaller+ManagedToUnmanagedIn", "BStrStringMarshaller.ManagedToUnmanagedIn");
            feature.AddKnownType("System.Runtime.InteropServices.Marshalling.MarshalUsingAttribute", "MarshalUsingAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.Marshalling.PointerArrayMarshaller`2+ManagedToUnmanagedIn", "PointerArrayMarshaller`2'2.ManagedToUnmanagedIn'2");
            feature.AddKnownType("System.Runtime.InteropServices.Marshalling.Utf8StringMarshaller+ManagedToUnmanagedIn", "Utf8StringMarshaller.ManagedToUnmanagedIn");
            feature.AddKnownType("System.Runtime.InteropServices.ObjectiveC.ObjectiveCTrackedTypeAttribute", "ObjectiveCTrackedTypeAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ObjectiveC.ObjectiveCMarshal+MessageSendFunction", "ObjectiveCMarshal.MessageSendFunction");
            feature.AddKnownType("System.Security.SecureString", "SecureString");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Runtime.InteropServices.JavaScript", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.JavaScript.JSImportAttribute", "JSImportAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.JavaScript.JSExportAttribute", "JSExportAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.JavaScript.JSMarshalAsAttribute`1", "JSMarshalAsAttribute`1'1");
            feature.AddKnownType("System.Runtime.InteropServices.JavaScript.JSType", "JSType");
            feature.AddKnownType("System.Runtime.InteropServices.JavaScript.JSType+Void", "JSType.Void");
            feature.AddKnownType("System.Runtime.InteropServices.JavaScript.JSType+Discard", "JSType.Discard");
            feature.AddKnownType("System.Runtime.InteropServices.JavaScript.JSType+Boolean", "JSType.Boolean");
            feature.AddKnownType("System.Runtime.InteropServices.JavaScript.JSType+Number", "JSType.Number");
            feature.AddKnownType("System.Runtime.InteropServices.JavaScript.JSType+BigInt", "JSType.BigInt");
            feature.AddKnownType("System.Runtime.InteropServices.JavaScript.JSType+Date", "JSType.Date");
            feature.AddKnownType("System.Runtime.InteropServices.JavaScript.JSType+String", "JSType.String");
            feature.AddKnownType("System.Runtime.InteropServices.JavaScript.JSType+Object", "JSType.Object");
            feature.AddKnownType("System.Runtime.InteropServices.JavaScript.JSType+Error", "JSType.Error");
            feature.AddKnownType("System.Runtime.InteropServices.JavaScript.JSType+MemoryView", "JSType.MemoryView");
            feature.AddKnownType("System.Runtime.InteropServices.JavaScript.JSType+Array`1", "JSType.Array`1'1");
            feature.AddKnownType("System.Runtime.InteropServices.JavaScript.JSType+Promise`1", "JSType.Promise`1'1");
            feature.AddKnownType("System.Runtime.InteropServices.JavaScript.JSType+Function", "JSType.Function");
            feature.AddKnownType("System.Runtime.InteropServices.JavaScript.JSType+Function`1", "JSType.Function`1'1");
            feature.AddKnownType("System.Runtime.InteropServices.JavaScript.JSType+Function`2", "JSType.Function`2'2");
            feature.AddKnownType("System.Runtime.InteropServices.JavaScript.JSType+Function`3", "JSType.Function`3'3");
            feature.AddKnownType("System.Runtime.InteropServices.JavaScript.JSType+Function`4", "JSType.Function`4'4");
            feature.AddKnownType("System.Runtime.InteropServices.JavaScript.JSType+Any", "JSType.Any");
            feature.AddKnownType("System.Runtime.InteropServices.JavaScript.JSObject", "JSObject");
            feature.AddKnownType("System.Runtime.InteropServices.JavaScript.JSException", "JSException");
            feature.AddKnownType("System.Runtime.InteropServices.JavaScript.JSFunctionBinding", "JSFunctionBinding");
            feature.AddKnownType("System.Runtime.InteropServices.JavaScript.JSMarshalerType", "JSMarshalerType");
            feature.AddKnownType("System.Runtime.InteropServices.JavaScript.JSMarshalerArgument", "JSMarshalerArgument");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Runtime.Intrinsics", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.IsUnmanagedAttribute", "IsUnmanagedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Runtime.Intrinsics.Vector128`1", "Vector128`1'1");
            feature.AddKnownType("System.Runtime.Intrinsics.Vector256`1", "Vector256`1'1");
            feature.AddKnownType("System.Runtime.Intrinsics.Vector64`1", "Vector64`1'1");
            feature.AddKnownType("System.Runtime.Intrinsics.Arm.AdvSimd", "AdvSimd");
            feature.AddKnownType("System.Runtime.Intrinsics.Arm.AdvSimd+Arm64", "AdvSimd.Arm64");
            feature.AddKnownType("System.Runtime.Intrinsics.Arm.Aes", "Aes");
            feature.AddKnownType("System.Runtime.Intrinsics.Arm.Aes+Arm64", "Aes.Arm64");
            feature.AddKnownType("System.Runtime.Intrinsics.Arm.ArmBase", "ArmBase");
            feature.AddKnownType("System.Runtime.Intrinsics.Arm.ArmBase+Arm64", "ArmBase.Arm64");
            feature.AddKnownType("System.Runtime.Intrinsics.Arm.Crc32", "Crc32");
            feature.AddKnownType("System.Runtime.Intrinsics.Arm.Crc32+Arm64", "Crc32.Arm64");
            feature.AddKnownType("System.Runtime.Intrinsics.Arm.Dp", "Dp");
            feature.AddKnownType("System.Runtime.Intrinsics.Arm.Dp+Arm64", "Dp.Arm64");
            feature.AddKnownType("System.Runtime.Intrinsics.Arm.Rdm", "Rdm");
            feature.AddKnownType("System.Runtime.Intrinsics.Arm.Rdm+Arm64", "Rdm.Arm64");
            feature.AddKnownType("System.Runtime.Intrinsics.Arm.Sha1", "Sha1");
            feature.AddKnownType("System.Runtime.Intrinsics.Arm.Sha1+Arm64", "Sha1.Arm64");
            feature.AddKnownType("System.Runtime.Intrinsics.Arm.Sha256", "Sha256");
            feature.AddKnownType("System.Runtime.Intrinsics.Arm.Sha256+Arm64", "Sha256.Arm64");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.Aes", "Aes");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.Aes+X64", "Aes.X64");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.Avx", "Avx");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.Avx+X64", "Avx.X64");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.Avx2", "Avx2");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.Avx2+X64", "Avx2.X64");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.AvxVnni", "AvxVnni");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.AvxVnni+X64", "AvxVnni.X64");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.Bmi1", "Bmi1");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.Bmi1+X64", "Bmi1.X64");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.Bmi2", "Bmi2");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.Bmi2+X64", "Bmi2.X64");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.FloatComparisonMode", "FloatComparisonMode");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.Fma", "Fma");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.Fma+X64", "Fma.X64");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.Lzcnt", "Lzcnt");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.Lzcnt+X64", "Lzcnt.X64");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.Pclmulqdq", "Pclmulqdq");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.Pclmulqdq+X64", "Pclmulqdq.X64");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.Popcnt", "Popcnt");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.Popcnt+X64", "Popcnt.X64");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.Sse", "Sse");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.Sse+X64", "Sse.X64");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.Sse2", "Sse2");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.Sse2+X64", "Sse2.X64");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.Sse3", "Sse3");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.Sse3+X64", "Sse3.X64");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.Sse41", "Sse41");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.Sse41+X64", "Sse41.X64");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.Sse42", "Sse42");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.Sse42+X64", "Sse42.X64");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.Ssse3", "Ssse3");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.Ssse3+X64", "Ssse3.X64");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.X86Base", "X86Base");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.X86Base+X64", "X86Base.X64");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.X86Serialize", "X86Serialize");
            feature.AddKnownType("System.Runtime.Intrinsics.X86.X86Serialize+X64", "X86Serialize.X64");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Runtime.Loader", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Reflection.Metadata.MetadataUpdateHandlerAttribute", "MetadataUpdateHandlerAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.CreateNewOnMetadataUpdateAttribute", "CreateNewOnMetadataUpdateAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.MetadataUpdateOriginalTypeAttribute", "MetadataUpdateOriginalTypeAttribute");
            feature.AddKnownType("System.Runtime.Loader.AssemblyDependencyResolver", "AssemblyDependencyResolver");
            feature.AddKnownType("System.Runtime.Loader.AssemblyLoadContext", "AssemblyLoadContext");
            feature.AddKnownType("System.Runtime.Loader.AssemblyLoadContext+ContextualReflectionScope", "AssemblyLoadContext.ContextualReflectionScope");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Runtime.Numerics", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Numerics.BigInteger", "BigInteger");
            feature.AddKnownType("System.Numerics.Complex", "Complex");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Runtime.Serialization.Formatters", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Runtime.Serialization.Formatter", "Formatter");
            feature.AddKnownType("System.Runtime.Serialization.FormatterConverter", "FormatterConverter");
            feature.AddKnownType("System.Runtime.Serialization.IFormatter", "IFormatter");
            feature.AddKnownType("System.Runtime.Serialization.ISerializationSurrogate", "ISerializationSurrogate");
            feature.AddKnownType("System.Runtime.Serialization.ISurrogateSelector", "ISurrogateSelector");
            feature.AddKnownType("System.Runtime.Serialization.ObjectIDGenerator", "ObjectIDGenerator");
            feature.AddKnownType("System.Runtime.Serialization.ObjectManager", "ObjectManager");
            feature.AddKnownType("System.Runtime.Serialization.SerializationBinder", "SerializationBinder");
            feature.AddKnownType("System.Runtime.Serialization.SerializationObjectManager", "SerializationObjectManager");
            feature.AddKnownType("System.Runtime.Serialization.SurrogateSelector", "SurrogateSelector");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.FormatterAssemblyStyle", "FormatterAssemblyStyle");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.FormatterTypeStyle", "FormatterTypeStyle");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.IFieldInfo", "IFieldInfo");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.TypeFilterLevel", "TypeFilterLevel");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryFormatter", "BinaryFormatter");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Runtime.Serialization.Json", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Runtime.Serialization.DateTimeFormat", "DateTimeFormat");
            feature.AddKnownType("System.Runtime.Serialization.EmitTypeInformation", "EmitTypeInformation");
            feature.AddKnownType("System.Runtime.Serialization.Json.DataContractJsonSerializer", "DataContractJsonSerializer");
            feature.AddKnownType("System.Runtime.Serialization.Json.DataContractJsonSerializerSettings", "DataContractJsonSerializerSettings");
            feature.AddKnownType("System.Runtime.Serialization.Json.IXmlJsonReaderInitializer", "IXmlJsonReaderInitializer");
            feature.AddKnownType("System.Runtime.Serialization.Json.IXmlJsonWriterInitializer", "IXmlJsonWriterInitializer");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Runtime.Serialization.Primitives", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Runtime.Serialization.CollectionDataContractAttribute", "CollectionDataContractAttribute");
            feature.AddKnownType("System.Runtime.Serialization.ContractNamespaceAttribute", "ContractNamespaceAttribute");
            feature.AddKnownType("System.Runtime.Serialization.DataContractAttribute", "DataContractAttribute");
            feature.AddKnownType("System.Runtime.Serialization.DataMemberAttribute", "DataMemberAttribute");
            feature.AddKnownType("System.Runtime.Serialization.EnumMemberAttribute", "EnumMemberAttribute");
            feature.AddKnownType("System.Runtime.Serialization.IgnoreDataMemberAttribute", "IgnoreDataMemberAttribute");
            feature.AddKnownType("System.Runtime.Serialization.InvalidDataContractException", "InvalidDataContractException");
            feature.AddKnownType("System.Runtime.Serialization.ISerializationSurrogateProvider", "ISerializationSurrogateProvider");
            feature.AddKnownType("System.Runtime.Serialization.ISerializationSurrogateProvider2", "ISerializationSurrogateProvider2");
            feature.AddKnownType("System.Runtime.Serialization.KnownTypeAttribute", "KnownTypeAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Runtime.Serialization.Xml", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Runtime.Serialization.DataContractResolver", "DataContractResolver");
            feature.AddKnownType("System.Runtime.Serialization.DataContractSerializer", "DataContractSerializer");
            feature.AddKnownType("System.Runtime.Serialization.DataContractSerializerSettings", "DataContractSerializerSettings");
            feature.AddKnownType("System.Runtime.Serialization.ExportOptions", "ExportOptions");
            feature.AddKnownType("System.Runtime.Serialization.ExtensionDataObject", "ExtensionDataObject");
            feature.AddKnownType("System.Runtime.Serialization.IExtensibleDataObject", "IExtensibleDataObject");
            feature.AddKnownType("System.Runtime.Serialization.XmlObjectSerializer", "XmlObjectSerializer");
            feature.AddKnownType("System.Runtime.Serialization.XsdDataContractExporter", "XsdDataContractExporter");
            feature.AddKnownType("System.Runtime.Serialization.DataContracts.DataContract", "DataContract");
            feature.AddKnownType("System.Runtime.Serialization.DataContracts.DataContractCriticalHelper", "DataContractCriticalHelper");
            feature.AddKnownType("System.Runtime.Serialization.DataContracts.DataContractSet", "DataContractSet");
            feature.AddKnownType("System.Runtime.Serialization.DataContracts.DataMember", "DataMember");
            feature.AddKnownType("System.Runtime.Serialization.DataContracts.XmlDataContract", "XmlDataContract");
            feature.AddKnownType("System.Xml.IFragmentCapableXmlDictionaryWriter", "IFragmentCapableXmlDictionaryWriter");
            feature.AddKnownType("System.Xml.IStreamProvider", "IStreamProvider");
            feature.AddKnownType("System.Xml.IXmlBinaryReaderInitializer", "IXmlBinaryReaderInitializer");
            feature.AddKnownType("System.Xml.IXmlBinaryWriterInitializer", "IXmlBinaryWriterInitializer");
            feature.AddKnownType("System.Xml.IXmlDictionary", "IXmlDictionary");
            feature.AddKnownType("System.Xml.IXmlTextReaderInitializer", "IXmlTextReaderInitializer");
            feature.AddKnownType("System.Xml.IXmlTextWriterInitializer", "IXmlTextWriterInitializer");
            feature.AddKnownType("System.Xml.UniqueId", "UniqueId");
            feature.AddKnownType("System.Xml.XmlBinaryReaderSession", "XmlBinaryReaderSession");
            feature.AddKnownType("System.Xml.XmlBinaryWriterSession", "XmlBinaryWriterSession");
            feature.AddKnownType("System.Xml.XmlDictionary", "XmlDictionary");
            feature.AddKnownType("System.Xml.XmlDictionaryReader", "XmlDictionaryReader");
            feature.AddKnownType("System.Xml.XmlDictionaryReaderQuotas", "XmlDictionaryReaderQuotas");
            feature.AddKnownType("System.Xml.XmlDictionaryReaderQuotaTypes", "XmlDictionaryReaderQuotaTypes");
            feature.AddKnownType("System.Xml.XmlDictionaryString", "XmlDictionaryString");
            feature.AddKnownType("System.Xml.XmlDictionaryWriter", "XmlDictionaryWriter");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Security.AccessControl", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Security.AccessControl.AccessControlActions", "AccessControlActions");
            feature.AddKnownType("System.Security.AccessControl.AccessControlModification", "AccessControlModification");
            feature.AddKnownType("System.Security.AccessControl.AccessControlSections", "AccessControlSections");
            feature.AddKnownType("System.Security.AccessControl.AccessControlType", "AccessControlType");
            feature.AddKnownType("System.Security.AccessControl.AccessRule", "AccessRule");
            feature.AddKnownType("System.Security.AccessControl.AccessRule`1", "AccessRule`1'1");
            feature.AddKnownType("System.Security.AccessControl.AceEnumerator", "AceEnumerator");
            feature.AddKnownType("System.Security.AccessControl.AceFlags", "AceFlags");
            feature.AddKnownType("System.Security.AccessControl.AceQualifier", "AceQualifier");
            feature.AddKnownType("System.Security.AccessControl.AceType", "AceType");
            feature.AddKnownType("System.Security.AccessControl.AuditFlags", "AuditFlags");
            feature.AddKnownType("System.Security.AccessControl.AuditRule", "AuditRule");
            feature.AddKnownType("System.Security.AccessControl.AuditRule`1", "AuditRule`1'1");
            feature.AddKnownType("System.Security.AccessControl.AuthorizationRule", "AuthorizationRule");
            feature.AddKnownType("System.Security.AccessControl.AuthorizationRuleCollection", "AuthorizationRuleCollection");
            feature.AddKnownType("System.Security.AccessControl.CommonAce", "CommonAce");
            feature.AddKnownType("System.Security.AccessControl.CommonAcl", "CommonAcl");
            feature.AddKnownType("System.Security.AccessControl.CommonObjectSecurity", "CommonObjectSecurity");
            feature.AddKnownType("System.Security.AccessControl.CommonSecurityDescriptor", "CommonSecurityDescriptor");
            feature.AddKnownType("System.Security.AccessControl.CompoundAce", "CompoundAce");
            feature.AddKnownType("System.Security.AccessControl.CompoundAceType", "CompoundAceType");
            feature.AddKnownType("System.Security.AccessControl.ControlFlags", "ControlFlags");
            feature.AddKnownType("System.Security.AccessControl.CustomAce", "CustomAce");
            feature.AddKnownType("System.Security.AccessControl.DiscretionaryAcl", "DiscretionaryAcl");
            feature.AddKnownType("System.Security.AccessControl.GenericAce", "GenericAce");
            feature.AddKnownType("System.Security.AccessControl.GenericAcl", "GenericAcl");
            feature.AddKnownType("System.Security.AccessControl.GenericSecurityDescriptor", "GenericSecurityDescriptor");
            feature.AddKnownType("System.Security.AccessControl.InheritanceFlags", "InheritanceFlags");
            feature.AddKnownType("System.Security.AccessControl.KnownAce", "KnownAce");
            feature.AddKnownType("System.Security.AccessControl.NativeObjectSecurity", "NativeObjectSecurity");
            feature.AddKnownType("System.Security.AccessControl.ObjectAccessRule", "ObjectAccessRule");
            feature.AddKnownType("System.Security.AccessControl.ObjectAce", "ObjectAce");
            feature.AddKnownType("System.Security.AccessControl.ObjectAceFlags", "ObjectAceFlags");
            feature.AddKnownType("System.Security.AccessControl.ObjectAuditRule", "ObjectAuditRule");
            feature.AddKnownType("System.Security.AccessControl.ObjectSecurity", "ObjectSecurity");
            feature.AddKnownType("System.Security.AccessControl.ObjectSecurity`1", "ObjectSecurity`1'1");
            feature.AddKnownType("System.Security.AccessControl.PrivilegeNotHeldException", "PrivilegeNotHeldException");
            feature.AddKnownType("System.Security.AccessControl.PropagationFlags", "PropagationFlags");
            feature.AddKnownType("System.Security.AccessControl.QualifiedAce", "QualifiedAce");
            feature.AddKnownType("System.Security.AccessControl.RawAcl", "RawAcl");
            feature.AddKnownType("System.Security.AccessControl.RawSecurityDescriptor", "RawSecurityDescriptor");
            feature.AddKnownType("System.Security.AccessControl.ResourceType", "ResourceType");
            feature.AddKnownType("System.Security.AccessControl.SecurityInfos", "SecurityInfos");
            feature.AddKnownType("System.Security.AccessControl.SystemAcl", "SystemAcl");
            feature.AddKnownType("System.Security.Policy.Evidence", "Evidence");
            feature.AddKnownType("System.Security.Policy.EvidenceBase", "EvidenceBase");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Security.Claims", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Security.Claims.Claim", "Claim");
            feature.AddKnownType("System.Security.Claims.ClaimsIdentity", "ClaimsIdentity");
            feature.AddKnownType("System.Security.Claims.ClaimsPrincipal", "ClaimsPrincipal");
            feature.AddKnownType("System.Security.Principal.GenericIdentity", "GenericIdentity");
            feature.AddKnownType("System.Security.Principal.GenericPrincipal", "GenericPrincipal");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Security.Cryptography", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeNCryptHandle,System.Security.Cryptography", "Microsoft.Win32.SafeHandles.SafeNCryptHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Security.Cryptography", "Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle,System.Security.Cryptography", "Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle,System.Security.Cryptography", "Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeX509ChainHandle,System.Security.Cryptography", "Microsoft.Win32.SafeHandles.SafeX509ChainHandle");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Security.Cryptography.Aes", "Aes");
            feature.AddKnownType("System.Security.Cryptography.AesCcm", "AesCcm");
            feature.AddKnownType("System.Security.Cryptography.AesCng", "AesCng");
            feature.AddKnownType("System.Security.Cryptography.AesCryptoServiceProvider", "AesCryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.AesGcm", "AesGcm");
            feature.AddKnownType("System.Security.Cryptography.AesManaged", "AesManaged");
            feature.AddKnownType("System.Security.Cryptography.AsnEncodedData", "AsnEncodedData");
            feature.AddKnownType("System.Security.Cryptography.AsnEncodedDataCollection", "AsnEncodedDataCollection");
            feature.AddKnownType("System.Security.Cryptography.AsnEncodedDataEnumerator", "AsnEncodedDataEnumerator");
            feature.AddKnownType("System.Security.Cryptography.AsymmetricAlgorithm", "AsymmetricAlgorithm");
            feature.AddKnownType("System.Security.Cryptography.AsymmetricKeyExchangeDeformatter", "AsymmetricKeyExchangeDeformatter");
            feature.AddKnownType("System.Security.Cryptography.AsymmetricKeyExchangeFormatter", "AsymmetricKeyExchangeFormatter");
            feature.AddKnownType("System.Security.Cryptography.AsymmetricSignatureDeformatter", "AsymmetricSignatureDeformatter");
            feature.AddKnownType("System.Security.Cryptography.AsymmetricSignatureFormatter", "AsymmetricSignatureFormatter");
            feature.AddKnownType("System.Security.Cryptography.ChaCha20Poly1305", "ChaCha20Poly1305");
            feature.AddKnownType("System.Security.Cryptography.CipherMode", "CipherMode");
            feature.AddKnownType("System.Security.Cryptography.CngAlgorithm", "CngAlgorithm");
            feature.AddKnownType("System.Security.Cryptography.CngAlgorithmGroup", "CngAlgorithmGroup");
            feature.AddKnownType("System.Security.Cryptography.CngExportPolicies", "CngExportPolicies");
            feature.AddKnownType("System.Security.Cryptography.CngKey", "CngKey");
            feature.AddKnownType("System.Security.Cryptography.CngKeyBlobFormat", "CngKeyBlobFormat");
            feature.AddKnownType("System.Security.Cryptography.CngKeyCreationOptions", "CngKeyCreationOptions");
            feature.AddKnownType("System.Security.Cryptography.CngKeyCreationParameters", "CngKeyCreationParameters");
            feature.AddKnownType("System.Security.Cryptography.CngKeyHandleOpenOptions", "CngKeyHandleOpenOptions");
            feature.AddKnownType("System.Security.Cryptography.CngKeyOpenOptions", "CngKeyOpenOptions");
            feature.AddKnownType("System.Security.Cryptography.CngKeyUsages", "CngKeyUsages");
            feature.AddKnownType("System.Security.Cryptography.CngProperty", "CngProperty");
            feature.AddKnownType("System.Security.Cryptography.CngPropertyCollection", "CngPropertyCollection");
            feature.AddKnownType("System.Security.Cryptography.CngPropertyOptions", "CngPropertyOptions");
            feature.AddKnownType("System.Security.Cryptography.CngProvider", "CngProvider");
            feature.AddKnownType("System.Security.Cryptography.CngUIPolicy", "CngUIPolicy");
            feature.AddKnownType("System.Security.Cryptography.CngUIProtectionLevels", "CngUIProtectionLevels");
            feature.AddKnownType("System.Security.Cryptography.CryptoConfig", "CryptoConfig");
            feature.AddKnownType("System.Security.Cryptography.CryptographicUnexpectedOperationException", "CryptographicUnexpectedOperationException");
            feature.AddKnownType("System.Security.Cryptography.CryptoStream", "CryptoStream");
            feature.AddKnownType("System.Security.Cryptography.CryptoStreamMode", "CryptoStreamMode");
            feature.AddKnownType("System.Security.Cryptography.CspKeyContainerInfo", "CspKeyContainerInfo");
            feature.AddKnownType("System.Security.Cryptography.CspParameters", "CspParameters");
            feature.AddKnownType("System.Security.Cryptography.CspProviderFlags", "CspProviderFlags");
            feature.AddKnownType("System.Security.Cryptography.DeriveBytes", "DeriveBytes");
            feature.AddKnownType("System.Security.Cryptography.DES", "DES");
            feature.AddKnownType("System.Security.Cryptography.DESCryptoServiceProvider", "DESCryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.DSA", "DSA");
            feature.AddKnownType("System.Security.Cryptography.DSACng", "DSACng");
            feature.AddKnownType("System.Security.Cryptography.DSACryptoServiceProvider", "DSACryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.DSAOpenSsl", "DSAOpenSsl");
            feature.AddKnownType("System.Security.Cryptography.DSAParameters", "DSAParameters");
            feature.AddKnownType("System.Security.Cryptography.DSASignatureDeformatter", "DSASignatureDeformatter");
            feature.AddKnownType("System.Security.Cryptography.DSASignatureFormat", "DSASignatureFormat");
            feature.AddKnownType("System.Security.Cryptography.DSASignatureFormatter", "DSASignatureFormatter");
            feature.AddKnownType("System.Security.Cryptography.ECAlgorithm", "ECAlgorithm");
            feature.AddKnownType("System.Security.Cryptography.ECCurve", "ECCurve");
            feature.AddKnownType("System.Security.Cryptography.ECCurve+ECCurveType", "ECCurve.ECCurveType");
            feature.AddKnownType("System.Security.Cryptography.ECDiffieHellman", "ECDiffieHellman");
            feature.AddKnownType("System.Security.Cryptography.ECDiffieHellmanCng", "ECDiffieHellmanCng");
            feature.AddKnownType("System.Security.Cryptography.ECDiffieHellmanCngPublicKey", "ECDiffieHellmanCngPublicKey");
            feature.AddKnownType("System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction", "ECDiffieHellmanKeyDerivationFunction");
            feature.AddKnownType("System.Security.Cryptography.ECDiffieHellmanOpenSsl", "ECDiffieHellmanOpenSsl");
            feature.AddKnownType("System.Security.Cryptography.ECDiffieHellmanPublicKey", "ECDiffieHellmanPublicKey");
            feature.AddKnownType("System.Security.Cryptography.ECDsa", "ECDsa");
            feature.AddKnownType("System.Security.Cryptography.ECDsaCng", "ECDsaCng");
            feature.AddKnownType("System.Security.Cryptography.ECDsaOpenSsl", "ECDsaOpenSsl");
            feature.AddKnownType("System.Security.Cryptography.ECKeyXmlFormat", "ECKeyXmlFormat");
            feature.AddKnownType("System.Security.Cryptography.ECParameters", "ECParameters");
            feature.AddKnownType("System.Security.Cryptography.ECPoint", "ECPoint");
            feature.AddKnownType("System.Security.Cryptography.FromBase64Transform", "FromBase64Transform");
            feature.AddKnownType("System.Security.Cryptography.FromBase64TransformMode", "FromBase64TransformMode");
            feature.AddKnownType("System.Security.Cryptography.HashAlgorithm", "HashAlgorithm");
            feature.AddKnownType("System.Security.Cryptography.HashAlgorithmName", "HashAlgorithmName");
            feature.AddKnownType("System.Security.Cryptography.HMAC", "HMAC");
            feature.AddKnownType("System.Security.Cryptography.HMACMD5", "HMACMD5");
            feature.AddKnownType("System.Security.Cryptography.HMACSHA1", "HMACSHA1");
            feature.AddKnownType("System.Security.Cryptography.HMACSHA256", "HMACSHA256");
            feature.AddKnownType("System.Security.Cryptography.HMACSHA384", "HMACSHA384");
            feature.AddKnownType("System.Security.Cryptography.HMACSHA512", "HMACSHA512");
            feature.AddKnownType("System.Security.Cryptography.ICryptoTransform", "ICryptoTransform");
            feature.AddKnownType("System.Security.Cryptography.ICspAsymmetricAlgorithm", "ICspAsymmetricAlgorithm");
            feature.AddKnownType("System.Security.Cryptography.IncrementalHash", "IncrementalHash");
            feature.AddKnownType("System.Security.Cryptography.KeyedHashAlgorithm", "KeyedHashAlgorithm");
            feature.AddKnownType("System.Security.Cryptography.KeyNumber", "KeyNumber");
            feature.AddKnownType("System.Security.Cryptography.KeySizes", "KeySizes");
            feature.AddKnownType("System.Security.Cryptography.MaskGenerationMethod", "MaskGenerationMethod");
            feature.AddKnownType("System.Security.Cryptography.MD5", "MD5");
            feature.AddKnownType("System.Security.Cryptography.MD5CryptoServiceProvider", "MD5CryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.Oid", "Oid");
            feature.AddKnownType("System.Security.Cryptography.OidCollection", "OidCollection");
            feature.AddKnownType("System.Security.Cryptography.OidEnumerator", "OidEnumerator");
            feature.AddKnownType("System.Security.Cryptography.OidGroup", "OidGroup");
            feature.AddKnownType("System.Security.Cryptography.PaddingMode", "PaddingMode");
            feature.AddKnownType("System.Security.Cryptography.PasswordDeriveBytes", "PasswordDeriveBytes");
            feature.AddKnownType("System.Security.Cryptography.PbeEncryptionAlgorithm", "PbeEncryptionAlgorithm");
            feature.AddKnownType("System.Security.Cryptography.PbeParameters", "PbeParameters");
            feature.AddKnownType("System.Security.Cryptography.PemFields", "PemFields");
            feature.AddKnownType("System.Security.Cryptography.PKCS1MaskGenerationMethod", "PKCS1MaskGenerationMethod");
            feature.AddKnownType("System.Security.Cryptography.RandomNumberGenerator", "RandomNumberGenerator");
            feature.AddKnownType("System.Security.Cryptography.RC2", "RC2");
            feature.AddKnownType("System.Security.Cryptography.RC2CryptoServiceProvider", "RC2CryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.Rfc2898DeriveBytes", "Rfc2898DeriveBytes");
            feature.AddKnownType("System.Security.Cryptography.Rijndael", "Rijndael");
            feature.AddKnownType("System.Security.Cryptography.RijndaelManaged", "RijndaelManaged");
            feature.AddKnownType("System.Security.Cryptography.RNGCryptoServiceProvider", "RNGCryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.RSA", "RSA");
            feature.AddKnownType("System.Security.Cryptography.RSACng", "RSACng");
            feature.AddKnownType("System.Security.Cryptography.RSACryptoServiceProvider", "RSACryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.RSAEncryptionPadding", "RSAEncryptionPadding");
            feature.AddKnownType("System.Security.Cryptography.RSAEncryptionPaddingMode", "RSAEncryptionPaddingMode");
            feature.AddKnownType("System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter", "RSAOAEPKeyExchangeDeformatter");
            feature.AddKnownType("System.Security.Cryptography.RSAOAEPKeyExchangeFormatter", "RSAOAEPKeyExchangeFormatter");
            feature.AddKnownType("System.Security.Cryptography.RSAOpenSsl", "RSAOpenSsl");
            feature.AddKnownType("System.Security.Cryptography.RSAParameters", "RSAParameters");
            feature.AddKnownType("System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatter", "RSAPKCS1KeyExchangeDeformatter");
            feature.AddKnownType("System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter", "RSAPKCS1KeyExchangeFormatter");
            feature.AddKnownType("System.Security.Cryptography.RSAPKCS1SignatureDeformatter", "RSAPKCS1SignatureDeformatter");
            feature.AddKnownType("System.Security.Cryptography.RSAPKCS1SignatureFormatter", "RSAPKCS1SignatureFormatter");
            feature.AddKnownType("System.Security.Cryptography.RSASignaturePadding", "RSASignaturePadding");
            feature.AddKnownType("System.Security.Cryptography.RSASignaturePaddingMode", "RSASignaturePaddingMode");
            feature.AddKnownType("System.Security.Cryptography.SafeEvpPKeyHandle", "SafeEvpPKeyHandle");
            feature.AddKnownType("System.Security.Cryptography.SHA1", "SHA1");
            feature.AddKnownType("System.Security.Cryptography.SHA1CryptoServiceProvider", "SHA1CryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.SHA1Managed", "SHA1Managed");
            feature.AddKnownType("System.Security.Cryptography.SHA256", "SHA256");
            feature.AddKnownType("System.Security.Cryptography.SHA256CryptoServiceProvider", "SHA256CryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.SHA256Managed", "SHA256Managed");
            feature.AddKnownType("System.Security.Cryptography.SHA384", "SHA384");
            feature.AddKnownType("System.Security.Cryptography.SHA384CryptoServiceProvider", "SHA384CryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.SHA384Managed", "SHA384Managed");
            feature.AddKnownType("System.Security.Cryptography.SHA512", "SHA512");
            feature.AddKnownType("System.Security.Cryptography.SHA512CryptoServiceProvider", "SHA512CryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.SHA512Managed", "SHA512Managed");
            feature.AddKnownType("System.Security.Cryptography.SignatureDescription", "SignatureDescription");
            feature.AddKnownType("System.Security.Cryptography.SymmetricAlgorithm", "SymmetricAlgorithm");
            feature.AddKnownType("System.Security.Cryptography.ToBase64Transform", "ToBase64Transform");
            feature.AddKnownType("System.Security.Cryptography.TripleDES", "TripleDES");
            feature.AddKnownType("System.Security.Cryptography.TripleDESCng", "TripleDESCng");
            feature.AddKnownType("System.Security.Cryptography.TripleDESCryptoServiceProvider", "TripleDESCryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.CertificateRequest", "CertificateRequest");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.CertificateRequestLoadOptions", "CertificateRequestLoadOptions");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.CertificateRevocationListBuilder", "CertificateRevocationListBuilder");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.OpenFlags", "OpenFlags");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.PublicKey", "PublicKey");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.StoreLocation", "StoreLocation");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.StoreName", "StoreName");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.SubjectAlternativeNameBuilder", "SubjectAlternativeNameBuilder");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X500DistinguishedName", "X500DistinguishedName");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X500DistinguishedNameBuilder", "X500DistinguishedNameBuilder");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags", "X500DistinguishedNameFlags");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X500RelativeDistinguishedName", "X500RelativeDistinguishedName");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509AuthorityInformationAccessExtension", "X509AuthorityInformationAccessExtension");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509AuthorityKeyIdentifierExtension", "X509AuthorityKeyIdentifierExtension");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension", "X509BasicConstraintsExtension");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509Certificate", "X509Certificate");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509Certificate2", "X509Certificate2");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509Certificate2Collection", "X509Certificate2Collection");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator", "X509Certificate2Enumerator");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509CertificateCollection", "X509CertificateCollection");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509CertificateCollection+X509CertificateEnumerator", "X509CertificateCollection.X509CertificateEnumerator");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509Chain", "X509Chain");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509ChainElement", "X509ChainElement");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509ChainElementCollection", "X509ChainElementCollection");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator", "X509ChainElementEnumerator");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509ChainPolicy", "X509ChainPolicy");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509ChainStatus", "X509ChainStatus");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509ChainStatusFlags", "X509ChainStatusFlags");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509ChainTrustMode", "X509ChainTrustMode");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509ContentType", "X509ContentType");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension", "X509EnhancedKeyUsageExtension");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509Extension", "X509Extension");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509ExtensionCollection", "X509ExtensionCollection");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator", "X509ExtensionEnumerator");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509FindType", "X509FindType");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509IncludeOption", "X509IncludeOption");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509KeyStorageFlags", "X509KeyStorageFlags");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509KeyUsageExtension", "X509KeyUsageExtension");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509KeyUsageFlags", "X509KeyUsageFlags");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509NameType", "X509NameType");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509RevocationFlag", "X509RevocationFlag");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509RevocationMode", "X509RevocationMode");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509RevocationReason", "X509RevocationReason");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509SignatureGenerator", "X509SignatureGenerator");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509Store", "X509Store");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509SubjectAlternativeNameExtension", "X509SubjectAlternativeNameExtension");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension", "X509SubjectKeyIdentifierExtension");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm", "X509SubjectKeyIdentifierHashAlgorithm");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509VerificationFlags", "X509VerificationFlags");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Security.Principal.Windows", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Security.Principal.Windows", "Microsoft.Win32.SafeHandles.SafeAccessTokenHandle");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Security.Principal.IdentityNotMappedException", "IdentityNotMappedException");
            feature.AddKnownType("System.Security.Principal.IdentityReference", "IdentityReference");
            feature.AddKnownType("System.Security.Principal.IdentityReferenceCollection", "IdentityReferenceCollection");
            feature.AddKnownType("System.Security.Principal.NTAccount", "NTAccount");
            feature.AddKnownType("System.Security.Principal.SecurityIdentifier", "SecurityIdentifier");
            feature.AddKnownType("System.Security.Principal.TokenAccessLevels", "TokenAccessLevels");
            feature.AddKnownType("System.Security.Principal.WellKnownSidType", "WellKnownSidType");
            feature.AddKnownType("System.Security.Principal.WindowsAccountType", "WindowsAccountType");
            feature.AddKnownType("System.Security.Principal.WindowsBuiltInRole", "WindowsBuiltInRole");
            feature.AddKnownType("System.Security.Principal.WindowsIdentity", "WindowsIdentity");
            feature.AddKnownType("System.Security.Principal.WindowsPrincipal", "WindowsPrincipal");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Text.Encoding.CodePages", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Text.CodePagesEncodingProvider", "CodePagesEncodingProvider");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Text.Encoding.Extensions", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Text.ASCIIEncoding", "ASCIIEncoding");
            feature.AddKnownType("System.Text.UnicodeEncoding", "UnicodeEncoding");
            feature.AddKnownType("System.Text.UTF32Encoding", "UTF32Encoding");
            feature.AddKnownType("System.Text.UTF7Encoding", "UTF7Encoding");
            feature.AddKnownType("System.Text.UTF8Encoding", "UTF8Encoding");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Text.Encodings.Web", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Text.Encodings.Web.HtmlEncoder", "HtmlEncoder");
            feature.AddKnownType("System.Text.Encodings.Web.JavaScriptEncoder", "JavaScriptEncoder");
            feature.AddKnownType("System.Text.Encodings.Web.TextEncoder", "TextEncoder");
            feature.AddKnownType("System.Text.Encodings.Web.TextEncoderSettings", "TextEncoderSettings");
            feature.AddKnownType("System.Text.Encodings.Web.UrlEncoder", "UrlEncoder");
            feature.AddKnownType("System.Text.Unicode.UnicodeRange", "UnicodeRange");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Text.Json", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Text.Json.JsonCommentHandling", "JsonCommentHandling");
            feature.AddKnownType("System.Text.Json.JsonDocument", "JsonDocument");
            feature.AddKnownType("System.Text.Json.JsonDocumentOptions", "JsonDocumentOptions");
            feature.AddKnownType("System.Text.Json.JsonElement", "JsonElement");
            feature.AddKnownType("System.Text.Json.JsonElement+ArrayEnumerator", "JsonElement.ArrayEnumerator");
            feature.AddKnownType("System.Text.Json.JsonElement+ObjectEnumerator", "JsonElement.ObjectEnumerator");
            feature.AddKnownType("System.Text.Json.JsonEncodedText", "JsonEncodedText");
            feature.AddKnownType("System.Text.Json.JsonException", "JsonException");
            feature.AddKnownType("System.Text.Json.JsonNamingPolicy", "JsonNamingPolicy");
            feature.AddKnownType("System.Text.Json.JsonProperty", "JsonProperty");
            feature.AddKnownType("System.Text.Json.JsonReaderOptions", "JsonReaderOptions");
            feature.AddKnownType("System.Text.Json.JsonReaderState", "JsonReaderState");
            feature.AddKnownType("System.Text.Json.JsonSerializerDefaults", "JsonSerializerDefaults");
            feature.AddKnownType("System.Text.Json.JsonSerializerOptions", "JsonSerializerOptions");
            feature.AddKnownType("System.Text.Json.JsonTokenType", "JsonTokenType");
            feature.AddKnownType("System.Text.Json.JsonValueKind", "JsonValueKind");
            feature.AddKnownType("System.Text.Json.JsonWriterOptions", "JsonWriterOptions");
            feature.AddKnownType("System.Text.Json.Utf8JsonReader", "Utf8JsonReader");
            feature.AddKnownType("System.Text.Json.Utf8JsonWriter", "Utf8JsonWriter");
            feature.AddKnownType("System.Text.Json.Nodes.JsonArray", "JsonArray");
            feature.AddKnownType("System.Text.Json.Nodes.JsonNode", "JsonNode");
            feature.AddKnownType("System.Text.Json.Nodes.JsonNodeOptions", "JsonNodeOptions");
            feature.AddKnownType("System.Text.Json.Nodes.JsonObject", "JsonObject");
            feature.AddKnownType("System.Text.Json.Nodes.JsonValue", "JsonValue");
            feature.AddKnownType("System.Text.Json.Serialization.IJsonOnDeserialized", "IJsonOnDeserialized");
            feature.AddKnownType("System.Text.Json.Serialization.IJsonOnDeserializing", "IJsonOnDeserializing");
            feature.AddKnownType("System.Text.Json.Serialization.IJsonOnSerialized", "IJsonOnSerialized");
            feature.AddKnownType("System.Text.Json.Serialization.IJsonOnSerializing", "IJsonOnSerializing");
            feature.AddKnownType("System.Text.Json.Serialization.JsonAttribute", "JsonAttribute");
            feature.AddKnownType("System.Text.Json.Serialization.JsonConstructorAttribute", "JsonConstructorAttribute");
            feature.AddKnownType("System.Text.Json.Serialization.JsonConverter", "JsonConverter");
            feature.AddKnownType("System.Text.Json.Serialization.JsonConverter`1", "JsonConverter`1'1");
            feature.AddKnownType("System.Text.Json.Serialization.JsonConverterAttribute", "JsonConverterAttribute");
            feature.AddKnownType("System.Text.Json.Serialization.JsonConverterFactory", "JsonConverterFactory");
            feature.AddKnownType("System.Text.Json.Serialization.JsonDerivedTypeAttribute", "JsonDerivedTypeAttribute");
            feature.AddKnownType("System.Text.Json.Serialization.JsonExtensionDataAttribute", "JsonExtensionDataAttribute");
            feature.AddKnownType("System.Text.Json.Serialization.JsonIgnoreAttribute", "JsonIgnoreAttribute");
            feature.AddKnownType("System.Text.Json.Serialization.JsonIgnoreCondition", "JsonIgnoreCondition");
            feature.AddKnownType("System.Text.Json.Serialization.JsonIncludeAttribute", "JsonIncludeAttribute");
            feature.AddKnownType("System.Text.Json.Serialization.JsonKnownNamingPolicy", "JsonKnownNamingPolicy");
            feature.AddKnownType("System.Text.Json.Serialization.JsonNumberHandling", "JsonNumberHandling");
            feature.AddKnownType("System.Text.Json.Serialization.JsonNumberHandlingAttribute", "JsonNumberHandlingAttribute");
            feature.AddKnownType("System.Text.Json.Serialization.JsonPolymorphicAttribute", "JsonPolymorphicAttribute");
            feature.AddKnownType("System.Text.Json.Serialization.JsonPropertyNameAttribute", "JsonPropertyNameAttribute");
            feature.AddKnownType("System.Text.Json.Serialization.JsonPropertyOrderAttribute", "JsonPropertyOrderAttribute");
            feature.AddKnownType("System.Text.Json.Serialization.JsonRequiredAttribute", "JsonRequiredAttribute");
            feature.AddKnownType("System.Text.Json.Serialization.JsonSerializableAttribute", "JsonSerializableAttribute");
            feature.AddKnownType("System.Text.Json.Serialization.JsonSerializerContext", "JsonSerializerContext");
            feature.AddKnownType("System.Text.Json.Serialization.JsonSourceGenerationMode", "JsonSourceGenerationMode");
            feature.AddKnownType("System.Text.Json.Serialization.JsonSourceGenerationOptionsAttribute", "JsonSourceGenerationOptionsAttribute");
            feature.AddKnownType("System.Text.Json.Serialization.JsonStringEnumConverter", "JsonStringEnumConverter");
            feature.AddKnownType("System.Text.Json.Serialization.JsonUnknownDerivedTypeHandling", "JsonUnknownDerivedTypeHandling");
            feature.AddKnownType("System.Text.Json.Serialization.JsonUnknownTypeHandling", "JsonUnknownTypeHandling");
            feature.AddKnownType("System.Text.Json.Serialization.ReferenceHandler", "ReferenceHandler");
            feature.AddKnownType("System.Text.Json.Serialization.ReferenceHandler`1", "ReferenceHandler`1'1");
            feature.AddKnownType("System.Text.Json.Serialization.ReferenceResolver", "ReferenceResolver");
            feature.AddKnownType("System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver", "DefaultJsonTypeInfoResolver");
            feature.AddKnownType("System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver", "IJsonTypeInfoResolver");
            feature.AddKnownType("System.Text.Json.Serialization.Metadata.JsonCollectionInfoValues`1", "JsonCollectionInfoValues`1'1");
            feature.AddKnownType("System.Text.Json.Serialization.Metadata.JsonDerivedType", "JsonDerivedType");
            feature.AddKnownType("System.Text.Json.Serialization.Metadata.JsonObjectInfoValues`1", "JsonObjectInfoValues`1'1");
            feature.AddKnownType("System.Text.Json.Serialization.Metadata.JsonParameterInfoValues", "JsonParameterInfoValues");
            feature.AddKnownType("System.Text.Json.Serialization.Metadata.JsonPolymorphismOptions", "JsonPolymorphismOptions");
            feature.AddKnownType("System.Text.Json.Serialization.Metadata.JsonPropertyInfo", "JsonPropertyInfo");
            feature.AddKnownType("System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues`1", "JsonPropertyInfoValues`1'1");
            feature.AddKnownType("System.Text.Json.Serialization.Metadata.JsonTypeInfo", "JsonTypeInfo");
            feature.AddKnownType("System.Text.Json.Serialization.Metadata.JsonTypeInfo`1", "JsonTypeInfo`1'1");
            feature.AddKnownType("System.Text.Json.Serialization.Metadata.JsonTypeInfoKind", "JsonTypeInfoKind");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Text.RegularExpressions", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Text.RegularExpressions.Capture", "Capture");
            feature.AddKnownType("System.Text.RegularExpressions.CaptureCollection", "CaptureCollection");
            feature.AddKnownType("System.Text.RegularExpressions.Group", "Group");
            feature.AddKnownType("System.Text.RegularExpressions.GroupCollection", "GroupCollection");
            feature.AddKnownType("System.Text.RegularExpressions.Match", "Match");
            feature.AddKnownType("System.Text.RegularExpressions.MatchCollection", "MatchCollection");
            feature.AddKnownType("System.Text.RegularExpressions.Regex", "Regex");
            feature.AddKnownType("System.Text.RegularExpressions.Regex+ValueMatchEnumerator", "Regex.ValueMatchEnumerator");
            feature.AddKnownType("System.Text.RegularExpressions.RegexCompilationInfo", "RegexCompilationInfo");
            feature.AddKnownType("System.Text.RegularExpressions.GeneratedRegexAttribute", "GeneratedRegexAttribute");
            feature.AddKnownType("System.Text.RegularExpressions.RegexMatchTimeoutException", "RegexMatchTimeoutException");
            feature.AddKnownType("System.Text.RegularExpressions.RegexOptions", "RegexOptions");
            feature.AddKnownType("System.Text.RegularExpressions.RegexParseError", "RegexParseError");
            feature.AddKnownType("System.Text.RegularExpressions.RegexParseException", "RegexParseException");
            feature.AddKnownType("System.Text.RegularExpressions.RegexRunner", "RegexRunner");
            feature.AddKnownType("System.Text.RegularExpressions.RegexRunnerFactory", "RegexRunnerFactory");
            feature.AddKnownType("System.Text.RegularExpressions.ValueMatch", "ValueMatch");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Threading.Channels", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Threading.Channels.BoundedChannelFullMode", "BoundedChannelFullMode");
            feature.AddKnownType("System.Threading.Channels.BoundedChannelOptions", "BoundedChannelOptions");
            feature.AddKnownType("System.Threading.Channels.Channel`1", "Channel`1'1");
            feature.AddKnownType("System.Threading.Channels.Channel`2", "Channel`2'2");
            feature.AddKnownType("System.Threading.Channels.ChannelClosedException", "ChannelClosedException");
            feature.AddKnownType("System.Threading.Channels.ChannelOptions", "ChannelOptions");
            feature.AddKnownType("System.Threading.Channels.ChannelReader`1", "ChannelReader`1'1");
            feature.AddKnownType("System.Threading.Channels.ChannelWriter`1", "ChannelWriter`1'1");
            feature.AddKnownType("System.Threading.Channels.UnboundedChannelOptions", "UnboundedChannelOptions");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Threading", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Threading.Barrier", "Barrier");
            feature.AddKnownType("System.Threading.BarrierPostPhaseException", "BarrierPostPhaseException");
            feature.AddKnownType("System.Threading.CountdownEvent", "CountdownEvent");
            feature.AddKnownType("System.Threading.HostExecutionContext", "HostExecutionContext");
            feature.AddKnownType("System.Threading.HostExecutionContextManager", "HostExecutionContextManager");
            feature.AddKnownType("System.Threading.LockCookie", "LockCookie");
            feature.AddKnownType("System.Threading.ReaderWriterLock", "ReaderWriterLock");
            feature.AddKnownType("System.Threading.AbandonedMutexException", "AbandonedMutexException");
            feature.AddKnownType("System.Threading.AsyncFlowControl", "AsyncFlowControl");
            feature.AddKnownType("System.Threading.AsyncLocalValueChangedArgs`1", "AsyncLocalValueChangedArgs`1'1");
            feature.AddKnownType("System.Threading.AsyncLocal`1", "AsyncLocal`1'1");
            feature.AddKnownType("System.Threading.AutoResetEvent", "AutoResetEvent");
            feature.AddKnownType("System.Threading.EventResetMode", "EventResetMode");
            feature.AddKnownType("System.Threading.EventWaitHandle", "EventWaitHandle");
            feature.AddKnownType("System.Threading.ExecutionContext", "ExecutionContext");
            feature.AddKnownType("System.Threading.LockRecursionException", "LockRecursionException");
            feature.AddKnownType("System.Threading.LockRecursionPolicy", "LockRecursionPolicy");
            feature.AddKnownType("System.Threading.ManualResetEvent", "ManualResetEvent");
            feature.AddKnownType("System.Threading.ManualResetEventSlim", "ManualResetEventSlim");
            feature.AddKnownType("System.Threading.Mutex", "Mutex");
            feature.AddKnownType("System.Threading.ReaderWriterLockSlim", "ReaderWriterLockSlim");
            feature.AddKnownType("System.Threading.Semaphore", "Semaphore");
            feature.AddKnownType("System.Threading.SemaphoreFullException", "SemaphoreFullException");
            feature.AddKnownType("System.Threading.SemaphoreSlim", "SemaphoreSlim");
            feature.AddKnownType("System.Threading.SpinLock", "SpinLock");
            feature.AddKnownType("System.Threading.SpinWait", "SpinWait");
            feature.AddKnownType("System.Threading.SynchronizationContext", "SynchronizationContext");
            feature.AddKnownType("System.Threading.SynchronizationLockException", "SynchronizationLockException");
            feature.AddKnownType("System.Threading.ThreadLocal`1", "ThreadLocal`1'1");
            feature.AddKnownType("System.Threading.WaitHandleCannotBeOpenedException", "WaitHandleCannotBeOpenedException");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Threading.Overlapped", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Threading.NativeOverlapped", "NativeOverlapped");
            feature.AddKnownType("System.Threading.Overlapped", "Overlapped");
            feature.AddKnownType("System.Threading.PreAllocatedOverlapped", "PreAllocatedOverlapped");
            feature.AddKnownType("System.Threading.ThreadPoolBoundHandle", "ThreadPoolBoundHandle");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Threading.Tasks.Dataflow", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Threading.Tasks.Dataflow.ActionBlock`1", "ActionBlock`1'1");
            feature.AddKnownType("System.Threading.Tasks.Dataflow.BatchBlock`1", "BatchBlock`1'1");
            feature.AddKnownType("System.Threading.Tasks.Dataflow.BatchedJoinBlock`2", "BatchedJoinBlock`2'2");
            feature.AddKnownType("System.Threading.Tasks.Dataflow.BatchedJoinBlock`3", "BatchedJoinBlock`3'3");
            feature.AddKnownType("System.Threading.Tasks.Dataflow.BroadcastBlock`1", "BroadcastBlock`1'1");
            feature.AddKnownType("System.Threading.Tasks.Dataflow.BufferBlock`1", "BufferBlock`1'1");
            feature.AddKnownType("System.Threading.Tasks.Dataflow.DataflowBlockOptions", "DataflowBlockOptions");
            feature.AddKnownType("System.Threading.Tasks.Dataflow.DataflowLinkOptions", "DataflowLinkOptions");
            feature.AddKnownType("System.Threading.Tasks.Dataflow.DataflowMessageHeader", "DataflowMessageHeader");
            feature.AddKnownType("System.Threading.Tasks.Dataflow.DataflowMessageStatus", "DataflowMessageStatus");
            feature.AddKnownType("System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions", "ExecutionDataflowBlockOptions");
            feature.AddKnownType("System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions", "GroupingDataflowBlockOptions");
            feature.AddKnownType("System.Threading.Tasks.Dataflow.IDataflowBlock", "IDataflowBlock");
            feature.AddKnownType("System.Threading.Tasks.Dataflow.IPropagatorBlock`2", "IPropagatorBlock`2'2");
            feature.AddKnownType("System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1", "IReceivableSourceBlock`1'1");
            feature.AddKnownType("System.Threading.Tasks.Dataflow.ISourceBlock`1", "ISourceBlock`1'1");
            feature.AddKnownType("System.Threading.Tasks.Dataflow.ITargetBlock`1", "ITargetBlock`1'1");
            feature.AddKnownType("System.Threading.Tasks.Dataflow.JoinBlock`2", "JoinBlock`2'2");
            feature.AddKnownType("System.Threading.Tasks.Dataflow.JoinBlock`3", "JoinBlock`3'3");
            feature.AddKnownType("System.Threading.Tasks.Dataflow.TransformBlock`2", "TransformBlock`2'2");
            feature.AddKnownType("System.Threading.Tasks.Dataflow.TransformManyBlock`2", "TransformManyBlock`2'2");
            feature.AddKnownType("System.Threading.Tasks.Dataflow.WriteOnceBlock`1", "WriteOnceBlock`1'1");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Threading.Tasks.Parallel", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Threading.Tasks.ParallelLoopResult", "ParallelLoopResult");
            feature.AddKnownType("System.Threading.Tasks.ParallelLoopState", "ParallelLoopState");
            feature.AddKnownType("System.Threading.Tasks.ParallelOptions", "ParallelOptions");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Threading.Thread", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.LocalDataStoreSlot", "LocalDataStoreSlot");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Threading.ApartmentState", "ApartmentState");
            feature.AddKnownType("System.Threading.CompressedStack", "CompressedStack");
            feature.AddKnownType("System.Threading.Thread", "Thread");
            feature.AddKnownType("System.Threading.ThreadAbortException", "ThreadAbortException");
            feature.AddKnownType("System.Threading.ThreadExceptionEventArgs", "ThreadExceptionEventArgs");
            feature.AddKnownType("System.Threading.ThreadInterruptedException", "ThreadInterruptedException");
            feature.AddKnownType("System.Threading.ThreadPriority", "ThreadPriority");
            feature.AddKnownType("System.Threading.ThreadStartException", "ThreadStartException");
            feature.AddKnownType("System.Threading.ThreadState", "ThreadState");
            feature.AddKnownType("System.Threading.ThreadStateException", "ThreadStateException");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Threading.ThreadPool", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Threading.IThreadPoolWorkItem", "IThreadPoolWorkItem");
            feature.AddKnownType("System.Threading.RegisteredWaitHandle", "RegisteredWaitHandle");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Transactions.Local", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Transactions.CommittableTransaction", "CommittableTransaction");
            feature.AddKnownType("System.Transactions.DependentCloneOption", "DependentCloneOption");
            feature.AddKnownType("System.Transactions.DependentTransaction", "DependentTransaction");
            feature.AddKnownType("System.Transactions.Enlistment", "Enlistment");
            feature.AddKnownType("System.Transactions.EnlistmentOptions", "EnlistmentOptions");
            feature.AddKnownType("System.Transactions.EnterpriseServicesInteropOption", "EnterpriseServicesInteropOption");
            feature.AddKnownType("System.Transactions.IDtcTransaction", "IDtcTransaction");
            feature.AddKnownType("System.Transactions.IEnlistmentNotification", "IEnlistmentNotification");
            feature.AddKnownType("System.Transactions.IPromotableSinglePhaseNotification", "IPromotableSinglePhaseNotification");
            feature.AddKnownType("System.Transactions.ISimpleTransactionSuperior", "ISimpleTransactionSuperior");
            feature.AddKnownType("System.Transactions.ISinglePhaseNotification", "ISinglePhaseNotification");
            feature.AddKnownType("System.Transactions.IsolationLevel", "IsolationLevel");
            feature.AddKnownType("System.Transactions.ITransactionPromoter", "ITransactionPromoter");
            feature.AddKnownType("System.Transactions.PreparingEnlistment", "PreparingEnlistment");
            feature.AddKnownType("System.Transactions.SinglePhaseEnlistment", "SinglePhaseEnlistment");
            feature.AddKnownType("System.Transactions.SubordinateTransaction", "SubordinateTransaction");
            feature.AddKnownType("System.Transactions.Transaction", "Transaction");
            feature.AddKnownType("System.Transactions.TransactionAbortedException", "TransactionAbortedException");
            feature.AddKnownType("System.Transactions.TransactionEventArgs", "TransactionEventArgs");
            feature.AddKnownType("System.Transactions.TransactionException", "TransactionException");
            feature.AddKnownType("System.Transactions.TransactionInDoubtException", "TransactionInDoubtException");
            feature.AddKnownType("System.Transactions.TransactionInformation", "TransactionInformation");
            feature.AddKnownType("System.Transactions.TransactionManagerCommunicationException", "TransactionManagerCommunicationException");
            feature.AddKnownType("System.Transactions.TransactionOptions", "TransactionOptions");
            feature.AddKnownType("System.Transactions.TransactionPromotionException", "TransactionPromotionException");
            feature.AddKnownType("System.Transactions.TransactionScope", "TransactionScope");
            feature.AddKnownType("System.Transactions.TransactionScopeAsyncFlowOption", "TransactionScopeAsyncFlowOption");
            feature.AddKnownType("System.Transactions.TransactionScopeOption", "TransactionScopeOption");
            feature.AddKnownType("System.Transactions.TransactionStatus", "TransactionStatus");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Web.HttpUtility", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Web.HttpUtility", "HttpUtility");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Xml.ReaderWriter", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Xml.ConformanceLevel", "ConformanceLevel");
            feature.AddKnownType("System.Xml.DtdProcessing", "DtdProcessing");
            feature.AddKnownType("System.Xml.EntityHandling", "EntityHandling");
            feature.AddKnownType("System.Xml.Formatting", "Formatting");
            feature.AddKnownType("System.Xml.IApplicationResourceStreamResolver", "IApplicationResourceStreamResolver");
            feature.AddKnownType("System.Xml.IHasXmlNode", "IHasXmlNode");
            feature.AddKnownType("System.Xml.IXmlLineInfo", "IXmlLineInfo");
            feature.AddKnownType("System.Xml.IXmlNamespaceResolver", "IXmlNamespaceResolver");
            feature.AddKnownType("System.Xml.NamespaceHandling", "NamespaceHandling");
            feature.AddKnownType("System.Xml.NameTable", "NameTable");
            feature.AddKnownType("System.Xml.NewLineHandling", "NewLineHandling");
            feature.AddKnownType("System.Xml.ReadState", "ReadState");
            feature.AddKnownType("System.Xml.ValidationType", "ValidationType");
            feature.AddKnownType("System.Xml.WhitespaceHandling", "WhitespaceHandling");
            feature.AddKnownType("System.Xml.WriteState", "WriteState");
            feature.AddKnownType("System.Xml.XmlAttribute", "XmlAttribute");
            feature.AddKnownType("System.Xml.XmlAttributeCollection", "XmlAttributeCollection");
            feature.AddKnownType("System.Xml.XmlCDataSection", "XmlCDataSection");
            feature.AddKnownType("System.Xml.XmlCharacterData", "XmlCharacterData");
            feature.AddKnownType("System.Xml.XmlComment", "XmlComment");
            feature.AddKnownType("System.Xml.XmlConvert", "XmlConvert");
            feature.AddKnownType("System.Xml.XmlDateTimeSerializationMode", "XmlDateTimeSerializationMode");
            feature.AddKnownType("System.Xml.XmlDeclaration", "XmlDeclaration");
            feature.AddKnownType("System.Xml.XmlDocument", "XmlDocument");
            feature.AddKnownType("System.Xml.XmlDocumentFragment", "XmlDocumentFragment");
            feature.AddKnownType("System.Xml.XmlDocumentType", "XmlDocumentType");
            feature.AddKnownType("System.Xml.XmlElement", "XmlElement");
            feature.AddKnownType("System.Xml.XmlEntity", "XmlEntity");
            feature.AddKnownType("System.Xml.XmlEntityReference", "XmlEntityReference");
            feature.AddKnownType("System.Xml.XmlException", "XmlException");
            feature.AddKnownType("System.Xml.XmlImplementation", "XmlImplementation");
            feature.AddKnownType("System.Xml.XmlLinkedNode", "XmlLinkedNode");
            feature.AddKnownType("System.Xml.XmlNamedNodeMap", "XmlNamedNodeMap");
            feature.AddKnownType("System.Xml.XmlNamespaceManager", "XmlNamespaceManager");
            feature.AddKnownType("System.Xml.XmlNamespaceScope", "XmlNamespaceScope");
            feature.AddKnownType("System.Xml.XmlNameTable", "XmlNameTable");
            feature.AddKnownType("System.Xml.XmlNode", "XmlNode");
            feature.AddKnownType("System.Xml.XmlNodeChangedAction", "XmlNodeChangedAction");
            feature.AddKnownType("System.Xml.XmlNodeChangedEventArgs", "XmlNodeChangedEventArgs");
            feature.AddKnownType("System.Xml.XmlNodeList", "XmlNodeList");
            feature.AddKnownType("System.Xml.XmlNodeOrder", "XmlNodeOrder");
            feature.AddKnownType("System.Xml.XmlNodeReader", "XmlNodeReader");
            feature.AddKnownType("System.Xml.XmlNodeType", "XmlNodeType");
            feature.AddKnownType("System.Xml.XmlNotation", "XmlNotation");
            feature.AddKnownType("System.Xml.XmlOutputMethod", "XmlOutputMethod");
            feature.AddKnownType("System.Xml.XmlParserContext", "XmlParserContext");
            feature.AddKnownType("System.Xml.XmlProcessingInstruction", "XmlProcessingInstruction");
            feature.AddKnownType("System.Xml.XmlQualifiedName", "XmlQualifiedName");
            feature.AddKnownType("System.Xml.XmlReader", "XmlReader");
            feature.AddKnownType("System.Xml.XmlReaderSettings", "XmlReaderSettings");
            feature.AddKnownType("System.Xml.XmlResolver", "XmlResolver");
            feature.AddKnownType("System.Xml.XmlSecureResolver", "XmlSecureResolver");
            feature.AddKnownType("System.Xml.XmlSignificantWhitespace", "XmlSignificantWhitespace");
            feature.AddKnownType("System.Xml.XmlSpace", "XmlSpace");
            feature.AddKnownType("System.Xml.XmlText", "XmlText");
            feature.AddKnownType("System.Xml.XmlTextReader", "XmlTextReader");
            feature.AddKnownType("System.Xml.XmlTextWriter", "XmlTextWriter");
            feature.AddKnownType("System.Xml.XmlTokenizedType", "XmlTokenizedType");
            feature.AddKnownType("System.Xml.XmlUrlResolver", "XmlUrlResolver");
            feature.AddKnownType("System.Xml.XmlValidatingReader", "XmlValidatingReader");
            feature.AddKnownType("System.Xml.XmlWhitespace", "XmlWhitespace");
            feature.AddKnownType("System.Xml.XmlWriter", "XmlWriter");
            feature.AddKnownType("System.Xml.XmlWriterSettings", "XmlWriterSettings");
            feature.AddKnownType("System.Xml.Resolvers.XmlKnownDtds", "XmlKnownDtds");
            feature.AddKnownType("System.Xml.Resolvers.XmlPreloadedResolver", "XmlPreloadedResolver");
            feature.AddKnownType("System.Xml.Schema.IXmlSchemaInfo", "IXmlSchemaInfo");
            feature.AddKnownType("System.Xml.Schema.ValidationEventArgs", "ValidationEventArgs");
            feature.AddKnownType("System.Xml.Schema.XmlAtomicValue", "XmlAtomicValue");
            feature.AddKnownType("System.Xml.Schema.XmlSchema", "XmlSchema");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaAll", "XmlSchemaAll");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaAnnotated", "XmlSchemaAnnotated");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaAnnotation", "XmlSchemaAnnotation");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaAny", "XmlSchemaAny");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaAnyAttribute", "XmlSchemaAnyAttribute");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaAppInfo", "XmlSchemaAppInfo");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaAttribute", "XmlSchemaAttribute");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaAttributeGroup", "XmlSchemaAttributeGroup");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaAttributeGroupRef", "XmlSchemaAttributeGroupRef");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaChoice", "XmlSchemaChoice");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaCollection", "XmlSchemaCollection");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaCollectionEnumerator", "XmlSchemaCollectionEnumerator");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaCompilationSettings", "XmlSchemaCompilationSettings");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaComplexContent", "XmlSchemaComplexContent");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaComplexContentExtension", "XmlSchemaComplexContentExtension");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaComplexContentRestriction", "XmlSchemaComplexContentRestriction");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaComplexType", "XmlSchemaComplexType");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaContent", "XmlSchemaContent");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaContentModel", "XmlSchemaContentModel");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaContentProcessing", "XmlSchemaContentProcessing");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaContentType", "XmlSchemaContentType");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaDatatype", "XmlSchemaDatatype");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaDatatypeVariety", "XmlSchemaDatatypeVariety");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaDerivationMethod", "XmlSchemaDerivationMethod");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaDocumentation", "XmlSchemaDocumentation");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaElement", "XmlSchemaElement");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaEnumerationFacet", "XmlSchemaEnumerationFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaException", "XmlSchemaException");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaExternal", "XmlSchemaExternal");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaFacet", "XmlSchemaFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaForm", "XmlSchemaForm");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaFractionDigitsFacet", "XmlSchemaFractionDigitsFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaGroup", "XmlSchemaGroup");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaGroupBase", "XmlSchemaGroupBase");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaGroupRef", "XmlSchemaGroupRef");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaIdentityConstraint", "XmlSchemaIdentityConstraint");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaImport", "XmlSchemaImport");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaInclude", "XmlSchemaInclude");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaInference", "XmlSchemaInference");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaInference+InferenceOption", "XmlSchemaInference.InferenceOption");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaInferenceException", "XmlSchemaInferenceException");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaInfo", "XmlSchemaInfo");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaKey", "XmlSchemaKey");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaKeyref", "XmlSchemaKeyref");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaLengthFacet", "XmlSchemaLengthFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaMaxExclusiveFacet", "XmlSchemaMaxExclusiveFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaMaxInclusiveFacet", "XmlSchemaMaxInclusiveFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaMaxLengthFacet", "XmlSchemaMaxLengthFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaMinExclusiveFacet", "XmlSchemaMinExclusiveFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaMinInclusiveFacet", "XmlSchemaMinInclusiveFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaMinLengthFacet", "XmlSchemaMinLengthFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaNotation", "XmlSchemaNotation");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaNumericFacet", "XmlSchemaNumericFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaObject", "XmlSchemaObject");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaObjectCollection", "XmlSchemaObjectCollection");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaObjectEnumerator", "XmlSchemaObjectEnumerator");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaObjectTable", "XmlSchemaObjectTable");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaParticle", "XmlSchemaParticle");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaPatternFacet", "XmlSchemaPatternFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaRedefine", "XmlSchemaRedefine");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSequence", "XmlSchemaSequence");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSet", "XmlSchemaSet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSimpleContent", "XmlSchemaSimpleContent");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSimpleContentExtension", "XmlSchemaSimpleContentExtension");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSimpleContentRestriction", "XmlSchemaSimpleContentRestriction");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSimpleType", "XmlSchemaSimpleType");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSimpleTypeContent", "XmlSchemaSimpleTypeContent");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSimpleTypeList", "XmlSchemaSimpleTypeList");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSimpleTypeRestriction", "XmlSchemaSimpleTypeRestriction");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSimpleTypeUnion", "XmlSchemaSimpleTypeUnion");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaTotalDigitsFacet", "XmlSchemaTotalDigitsFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaType", "XmlSchemaType");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaUnique", "XmlSchemaUnique");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaUse", "XmlSchemaUse");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaValidationException", "XmlSchemaValidationException");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaValidationFlags", "XmlSchemaValidationFlags");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaValidator", "XmlSchemaValidator");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaValidity", "XmlSchemaValidity");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaWhiteSpaceFacet", "XmlSchemaWhiteSpaceFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaXPath", "XmlSchemaXPath");
            feature.AddKnownType("System.Xml.Schema.XmlSeverityType", "XmlSeverityType");
            feature.AddKnownType("System.Xml.Schema.XmlTypeCode", "XmlTypeCode");
            feature.AddKnownType("System.Xml.Serialization.IXmlSerializable", "IXmlSerializable");
            feature.AddKnownType("System.Xml.Serialization.XmlAnyAttributeAttribute", "XmlAnyAttributeAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlAnyElementAttribute", "XmlAnyElementAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlAttributeAttribute", "XmlAttributeAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlElementAttribute", "XmlElementAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlEnumAttribute", "XmlEnumAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlIgnoreAttribute", "XmlIgnoreAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlNamespaceDeclarationsAttribute", "XmlNamespaceDeclarationsAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlRootAttribute", "XmlRootAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlSchemaProviderAttribute", "XmlSchemaProviderAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializerNamespaces", "XmlSerializerNamespaces");
            feature.AddKnownType("System.Xml.Serialization.XmlTextAttribute", "XmlTextAttribute");
            feature.AddKnownType("System.Xml.XPath.IXPathNavigable", "IXPathNavigable");
            feature.AddKnownType("System.Xml.XPath.XmlCaseOrder", "XmlCaseOrder");
            feature.AddKnownType("System.Xml.XPath.XmlDataType", "XmlDataType");
            feature.AddKnownType("System.Xml.XPath.XmlSortOrder", "XmlSortOrder");
            feature.AddKnownType("System.Xml.XPath.XPathExpression", "XPathExpression");
            feature.AddKnownType("System.Xml.XPath.XPathItem", "XPathItem");
            feature.AddKnownType("System.Xml.XPath.XPathNamespaceScope", "XPathNamespaceScope");
            feature.AddKnownType("System.Xml.XPath.XPathNavigator", "XPathNavigator");
            feature.AddKnownType("System.Xml.XPath.XPathNodeIterator", "XPathNodeIterator");
            feature.AddKnownType("System.Xml.XPath.XPathNodeType", "XPathNodeType");
            feature.AddKnownType("System.Xml.XPath.XPathResultType", "XPathResultType");
            feature.AddKnownType("System.Xml.Xsl.IXsltContextFunction", "IXsltContextFunction");
            feature.AddKnownType("System.Xml.Xsl.IXsltContextVariable", "IXsltContextVariable");
            feature.AddKnownType("System.Xml.Xsl.XslCompiledTransform", "XslCompiledTransform");
            feature.AddKnownType("System.Xml.Xsl.XsltArgumentList", "XsltArgumentList");
            feature.AddKnownType("System.Xml.Xsl.XsltCompileException", "XsltCompileException");
            feature.AddKnownType("System.Xml.Xsl.XsltContext", "XsltContext");
            feature.AddKnownType("System.Xml.Xsl.XsltException", "XsltException");
            feature.AddKnownType("System.Xml.Xsl.XsltMessageEncounteredEventArgs", "XsltMessageEncounteredEventArgs");
            feature.AddKnownType("System.Xml.Xsl.XslTransform", "XslTransform");
            feature.AddKnownType("System.Xml.Xsl.XsltSettings", "XsltSettings");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Xml.XDocument", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Xml.Linq.LoadOptions", "LoadOptions");
            feature.AddKnownType("System.Xml.Linq.ReaderOptions", "ReaderOptions");
            feature.AddKnownType("System.Xml.Linq.SaveOptions", "SaveOptions");
            feature.AddKnownType("System.Xml.Linq.XAttribute", "XAttribute");
            feature.AddKnownType("System.Xml.Linq.XCData", "XCData");
            feature.AddKnownType("System.Xml.Linq.XComment", "XComment");
            feature.AddKnownType("System.Xml.Linq.XContainer", "XContainer");
            feature.AddKnownType("System.Xml.Linq.XDeclaration", "XDeclaration");
            feature.AddKnownType("System.Xml.Linq.XDocument", "XDocument");
            feature.AddKnownType("System.Xml.Linq.XDocumentType", "XDocumentType");
            feature.AddKnownType("System.Xml.Linq.XElement", "XElement");
            feature.AddKnownType("System.Xml.Linq.XName", "XName");
            feature.AddKnownType("System.Xml.Linq.XNamespace", "XNamespace");
            feature.AddKnownType("System.Xml.Linq.XNode", "XNode");
            feature.AddKnownType("System.Xml.Linq.XNodeDocumentOrderComparer", "XNodeDocumentOrderComparer");
            feature.AddKnownType("System.Xml.Linq.XNodeEqualityComparer", "XNodeEqualityComparer");
            feature.AddKnownType("System.Xml.Linq.XObject", "XObject");
            feature.AddKnownType("System.Xml.Linq.XObjectChange", "XObjectChange");
            feature.AddKnownType("System.Xml.Linq.XObjectChangeEventArgs", "XObjectChangeEventArgs");
            feature.AddKnownType("System.Xml.Linq.XProcessingInstruction", "XProcessingInstruction");
            feature.AddKnownType("System.Xml.Linq.XStreamingElement", "XStreamingElement");
            feature.AddKnownType("System.Xml.Linq.XText", "XText");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Xml.XmlSerializer", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Xml.Serialization.CodeGenerationOptions", "CodeGenerationOptions");
            feature.AddKnownType("System.Xml.Serialization.CodeIdentifier", "CodeIdentifier");
            feature.AddKnownType("System.Xml.Serialization.CodeIdentifiers", "CodeIdentifiers");
            feature.AddKnownType("System.Xml.Serialization.ImportContext", "ImportContext");
            feature.AddKnownType("System.Xml.Serialization.IXmlTextParser", "IXmlTextParser");
            feature.AddKnownType("System.Xml.Serialization.SchemaImporter", "SchemaImporter");
            feature.AddKnownType("System.Xml.Serialization.SoapAttributeAttribute", "SoapAttributeAttribute");
            feature.AddKnownType("System.Xml.Serialization.SoapAttributeOverrides", "SoapAttributeOverrides");
            feature.AddKnownType("System.Xml.Serialization.SoapAttributes", "SoapAttributes");
            feature.AddKnownType("System.Xml.Serialization.SoapElementAttribute", "SoapElementAttribute");
            feature.AddKnownType("System.Xml.Serialization.SoapEnumAttribute", "SoapEnumAttribute");
            feature.AddKnownType("System.Xml.Serialization.SoapIgnoreAttribute", "SoapIgnoreAttribute");
            feature.AddKnownType("System.Xml.Serialization.SoapIncludeAttribute", "SoapIncludeAttribute");
            feature.AddKnownType("System.Xml.Serialization.SoapReflectionImporter", "SoapReflectionImporter");
            feature.AddKnownType("System.Xml.Serialization.SoapSchemaMember", "SoapSchemaMember");
            feature.AddKnownType("System.Xml.Serialization.SoapTypeAttribute", "SoapTypeAttribute");
            feature.AddKnownType("System.Xml.Serialization.UnreferencedObjectEventArgs", "UnreferencedObjectEventArgs");
            feature.AddKnownType("System.Xml.Serialization.XmlAnyElementAttributes", "XmlAnyElementAttributes");
            feature.AddKnownType("System.Xml.Serialization.XmlArrayAttribute", "XmlArrayAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlArrayItemAttribute", "XmlArrayItemAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlArrayItemAttributes", "XmlArrayItemAttributes");
            feature.AddKnownType("System.Xml.Serialization.XmlAttributeEventArgs", "XmlAttributeEventArgs");
            feature.AddKnownType("System.Xml.Serialization.XmlAttributeOverrides", "XmlAttributeOverrides");
            feature.AddKnownType("System.Xml.Serialization.XmlAttributes", "XmlAttributes");
            feature.AddKnownType("System.Xml.Serialization.XmlChoiceIdentifierAttribute", "XmlChoiceIdentifierAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlDeserializationEvents", "XmlDeserializationEvents");
            feature.AddKnownType("System.Xml.Serialization.XmlElementAttributes", "XmlElementAttributes");
            feature.AddKnownType("System.Xml.Serialization.XmlElementEventArgs", "XmlElementEventArgs");
            feature.AddKnownType("System.Xml.Serialization.XmlIncludeAttribute", "XmlIncludeAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlMapping", "XmlMapping");
            feature.AddKnownType("System.Xml.Serialization.XmlMappingAccess", "XmlMappingAccess");
            feature.AddKnownType("System.Xml.Serialization.XmlMemberMapping", "XmlMemberMapping");
            feature.AddKnownType("System.Xml.Serialization.XmlMembersMapping", "XmlMembersMapping");
            feature.AddKnownType("System.Xml.Serialization.XmlNodeEventArgs", "XmlNodeEventArgs");
            feature.AddKnownType("System.Xml.Serialization.XmlReflectionImporter", "XmlReflectionImporter");
            feature.AddKnownType("System.Xml.Serialization.XmlReflectionMember", "XmlReflectionMember");
            feature.AddKnownType("System.Xml.Serialization.XmlSchemaEnumerator", "XmlSchemaEnumerator");
            feature.AddKnownType("System.Xml.Serialization.XmlSchemaExporter", "XmlSchemaExporter");
            feature.AddKnownType("System.Xml.Serialization.XmlSchemaImporter", "XmlSchemaImporter");
            feature.AddKnownType("System.Xml.Serialization.XmlSchemas", "XmlSchemas");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationGeneratedCode", "XmlSerializationGeneratedCode");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationReader", "XmlSerializationReader");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationReader+CollectionFixup", "CollectionFixup");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationReader+Fixup", "Fixup");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationWriter", "XmlSerializationWriter");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializer", "XmlSerializer");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializerAssemblyAttribute", "XmlSerializerAssemblyAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializerFactory", "XmlSerializerFactory");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializerImplementation", "XmlSerializerImplementation");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializerVersionAttribute", "XmlSerializerVersionAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlTypeAttribute", "XmlTypeAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlTypeMapping", "XmlTypeMapping");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Xml.XPath", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("System.Xml.XPath.XPathDocument", "XPathDocument");
            feature.AddKnownType("System.Xml.XPath.XPathException", "XPathException");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Xml.XPath.XDocument", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullablePublicOnlyAttribute", "NullablePublicOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("SWIGTYPE_p_int,Virgil.Crypto", "<global namespace>.SWIGTYPE_p_int");
            feature.AddKnownType("SWIGTYPE_p_pythia_buf_t,Virgil.Crypto", "<global namespace>.SWIGTYPE_p_pythia_buf_t");
            feature.AddKnownType("SWIGTYPE_p_std__vectorT_std__vectorT_unsigned_char_t_t,Virgil.Crypto", "<global namespace>.SWIGTYPE_p_std__vectorT_std__vectorT_unsigned_char_t_t");
            feature.AddKnownType("SWIGTYPE_p_std__vectorT_virgil__crypto__foundation__cms__VirgilCMSKeyTransRecipient_t,Virgil.Crypto", "<global namespace>.SWIGTYPE_p_std__vectorT_virgil__crypto__foundation__cms__VirgilCMSKeyTransRecipient_t");
            feature.AddKnownType("SWIGTYPE_p_std__vectorT_virgil__crypto__foundation__cms__VirgilCMSPasswordRecipient_t,Virgil.Crypto", "<global namespace>.SWIGTYPE_p_std__vectorT_virgil__crypto__foundation__cms__VirgilCMSPasswordRecipient_t");
            feature.AddKnownType("virgil_crypto_net,Virgil.Crypto", "<global namespace>.virgil_crypto_net");
            feature.AddKnownType("virgil_crypto_netPINVOKE,Virgil.Crypto", "<global namespace>.virgil_crypto_netPINVOKE");
            feature.AddKnownType("virgil_crypto_netPINVOKE+SWIGExceptionHelper,Virgil.Crypto", "<global namespace>.SWIGExceptionHelper");
            feature.AddKnownType("virgil_crypto_netPINVOKE+SWIGPendingException,Virgil.Crypto", "<global namespace>.<global namespace>.virgil_crypto_netPINVOKE.SWIGPendingException");
            feature.AddKnownType("virgil_crypto_netPINVOKE+SWIGStringHelper,Virgil.Crypto", "<global namespace>.SWIGStringHelper");
            feature.AddKnownType("virgil_crypto_netPINVOKE+SWIG_byte_ArrayHelper,Virgil.Crypto", "<global namespace>.SWIG_byte_ArrayHelper");
            feature.AddKnownType("Virgil.Crypto.VirgilByteArrayUtils,Virgil.Crypto", "Virgil.Crypto.VirgilByteArrayUtils");
            feature.AddKnownType("Virgil.Crypto.VirgilChunkCipher,Virgil.Crypto", "Virgil.Crypto.VirgilChunkCipher");
            feature.AddKnownType("Virgil.Crypto.VirgilCipher,Virgil.Crypto", "Virgil.Crypto.VirgilCipher");
            feature.AddKnownType("Virgil.Crypto.VirgilCipherBase,Virgil.Crypto", "Virgil.Crypto.VirgilCipherBase");
            feature.AddKnownType("Virgil.Crypto.VirgilConfig,Virgil.Crypto", "Virgil.Crypto.VirgilConfig");
            feature.AddKnownType("Virgil.Crypto.VirgilCustomParams,Virgil.Crypto", "Virgil.Crypto.VirgilCustomParams");
            feature.AddKnownType("Virgil.Crypto.VirgilDataSink,Virgil.Crypto", "Virgil.Crypto.VirgilDataSink");
            feature.AddKnownType("Virgil.Crypto.VirgilDataSource,Virgil.Crypto", "Virgil.Crypto.VirgilDataSource");
            feature.AddKnownType("Virgil.Crypto.VirgilKeyPair,Virgil.Crypto", "Virgil.Crypto.VirgilKeyPair");
            feature.AddKnownType("Virgil.Crypto.VirgilKeyPair+Type,Virgil.Crypto", "Virgil.Crypto.Virgil.Crypto.VirgilKeyPair.Type");
            feature.AddKnownType("Virgil.Crypto.VirgilSigner,Virgil.Crypto", "Virgil.Crypto.VirgilSigner");
            feature.AddKnownType("Virgil.Crypto.VirgilSignerBase,Virgil.Crypto", "Virgil.Crypto.VirgilSignerBase");
            feature.AddKnownType("Virgil.Crypto.VirgilStreamCipher,Virgil.Crypto", "Virgil.Crypto.VirgilStreamCipher");
            feature.AddKnownType("Virgil.Crypto.VirgilStreamDataSink,Virgil.Crypto", "Virgil.Crypto.VirgilStreamDataSink");
            feature.AddKnownType("Virgil.Crypto.VirgilStreamDataSource,Virgil.Crypto", "Virgil.Crypto.VirgilStreamDataSource");
            feature.AddKnownType("Virgil.Crypto.VirgilStreamSigner,Virgil.Crypto", "Virgil.Crypto.VirgilStreamSigner");
            feature.AddKnownType("Virgil.Crypto.VirgilTinyCipher,Virgil.Crypto", "Virgil.Crypto.VirgilTinyCipher");
            feature.AddKnownType("Virgil.Crypto.VirgilTinyCipher+PackageSize,Virgil.Crypto", "Virgil.Crypto.Virgil.Crypto.VirgilTinyCipher.PackageSize");
            feature.AddKnownType("Virgil.Crypto.VirgilVersion,Virgil.Crypto", "Virgil.Crypto.VirgilVersion");
            feature.AddKnownType("Virgil.Crypto.Foundation.VirgilAsymmetricCipher,Virgil.Crypto", "Virgil.Crypto.Foundation.VirgilAsymmetricCipher");
            feature.AddKnownType("Virgil.Crypto.Foundation.VirgilBase64,Virgil.Crypto", "Virgil.Crypto.Foundation.VirgilBase64");
            feature.AddKnownType("Virgil.Crypto.Foundation.VirgilHKDF,Virgil.Crypto", "Virgil.Crypto.Foundation.VirgilHKDF");
            feature.AddKnownType("Virgil.Crypto.Foundation.VirgilHash,Virgil.Crypto", "Virgil.Crypto.Foundation.VirgilHash");
            feature.AddKnownType("Virgil.Crypto.Foundation.VirgilHash+Algorithm,Virgil.Crypto", "Virgil.Crypto.Foundation.Virgil.Crypto.Foundation.VirgilHash.Algorithm");
            feature.AddKnownType("Virgil.Crypto.Foundation.VirgilKDF,Virgil.Crypto", "Virgil.Crypto.Foundation.VirgilKDF");
            feature.AddKnownType("Virgil.Crypto.Foundation.VirgilKDF+Algorithm,Virgil.Crypto", "Virgil.Crypto.Foundation.Virgil.Crypto.Foundation.VirgilKDF.Algorithm");
            feature.AddKnownType("Virgil.Crypto.Foundation.VirgilPBE,Virgil.Crypto", "Virgil.Crypto.Foundation.VirgilPBE");
            feature.AddKnownType("Virgil.Crypto.Foundation.VirgilPBE+Algorithm,Virgil.Crypto", "Virgil.Crypto.Foundation.Virgil.Crypto.Foundation.VirgilPBE.Algorithm");
            feature.AddKnownType("Virgil.Crypto.Foundation.VirgilPBKDF,Virgil.Crypto", "Virgil.Crypto.Foundation.VirgilPBKDF");
            feature.AddKnownType("Virgil.Crypto.Foundation.VirgilPBKDF+Algorithm,Virgil.Crypto", "Virgil.Crypto.Foundation.Virgil.Crypto.Foundation.VirgilPBKDF.Algorithm");
            feature.AddKnownType("Virgil.Crypto.Foundation.VirgilRandom,Virgil.Crypto", "Virgil.Crypto.Foundation.VirgilRandom");
            feature.AddKnownType("Virgil.Crypto.Foundation.VirgilSymmetricCipher,Virgil.Crypto", "Virgil.Crypto.Foundation.VirgilSymmetricCipher");
            feature.AddKnownType("Virgil.Crypto.Foundation.VirgilSymmetricCipher+Padding,Virgil.Crypto", "Virgil.Crypto.Foundation.Virgil.Crypto.Foundation.VirgilSymmetricCipher.Padding");
            feature.AddKnownType("Virgil.Crypto.Foundation.VirgilSymmetricCipher+Algorithm,Virgil.Crypto", "Virgil.Crypto.Foundation.Virgil.Crypto.Foundation.VirgilSymmetricCipher.Algorithm");
            feature.AddKnownType("Virgil.Crypto.Foundation.Asn1.VirgilAsn1Compatible,Virgil.Crypto", "Virgil.Crypto.Foundation.Asn1.VirgilAsn1Compatible");
            feature.AddKnownType("Virgil.Crypto.Foundation.Asn1.VirgilAsn1Reader,Virgil.Crypto", "Virgil.Crypto.Foundation.Asn1.VirgilAsn1Reader");
            feature.AddKnownType("Virgil.Crypto.Foundation.Asn1.VirgilAsn1Writer,Virgil.Crypto", "Virgil.Crypto.Foundation.Asn1.VirgilAsn1Writer");
            feature.AddKnownType("Virgil.Crypto.Foundation.Cms.VirgilCMSContent,Virgil.Crypto", "Virgil.Crypto.Foundation.Cms.VirgilCMSContent");
            feature.AddKnownType("Virgil.Crypto.Foundation.Cms.VirgilCMSContent+Type,Virgil.Crypto", "Virgil.Crypto.Foundation.Cms.Virgil.Crypto.Foundation.Cms.VirgilCMSContent.Type");
            feature.AddKnownType("Virgil.Crypto.Foundation.Cms.VirgilCMSContentInfo,Virgil.Crypto", "Virgil.Crypto.Foundation.Cms.VirgilCMSContentInfo");
            feature.AddKnownType("Virgil.Crypto.Foundation.Cms.VirgilCMSEncryptedContent,Virgil.Crypto", "Virgil.Crypto.Foundation.Cms.VirgilCMSEncryptedContent");
            feature.AddKnownType("Virgil.Crypto.Foundation.Cms.VirgilCMSEnvelopedData,Virgil.Crypto", "Virgil.Crypto.Foundation.Cms.VirgilCMSEnvelopedData");
            feature.AddKnownType("Virgil.Crypto.Foundation.Cms.VirgilCMSKeyTransRecipient,Virgil.Crypto", "Virgil.Crypto.Foundation.Cms.VirgilCMSKeyTransRecipient");
            feature.AddKnownType("Virgil.Crypto.Foundation.Cms.VirgilCMSPasswordRecipient,Virgil.Crypto", "Virgil.Crypto.Foundation.Cms.VirgilCMSPasswordRecipient");
            feature.AddKnownType("Virgil.Crypto.Pfs.VirgilPFS,Virgil.Crypto", "Virgil.Crypto.Pfs.VirgilPFS");
            feature.AddKnownType("Virgil.Crypto.Pfs.VirgilPFSEncryptedMessage,Virgil.Crypto", "Virgil.Crypto.Pfs.VirgilPFSEncryptedMessage");
            feature.AddKnownType("Virgil.Crypto.Pfs.VirgilPFSInitiatorPrivateInfo,Virgil.Crypto", "Virgil.Crypto.Pfs.VirgilPFSInitiatorPrivateInfo");
            feature.AddKnownType("Virgil.Crypto.Pfs.VirgilPFSInitiatorPublicInfo,Virgil.Crypto", "Virgil.Crypto.Pfs.VirgilPFSInitiatorPublicInfo");
            feature.AddKnownType("Virgil.Crypto.Pfs.VirgilPFSPrivateKey,Virgil.Crypto", "Virgil.Crypto.Pfs.VirgilPFSPrivateKey");
            feature.AddKnownType("Virgil.Crypto.Pfs.VirgilPFSPublicKey,Virgil.Crypto", "Virgil.Crypto.Pfs.VirgilPFSPublicKey");
            feature.AddKnownType("Virgil.Crypto.Pfs.VirgilPFSResponderPrivateInfo,Virgil.Crypto", "Virgil.Crypto.Pfs.VirgilPFSResponderPrivateInfo");
            feature.AddKnownType("Virgil.Crypto.Pfs.VirgilPFSResponderPublicInfo,Virgil.Crypto", "Virgil.Crypto.Pfs.VirgilPFSResponderPublicInfo");
            feature.AddKnownType("Virgil.Crypto.Pfs.VirgilPFSSession,Virgil.Crypto", "Virgil.Crypto.Pfs.VirgilPFSSession");
            feature.AddKnownType("Virgil.Crypto.Pythia.VirgilPythia,Virgil.Crypto", "Virgil.Crypto.Pythia.VirgilPythia");
            feature.AddKnownType("Virgil.Crypto.Pythia.VirgilPythiaBlindResult,Virgil.Crypto", "Virgil.Crypto.Pythia.VirgilPythiaBlindResult");
            feature.AddKnownType("Virgil.Crypto.Pythia.VirgilPythiaContext,Virgil.Crypto", "Virgil.Crypto.Pythia.VirgilPythiaContext");
            feature.AddKnownType("Virgil.Crypto.Pythia.VirgilPythiaProveResult,Virgil.Crypto", "Virgil.Crypto.Pythia.VirgilPythiaProveResult");
            feature.AddKnownType("Virgil.Crypto.Pythia.VirgilPythiaTransformResult,Virgil.Crypto", "Virgil.Crypto.Pythia.VirgilPythiaTransformResult");
            feature.AddKnownType("Virgil.Crypto.Pythia.VirgilPythiaTransformationKeyPair,Virgil.Crypto", "Virgil.Crypto.Pythia.VirgilPythiaTransformationKeyPair");
            feature.AddKnownType("Virgil.Crypto.HashAlgorithm,Virgil.CryptoImpl", "Virgil.Crypto.HashAlgorithm");
            feature.AddKnownType("Virgil.Crypto.KeyPair,Virgil.CryptoImpl", "Virgil.Crypto.KeyPair");
            feature.AddKnownType("Virgil.Crypto.KeyPairType,Virgil.CryptoImpl", "Virgil.Crypto.KeyPairType");
            feature.AddKnownType("Virgil.Crypto.PrivateKey,Virgil.CryptoImpl", "Virgil.Crypto.PrivateKey");
            feature.AddKnownType("Virgil.Crypto.PublicKey,Virgil.CryptoImpl", "Virgil.Crypto.PublicKey");
            feature.AddKnownType("Virgil.Crypto.VirgilAccessTokenSigner,Virgil.CryptoImpl", "Virgil.Crypto.VirgilAccessTokenSigner");
            feature.AddKnownType("Virgil.Crypto.VirgilCardCrypto,Virgil.CryptoImpl", "Virgil.Crypto.VirgilCardCrypto");
            feature.AddKnownType("Virgil.Crypto.VirgilCrypto,Virgil.CryptoImpl", "Virgil.Crypto.VirgilCrypto");
            feature.AddKnownType("Virgil.Crypto.VirgilCryptoException,Virgil.CryptoImpl", "Virgil.Crypto.VirgilCryptoException");
            feature.AddKnownType("Virgil.Crypto.VirgilPrivateKeyExporter,Virgil.CryptoImpl", "Virgil.Crypto.VirgilPrivateKeyExporter");
            feature.AddKnownType("Virgil.CryptoAPI.IAccessTokenSigner,VirgilCryptoAPI", "Virgil.CryptoAPI.IAccessTokenSigner");
            feature.AddKnownType("Virgil.CryptoAPI.ICardCrypto,VirgilCryptoAPI", "Virgil.CryptoAPI.ICardCrypto");
            feature.AddKnownType("Virgil.CryptoAPI.IPrivateKey,VirgilCryptoAPI", "Virgil.CryptoAPI.IPrivateKey");
            feature.AddKnownType("Virgil.CryptoAPI.IPrivateKeyExporter,VirgilCryptoAPI", "Virgil.CryptoAPI.IPrivateKeyExporter");
            feature.AddKnownType("Virgil.CryptoAPI.IPublicKey,VirgilCryptoAPI", "Virgil.CryptoAPI.IPublicKey");
            feature.AddKnownType("VoloAbpAccountApplicationContracts_ProcessedByFody,Volo.Abp.Account.Application.Contracts", "<global namespace>.VoloAbpAccountApplicationContracts_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Account.Application.Contracts", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Account.AbpAccountApplicationContractsModule,Volo.Abp.Account.Application.Contracts", "Volo.Abp.Account.AbpAccountApplicationContractsModule");
            feature.AddKnownType("Volo.Abp.Account.ChangePasswordInput,Volo.Abp.Account.Application.Contracts", "Volo.Abp.Account.ChangePasswordInput");
            feature.AddKnownType("Volo.Abp.Account.IAccountAppService,Volo.Abp.Account.Application.Contracts", "Volo.Abp.Account.IAccountAppService");
            feature.AddKnownType("Volo.Abp.Account.IProfileAppService,Volo.Abp.Account.Application.Contracts", "Volo.Abp.Account.IProfileAppService");
            feature.AddKnownType("Volo.Abp.Account.ProfileDto,Volo.Abp.Account.Application.Contracts", "Volo.Abp.Account.ProfileDto");
            feature.AddKnownType("Volo.Abp.Account.RegisterDto,Volo.Abp.Account.Application.Contracts", "Volo.Abp.Account.RegisterDto");
            feature.AddKnownType("Volo.Abp.Account.ResetPasswordDto,Volo.Abp.Account.Application.Contracts", "Volo.Abp.Account.ResetPasswordDto");
            feature.AddKnownType("Volo.Abp.Account.SendPasswordResetCodeDto,Volo.Abp.Account.Application.Contracts", "Volo.Abp.Account.SendPasswordResetCodeDto");
            feature.AddKnownType("Volo.Abp.Account.UpdateProfileDto,Volo.Abp.Account.Application.Contracts", "Volo.Abp.Account.UpdateProfileDto");
            feature.AddKnownType("Volo.Abp.Account.VerifyPasswordResetTokenInput,Volo.Abp.Account.Application.Contracts", "Volo.Abp.Account.VerifyPasswordResetTokenInput");
            feature.AddKnownType("Volo.Abp.Account.Localization.AccountResource,Volo.Abp.Account.Application.Contracts", "Volo.Abp.Account.Localization.AccountResource");
            feature.AddKnownType("Volo.Abp.Account.Settings.AccountSettingNames,Volo.Abp.Account.Application.Contracts", "Volo.Abp.Account.Settings.AccountSettingNames");
            feature.AddKnownType("VoloAbpAuditingContracts_ProcessedByFody,Volo.Abp.Auditing.Contracts", "<global namespace>.VoloAbpAuditingContracts_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Auditing.Contracts", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Auditing.AbpAuditingContractsModule,Volo.Abp.Auditing.Contracts", "Volo.Abp.Auditing.AbpAuditingContractsModule");
            feature.AddKnownType("Volo.Abp.Auditing.AuditedAttribute,Volo.Abp.Auditing.Contracts", "Volo.Abp.Auditing.AuditedAttribute");
            feature.AddKnownType("Volo.Abp.Auditing.DisableAuditingAttribute,Volo.Abp.Auditing.Contracts", "Volo.Abp.Auditing.DisableAuditingAttribute");
            feature.AddKnownType("Volo.Abp.Auditing.EntityChangeType,Volo.Abp.Auditing.Contracts", "Volo.Abp.Auditing.EntityChangeType");
            feature.AddKnownType("Volo.Abp.Auditing.IAuditedObject,Volo.Abp.Auditing.Contracts", "Volo.Abp.Auditing.IAuditedObject");
            feature.AddKnownType("Volo.Abp.Auditing.IAuditedObject`1,Volo.Abp.Auditing.Contracts", "Volo.Abp.Auditing.IAuditedObject`1'1");
            feature.AddKnownType("Volo.Abp.Auditing.IAuditingEnabled,Volo.Abp.Auditing.Contracts", "Volo.Abp.Auditing.IAuditingEnabled");
            feature.AddKnownType("Volo.Abp.Auditing.ICreationAuditedObject,Volo.Abp.Auditing.Contracts", "Volo.Abp.Auditing.ICreationAuditedObject");
            feature.AddKnownType("Volo.Abp.Auditing.ICreationAuditedObject`1,Volo.Abp.Auditing.Contracts", "Volo.Abp.Auditing.ICreationAuditedObject`1'1");
            feature.AddKnownType("Volo.Abp.Auditing.IDeletionAuditedObject,Volo.Abp.Auditing.Contracts", "Volo.Abp.Auditing.IDeletionAuditedObject");
            feature.AddKnownType("Volo.Abp.Auditing.IDeletionAuditedObject`1,Volo.Abp.Auditing.Contracts", "Volo.Abp.Auditing.IDeletionAuditedObject`1'1");
            feature.AddKnownType("Volo.Abp.Auditing.IFullAuditedObject,Volo.Abp.Auditing.Contracts", "Volo.Abp.Auditing.IFullAuditedObject");
            feature.AddKnownType("Volo.Abp.Auditing.IFullAuditedObject`1,Volo.Abp.Auditing.Contracts", "Volo.Abp.Auditing.IFullAuditedObject`1'1");
            feature.AddKnownType("Volo.Abp.Auditing.IHasCreationTime,Volo.Abp.Auditing.Contracts", "Volo.Abp.Auditing.IHasCreationTime");
            feature.AddKnownType("Volo.Abp.Auditing.IHasDeletionTime,Volo.Abp.Auditing.Contracts", "Volo.Abp.Auditing.IHasDeletionTime");
            feature.AddKnownType("Volo.Abp.Auditing.IHasModificationTime,Volo.Abp.Auditing.Contracts", "Volo.Abp.Auditing.IHasModificationTime");
            feature.AddKnownType("Volo.Abp.Auditing.IMayHaveCreator`1,Volo.Abp.Auditing.Contracts", "Volo.Abp.Auditing.IMayHaveCreator`1'1");
            feature.AddKnownType("Volo.Abp.Auditing.IMayHaveCreator,Volo.Abp.Auditing.Contracts", "Volo.Abp.Auditing.IMayHaveCreator");
            feature.AddKnownType("Volo.Abp.Auditing.IModificationAuditedObject,Volo.Abp.Auditing.Contracts", "Volo.Abp.Auditing.IModificationAuditedObject");
            feature.AddKnownType("Volo.Abp.Auditing.IModificationAuditedObject`1,Volo.Abp.Auditing.Contracts", "Volo.Abp.Auditing.IModificationAuditedObject`1'1");
            feature.AddKnownType("Volo.Abp.Auditing.IMustHaveCreator`1,Volo.Abp.Auditing.Contracts", "Volo.Abp.Auditing.IMustHaveCreator`1'1");
            feature.AddKnownType("Volo.Abp.Auditing.IMustHaveCreator,Volo.Abp.Auditing.Contracts", "Volo.Abp.Auditing.IMustHaveCreator");
            feature.AddKnownType("VoloAbpAuditing_ProcessedByFody,Volo.Abp.Auditing", "<global namespace>.VoloAbpAuditing_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Auditing", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Auditing.AbpAuditingModule,Volo.Abp.Auditing", "Volo.Abp.Auditing.AbpAuditingModule");
            feature.AddKnownType("Volo.Abp.Auditing.AbpAuditingOptions,Volo.Abp.Auditing", "Volo.Abp.Auditing.AbpAuditingOptions");
            feature.AddKnownType("Volo.Abp.Auditing.AuditingHelper,Volo.Abp.Auditing", "Volo.Abp.Auditing.AuditingHelper");
            feature.AddKnownType("Volo.Abp.Auditing.AuditingInterceptor,Volo.Abp.Auditing", "Volo.Abp.Auditing.AuditingInterceptor");
            feature.AddKnownType("Volo.Abp.Auditing.AuditingManager,Volo.Abp.Auditing", "Volo.Abp.Auditing.AuditingManager");
            feature.AddKnownType("Volo.Abp.Auditing.AuditingManager+DisposableSaveHandle,Volo.Abp.Auditing", "Volo.Abp.Auditing.DisposableSaveHandle");
            feature.AddKnownType("Volo.Abp.Auditing.AuditLogActionInfo,Volo.Abp.Auditing", "Volo.Abp.Auditing.AuditLogActionInfo");
            feature.AddKnownType("Volo.Abp.Auditing.AuditLogContributionContext,Volo.Abp.Auditing", "Volo.Abp.Auditing.AuditLogContributionContext");
            feature.AddKnownType("Volo.Abp.Auditing.AuditLogContributor,Volo.Abp.Auditing", "Volo.Abp.Auditing.AuditLogContributor");
            feature.AddKnownType("Volo.Abp.Auditing.AuditLogInfo,Volo.Abp.Auditing", "Volo.Abp.Auditing.AuditLogInfo");
            feature.AddKnownType("Volo.Abp.Auditing.AuditLogScope,Volo.Abp.Auditing", "Volo.Abp.Auditing.AuditLogScope");
            feature.AddKnownType("Volo.Abp.Auditing.AuditPropertySetter,Volo.Abp.Auditing", "Volo.Abp.Auditing.AuditPropertySetter");
            feature.AddKnownType("Volo.Abp.Auditing.EntityChangeInfo,Volo.Abp.Auditing", "Volo.Abp.Auditing.EntityChangeInfo");
            feature.AddKnownType("Volo.Abp.Auditing.EntityHistorySelectorList,Volo.Abp.Auditing", "Volo.Abp.Auditing.EntityHistorySelectorList");
            feature.AddKnownType("Volo.Abp.Auditing.EntityPropertyChangeInfo,Volo.Abp.Auditing", "Volo.Abp.Auditing.EntityPropertyChangeInfo");
            feature.AddKnownType("Volo.Abp.Auditing.IAuditingHelper,Volo.Abp.Auditing", "Volo.Abp.Auditing.IAuditingHelper");
            feature.AddKnownType("Volo.Abp.Auditing.IAuditingManager,Volo.Abp.Auditing", "Volo.Abp.Auditing.IAuditingManager");
            feature.AddKnownType("Volo.Abp.Auditing.IAuditingStore,Volo.Abp.Auditing", "Volo.Abp.Auditing.IAuditingStore");
            feature.AddKnownType("Volo.Abp.Auditing.IAuditLogSaveHandle,Volo.Abp.Auditing", "Volo.Abp.Auditing.IAuditLogSaveHandle");
            feature.AddKnownType("Volo.Abp.Auditing.IAuditLogScope,Volo.Abp.Auditing", "Volo.Abp.Auditing.IAuditLogScope");
            feature.AddKnownType("Volo.Abp.Auditing.IAuditPropertySetter,Volo.Abp.Auditing", "Volo.Abp.Auditing.IAuditPropertySetter");
            feature.AddKnownType("Volo.Abp.Auditing.IAuditSerializer,Volo.Abp.Auditing", "Volo.Abp.Auditing.IAuditSerializer");
            feature.AddKnownType("Volo.Abp.Auditing.IEntityHistorySelectorList,Volo.Abp.Auditing", "Volo.Abp.Auditing.IEntityHistorySelectorList");
            feature.AddKnownType("Volo.Abp.Auditing.JsonAuditSerializer,Volo.Abp.Auditing", "Volo.Abp.Auditing.JsonAuditSerializer");
            feature.AddKnownType("Volo.Abp.Auditing.SimpleLogAuditingStore,Volo.Abp.Auditing", "Volo.Abp.Auditing.SimpleLogAuditingStore");
            feature.AddKnownType("VoloAbpAuditLoggingDomainShared_ProcessedByFody,Volo.Abp.AuditLogging.Domain.Shared", "<global namespace>.VoloAbpAuditLoggingDomainShared_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.AuditLogging.Domain.Shared", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.AuditLogging.AbpAuditLoggingDomainSharedModule,Volo.Abp.AuditLogging.Domain.Shared", "Volo.Abp.AuditLogging.AbpAuditLoggingDomainSharedModule");
            feature.AddKnownType("Volo.Abp.AuditLogging.AuditLogActionConsts,Volo.Abp.AuditLogging.Domain.Shared", "Volo.Abp.AuditLogging.AuditLogActionConsts");
            feature.AddKnownType("Volo.Abp.AuditLogging.EntityChangeConsts,Volo.Abp.AuditLogging.Domain.Shared", "Volo.Abp.AuditLogging.EntityChangeConsts");
            feature.AddKnownType("Volo.Abp.AuditLogging.EntityPropertyChangeConsts,Volo.Abp.AuditLogging.Domain.Shared", "Volo.Abp.AuditLogging.EntityPropertyChangeConsts");
            feature.AddKnownType("Volo.Abp.AuditLogging.Localization.AuditLoggingResource,Volo.Abp.AuditLogging.Domain.Shared", "Volo.Abp.AuditLogging.Localization.AuditLoggingResource");
            feature.AddKnownType("Volo.Abp.ObjectExtending.AuditLoggingModuleExtensionConfiguration,Volo.Abp.AuditLogging.Domain.Shared", "Volo.Abp.ObjectExtending.AuditLoggingModuleExtensionConfiguration");
            feature.AddKnownType("VoloAbpAuthorizationAbstractions_ProcessedByFody,Volo.Abp.Authorization.Abstractions", "<global namespace>.VoloAbpAuthorizationAbstractions_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Authorization.Abstractions", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Authorization.AbpAuthorizationAbstractionsModule,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.AbpAuthorizationAbstractionsModule");
            feature.AddKnownType("Volo.Abp.Authorization.AlwaysAllowAuthorizationService,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.AlwaysAllowAuthorizationService");
            feature.AddKnownType("Volo.Abp.Authorization.AlwaysAllowMethodInvocationAuthorizationService,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.AlwaysAllowMethodInvocationAuthorizationService");
            feature.AddKnownType("Volo.Abp.Authorization.IAbpAuthorizationPolicyProvider,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.IAbpAuthorizationPolicyProvider");
            feature.AddKnownType("Volo.Abp.Authorization.IAbpAuthorizationService,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.IAbpAuthorizationService");
            feature.AddKnownType("Volo.Abp.Authorization.IMethodInvocationAuthorizationService,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.IMethodInvocationAuthorizationService");
            feature.AddKnownType("Volo.Abp.Authorization.MethodInvocationAuthorizationContext,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.MethodInvocationAuthorizationContext");
            feature.AddKnownType("Volo.Abp.Authorization.PermissionRequirement,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.PermissionRequirement");
            feature.AddKnownType("Volo.Abp.Authorization.PermissionRequirementHandler,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.PermissionRequirementHandler");
            feature.AddKnownType("Volo.Abp.Authorization.PermissionsRequirement,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.PermissionsRequirement");
            feature.AddKnownType("Volo.Abp.Authorization.PermissionsRequirementHandler,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.PermissionsRequirementHandler");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.AbpPermissionOptions,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.Permissions.AbpPermissionOptions");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.AlwaysAllowPermissionChecker,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.Permissions.AlwaysAllowPermissionChecker");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.ICanAddChildPermission,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.Permissions.ICanAddChildPermission");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.IPermissionChecker,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.Permissions.IPermissionChecker");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.IPermissionDefinitionContext,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.Permissions.IPermissionDefinitionContext");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.IPermissionDefinitionManager,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.Permissions.IPermissionDefinitionManager");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.IPermissionDefinitionProvider,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.Permissions.IPermissionDefinitionProvider");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.IPermissionStore,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.Permissions.IPermissionStore");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.IPermissionValueProvider,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.Permissions.IPermissionValueProvider");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.IPermissionValueProviderManager,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.Permissions.IPermissionValueProviderManager");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.MultiplePermissionGrantResult,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.Permissions.MultiplePermissionGrantResult");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.NullPermissionStore,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.Permissions.NullPermissionStore");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.PermissionDefinition,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.Permissions.PermissionDefinition");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.PermissionDefinitionContext,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.Permissions.PermissionDefinitionContext");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.PermissionDefinitionProvider,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.Permissions.PermissionDefinitionProvider");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.PermissionGrantInfo,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.Permissions.PermissionGrantInfo");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.PermissionGrantResult,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.Permissions.PermissionGrantResult");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.PermissionGroupDefinition,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.Permissions.PermissionGroupDefinition");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.PermissionStateContext,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.Permissions.PermissionStateContext");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.PermissionValueCheckContext,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.Permissions.PermissionValueCheckContext");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.PermissionValueProvider,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.Permissions.PermissionValueProvider");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.PermissionValuesCheckContext,Volo.Abp.Authorization.Abstractions", "Volo.Abp.Authorization.Permissions.PermissionValuesCheckContext");
            feature.AddKnownType("VoloAbpAuthorization_ProcessedByFody,Volo.Abp.Authorization", "<global namespace>.VoloAbpAuthorization_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Authorization", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Authorization.AbpAuthorizationModule,Volo.Abp.Authorization", "Volo.Abp.Authorization.AbpAuthorizationModule");
            feature.AddKnownType("Volo.Abp.Authorization.AbpAuthorizationPolicyProvider,Volo.Abp.Authorization", "Volo.Abp.Authorization.AbpAuthorizationPolicyProvider");
            feature.AddKnownType("Volo.Abp.Authorization.AbpAuthorizationService,Volo.Abp.Authorization", "Volo.Abp.Authorization.AbpAuthorizationService");
            feature.AddKnownType("Volo.Abp.Authorization.AuthorizationInterceptor,Volo.Abp.Authorization", "Volo.Abp.Authorization.AuthorizationInterceptor");
            feature.AddKnownType("Volo.Abp.Authorization.MethodInvocationAuthorizationService,Volo.Abp.Authorization", "Volo.Abp.Authorization.MethodInvocationAuthorizationService");
            feature.AddKnownType("Volo.Abp.Authorization.Localization.AbpAuthorizationResource,Volo.Abp.Authorization", "Volo.Abp.Authorization.Localization.AbpAuthorizationResource");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.AuthenticatedSimpleStateCheckerSerializerContributor,Volo.Abp.Authorization", "Volo.Abp.Authorization.Permissions.AuthenticatedSimpleStateCheckerSerializerContributor");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.ClientPermissionValueProvider,Volo.Abp.Authorization", "Volo.Abp.Authorization.Permissions.ClientPermissionValueProvider");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.IDynamicPermissionDefinitionStore,Volo.Abp.Authorization", "Volo.Abp.Authorization.Permissions.IDynamicPermissionDefinitionStore");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.IStaticPermissionDefinitionStore,Volo.Abp.Authorization", "Volo.Abp.Authorization.Permissions.IStaticPermissionDefinitionStore");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.NullDynamicPermissionDefinitionStore,Volo.Abp.Authorization", "Volo.Abp.Authorization.Permissions.NullDynamicPermissionDefinitionStore");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.PermissionChecker,Volo.Abp.Authorization", "Volo.Abp.Authorization.Permissions.PermissionChecker");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.PermissionDefinitionManager,Volo.Abp.Authorization", "Volo.Abp.Authorization.Permissions.PermissionDefinitionManager");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.PermissionValueProviderManager,Volo.Abp.Authorization", "Volo.Abp.Authorization.Permissions.PermissionValueProviderManager");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.RequireAuthenticatedSimpleStateChecker`1,Volo.Abp.Authorization", "Volo.Abp.Authorization.Permissions.RequireAuthenticatedSimpleStateChecker`1'1");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.RequirePermissionsSimpleBatchStateChecker`1,Volo.Abp.Authorization", "Volo.Abp.Authorization.Permissions.RequirePermissionsSimpleBatchStateChecker`1'1");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.RequirePermissionsSimpleBatchStateCheckerModel`1,Volo.Abp.Authorization", "Volo.Abp.Authorization.Permissions.RequirePermissionsSimpleBatchStateCheckerModel`1'1");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.RequirePermissionsSimpleStateChecker`1,Volo.Abp.Authorization", "Volo.Abp.Authorization.Permissions.RequirePermissionsSimpleStateChecker`1'1");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.RolePermissionValueProvider,Volo.Abp.Authorization", "Volo.Abp.Authorization.Permissions.RolePermissionValueProvider");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.StaticPermissionDefinitionStore,Volo.Abp.Authorization", "Volo.Abp.Authorization.Permissions.StaticPermissionDefinitionStore");
            feature.AddKnownType("Volo.Abp.Authorization.Permissions.UserPermissionValueProvider,Volo.Abp.Authorization", "Volo.Abp.Authorization.Permissions.UserPermissionValueProvider");
            feature.AddKnownType("Volo.Abp.GlobalFeatures.PermissionsSimpleStateCheckerSerializerContributor,Volo.Abp.Authorization", "Volo.Abp.GlobalFeatures.PermissionsSimpleStateCheckerSerializerContributor");
            feature.AddKnownType("VoloAbpBackgroundJobsDomainShared_ProcessedByFody,Volo.Abp.BackgroundJobs.Domain.Shared", "<global namespace>.VoloAbpBackgroundJobsDomainShared_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.BackgroundJobs.Domain.Shared", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.BackgroundJobs.AbpBackgroundJobsDomainSharedModule,Volo.Abp.BackgroundJobs.Domain.Shared", "Volo.Abp.BackgroundJobs.AbpBackgroundJobsDomainSharedModule");
            feature.AddKnownType("VoloAbpBackgroundWorkers_ProcessedByFody,Volo.Abp.BackgroundWorkers", "<global namespace>.VoloAbpBackgroundWorkers_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.BackgroundWorkers", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.BackgroundWorkers.AbpBackgroundWorkerOptions,Volo.Abp.BackgroundWorkers", "Volo.Abp.BackgroundWorkers.AbpBackgroundWorkerOptions");
            feature.AddKnownType("Volo.Abp.BackgroundWorkers.AbpBackgroundWorkersModule,Volo.Abp.BackgroundWorkers", "Volo.Abp.BackgroundWorkers.AbpBackgroundWorkersModule");
            feature.AddKnownType("Volo.Abp.BackgroundWorkers.AsyncPeriodicBackgroundWorkerBase,Volo.Abp.BackgroundWorkers", "Volo.Abp.BackgroundWorkers.AsyncPeriodicBackgroundWorkerBase");
            feature.AddKnownType("Volo.Abp.BackgroundWorkers.BackgroundWorkerBase,Volo.Abp.BackgroundWorkers", "Volo.Abp.BackgroundWorkers.BackgroundWorkerBase");
            feature.AddKnownType("Volo.Abp.BackgroundWorkers.BackgroundWorkerManager,Volo.Abp.BackgroundWorkers", "Volo.Abp.BackgroundWorkers.BackgroundWorkerManager");
            feature.AddKnownType("Volo.Abp.BackgroundWorkers.IBackgroundWorker,Volo.Abp.BackgroundWorkers", "Volo.Abp.BackgroundWorkers.IBackgroundWorker");
            feature.AddKnownType("Volo.Abp.BackgroundWorkers.IBackgroundWorkerManager,Volo.Abp.BackgroundWorkers", "Volo.Abp.BackgroundWorkers.IBackgroundWorkerManager");
            feature.AddKnownType("Volo.Abp.BackgroundWorkers.PeriodicBackgroundWorkerBase,Volo.Abp.BackgroundWorkers", "Volo.Abp.BackgroundWorkers.PeriodicBackgroundWorkerBase");
            feature.AddKnownType("Volo.Abp.BackgroundWorkers.PeriodicBackgroundWorkerContext,Volo.Abp.BackgroundWorkers", "Volo.Abp.BackgroundWorkers.PeriodicBackgroundWorkerContext");
            feature.AddKnownType("VoloAbpCaching_ProcessedByFody,Volo.Abp.Caching", "<global namespace>.VoloAbpCaching_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Caching", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Caching.AbpCachingModule,Volo.Abp.Caching", "Volo.Abp.Caching.AbpCachingModule");
            feature.AddKnownType("Volo.Abp.Caching.AbpDistributedCacheOptions,Volo.Abp.Caching", "Volo.Abp.Caching.AbpDistributedCacheOptions");
            feature.AddKnownType("Volo.Abp.Caching.CacheNameAttribute,Volo.Abp.Caching", "Volo.Abp.Caching.CacheNameAttribute");
            feature.AddKnownType("Volo.Abp.Caching.DistributedCache`1,Volo.Abp.Caching", "Volo.Abp.Caching.DistributedCache`1'1");
            feature.AddKnownType("Volo.Abp.Caching.DistributedCache`2,Volo.Abp.Caching", "Volo.Abp.Caching.DistributedCache`2'2");
            feature.AddKnownType("Volo.Abp.Caching.DistributedCacheKeyNormalizeArgs,Volo.Abp.Caching", "Volo.Abp.Caching.DistributedCacheKeyNormalizeArgs");
            feature.AddKnownType("Volo.Abp.Caching.DistributedCacheKeyNormalizer,Volo.Abp.Caching", "Volo.Abp.Caching.DistributedCacheKeyNormalizer");
            feature.AddKnownType("Volo.Abp.Caching.ICacheSupportsMultipleItems,Volo.Abp.Caching", "Volo.Abp.Caching.ICacheSupportsMultipleItems");
            feature.AddKnownType("Volo.Abp.Caching.IDistributedCache`1,Volo.Abp.Caching", "Volo.Abp.Caching.IDistributedCache`1'1");
            feature.AddKnownType("Volo.Abp.Caching.IDistributedCache`2,Volo.Abp.Caching", "Volo.Abp.Caching.IDistributedCache`2'2");
            feature.AddKnownType("Volo.Abp.Caching.IDistributedCacheKeyNormalizer,Volo.Abp.Caching", "Volo.Abp.Caching.IDistributedCacheKeyNormalizer");
            feature.AddKnownType("Volo.Abp.Caching.IDistributedCacheSerializer,Volo.Abp.Caching", "Volo.Abp.Caching.IDistributedCacheSerializer");
            feature.AddKnownType("Volo.Abp.Caching.UnitOfWorkCacheItem`1,Volo.Abp.Caching", "Volo.Abp.Caching.UnitOfWorkCacheItem`1'1");
            feature.AddKnownType("Volo.Abp.Caching.Utf8JsonDistributedCacheSerializer,Volo.Abp.Caching", "Volo.Abp.Caching.Utf8JsonDistributedCacheSerializer");
            feature.AddKnownType("VoloAbpCore_ProcessedByFody,Volo.Abp.Core", "<global namespace>.VoloAbpCore_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Core", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.Configuration.AbpConfigurationBuilderOptions,Volo.Abp.Core", "Microsoft.Extensions.Configuration.AbpConfigurationBuilderOptions");
            feature.AddKnownType("System.Linq.PredicateOperator", "PredicateOperator");
            feature.AddKnownType("System.Linq.PredicateBuilder+RebindParameterVisitor", "RebindParameterVisitor");
            feature.AddKnownType("System.Linq.ExpressionStarter`1", "ExpressionStarter`1'1");
            feature.AddKnownType("System.Runtime.IOSPlatformProvider", "IOSPlatformProvider");
            feature.AddKnownType("System.Runtime.OSPlatformProvider", "OSPlatformProvider");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.AbpApplicationBase,Volo.Abp.Core", "Volo.Abp.AbpApplicationBase");
            feature.AddKnownType("Volo.Abp.AbpApplicationCreationOptions,Volo.Abp.Core", "Volo.Abp.AbpApplicationCreationOptions");
            feature.AddKnownType("Volo.Abp.AbpApplicationWithExternalServiceProvider,Volo.Abp.Core", "Volo.Abp.AbpApplicationWithExternalServiceProvider");
            feature.AddKnownType("Volo.Abp.AbpApplicationWithInternalServiceProvider,Volo.Abp.Core", "Volo.Abp.AbpApplicationWithInternalServiceProvider");
            feature.AddKnownType("Volo.Abp.AbpException,Volo.Abp.Core", "Volo.Abp.AbpException");
            feature.AddKnownType("Volo.Abp.AbpInitializationException,Volo.Abp.Core", "Volo.Abp.AbpInitializationException");
            feature.AddKnownType("Volo.Abp.AbpShutdownException,Volo.Abp.Core", "Volo.Abp.AbpShutdownException");
            feature.AddKnownType("Volo.Abp.ApplicationInitializationContext,Volo.Abp.Core", "Volo.Abp.ApplicationInitializationContext");
            feature.AddKnownType("Volo.Abp.ApplicationServiceTypes,Volo.Abp.Core", "Volo.Abp.ApplicationServiceTypes");
            feature.AddKnownType("Volo.Abp.ApplicationShutdownContext,Volo.Abp.Core", "Volo.Abp.ApplicationShutdownContext");
            feature.AddKnownType("Volo.Abp.AsyncDisposeFunc,Volo.Abp.Core", "Volo.Abp.AsyncDisposeFunc");
            feature.AddKnownType("Volo.Abp.BusinessException,Volo.Abp.Core", "Volo.Abp.BusinessException");
            feature.AddKnownType("Volo.Abp.DisposeAction,Volo.Abp.Core", "Volo.Abp.DisposeAction");
            feature.AddKnownType("Volo.Abp.IAbpApplication,Volo.Abp.Core", "Volo.Abp.IAbpApplication");
            feature.AddKnownType("Volo.Abp.IAbpApplicationWithExternalServiceProvider,Volo.Abp.Core", "Volo.Abp.IAbpApplicationWithExternalServiceProvider");
            feature.AddKnownType("Volo.Abp.IAbpApplicationWithInternalServiceProvider,Volo.Abp.Core", "Volo.Abp.IAbpApplicationWithInternalServiceProvider");
            feature.AddKnownType("Volo.Abp.IApplicationInfoAccessor,Volo.Abp.Core", "Volo.Abp.IApplicationInfoAccessor");
            feature.AddKnownType("Volo.Abp.IBusinessException,Volo.Abp.Core", "Volo.Abp.IBusinessException");
            feature.AddKnownType("Volo.Abp.IntegrationServiceAttribute,Volo.Abp.Core", "Volo.Abp.IntegrationServiceAttribute");
            feature.AddKnownType("Volo.Abp.IOnApplicationInitialization,Volo.Abp.Core", "Volo.Abp.IOnApplicationInitialization");
            feature.AddKnownType("Volo.Abp.IOnApplicationShutdown,Volo.Abp.Core", "Volo.Abp.IOnApplicationShutdown");
            feature.AddKnownType("Volo.Abp.IRemoteService,Volo.Abp.Core", "Volo.Abp.IRemoteService");
            feature.AddKnownType("Volo.Abp.ISoftDelete,Volo.Abp.Core", "Volo.Abp.ISoftDelete");
            feature.AddKnownType("Volo.Abp.IUserFriendlyException,Volo.Abp.Core", "Volo.Abp.IUserFriendlyException");
            feature.AddKnownType("Volo.Abp.NamedTypeSelector,Volo.Abp.Core", "Volo.Abp.NamedTypeSelector");
            feature.AddKnownType("Volo.Abp.NameValue,Volo.Abp.Core", "Volo.Abp.NameValue");
            feature.AddKnownType("Volo.Abp.NameValue`1,Volo.Abp.Core", "Volo.Abp.NameValue`1'1");
            feature.AddKnownType("Volo.Abp.NullAsyncDisposable,Volo.Abp.Core", "Volo.Abp.NullAsyncDisposable");
            feature.AddKnownType("Volo.Abp.NullDisposable,Volo.Abp.Core", "Volo.Abp.NullDisposable");
            feature.AddKnownType("Volo.Abp.RemoteServiceAttribute,Volo.Abp.Core", "Volo.Abp.RemoteServiceAttribute");
            feature.AddKnownType("Volo.Abp.UserFriendlyException,Volo.Abp.Core", "Volo.Abp.UserFriendlyException");
            feature.AddKnownType("Volo.Abp.Aspects.IAvoidDuplicateCrossCuttingConcerns,Volo.Abp.Core", "Volo.Abp.Aspects.IAvoidDuplicateCrossCuttingConcerns");
            feature.AddKnownType("Volo.Abp.Bundling.BundleContext,Volo.Abp.Core", "Volo.Abp.Bundling.BundleContext");
            feature.AddKnownType("Volo.Abp.Bundling.BundleDefinition,Volo.Abp.Core", "Volo.Abp.Bundling.BundleDefinition");
            feature.AddKnownType("Volo.Abp.Bundling.BundleParameterDictionary,Volo.Abp.Core", "Volo.Abp.Bundling.BundleParameterDictionary");
            feature.AddKnownType("Volo.Abp.Bundling.IBundleContributor,Volo.Abp.Core", "Volo.Abp.Bundling.IBundleContributor");
            feature.AddKnownType("Volo.Abp.Collections.ITypeList,Volo.Abp.Core", "Volo.Abp.Collections.ITypeList");
            feature.AddKnownType("Volo.Abp.Collections.ITypeList`1,Volo.Abp.Core", "Volo.Abp.Collections.ITypeList`1'1");
            feature.AddKnownType("Volo.Abp.Collections.TypeList,Volo.Abp.Core", "Volo.Abp.Collections.TypeList");
            feature.AddKnownType("Volo.Abp.Collections.TypeList`1,Volo.Abp.Core", "Volo.Abp.Collections.TypeList`1'1");
            feature.AddKnownType("Volo.Abp.Content.IRemoteStreamContent,Volo.Abp.Core", "Volo.Abp.Content.IRemoteStreamContent");
            feature.AddKnownType("Volo.Abp.Content.RemoteStreamContent,Volo.Abp.Core", "Volo.Abp.Content.RemoteStreamContent");
            feature.AddKnownType("Volo.Abp.DependencyInjection.AbpLazyServiceProvider,Volo.Abp.Core", "Volo.Abp.DependencyInjection.AbpLazyServiceProvider");
            feature.AddKnownType("Volo.Abp.DependencyInjection.CachedServiceProvider,Volo.Abp.Core", "Volo.Abp.DependencyInjection.CachedServiceProvider");
            feature.AddKnownType("Volo.Abp.DependencyInjection.CachedServiceProviderBase,Volo.Abp.Core", "Volo.Abp.DependencyInjection.CachedServiceProviderBase");
            feature.AddKnownType("Volo.Abp.DependencyInjection.ConventionalRegistrarBase,Volo.Abp.Core", "Volo.Abp.DependencyInjection.ConventionalRegistrarBase");
            feature.AddKnownType("Volo.Abp.DependencyInjection.ConventionalRegistrarList,Volo.Abp.Core", "Volo.Abp.DependencyInjection.ConventionalRegistrarList");
            feature.AddKnownType("Volo.Abp.DependencyInjection.DefaultConventionalRegistrar,Volo.Abp.Core", "Volo.Abp.DependencyInjection.DefaultConventionalRegistrar");
            feature.AddKnownType("Volo.Abp.DependencyInjection.DependencyAttribute,Volo.Abp.Core", "Volo.Abp.DependencyInjection.DependencyAttribute");
            feature.AddKnownType("Volo.Abp.DependencyInjection.DisableConventionalRegistrationAttribute,Volo.Abp.Core", "Volo.Abp.DependencyInjection.DisableConventionalRegistrationAttribute");
            feature.AddKnownType("Volo.Abp.DependencyInjection.DisablePropertyInjectionAttribute,Volo.Abp.Core", "Volo.Abp.DependencyInjection.DisablePropertyInjectionAttribute");
            feature.AddKnownType("Volo.Abp.DependencyInjection.ExposeServicesAttribute,Volo.Abp.Core", "Volo.Abp.DependencyInjection.ExposeServicesAttribute");
            feature.AddKnownType("Volo.Abp.DependencyInjection.IAbpLazyServiceProvider,Volo.Abp.Core", "Volo.Abp.DependencyInjection.IAbpLazyServiceProvider");
            feature.AddKnownType("Volo.Abp.DependencyInjection.ICachedServiceProvider,Volo.Abp.Core", "Volo.Abp.DependencyInjection.ICachedServiceProvider");
            feature.AddKnownType("Volo.Abp.DependencyInjection.ICachedServiceProviderBase,Volo.Abp.Core", "Volo.Abp.DependencyInjection.ICachedServiceProviderBase");
            feature.AddKnownType("Volo.Abp.DependencyInjection.IClientScopeServiceProviderAccessor,Volo.Abp.Core", "Volo.Abp.DependencyInjection.IClientScopeServiceProviderAccessor");
            feature.AddKnownType("Volo.Abp.DependencyInjection.IConventionalRegistrar,Volo.Abp.Core", "Volo.Abp.DependencyInjection.IConventionalRegistrar");
            feature.AddKnownType("Volo.Abp.DependencyInjection.IExposedServiceTypesProvider,Volo.Abp.Core", "Volo.Abp.DependencyInjection.IExposedServiceTypesProvider");
            feature.AddKnownType("Volo.Abp.DependencyInjection.IObjectAccessor`1,Volo.Abp.Core", "Volo.Abp.DependencyInjection.IObjectAccessor`1'1");
            feature.AddKnownType("Volo.Abp.DependencyInjection.IOnServiceExposingContext,Volo.Abp.Core", "Volo.Abp.DependencyInjection.IOnServiceExposingContext");
            feature.AddKnownType("Volo.Abp.DependencyInjection.IOnServiceRegistredContext,Volo.Abp.Core", "Volo.Abp.DependencyInjection.IOnServiceRegistredContext");
            feature.AddKnownType("Volo.Abp.DependencyInjection.IRootServiceProvider,Volo.Abp.Core", "Volo.Abp.DependencyInjection.IRootServiceProvider");
            feature.AddKnownType("Volo.Abp.DependencyInjection.IScopedDependency,Volo.Abp.Core", "Volo.Abp.DependencyInjection.IScopedDependency");
            feature.AddKnownType("Volo.Abp.DependencyInjection.IServiceProviderAccessor,Volo.Abp.Core", "Volo.Abp.DependencyInjection.IServiceProviderAccessor");
            feature.AddKnownType("Volo.Abp.DependencyInjection.ISingletonDependency,Volo.Abp.Core", "Volo.Abp.DependencyInjection.ISingletonDependency");
            feature.AddKnownType("Volo.Abp.DependencyInjection.ITransientCachedServiceProvider,Volo.Abp.Core", "Volo.Abp.DependencyInjection.ITransientCachedServiceProvider");
            feature.AddKnownType("Volo.Abp.DependencyInjection.ITransientDependency,Volo.Abp.Core", "Volo.Abp.DependencyInjection.ITransientDependency");
            feature.AddKnownType("Volo.Abp.DependencyInjection.ObjectAccessor`1,Volo.Abp.Core", "Volo.Abp.DependencyInjection.ObjectAccessor`1'1");
            feature.AddKnownType("Volo.Abp.DependencyInjection.OnServiceExposingContext,Volo.Abp.Core", "Volo.Abp.DependencyInjection.OnServiceExposingContext");
            feature.AddKnownType("Volo.Abp.DependencyInjection.OnServiceRegistredContext,Volo.Abp.Core", "Volo.Abp.DependencyInjection.OnServiceRegistredContext");
            feature.AddKnownType("Volo.Abp.DependencyInjection.RootServiceProvider,Volo.Abp.Core", "Volo.Abp.DependencyInjection.RootServiceProvider");
            feature.AddKnownType("Volo.Abp.DependencyInjection.ServiceExposingActionList,Volo.Abp.Core", "Volo.Abp.DependencyInjection.ServiceExposingActionList");
            feature.AddKnownType("Volo.Abp.DependencyInjection.ServiceRegistrationActionList,Volo.Abp.Core", "Volo.Abp.DependencyInjection.ServiceRegistrationActionList");
            feature.AddKnownType("Volo.Abp.DependencyInjection.TransientCachedServiceProvider,Volo.Abp.Core", "Volo.Abp.DependencyInjection.TransientCachedServiceProvider");
            feature.AddKnownType("Volo.Abp.DynamicProxy.AbpInterceptor,Volo.Abp.Core", "Volo.Abp.DynamicProxy.AbpInterceptor");
            feature.AddKnownType("Volo.Abp.DynamicProxy.IAbpInterceptor,Volo.Abp.Core", "Volo.Abp.DynamicProxy.IAbpInterceptor");
            feature.AddKnownType("Volo.Abp.DynamicProxy.IAbpMethodInvocation,Volo.Abp.Core", "Volo.Abp.DynamicProxy.IAbpMethodInvocation");
            feature.AddKnownType("Volo.Abp.ExceptionHandling.ExceptionNotificationContext,Volo.Abp.Core", "Volo.Abp.ExceptionHandling.ExceptionNotificationContext");
            feature.AddKnownType("Volo.Abp.ExceptionHandling.ExceptionNotifier,Volo.Abp.Core", "Volo.Abp.ExceptionHandling.ExceptionNotifier");
            feature.AddKnownType("Volo.Abp.ExceptionHandling.ExceptionSubscriber,Volo.Abp.Core", "Volo.Abp.ExceptionHandling.ExceptionSubscriber");
            feature.AddKnownType("Volo.Abp.ExceptionHandling.IExceptionNotifier,Volo.Abp.Core", "Volo.Abp.ExceptionHandling.IExceptionNotifier");
            feature.AddKnownType("Volo.Abp.ExceptionHandling.IExceptionSubscriber,Volo.Abp.Core", "Volo.Abp.ExceptionHandling.IExceptionSubscriber");
            feature.AddKnownType("Volo.Abp.ExceptionHandling.IHasErrorCode,Volo.Abp.Core", "Volo.Abp.ExceptionHandling.IHasErrorCode");
            feature.AddKnownType("Volo.Abp.ExceptionHandling.IHasErrorDetails,Volo.Abp.Core", "Volo.Abp.ExceptionHandling.IHasErrorDetails");
            feature.AddKnownType("Volo.Abp.ExceptionHandling.IHasHttpStatusCode,Volo.Abp.Core", "Volo.Abp.ExceptionHandling.IHasHttpStatusCode");
            feature.AddKnownType("Volo.Abp.ExceptionHandling.ILocalizeErrorMessage,Volo.Abp.Core", "Volo.Abp.ExceptionHandling.ILocalizeErrorMessage");
            feature.AddKnownType("Volo.Abp.ExceptionHandling.NullExceptionNotifier,Volo.Abp.Core", "Volo.Abp.ExceptionHandling.NullExceptionNotifier");
            feature.AddKnownType("Volo.Abp.Localization.LocalizationContext,Volo.Abp.Core", "Volo.Abp.Localization.LocalizationContext");
            feature.AddKnownType("Volo.Abp.Logging.AbpInitLogEntry,Volo.Abp.Core", "Volo.Abp.Logging.AbpInitLogEntry");
            feature.AddKnownType("Volo.Abp.Logging.DefaultInitLogger`1,Volo.Abp.Core", "Volo.Abp.Logging.DefaultInitLogger`1'1");
            feature.AddKnownType("Volo.Abp.Logging.DefaultInitLoggerFactory,Volo.Abp.Core", "Volo.Abp.Logging.DefaultInitLoggerFactory");
            feature.AddKnownType("Volo.Abp.Logging.IExceptionWithSelfLogging,Volo.Abp.Core", "Volo.Abp.Logging.IExceptionWithSelfLogging");
            feature.AddKnownType("Volo.Abp.Logging.IHasLogLevel,Volo.Abp.Core", "Volo.Abp.Logging.IHasLogLevel");
            feature.AddKnownType("Volo.Abp.Logging.IInitLogger`1,Volo.Abp.Core", "Volo.Abp.Logging.IInitLogger`1'1");
            feature.AddKnownType("Volo.Abp.Logging.IInitLoggerFactory,Volo.Abp.Core", "Volo.Abp.Logging.IInitLoggerFactory");
            feature.AddKnownType("Volo.Abp.Modularity.AbpModule,Volo.Abp.Core", "Volo.Abp.Modularity.AbpModule");
            feature.AddKnownType("Volo.Abp.Modularity.AbpModuleDescriptor,Volo.Abp.Core", "Volo.Abp.Modularity.AbpModuleDescriptor");
            feature.AddKnownType("Volo.Abp.Modularity.AbpModuleLifecycleOptions,Volo.Abp.Core", "Volo.Abp.Modularity.AbpModuleLifecycleOptions");
            feature.AddKnownType("Volo.Abp.Modularity.OnApplicationInitializationModuleLifecycleContributor,Volo.Abp.Core", "Volo.Abp.Modularity.OnApplicationInitializationModuleLifecycleContributor");
            feature.AddKnownType("Volo.Abp.Modularity.OnApplicationShutdownModuleLifecycleContributor,Volo.Abp.Core", "Volo.Abp.Modularity.OnApplicationShutdownModuleLifecycleContributor");
            feature.AddKnownType("Volo.Abp.Modularity.OnPreApplicationInitializationModuleLifecycleContributor,Volo.Abp.Core", "Volo.Abp.Modularity.OnPreApplicationInitializationModuleLifecycleContributor");
            feature.AddKnownType("Volo.Abp.Modularity.OnPostApplicationInitializationModuleLifecycleContributor,Volo.Abp.Core", "Volo.Abp.Modularity.OnPostApplicationInitializationModuleLifecycleContributor");
            feature.AddKnownType("Volo.Abp.Modularity.DependsOnAttribute,Volo.Abp.Core", "Volo.Abp.Modularity.DependsOnAttribute");
            feature.AddKnownType("Volo.Abp.Modularity.IAbpModule,Volo.Abp.Core", "Volo.Abp.Modularity.IAbpModule");
            feature.AddKnownType("Volo.Abp.Modularity.IAbpModuleDescriptor,Volo.Abp.Core", "Volo.Abp.Modularity.IAbpModuleDescriptor");
            feature.AddKnownType("Volo.Abp.Modularity.IDependedTypesProvider,Volo.Abp.Core", "Volo.Abp.Modularity.IDependedTypesProvider");
            feature.AddKnownType("Volo.Abp.Modularity.IModuleContainer,Volo.Abp.Core", "Volo.Abp.Modularity.IModuleContainer");
            feature.AddKnownType("Volo.Abp.Modularity.IModuleLifecycleContributor,Volo.Abp.Core", "Volo.Abp.Modularity.IModuleLifecycleContributor");
            feature.AddKnownType("Volo.Abp.Modularity.IModuleLoader,Volo.Abp.Core", "Volo.Abp.Modularity.IModuleLoader");
            feature.AddKnownType("Volo.Abp.Modularity.IModuleManager,Volo.Abp.Core", "Volo.Abp.Modularity.IModuleManager");
            feature.AddKnownType("Volo.Abp.Modularity.IOnPostApplicationInitialization,Volo.Abp.Core", "Volo.Abp.Modularity.IOnPostApplicationInitialization");
            feature.AddKnownType("Volo.Abp.Modularity.IOnPreApplicationInitialization,Volo.Abp.Core", "Volo.Abp.Modularity.IOnPreApplicationInitialization");
            feature.AddKnownType("Volo.Abp.Modularity.IPostConfigureServices,Volo.Abp.Core", "Volo.Abp.Modularity.IPostConfigureServices");
            feature.AddKnownType("Volo.Abp.Modularity.IPreConfigureServices,Volo.Abp.Core", "Volo.Abp.Modularity.IPreConfigureServices");
            feature.AddKnownType("Volo.Abp.Modularity.ModuleLifecycleContributorBase,Volo.Abp.Core", "Volo.Abp.Modularity.ModuleLifecycleContributorBase");
            feature.AddKnownType("Volo.Abp.Modularity.ModuleLoader,Volo.Abp.Core", "Volo.Abp.Modularity.ModuleLoader");
            feature.AddKnownType("Volo.Abp.Modularity.ModuleManager,Volo.Abp.Core", "Volo.Abp.Modularity.ModuleManager");
            feature.AddKnownType("Volo.Abp.Modularity.ServiceConfigurationContext,Volo.Abp.Core", "Volo.Abp.Modularity.ServiceConfigurationContext");
            feature.AddKnownType("Volo.Abp.Modularity.PlugIns.FilePlugInSource,Volo.Abp.Core", "Volo.Abp.Modularity.PlugIns.FilePlugInSource");
            feature.AddKnownType("Volo.Abp.Modularity.PlugIns.FolderPlugInSource,Volo.Abp.Core", "Volo.Abp.Modularity.PlugIns.FolderPlugInSource");
            feature.AddKnownType("Volo.Abp.Modularity.PlugIns.IPlugInSource,Volo.Abp.Core", "Volo.Abp.Modularity.PlugIns.IPlugInSource");
            feature.AddKnownType("Volo.Abp.Modularity.PlugIns.PlugInSourceList,Volo.Abp.Core", "Volo.Abp.Modularity.PlugIns.PlugInSourceList");
            feature.AddKnownType("Volo.Abp.Modularity.PlugIns.TypePlugInSource,Volo.Abp.Core", "Volo.Abp.Modularity.PlugIns.TypePlugInSource");
            feature.AddKnownType("Volo.Abp.Options.AbpDynamicOptionsManager`1,Volo.Abp.Core", "Volo.Abp.Options.AbpDynamicOptionsManager`1'1");
            feature.AddKnownType("Volo.Abp.Options.AbpOptionsFactory`1,Volo.Abp.Core", "Volo.Abp.Options.AbpOptionsFactory`1'1");
            feature.AddKnownType("Volo.Abp.Options.PreConfigureActionList`1,Volo.Abp.Core", "Volo.Abp.Options.PreConfigureActionList`1'1");
            feature.AddKnownType("Volo.Abp.Reflection.AssemblyFinder,Volo.Abp.Core", "Volo.Abp.Reflection.AssemblyFinder");
            feature.AddKnownType("Volo.Abp.Reflection.IAssemblyFinder,Volo.Abp.Core", "Volo.Abp.Reflection.IAssemblyFinder");
            feature.AddKnownType("Volo.Abp.Reflection.ITypeFinder,Volo.Abp.Core", "Volo.Abp.Reflection.ITypeFinder");
            feature.AddKnownType("Volo.Abp.Reflection.TypeFinder,Volo.Abp.Core", "Volo.Abp.Reflection.TypeFinder");
            feature.AddKnownType("Volo.Abp.SimpleStateChecking.AbpSimpleStateCheckerOptions`1,Volo.Abp.Core", "Volo.Abp.SimpleStateChecking.AbpSimpleStateCheckerOptions`1'1");
            feature.AddKnownType("Volo.Abp.SimpleStateChecking.IHasSimpleStateCheckers`1,Volo.Abp.Core", "Volo.Abp.SimpleStateChecking.IHasSimpleStateCheckers`1'1");
            feature.AddKnownType("Volo.Abp.SimpleStateChecking.ISimpleBatchStateChecker`1,Volo.Abp.Core", "Volo.Abp.SimpleStateChecking.ISimpleBatchStateChecker`1'1");
            feature.AddKnownType("Volo.Abp.SimpleStateChecking.ISimpleStateChecker`1,Volo.Abp.Core", "Volo.Abp.SimpleStateChecking.ISimpleStateChecker`1'1");
            feature.AddKnownType("Volo.Abp.SimpleStateChecking.ISimpleStateCheckerManager`1,Volo.Abp.Core", "Volo.Abp.SimpleStateChecking.ISimpleStateCheckerManager`1'1");
            feature.AddKnownType("Volo.Abp.SimpleStateChecking.ISimpleStateCheckerSerializer,Volo.Abp.Core", "Volo.Abp.SimpleStateChecking.ISimpleStateCheckerSerializer");
            feature.AddKnownType("Volo.Abp.SimpleStateChecking.ISimpleStateCheckerSerializerContributor,Volo.Abp.Core", "Volo.Abp.SimpleStateChecking.ISimpleStateCheckerSerializerContributor");
            feature.AddKnownType("Volo.Abp.SimpleStateChecking.SimpleBatchStateCheckerBase`1,Volo.Abp.Core", "Volo.Abp.SimpleStateChecking.SimpleBatchStateCheckerBase`1'1");
            feature.AddKnownType("Volo.Abp.SimpleStateChecking.SimpleBatchStateCheckerContext`1,Volo.Abp.Core", "Volo.Abp.SimpleStateChecking.SimpleBatchStateCheckerContext`1'1");
            feature.AddKnownType("Volo.Abp.SimpleStateChecking.SimpleStateCheckerContext`1,Volo.Abp.Core", "Volo.Abp.SimpleStateChecking.SimpleStateCheckerContext`1'1");
            feature.AddKnownType("Volo.Abp.SimpleStateChecking.SimpleStateCheckerManager`1,Volo.Abp.Core", "Volo.Abp.SimpleStateChecking.SimpleStateCheckerManager`1'1");
            feature.AddKnownType("Volo.Abp.SimpleStateChecking.SimpleStateCheckerResult`1,Volo.Abp.Core", "Volo.Abp.SimpleStateChecking.SimpleStateCheckerResult`1'1");
            feature.AddKnownType("Volo.Abp.SimpleStateChecking.SimpleStateCheckerSerializer,Volo.Abp.Core", "Volo.Abp.SimpleStateChecking.SimpleStateCheckerSerializer");
            feature.AddKnownType("Volo.Abp.Text.StringHelper,Volo.Abp.Core", "Volo.Abp.Text.StringHelper");
            feature.AddKnownType("Volo.Abp.Text.Formatting.FormatStringToken,Volo.Abp.Core", "Volo.Abp.Text.Formatting.FormatStringToken");
            feature.AddKnownType("Volo.Abp.Text.Formatting.FormatStringTokenizer,Volo.Abp.Core", "Volo.Abp.Text.Formatting.FormatStringTokenizer");
            feature.AddKnownType("Volo.Abp.Text.Formatting.FormatStringTokenType,Volo.Abp.Core", "Volo.Abp.Text.Formatting.FormatStringTokenType");
            feature.AddKnownType("Volo.Abp.Text.Formatting.FormattedStringValueExtracter,Volo.Abp.Core", "Volo.Abp.Text.Formatting.FormattedStringValueExtracter");
            feature.AddKnownType("Volo.Abp.Text.Formatting.FormattedStringValueExtracter+ExtractionResult,Volo.Abp.Core", "Volo.Abp.Text.Formatting.Volo.Abp.Text.Formatting.FormattedStringValueExtracter.ExtractionResult");
            feature.AddKnownType("Volo.Abp.Threading.AsyncOneTimeRunner,Volo.Abp.Core", "Volo.Abp.Threading.AsyncOneTimeRunner");
            feature.AddKnownType("Volo.Abp.Threading.OneTimeRunner,Volo.Abp.Core", "Volo.Abp.Threading.OneTimeRunner");
            feature.AddKnownType("Volo.Abp.Tracing.AbpCorrelationIdOptions,Volo.Abp.Core", "Volo.Abp.Tracing.AbpCorrelationIdOptions");
            feature.AddKnownType("Volo.Abp.Tracing.DefaultCorrelationIdProvider,Volo.Abp.Core", "Volo.Abp.Tracing.DefaultCorrelationIdProvider");
            feature.AddKnownType("Volo.Abp.Tracing.ICorrelationIdProvider,Volo.Abp.Core", "Volo.Abp.Tracing.ICorrelationIdProvider");
            feature.AddKnownType("Volo.Abp.Validation.DynamicMaxLengthAttribute,Volo.Abp.Core", "Volo.Abp.Validation.DynamicMaxLengthAttribute");
            feature.AddKnownType("Volo.Abp.Validation.DynamicRangeAttribute,Volo.Abp.Core", "Volo.Abp.Validation.DynamicRangeAttribute");
            feature.AddKnownType("Volo.Abp.Validation.DynamicStringLengthAttribute,Volo.Abp.Core", "Volo.Abp.Validation.DynamicStringLengthAttribute");
            feature.AddKnownType("VoloAbpData_ProcessedByFody,Volo.Abp.Data", "<global namespace>.VoloAbpData_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Data", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Data.AbpDatabaseInfo,Volo.Abp.Data", "Volo.Abp.Data.AbpDatabaseInfo");
            feature.AddKnownType("Volo.Abp.Data.AbpDatabaseInfoDictionary,Volo.Abp.Data", "Volo.Abp.Data.AbpDatabaseInfoDictionary");
            feature.AddKnownType("Volo.Abp.Data.AbpDataFilterOptions,Volo.Abp.Data", "Volo.Abp.Data.AbpDataFilterOptions");
            feature.AddKnownType("Volo.Abp.Data.AbpDataMigrationEnvironment,Volo.Abp.Data", "Volo.Abp.Data.AbpDataMigrationEnvironment");
            feature.AddKnownType("Volo.Abp.Data.AbpDataModule,Volo.Abp.Data", "Volo.Abp.Data.AbpDataModule");
            feature.AddKnownType("Volo.Abp.Data.AbpDataSeedOptions,Volo.Abp.Data", "Volo.Abp.Data.AbpDataSeedOptions");
            feature.AddKnownType("Volo.Abp.Data.AbpDbConcurrencyException,Volo.Abp.Data", "Volo.Abp.Data.AbpDbConcurrencyException");
            feature.AddKnownType("Volo.Abp.Data.AbpDbConnectionOptions,Volo.Abp.Data", "Volo.Abp.Data.AbpDbConnectionOptions");
            feature.AddKnownType("Volo.Abp.Data.ApplyDatabaseMigrationsEto,Volo.Abp.Data", "Volo.Abp.Data.ApplyDatabaseMigrationsEto");
            feature.AddKnownType("Volo.Abp.Data.ConnectionStringNameAttribute,Volo.Abp.Data", "Volo.Abp.Data.ConnectionStringNameAttribute");
            feature.AddKnownType("Volo.Abp.Data.ConnectionStrings,Volo.Abp.Data", "Volo.Abp.Data.ConnectionStrings");
            feature.AddKnownType("Volo.Abp.Data.DataFilter,Volo.Abp.Data", "Volo.Abp.Data.DataFilter");
            feature.AddKnownType("Volo.Abp.Data.DataFilter`1,Volo.Abp.Data", "Volo.Abp.Data.DataFilter`1'1");
            feature.AddKnownType("Volo.Abp.Data.DataFilterState,Volo.Abp.Data", "Volo.Abp.Data.DataFilterState");
            feature.AddKnownType("Volo.Abp.Data.DataSeedContext,Volo.Abp.Data", "Volo.Abp.Data.DataSeedContext");
            feature.AddKnownType("Volo.Abp.Data.DataSeedContributorList,Volo.Abp.Data", "Volo.Abp.Data.DataSeedContributorList");
            feature.AddKnownType("Volo.Abp.Data.DataSeeder,Volo.Abp.Data", "Volo.Abp.Data.DataSeeder");
            feature.AddKnownType("Volo.Abp.Data.DefaultConnectionStringResolver,Volo.Abp.Data", "Volo.Abp.Data.DefaultConnectionStringResolver");
            feature.AddKnownType("Volo.Abp.Data.IConnectionStringResolver,Volo.Abp.Data", "Volo.Abp.Data.IConnectionStringResolver");
            feature.AddKnownType("Volo.Abp.Data.IDataFilter`1,Volo.Abp.Data", "Volo.Abp.Data.IDataFilter`1'1");
            feature.AddKnownType("Volo.Abp.Data.IDataFilter,Volo.Abp.Data", "Volo.Abp.Data.IDataFilter");
            feature.AddKnownType("Volo.Abp.Data.IDataSeedContributor,Volo.Abp.Data", "Volo.Abp.Data.IDataSeedContributor");
            feature.AddKnownType("Volo.Abp.Data.IDataSeeder,Volo.Abp.Data", "Volo.Abp.Data.IDataSeeder");
            feature.AddKnownType("Volo.Abp.Domain.Entities.IHasConcurrencyStamp,Volo.Abp.Data", "Volo.Abp.Domain.Entities.IHasConcurrencyStamp");
            feature.AddKnownType("VoloAbpDddApplicationContracts_ProcessedByFody,Volo.Abp.Ddd.Application.Contracts", "<global namespace>.VoloAbpDddApplicationContracts_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Ddd.Application.Contracts", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Application.AbpDddApplicationContractsModule,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.AbpDddApplicationContractsModule");
            feature.AddKnownType("Volo.Abp.Application.Dtos.AuditedEntityDto,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.AuditedEntityDto");
            feature.AddKnownType("Volo.Abp.Application.Dtos.AuditedEntityDto`1,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.AuditedEntityDto`1'1");
            feature.AddKnownType("Volo.Abp.Application.Dtos.AuditedEntityWithUserDto`1,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.AuditedEntityWithUserDto`1'1");
            feature.AddKnownType("Volo.Abp.Application.Dtos.AuditedEntityWithUserDto`2,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.AuditedEntityWithUserDto`2'2");
            feature.AddKnownType("Volo.Abp.Application.Dtos.CreationAuditedEntityDto,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.CreationAuditedEntityDto");
            feature.AddKnownType("Volo.Abp.Application.Dtos.CreationAuditedEntityDto`1,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.CreationAuditedEntityDto`1'1");
            feature.AddKnownType("Volo.Abp.Application.Dtos.CreationAuditedEntityWithUserDto`1,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.CreationAuditedEntityWithUserDto`1'1");
            feature.AddKnownType("Volo.Abp.Application.Dtos.CreationAuditedEntityWithUserDto`2,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.CreationAuditedEntityWithUserDto`2'2");
            feature.AddKnownType("Volo.Abp.Application.Dtos.EntityDto,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.EntityDto");
            feature.AddKnownType("Volo.Abp.Application.Dtos.EntityDto`1,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.EntityDto`1'1");
            feature.AddKnownType("Volo.Abp.Application.Dtos.ExtensibleAuditedEntityDto`1,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.ExtensibleAuditedEntityDto`1'1");
            feature.AddKnownType("Volo.Abp.Application.Dtos.ExtensibleAuditedEntityDto,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.ExtensibleAuditedEntityDto");
            feature.AddKnownType("Volo.Abp.Application.Dtos.ExtensibleAuditedEntityWithUserDto`2,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.ExtensibleAuditedEntityWithUserDto`2'2");
            feature.AddKnownType("Volo.Abp.Application.Dtos.ExtensibleAuditedEntityWithUserDto`1,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.ExtensibleAuditedEntityWithUserDto`1'1");
            feature.AddKnownType("Volo.Abp.Application.Dtos.ExtensibleCreationAuditedEntityDto`1,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.ExtensibleCreationAuditedEntityDto`1'1");
            feature.AddKnownType("Volo.Abp.Application.Dtos.ExtensibleCreationAuditedEntityDto,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.ExtensibleCreationAuditedEntityDto");
            feature.AddKnownType("Volo.Abp.Application.Dtos.ExtensibleCreationAuditedEntityWithUserDto`2,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.ExtensibleCreationAuditedEntityWithUserDto`2'2");
            feature.AddKnownType("Volo.Abp.Application.Dtos.ExtensibleCreationAuditedEntityWithUserDto`1,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.ExtensibleCreationAuditedEntityWithUserDto`1'1");
            feature.AddKnownType("Volo.Abp.Application.Dtos.ExtensibleEntityDto`1,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.ExtensibleEntityDto`1'1");
            feature.AddKnownType("Volo.Abp.Application.Dtos.ExtensibleEntityDto,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.ExtensibleEntityDto");
            feature.AddKnownType("Volo.Abp.Application.Dtos.ExtensibleFullAuditedEntityDto`1,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.ExtensibleFullAuditedEntityDto`1'1");
            feature.AddKnownType("Volo.Abp.Application.Dtos.ExtensibleFullAuditedEntityDto,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.ExtensibleFullAuditedEntityDto");
            feature.AddKnownType("Volo.Abp.Application.Dtos.ExtensibleFullAuditedEntityWithUserDto`2,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.ExtensibleFullAuditedEntityWithUserDto`2'2");
            feature.AddKnownType("Volo.Abp.Application.Dtos.ExtensibleFullAuditedEntityWithUserDto`1,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.ExtensibleFullAuditedEntityWithUserDto`1'1");
            feature.AddKnownType("Volo.Abp.Application.Dtos.FullAuditedEntityDto,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.FullAuditedEntityDto");
            feature.AddKnownType("Volo.Abp.Application.Dtos.FullAuditedEntityDto`1,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.FullAuditedEntityDto`1'1");
            feature.AddKnownType("Volo.Abp.Application.Dtos.FullAuditedEntityWithUserDto`1,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.FullAuditedEntityWithUserDto`1'1");
            feature.AddKnownType("Volo.Abp.Application.Dtos.FullAuditedEntityWithUserDto`2,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.FullAuditedEntityWithUserDto`2'2");
            feature.AddKnownType("Volo.Abp.Application.Dtos.IEntityDto,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.IEntityDto");
            feature.AddKnownType("Volo.Abp.Application.Dtos.IEntityDto`1,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.IEntityDto`1'1");
            feature.AddKnownType("Volo.Abp.Application.Dtos.IHasTotalCount,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.IHasTotalCount");
            feature.AddKnownType("Volo.Abp.Application.Dtos.ILimitedResultRequest,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.ILimitedResultRequest");
            feature.AddKnownType("Volo.Abp.Application.Dtos.IListResult`1,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.IListResult`1'1");
            feature.AddKnownType("Volo.Abp.Application.Dtos.IPagedAndSortedResultRequest,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.IPagedAndSortedResultRequest");
            feature.AddKnownType("Volo.Abp.Application.Dtos.IPagedResult`1,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.IPagedResult`1'1");
            feature.AddKnownType("Volo.Abp.Application.Dtos.IPagedResultRequest,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.IPagedResultRequest");
            feature.AddKnownType("Volo.Abp.Application.Dtos.ISortedResultRequest,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.ISortedResultRequest");
            feature.AddKnownType("Volo.Abp.Application.Dtos.LimitedResultRequestDto,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.LimitedResultRequestDto");
            feature.AddKnownType("Volo.Abp.Application.Dtos.ExtensibleLimitedResultRequestDto,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.ExtensibleLimitedResultRequestDto");
            feature.AddKnownType("Volo.Abp.Application.Dtos.ListResultDto`1,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.ListResultDto`1'1");
            feature.AddKnownType("Volo.Abp.Application.Dtos.ExtensibleListResultDto`1,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.ExtensibleListResultDto`1'1");
            feature.AddKnownType("Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto");
            feature.AddKnownType("Volo.Abp.Application.Dtos.ExtensiblePagedAndSortedResultRequestDto,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.ExtensiblePagedAndSortedResultRequestDto");
            feature.AddKnownType("Volo.Abp.Application.Dtos.PagedResultDto`1,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.PagedResultDto`1'1");
            feature.AddKnownType("Volo.Abp.Application.Dtos.ExtensiblePagedResultDto`1,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.ExtensiblePagedResultDto`1'1");
            feature.AddKnownType("Volo.Abp.Application.Dtos.PagedResultRequestDto,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.PagedResultRequestDto");
            feature.AddKnownType("Volo.Abp.Application.Dtos.ExtensiblePagedResultRequestDto,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Dtos.ExtensiblePagedResultRequestDto");
            feature.AddKnownType("Volo.Abp.Application.Localization.Resources.AbpDdd.AbpDddApplicationContractsResource,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Localization.Resources.AbpDdd.AbpDddApplicationContractsResource");
            feature.AddKnownType("Volo.Abp.Application.Services.IApplicationService,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Services.IApplicationService");
            feature.AddKnownType("Volo.Abp.Application.Services.ICreateAppService`1,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Services.ICreateAppService`1'1");
            feature.AddKnownType("Volo.Abp.Application.Services.ICreateAppService`2,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Services.ICreateAppService`2'2");
            feature.AddKnownType("Volo.Abp.Application.Services.ICreateUpdateAppService`2,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Services.ICreateUpdateAppService`2'2");
            feature.AddKnownType("Volo.Abp.Application.Services.ICreateUpdateAppService`3,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Services.ICreateUpdateAppService`3'3");
            feature.AddKnownType("Volo.Abp.Application.Services.ICreateUpdateAppService`4,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Services.ICreateUpdateAppService`4'4");
            feature.AddKnownType("Volo.Abp.Application.Services.ICrudAppService`2,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Services.ICrudAppService`2'2");
            feature.AddKnownType("Volo.Abp.Application.Services.ICrudAppService`3,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Services.ICrudAppService`3'3");
            feature.AddKnownType("Volo.Abp.Application.Services.ICrudAppService`4,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Services.ICrudAppService`4'4");
            feature.AddKnownType("Volo.Abp.Application.Services.ICrudAppService`5,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Services.ICrudAppService`5'5");
            feature.AddKnownType("Volo.Abp.Application.Services.ICrudAppService`6,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Services.ICrudAppService`6'6");
            feature.AddKnownType("Volo.Abp.Application.Services.IDeleteAppService`1,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Services.IDeleteAppService`1'1");
            feature.AddKnownType("Volo.Abp.Application.Services.IReadOnlyAppService`2,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Services.IReadOnlyAppService`2'2");
            feature.AddKnownType("Volo.Abp.Application.Services.IReadOnlyAppService`3,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Services.IReadOnlyAppService`3'3");
            feature.AddKnownType("Volo.Abp.Application.Services.IReadOnlyAppService`4,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Services.IReadOnlyAppService`4'4");
            feature.AddKnownType("Volo.Abp.Application.Services.IUpdateAppService`2,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Services.IUpdateAppService`2'2");
            feature.AddKnownType("Volo.Abp.Application.Services.IUpdateAppService`3,Volo.Abp.Ddd.Application.Contracts", "Volo.Abp.Application.Services.IUpdateAppService`3'3");
            feature.AddKnownType("VoloAbpDddDomain_ProcessedByFody,Volo.Abp.Ddd.Domain", "<global namespace>.VoloAbpDddDomain_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Ddd.Domain", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.DependencyInjection.AbpCommonDbContextRegistrationOptions,Volo.Abp.Ddd.Domain", "Volo.Abp.DependencyInjection.AbpCommonDbContextRegistrationOptions");
            feature.AddKnownType("Volo.Abp.DependencyInjection.IAbpCommonDbContextRegistrationOptionsBuilder,Volo.Abp.Ddd.Domain", "Volo.Abp.DependencyInjection.IAbpCommonDbContextRegistrationOptionsBuilder");
            feature.AddKnownType("Volo.Abp.DependencyInjection.ReplaceDbContextAttribute,Volo.Abp.Ddd.Domain", "Volo.Abp.DependencyInjection.ReplaceDbContextAttribute");
            feature.AddKnownType("Volo.Abp.Domain.AbpDddDomainModule,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.AbpDddDomainModule");
            feature.AddKnownType("Volo.Abp.Domain.Entities.AggregateRoot,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.AggregateRoot");
            feature.AddKnownType("Volo.Abp.Domain.Entities.AggregateRoot`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.AggregateRoot`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Entities.BasicAggregateRoot,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.BasicAggregateRoot");
            feature.AddKnownType("Volo.Abp.Domain.Entities.BasicAggregateRoot`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.BasicAggregateRoot`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Entities.DisableIdGenerationAttribute,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.DisableIdGenerationAttribute");
            feature.AddKnownType("Volo.Abp.Domain.Entities.DomainEventRecord,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.DomainEventRecord");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Entity,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Entity");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Entity`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Entity`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Entities.IAggregateRoot,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.IAggregateRoot");
            feature.AddKnownType("Volo.Abp.Domain.Entities.IAggregateRoot`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.IAggregateRoot`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Entities.IEntity,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.IEntity");
            feature.AddKnownType("Volo.Abp.Domain.Entities.IEntity`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.IEntity`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Entities.IGeneratesDomainEvents,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.IGeneratesDomainEvents");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Auditing.AuditedAggregateRoot,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Auditing.AuditedAggregateRoot");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Auditing.AuditedAggregateRoot`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Auditing.AuditedAggregateRoot`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Auditing.AuditedAggregateRootWithUser`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Auditing.AuditedAggregateRootWithUser`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Auditing.AuditedAggregateRootWithUser`2,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Auditing.AuditedAggregateRootWithUser`2'2");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Auditing.AuditedEntity,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Auditing.AuditedEntity");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Auditing.AuditedEntity`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Auditing.AuditedEntity`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Auditing.AuditedEntityWithUser`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Auditing.AuditedEntityWithUser`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Auditing.AuditedEntityWithUser`2,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Auditing.AuditedEntityWithUser`2'2");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Auditing.CreationAuditedAggregateRoot,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Auditing.CreationAuditedAggregateRoot");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Auditing.CreationAuditedAggregateRoot`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Auditing.CreationAuditedAggregateRoot`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Auditing.CreationAuditedAggregateRootWithUser`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Auditing.CreationAuditedAggregateRootWithUser`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Auditing.CreationAuditedAggregateRootWithUser`2,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Auditing.CreationAuditedAggregateRootWithUser`2'2");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Auditing.CreationAuditedEntity,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Auditing.CreationAuditedEntity");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Auditing.CreationAuditedEntity`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Auditing.CreationAuditedEntity`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Auditing.CreationAuditedEntityWithUser`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Auditing.CreationAuditedEntityWithUser`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Auditing.CreationAuditedEntityWithUser`2,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Auditing.CreationAuditedEntityWithUser`2'2");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Auditing.FullAuditedAggregateRoot,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Auditing.FullAuditedAggregateRoot");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Auditing.FullAuditedAggregateRoot`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Auditing.FullAuditedAggregateRoot`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Auditing.FullAuditedAggregateRootWithUser`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Auditing.FullAuditedAggregateRootWithUser`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Auditing.FullAuditedAggregateRootWithUser`2,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Auditing.FullAuditedAggregateRootWithUser`2'2");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Auditing.FullAuditedEntity,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Auditing.FullAuditedEntity");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Auditing.FullAuditedEntity`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Auditing.FullAuditedEntity`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Auditing.FullAuditedEntityWithUser`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Auditing.FullAuditedEntityWithUser`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Auditing.FullAuditedEntityWithUser`2,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Auditing.FullAuditedEntityWithUser`2'2");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Caching.EntityCacheBase`3,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Caching.EntityCacheBase`3'3");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Caching.EntityCacheWithObjectMapper`3,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Caching.EntityCacheWithObjectMapper`3'3");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Caching.EntityCacheWithObjectMapperContext`4,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Caching.EntityCacheWithObjectMapperContext`4'4");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Caching.EntityCacheWithoutCacheItem`2,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Caching.EntityCacheWithoutCacheItem`2'2");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Caching.IEntityCache`2,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Caching.IEntityCache`2'2");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Events.DomainEventEntry,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Events.DomainEventEntry");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Events.EntityChangedEventData`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Events.EntityChangedEventData`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Events.EntityChangeEntry,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Events.EntityChangeEntry");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Events.EntityChangeEventHelper,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Events.EntityChangeEventHelper");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Events.EntityCreatedEventData`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Events.EntityCreatedEventData`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Events.EntityDeletedEventData`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Events.EntityDeletedEventData`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Events.EntityEventData`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Events.EntityEventData`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Events.EntityEventReport,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Events.EntityEventReport");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Events.EntityUpdatedEventData`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Events.EntityUpdatedEventData`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Events.IEntityChangeEventHelper,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Events.IEntityChangeEventHelper");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Events.NullEntityChangeEventHelper,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Events.NullEntityChangeEventHelper");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Events.Distributed.AbpDistributedEntityEventOptions,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Events.Distributed.AbpDistributedEntityEventOptions");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Events.Distributed.AutoEntityDistributedEventSelectorList,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Events.Distributed.AutoEntityDistributedEventSelectorList");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Events.Distributed.EntityCreatedEto`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Events.Distributed.EntityCreatedEto`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Events.Distributed.EntityDeletedEto`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Events.Distributed.EntityDeletedEto`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Events.Distributed.EntityEto,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Events.Distributed.EntityEto");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Events.Distributed.EntityToEtoMapper,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Events.Distributed.EntityToEtoMapper");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Events.Distributed.EntityUpdatedEto`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Events.Distributed.EntityUpdatedEto`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Events.Distributed.EtoMappingDictionary,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Events.Distributed.EtoMappingDictionary");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Events.Distributed.EtoMappingDictionaryItem,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Events.Distributed.EtoMappingDictionaryItem");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Events.Distributed.IAutoEntityDistributedEventSelectorList,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Events.Distributed.IAutoEntityDistributedEventSelectorList");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Events.Distributed.IEntityToEtoMapper,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Entities.Events.Distributed.IEntityToEtoMapper");
            feature.AddKnownType("Volo.Abp.Domain.Repositories.AbpRepositoryConventionalRegistrar,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Repositories.AbpRepositoryConventionalRegistrar");
            feature.AddKnownType("Volo.Abp.Domain.Repositories.BasicRepositoryBase`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Repositories.BasicRepositoryBase`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Repositories.BasicRepositoryBase`2,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Repositories.BasicRepositoryBase`2'2");
            feature.AddKnownType("Volo.Abp.Domain.Repositories.IBasicRepository`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Repositories.IBasicRepository`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Repositories.IBasicRepository`2,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Repositories.IBasicRepository`2'2");
            feature.AddKnownType("Volo.Abp.Domain.Repositories.IReadOnlyBasicRepository`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Repositories.IReadOnlyBasicRepository`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Repositories.IReadOnlyBasicRepository`2,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Repositories.IReadOnlyBasicRepository`2'2");
            feature.AddKnownType("Volo.Abp.Domain.Repositories.IReadOnlyRepository`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Repositories.IReadOnlyRepository`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Repositories.IReadOnlyRepository`2,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Repositories.IReadOnlyRepository`2'2");
            feature.AddKnownType("Volo.Abp.Domain.Repositories.IRepository,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Repositories.IRepository");
            feature.AddKnownType("Volo.Abp.Domain.Repositories.IRepository`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Repositories.IRepository`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Repositories.IRepository`2,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Repositories.IRepository`2'2");
            feature.AddKnownType("Volo.Abp.Domain.Repositories.ISupportsExplicitLoading`2,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Repositories.ISupportsExplicitLoading`2'2");
            feature.AddKnownType("Volo.Abp.Domain.Repositories.RepositoryBase`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Repositories.RepositoryBase`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Repositories.RepositoryBase`2,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Repositories.RepositoryBase`2'2");
            feature.AddKnownType("Volo.Abp.Domain.Repositories.RepositoryRegistrarBase`1,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Repositories.RepositoryRegistrarBase`1'1");
            feature.AddKnownType("Volo.Abp.Domain.Services.DomainService,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Services.DomainService");
            feature.AddKnownType("Volo.Abp.Domain.Services.IDomainService,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Services.IDomainService");
            feature.AddKnownType("Volo.Abp.Domain.Values.ValueObject,Volo.Abp.Ddd.Domain", "Volo.Abp.Domain.Values.ValueObject");
            feature.AddKnownType("VoloAbpDistributedLockingAbstractions_ProcessedByFody,Volo.Abp.DistributedLocking.Abstractions", "<global namespace>.VoloAbpDistributedLockingAbstractions_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.DistributedLocking.Abstractions", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.DistributedLocking.AbpDistributedLockingAbstractionsModule,Volo.Abp.DistributedLocking.Abstractions", "Volo.Abp.DistributedLocking.AbpDistributedLockingAbstractionsModule");
            feature.AddKnownType("Volo.Abp.DistributedLocking.AbpDistributedLockOptions,Volo.Abp.DistributedLocking.Abstractions", "Volo.Abp.DistributedLocking.AbpDistributedLockOptions");
            feature.AddKnownType("Volo.Abp.DistributedLocking.DistributedLockKeyNormalizer,Volo.Abp.DistributedLocking.Abstractions", "Volo.Abp.DistributedLocking.DistributedLockKeyNormalizer");
            feature.AddKnownType("Volo.Abp.DistributedLocking.IAbpDistributedLock,Volo.Abp.DistributedLocking.Abstractions", "Volo.Abp.DistributedLocking.IAbpDistributedLock");
            feature.AddKnownType("Volo.Abp.DistributedLocking.IAbpDistributedLockHandle,Volo.Abp.DistributedLocking.Abstractions", "Volo.Abp.DistributedLocking.IAbpDistributedLockHandle");
            feature.AddKnownType("Volo.Abp.DistributedLocking.IDistributedLockKeyNormalizer,Volo.Abp.DistributedLocking.Abstractions", "Volo.Abp.DistributedLocking.IDistributedLockKeyNormalizer");
            feature.AddKnownType("Volo.Abp.DistributedLocking.LocalAbpDistributedLock,Volo.Abp.DistributedLocking.Abstractions", "Volo.Abp.DistributedLocking.LocalAbpDistributedLock");
            feature.AddKnownType("Volo.Abp.DistributedLocking.LocalAbpDistributedLockHandle,Volo.Abp.DistributedLocking.Abstractions", "Volo.Abp.DistributedLocking.LocalAbpDistributedLockHandle");
            feature.AddKnownType("VoloAbpEventBusAbstractions_ProcessedByFody,Volo.Abp.EventBus.Abstractions", "<global namespace>.VoloAbpEventBusAbstractions_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.EventBus.Abstractions", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Domain.Entities.Events.Distributed.EtoBase,Volo.Abp.EventBus.Abstractions", "Volo.Abp.Domain.Entities.Events.Distributed.EtoBase");
            feature.AddKnownType("Volo.Abp.EventBus.EventNameAttribute,Volo.Abp.EventBus.Abstractions", "Volo.Abp.EventBus.EventNameAttribute");
            feature.AddKnownType("Volo.Abp.EventBus.GenericEventNameAttribute,Volo.Abp.EventBus.Abstractions", "Volo.Abp.EventBus.GenericEventNameAttribute");
            feature.AddKnownType("Volo.Abp.EventBus.IEventHandler,Volo.Abp.EventBus.Abstractions", "Volo.Abp.EventBus.IEventHandler");
            feature.AddKnownType("Volo.Abp.EventBus.IEventNameProvider,Volo.Abp.EventBus.Abstractions", "Volo.Abp.EventBus.IEventNameProvider");
            feature.AddKnownType("Volo.Abp.EventBus.ILocalEventHandler`1,Volo.Abp.EventBus.Abstractions", "Volo.Abp.EventBus.ILocalEventHandler`1'1");
            feature.AddKnownType("Volo.Abp.EventBus.Abstractions.AbpEventBusAbstractionsModule,Volo.Abp.EventBus.Abstractions", "Volo.Abp.EventBus.Abstractions.AbpEventBusAbstractionsModule");
            feature.AddKnownType("Volo.Abp.EventBus.Distributed.IDistributedEventHandler`1,Volo.Abp.EventBus.Abstractions", "Volo.Abp.EventBus.Distributed.IDistributedEventHandler`1'1");
            feature.AddKnownType("VoloAbpEventBus_ProcessedByFody,Volo.Abp.EventBus", "<global namespace>.VoloAbpEventBus_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.EventBus", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.EventBus.AbpEventBusModule,Volo.Abp.EventBus", "Volo.Abp.EventBus.AbpEventBusModule");
            feature.AddKnownType("Volo.Abp.EventBus.ActionEventHandler`1,Volo.Abp.EventBus", "Volo.Abp.EventBus.ActionEventHandler`1'1");
            feature.AddKnownType("Volo.Abp.EventBus.EventBusBase,Volo.Abp.EventBus", "Volo.Abp.EventBus.EventBusBase");
            feature.AddKnownType("Volo.Abp.EventBus.EventBusBase+EventTypeWithEventHandlerFactories,Volo.Abp.EventBus", "Volo.Abp.EventBus.EventTypeWithEventHandlerFactories");
            feature.AddKnownType("Volo.Abp.EventBus.EventBusBase+SynchronizationContextRemover,Volo.Abp.EventBus", "Volo.Abp.EventBus.SynchronizationContextRemover");
            feature.AddKnownType("Volo.Abp.EventBus.EventHandlerDisposeWrapper,Volo.Abp.EventBus", "Volo.Abp.EventBus.EventHandlerDisposeWrapper");
            feature.AddKnownType("Volo.Abp.EventBus.EventHandlerFactoryUnregistrar,Volo.Abp.EventBus", "Volo.Abp.EventBus.EventHandlerFactoryUnregistrar");
            feature.AddKnownType("Volo.Abp.EventBus.EventHandlerInvoker,Volo.Abp.EventBus", "Volo.Abp.EventBus.EventHandlerInvoker");
            feature.AddKnownType("Volo.Abp.EventBus.EventHandlerInvokerCacheItem,Volo.Abp.EventBus", "Volo.Abp.EventBus.EventHandlerInvokerCacheItem");
            feature.AddKnownType("Volo.Abp.EventBus.IEventHandlerMethodExecutor,Volo.Abp.EventBus", "Volo.Abp.EventBus.IEventHandlerMethodExecutor");
            feature.AddKnownType("Volo.Abp.EventBus.LocalEventHandlerMethodExecutor`1,Volo.Abp.EventBus", "Volo.Abp.EventBus.LocalEventHandlerMethodExecutor`1'1");
            feature.AddKnownType("Volo.Abp.EventBus.DistributedEventHandlerMethodExecutor`1,Volo.Abp.EventBus", "Volo.Abp.EventBus.DistributedEventHandlerMethodExecutor`1'1");
            feature.AddKnownType("Volo.Abp.EventBus.IEventBus,Volo.Abp.EventBus", "Volo.Abp.EventBus.IEventBus");
            feature.AddKnownType("Volo.Abp.EventBus.IEventDataMayHaveTenantId,Volo.Abp.EventBus", "Volo.Abp.EventBus.IEventDataMayHaveTenantId");
            feature.AddKnownType("Volo.Abp.EventBus.IEventDataWithInheritableGenericArgument,Volo.Abp.EventBus", "Volo.Abp.EventBus.IEventDataWithInheritableGenericArgument");
            feature.AddKnownType("Volo.Abp.EventBus.IEventHandlerDisposeWrapper,Volo.Abp.EventBus", "Volo.Abp.EventBus.IEventHandlerDisposeWrapper");
            feature.AddKnownType("Volo.Abp.EventBus.IEventHandlerFactory,Volo.Abp.EventBus", "Volo.Abp.EventBus.IEventHandlerFactory");
            feature.AddKnownType("Volo.Abp.EventBus.IEventHandlerInvoker,Volo.Abp.EventBus", "Volo.Abp.EventBus.IEventHandlerInvoker");
            feature.AddKnownType("Volo.Abp.EventBus.IocEventHandlerFactory,Volo.Abp.EventBus", "Volo.Abp.EventBus.IocEventHandlerFactory");
            feature.AddKnownType("Volo.Abp.EventBus.SingleInstanceHandlerFactory,Volo.Abp.EventBus", "Volo.Abp.EventBus.SingleInstanceHandlerFactory");
            feature.AddKnownType("Volo.Abp.EventBus.TransientEventHandlerFactory`1,Volo.Abp.EventBus", "Volo.Abp.EventBus.TransientEventHandlerFactory`1'1");
            feature.AddKnownType("Volo.Abp.EventBus.TransientEventHandlerFactory,Volo.Abp.EventBus", "Volo.Abp.EventBus.TransientEventHandlerFactory");
            feature.AddKnownType("Volo.Abp.EventBus.UnitOfWorkEventPublisher,Volo.Abp.EventBus", "Volo.Abp.EventBus.UnitOfWorkEventPublisher");
            feature.AddKnownType("Volo.Abp.EventBus.Distributed.AbpDistributedEventBusOptions,Volo.Abp.EventBus", "Volo.Abp.EventBus.Distributed.AbpDistributedEventBusOptions");
            feature.AddKnownType("Volo.Abp.EventBus.Distributed.AbpEventBusBoxesOptions,Volo.Abp.EventBus", "Volo.Abp.EventBus.Distributed.AbpEventBusBoxesOptions");
            feature.AddKnownType("Volo.Abp.EventBus.Distributed.DistributedEventBusBase,Volo.Abp.EventBus", "Volo.Abp.EventBus.Distributed.DistributedEventBusBase");
            feature.AddKnownType("Volo.Abp.EventBus.Distributed.IDistributedEventBus,Volo.Abp.EventBus", "Volo.Abp.EventBus.Distributed.IDistributedEventBus");
            feature.AddKnownType("Volo.Abp.EventBus.Distributed.IEventInbox,Volo.Abp.EventBus", "Volo.Abp.EventBus.Distributed.IEventInbox");
            feature.AddKnownType("Volo.Abp.EventBus.Distributed.IEventOutbox,Volo.Abp.EventBus", "Volo.Abp.EventBus.Distributed.IEventOutbox");
            feature.AddKnownType("Volo.Abp.EventBus.Distributed.IInboxProcessor,Volo.Abp.EventBus", "Volo.Abp.EventBus.Distributed.IInboxProcessor");
            feature.AddKnownType("Volo.Abp.EventBus.Distributed.InboxConfig,Volo.Abp.EventBus", "Volo.Abp.EventBus.Distributed.InboxConfig");
            feature.AddKnownType("Volo.Abp.EventBus.Distributed.InboxConfigDictionary,Volo.Abp.EventBus", "Volo.Abp.EventBus.Distributed.InboxConfigDictionary");
            feature.AddKnownType("Volo.Abp.EventBus.Distributed.InboxProcessManager,Volo.Abp.EventBus", "Volo.Abp.EventBus.Distributed.InboxProcessManager");
            feature.AddKnownType("Volo.Abp.EventBus.Distributed.InboxProcessor,Volo.Abp.EventBus", "Volo.Abp.EventBus.Distributed.InboxProcessor");
            feature.AddKnownType("Volo.Abp.EventBus.Distributed.IncomingEventInfo,Volo.Abp.EventBus", "Volo.Abp.EventBus.Distributed.IncomingEventInfo");
            feature.AddKnownType("Volo.Abp.EventBus.Distributed.IOutboxSender,Volo.Abp.EventBus", "Volo.Abp.EventBus.Distributed.IOutboxSender");
            feature.AddKnownType("Volo.Abp.EventBus.Distributed.ISupportsEventBoxes,Volo.Abp.EventBus", "Volo.Abp.EventBus.Distributed.ISupportsEventBoxes");
            feature.AddKnownType("Volo.Abp.EventBus.Distributed.LocalDistributedEventBus,Volo.Abp.EventBus", "Volo.Abp.EventBus.Distributed.LocalDistributedEventBus");
            feature.AddKnownType("Volo.Abp.EventBus.Distributed.NullDistributedEventBus,Volo.Abp.EventBus", "Volo.Abp.EventBus.Distributed.NullDistributedEventBus");
            feature.AddKnownType("Volo.Abp.EventBus.Distributed.OutboxConfig,Volo.Abp.EventBus", "Volo.Abp.EventBus.Distributed.OutboxConfig");
            feature.AddKnownType("Volo.Abp.EventBus.Distributed.OutboxConfigDictionary,Volo.Abp.EventBus", "Volo.Abp.EventBus.Distributed.OutboxConfigDictionary");
            feature.AddKnownType("Volo.Abp.EventBus.Distributed.OutboxSender,Volo.Abp.EventBus", "Volo.Abp.EventBus.Distributed.OutboxSender");
            feature.AddKnownType("Volo.Abp.EventBus.Distributed.OutboxSenderManager,Volo.Abp.EventBus", "Volo.Abp.EventBus.Distributed.OutboxSenderManager");
            feature.AddKnownType("Volo.Abp.EventBus.Distributed.OutgoingEventInfo,Volo.Abp.EventBus", "Volo.Abp.EventBus.Distributed.OutgoingEventInfo");
            feature.AddKnownType("Volo.Abp.EventBus.Local.AbpLocalEventBusOptions,Volo.Abp.EventBus", "Volo.Abp.EventBus.Local.AbpLocalEventBusOptions");
            feature.AddKnownType("Volo.Abp.EventBus.Local.ILocalEventBus,Volo.Abp.EventBus", "Volo.Abp.EventBus.Local.ILocalEventBus");
            feature.AddKnownType("Volo.Abp.EventBus.Local.LocalEventBus,Volo.Abp.EventBus", "Volo.Abp.EventBus.Local.LocalEventBus");
            feature.AddKnownType("Volo.Abp.EventBus.Local.LocalEventMessage,Volo.Abp.EventBus", "Volo.Abp.EventBus.Local.LocalEventMessage");
            feature.AddKnownType("Volo.Abp.EventBus.Local.NullLocalEventBus,Volo.Abp.EventBus", "Volo.Abp.EventBus.Local.NullLocalEventBus");
            feature.AddKnownType("VoloAbpExceptionHandling_ProcessedByFody,Volo.Abp.ExceptionHandling", "<global namespace>.VoloAbpExceptionHandling_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.ExceptionHandling", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.AspNetCore.ExceptionHandling.AbpExceptionHandlingOptions,Volo.Abp.ExceptionHandling", "Volo.Abp.AspNetCore.ExceptionHandling.AbpExceptionHandlingOptions");
            feature.AddKnownType("Volo.Abp.AspNetCore.ExceptionHandling.DefaultExceptionToErrorInfoConverter,Volo.Abp.ExceptionHandling", "Volo.Abp.AspNetCore.ExceptionHandling.DefaultExceptionToErrorInfoConverter");
            feature.AddKnownType("Volo.Abp.AspNetCore.ExceptionHandling.IExceptionToErrorInfoConverter,Volo.Abp.ExceptionHandling", "Volo.Abp.AspNetCore.ExceptionHandling.IExceptionToErrorInfoConverter");
            feature.AddKnownType("Volo.Abp.Domain.Entities.EntityNotFoundException,Volo.Abp.ExceptionHandling", "Volo.Abp.Domain.Entities.EntityNotFoundException");
            feature.AddKnownType("Volo.Abp.ExceptionHandling.AbpExceptionHandlingModule,Volo.Abp.ExceptionHandling", "Volo.Abp.ExceptionHandling.AbpExceptionHandlingModule");
            feature.AddKnownType("Volo.Abp.ExceptionHandling.Localization.AbpExceptionHandlingResource,Volo.Abp.ExceptionHandling", "Volo.Abp.ExceptionHandling.Localization.AbpExceptionHandlingResource");
            feature.AddKnownType("Volo.Abp.Http.RemoteServiceErrorInfo,Volo.Abp.ExceptionHandling", "Volo.Abp.Http.RemoteServiceErrorInfo");
            feature.AddKnownType("Volo.Abp.Http.RemoteServiceErrorResponse,Volo.Abp.ExceptionHandling", "Volo.Abp.Http.RemoteServiceErrorResponse");
            feature.AddKnownType("Volo.Abp.Http.RemoteServiceValidationErrorInfo,Volo.Abp.ExceptionHandling", "Volo.Abp.Http.RemoteServiceValidationErrorInfo");
            feature.AddKnownType("Volo.Abp.Http.Client.AbpRemoteCallException,Volo.Abp.ExceptionHandling", "Volo.Abp.Http.Client.AbpRemoteCallException");
            feature.AddKnownType("VoloAbpFeatureManagementApplicationContracts_ProcessedByFody,Volo.Abp.FeatureManagement.Application.Contracts", "<global namespace>.VoloAbpFeatureManagementApplicationContracts_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.FeatureManagement.Application.Contracts", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.FeatureManagement.AbpFeatureManagementApplicationContractsModule,Volo.Abp.FeatureManagement.Application.Contracts", "Volo.Abp.FeatureManagement.AbpFeatureManagementApplicationContractsModule");
            feature.AddKnownType("Volo.Abp.FeatureManagement.FeatureDto,Volo.Abp.FeatureManagement.Application.Contracts", "Volo.Abp.FeatureManagement.FeatureDto");
            feature.AddKnownType("Volo.Abp.FeatureManagement.FeatureGroupDto,Volo.Abp.FeatureManagement.Application.Contracts", "Volo.Abp.FeatureManagement.FeatureGroupDto");
            feature.AddKnownType("Volo.Abp.FeatureManagement.FeatureManagementPermissions,Volo.Abp.FeatureManagement.Application.Contracts", "Volo.Abp.FeatureManagement.FeatureManagementPermissions");
            feature.AddKnownType("Volo.Abp.FeatureManagement.FeatureManagementRemoteServiceConsts,Volo.Abp.FeatureManagement.Application.Contracts", "Volo.Abp.FeatureManagement.FeatureManagementRemoteServiceConsts");
            feature.AddKnownType("Volo.Abp.FeatureManagement.FeaturePermissionDefinitionProvider,Volo.Abp.FeatureManagement.Application.Contracts", "Volo.Abp.FeatureManagement.FeaturePermissionDefinitionProvider");
            feature.AddKnownType("Volo.Abp.FeatureManagement.FeatureProviderDto,Volo.Abp.FeatureManagement.Application.Contracts", "Volo.Abp.FeatureManagement.FeatureProviderDto");
            feature.AddKnownType("Volo.Abp.FeatureManagement.GetFeatureListResultDto,Volo.Abp.FeatureManagement.Application.Contracts", "Volo.Abp.FeatureManagement.GetFeatureListResultDto");
            feature.AddKnownType("Volo.Abp.FeatureManagement.IFeatureAppService,Volo.Abp.FeatureManagement.Application.Contracts", "Volo.Abp.FeatureManagement.IFeatureAppService");
            feature.AddKnownType("Volo.Abp.FeatureManagement.UpdateFeatureDto,Volo.Abp.FeatureManagement.Application.Contracts", "Volo.Abp.FeatureManagement.UpdateFeatureDto");
            feature.AddKnownType("Volo.Abp.FeatureManagement.UpdateFeaturesDto,Volo.Abp.FeatureManagement.Application.Contracts", "Volo.Abp.FeatureManagement.UpdateFeaturesDto");
            feature.AddKnownType("VoloAbpFeatureManagementDomainShared_ProcessedByFody,Volo.Abp.FeatureManagement.Domain.Shared", "<global namespace>.VoloAbpFeatureManagementDomainShared_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.FeatureManagement.Domain.Shared", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.FeatureManagement.AbpFeatureManagementDomainSharedModule,Volo.Abp.FeatureManagement.Domain.Shared", "Volo.Abp.FeatureManagement.AbpFeatureManagementDomainSharedModule");
            feature.AddKnownType("Volo.Abp.FeatureManagement.FeatureValueInvalidException,Volo.Abp.FeatureManagement.Domain.Shared", "Volo.Abp.FeatureManagement.FeatureValueInvalidException");
            feature.AddKnownType("Volo.Abp.FeatureManagement.ValueValidatorFactoryOptions,Volo.Abp.FeatureManagement.Domain.Shared", "Volo.Abp.FeatureManagement.ValueValidatorFactoryOptions");
            feature.AddKnownType("Volo.Abp.FeatureManagement.JsonConverters.IValueValidatorFactory,Volo.Abp.FeatureManagement.Domain.Shared", "Volo.Abp.FeatureManagement.JsonConverters.IValueValidatorFactory");
            feature.AddKnownType("Volo.Abp.FeatureManagement.JsonConverters.SelectionStringValueItemSourceJsonConverter,Volo.Abp.FeatureManagement.Domain.Shared", "Volo.Abp.FeatureManagement.JsonConverters.SelectionStringValueItemSourceJsonConverter");
            feature.AddKnownType("Volo.Abp.FeatureManagement.JsonConverters.StringValueTypeJsonConverter,Volo.Abp.FeatureManagement.Domain.Shared", "Volo.Abp.FeatureManagement.JsonConverters.StringValueTypeJsonConverter");
            feature.AddKnownType("Volo.Abp.FeatureManagement.JsonConverters.ValueValidatorFactory`1,Volo.Abp.FeatureManagement.Domain.Shared", "Volo.Abp.FeatureManagement.JsonConverters.ValueValidatorFactory`1'1");
            feature.AddKnownType("Volo.Abp.FeatureManagement.JsonConverters.ValueValidatorJsonConverter,Volo.Abp.FeatureManagement.Domain.Shared", "Volo.Abp.FeatureManagement.JsonConverters.ValueValidatorJsonConverter");
            feature.AddKnownType("Volo.Abp.FeatureManagement.Localization.AbpFeatureManagementResource,Volo.Abp.FeatureManagement.Domain.Shared", "Volo.Abp.FeatureManagement.Localization.AbpFeatureManagementResource");
            feature.AddKnownType("VoloAbpFeatures_ProcessedByFody,Volo.Abp.Features", "<global namespace>.VoloAbpFeatures_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Features", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Features.AbpFeatureOptions,Volo.Abp.Features", "Volo.Abp.Features.AbpFeatureOptions");
            feature.AddKnownType("Volo.Abp.Features.AbpFeaturesModule,Volo.Abp.Features", "Volo.Abp.Features.AbpFeaturesModule");
            feature.AddKnownType("Volo.Abp.Features.DefaultValueFeatureValueProvider,Volo.Abp.Features", "Volo.Abp.Features.DefaultValueFeatureValueProvider");
            feature.AddKnownType("Volo.Abp.Features.DisableFeatureCheckAttribute,Volo.Abp.Features", "Volo.Abp.Features.DisableFeatureCheckAttribute");
            feature.AddKnownType("Volo.Abp.Features.EditionFeatureValueProvider,Volo.Abp.Features", "Volo.Abp.Features.EditionFeatureValueProvider");
            feature.AddKnownType("Volo.Abp.Features.FeatureChecker,Volo.Abp.Features", "Volo.Abp.Features.FeatureChecker");
            feature.AddKnownType("Volo.Abp.Features.FeatureCheckerBase,Volo.Abp.Features", "Volo.Abp.Features.FeatureCheckerBase");
            feature.AddKnownType("Volo.Abp.Features.FeatureDefinition,Volo.Abp.Features", "Volo.Abp.Features.FeatureDefinition");
            feature.AddKnownType("Volo.Abp.Features.FeatureDefinitionContext,Volo.Abp.Features", "Volo.Abp.Features.FeatureDefinitionContext");
            feature.AddKnownType("Volo.Abp.Features.FeatureDefinitionManager,Volo.Abp.Features", "Volo.Abp.Features.FeatureDefinitionManager");
            feature.AddKnownType("Volo.Abp.Features.FeatureDefinitionProvider,Volo.Abp.Features", "Volo.Abp.Features.FeatureDefinitionProvider");
            feature.AddKnownType("Volo.Abp.Features.FeatureGroupDefinition,Volo.Abp.Features", "Volo.Abp.Features.FeatureGroupDefinition");
            feature.AddKnownType("Volo.Abp.Features.FeatureInterceptor,Volo.Abp.Features", "Volo.Abp.Features.FeatureInterceptor");
            feature.AddKnownType("Volo.Abp.Features.FeaturesSimpleStateCheckerSerializerContributor,Volo.Abp.Features", "Volo.Abp.Features.FeaturesSimpleStateCheckerSerializerContributor");
            feature.AddKnownType("Volo.Abp.Features.FeatureValue,Volo.Abp.Features", "Volo.Abp.Features.FeatureValue");
            feature.AddKnownType("Volo.Abp.Features.FeatureValueProvider,Volo.Abp.Features", "Volo.Abp.Features.FeatureValueProvider");
            feature.AddKnownType("Volo.Abp.Features.ICanCreateChildFeature,Volo.Abp.Features", "Volo.Abp.Features.ICanCreateChildFeature");
            feature.AddKnownType("Volo.Abp.Features.IDynamicFeatureDefinitionStore,Volo.Abp.Features", "Volo.Abp.Features.IDynamicFeatureDefinitionStore");
            feature.AddKnownType("Volo.Abp.Features.IFeatureChecker,Volo.Abp.Features", "Volo.Abp.Features.IFeatureChecker");
            feature.AddKnownType("Volo.Abp.Features.IFeatureDefinitionContext,Volo.Abp.Features", "Volo.Abp.Features.IFeatureDefinitionContext");
            feature.AddKnownType("Volo.Abp.Features.IFeatureDefinitionManager,Volo.Abp.Features", "Volo.Abp.Features.IFeatureDefinitionManager");
            feature.AddKnownType("Volo.Abp.Features.IFeatureDefinitionProvider,Volo.Abp.Features", "Volo.Abp.Features.IFeatureDefinitionProvider");
            feature.AddKnownType("Volo.Abp.Features.IFeatureStore,Volo.Abp.Features", "Volo.Abp.Features.IFeatureStore");
            feature.AddKnownType("Volo.Abp.Features.IFeatureValueProvider,Volo.Abp.Features", "Volo.Abp.Features.IFeatureValueProvider");
            feature.AddKnownType("Volo.Abp.Features.IMethodInvocationFeatureCheckerService,Volo.Abp.Features", "Volo.Abp.Features.IMethodInvocationFeatureCheckerService");
            feature.AddKnownType("Volo.Abp.Features.IStaticFeatureDefinitionStore,Volo.Abp.Features", "Volo.Abp.Features.IStaticFeatureDefinitionStore");
            feature.AddKnownType("Volo.Abp.Features.MethodInvocationFeatureCheckerContext,Volo.Abp.Features", "Volo.Abp.Features.MethodInvocationFeatureCheckerContext");
            feature.AddKnownType("Volo.Abp.Features.MethodInvocationFeatureCheckerService,Volo.Abp.Features", "Volo.Abp.Features.MethodInvocationFeatureCheckerService");
            feature.AddKnownType("Volo.Abp.Features.NullDynamicFeatureDefinitionStore,Volo.Abp.Features", "Volo.Abp.Features.NullDynamicFeatureDefinitionStore");
            feature.AddKnownType("Volo.Abp.Features.NullFeatureStore,Volo.Abp.Features", "Volo.Abp.Features.NullFeatureStore");
            feature.AddKnownType("Volo.Abp.Features.RequireFeaturesSimpleStateChecker`1,Volo.Abp.Features", "Volo.Abp.Features.RequireFeaturesSimpleStateChecker`1'1");
            feature.AddKnownType("Volo.Abp.Features.RequiresFeatureAttribute,Volo.Abp.Features", "Volo.Abp.Features.RequiresFeatureAttribute");
            feature.AddKnownType("Volo.Abp.Features.StaticFeatureDefinitionStore,Volo.Abp.Features", "Volo.Abp.Features.StaticFeatureDefinitionStore");
            feature.AddKnownType("Volo.Abp.Features.TenantFeatureValueProvider,Volo.Abp.Features", "Volo.Abp.Features.TenantFeatureValueProvider");
            feature.AddKnownType("Volo.Abp.Features.Localization.AbpFeatureResource,Volo.Abp.Features", "Volo.Abp.Features.Localization.AbpFeatureResource");
            feature.AddKnownType("VoloAbpGuids_ProcessedByFody,Volo.Abp.Guids", "<global namespace>.VoloAbpGuids_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Guids", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Guids.AbpGuidsModule,Volo.Abp.Guids", "Volo.Abp.Guids.AbpGuidsModule");
            feature.AddKnownType("Volo.Abp.Guids.AbpSequentialGuidGeneratorOptions,Volo.Abp.Guids", "Volo.Abp.Guids.AbpSequentialGuidGeneratorOptions");
            feature.AddKnownType("Volo.Abp.Guids.IGuidGenerator,Volo.Abp.Guids", "Volo.Abp.Guids.IGuidGenerator");
            feature.AddKnownType("Volo.Abp.Guids.SequentialGuidGenerator,Volo.Abp.Guids", "Volo.Abp.Guids.SequentialGuidGenerator");
            feature.AddKnownType("Volo.Abp.Guids.SequentialGuidType,Volo.Abp.Guids", "Volo.Abp.Guids.SequentialGuidType");
            feature.AddKnownType("Volo.Abp.Guids.SimpleGuidGenerator,Volo.Abp.Guids", "Volo.Abp.Guids.SimpleGuidGenerator");
            feature.AddKnownType("VoloAbpIdentityApplicationContracts_ProcessedByFody,Volo.Abp.Identity.Application.Contracts", "<global namespace>.VoloAbpIdentityApplicationContracts_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Identity.Application.Contracts", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Identity.AbpIdentityApplicationContractsModule,Volo.Abp.Identity.Application.Contracts", "Volo.Abp.Identity.AbpIdentityApplicationContractsModule");
            feature.AddKnownType("Volo.Abp.Identity.GetIdentityRolesInput,Volo.Abp.Identity.Application.Contracts", "Volo.Abp.Identity.GetIdentityRolesInput");
            feature.AddKnownType("Volo.Abp.Identity.GetIdentityUsersInput,Volo.Abp.Identity.Application.Contracts", "Volo.Abp.Identity.GetIdentityUsersInput");
            feature.AddKnownType("Volo.Abp.Identity.IdentityPermissionDefinitionProvider,Volo.Abp.Identity.Application.Contracts", "Volo.Abp.Identity.IdentityPermissionDefinitionProvider");
            feature.AddKnownType("Volo.Abp.Identity.IdentityRoleCreateDto,Volo.Abp.Identity.Application.Contracts", "Volo.Abp.Identity.IdentityRoleCreateDto");
            feature.AddKnownType("Volo.Abp.Identity.IdentityRoleCreateOrUpdateDtoBase,Volo.Abp.Identity.Application.Contracts", "Volo.Abp.Identity.IdentityRoleCreateOrUpdateDtoBase");
            feature.AddKnownType("Volo.Abp.Identity.IdentityRoleDto,Volo.Abp.Identity.Application.Contracts", "Volo.Abp.Identity.IdentityRoleDto");
            feature.AddKnownType("Volo.Abp.Identity.IdentityRoleUpdateDto,Volo.Abp.Identity.Application.Contracts", "Volo.Abp.Identity.IdentityRoleUpdateDto");
            feature.AddKnownType("Volo.Abp.Identity.IdentityUserCreateDto,Volo.Abp.Identity.Application.Contracts", "Volo.Abp.Identity.IdentityUserCreateDto");
            feature.AddKnownType("Volo.Abp.Identity.IdentityUserCreateOrUpdateDtoBase,Volo.Abp.Identity.Application.Contracts", "Volo.Abp.Identity.IdentityUserCreateOrUpdateDtoBase");
            feature.AddKnownType("Volo.Abp.Identity.IdentityUserDto,Volo.Abp.Identity.Application.Contracts", "Volo.Abp.Identity.IdentityUserDto");
            feature.AddKnownType("Volo.Abp.Identity.IdentityUserUpdateDto,Volo.Abp.Identity.Application.Contracts", "Volo.Abp.Identity.IdentityUserUpdateDto");
            feature.AddKnownType("Volo.Abp.Identity.IdentityUserUpdateRolesDto,Volo.Abp.Identity.Application.Contracts", "Volo.Abp.Identity.IdentityUserUpdateRolesDto");
            feature.AddKnownType("Volo.Abp.Identity.IIdentityRoleAppService,Volo.Abp.Identity.Application.Contracts", "Volo.Abp.Identity.IIdentityRoleAppService");
            feature.AddKnownType("Volo.Abp.Identity.IIdentityUserAppService,Volo.Abp.Identity.Application.Contracts", "Volo.Abp.Identity.IIdentityUserAppService");
            feature.AddKnownType("Volo.Abp.Identity.IIdentityUserLookupAppService,Volo.Abp.Identity.Application.Contracts", "Volo.Abp.Identity.IIdentityUserLookupAppService");
            feature.AddKnownType("Volo.Abp.Identity.UserLookupCountInputDto,Volo.Abp.Identity.Application.Contracts", "Volo.Abp.Identity.UserLookupCountInputDto");
            feature.AddKnownType("Volo.Abp.Identity.UserLookupSearchInputDto,Volo.Abp.Identity.Application.Contracts", "Volo.Abp.Identity.UserLookupSearchInputDto");
            feature.AddKnownType("VoloAbpIdentityDomainShared_ProcessedByFody,Volo.Abp.Identity.Domain.Shared", "<global namespace>.VoloAbpIdentityDomainShared_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Identity.Domain.Shared", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Identity.AbpIdentityDomainSharedModule,Volo.Abp.Identity.Domain.Shared", "Volo.Abp.Identity.AbpIdentityDomainSharedModule");
            feature.AddKnownType("Volo.Abp.Identity.IdentityClaimTypeConsts,Volo.Abp.Identity.Domain.Shared", "Volo.Abp.Identity.IdentityClaimTypeConsts");
            feature.AddKnownType("Volo.Abp.Identity.IdentityClaimTypeEto,Volo.Abp.Identity.Domain.Shared", "Volo.Abp.Identity.IdentityClaimTypeEto");
            feature.AddKnownType("Volo.Abp.Identity.IdentityClaimValueType,Volo.Abp.Identity.Domain.Shared", "Volo.Abp.Identity.IdentityClaimValueType");
            feature.AddKnownType("Volo.Abp.Identity.IdentityRoleEto,Volo.Abp.Identity.Domain.Shared", "Volo.Abp.Identity.IdentityRoleEto");
            feature.AddKnownType("Volo.Abp.Identity.IdentityRoleNameChangedEto,Volo.Abp.Identity.Domain.Shared", "Volo.Abp.Identity.IdentityRoleNameChangedEto");
            feature.AddKnownType("Volo.Abp.Identity.IdentitySecurityLogActionConsts,Volo.Abp.Identity.Domain.Shared", "Volo.Abp.Identity.IdentitySecurityLogActionConsts");
            feature.AddKnownType("Volo.Abp.Identity.IdentitySecurityLogConsts,Volo.Abp.Identity.Domain.Shared", "Volo.Abp.Identity.IdentitySecurityLogConsts");
            feature.AddKnownType("Volo.Abp.Identity.IUserRoleFinder,Volo.Abp.Identity.Domain.Shared", "Volo.Abp.Identity.IUserRoleFinder");
            feature.AddKnownType("Volo.Abp.Identity.OrganizationUnitEto,Volo.Abp.Identity.Domain.Shared", "Volo.Abp.Identity.OrganizationUnitEto");
            feature.AddKnownType("Volo.Abp.Identity.Localization.IdentityResource,Volo.Abp.Identity.Domain.Shared", "Volo.Abp.Identity.Localization.IdentityResource");
            feature.AddKnownType("Volo.Abp.ObjectExtending.IdentityModuleExtensionConfiguration,Volo.Abp.Identity.Domain.Shared", "Volo.Abp.ObjectExtending.IdentityModuleExtensionConfiguration");
            feature.AddKnownType("VoloAbpJsonAbstractions_ProcessedByFody,Volo.Abp.Json.Abstractions", "<global namespace>.VoloAbpJsonAbstractions_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Json.Abstractions", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Json.AbpJsonAbstractionsModule,Volo.Abp.Json.Abstractions", "Volo.Abp.Json.AbpJsonAbstractionsModule");
            feature.AddKnownType("Volo.Abp.Json.AbpJsonOptions,Volo.Abp.Json.Abstractions", "Volo.Abp.Json.AbpJsonOptions");
            feature.AddKnownType("Volo.Abp.Json.IJsonSerializer,Volo.Abp.Json.Abstractions", "Volo.Abp.Json.IJsonSerializer");
            feature.AddKnownType("VoloAbpJson_ProcessedByFody,Volo.Abp.Json", "<global namespace>.VoloAbpJson_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Json", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Json.AbpJsonModule,Volo.Abp.Json", "Volo.Abp.Json.AbpJsonModule");
            feature.AddKnownType("VoloAbpJsonSystemTextJson_ProcessedByFody,Volo.Abp.Json.SystemTextJson", "<global namespace>.VoloAbpJsonSystemTextJson_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Json.SystemTextJson", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Json.SystemTextJson.AbpDefaultJsonTypeInfoResolver,Volo.Abp.Json.SystemTextJson", "Volo.Abp.Json.SystemTextJson.AbpDefaultJsonTypeInfoResolver");
            feature.AddKnownType("Volo.Abp.Json.SystemTextJson.AbpJsonSystemTextJsonModule,Volo.Abp.Json.SystemTextJson", "Volo.Abp.Json.SystemTextJson.AbpJsonSystemTextJsonModule");
            feature.AddKnownType("Volo.Abp.Json.SystemTextJson.AbpSystemTextJsonSerializer,Volo.Abp.Json.SystemTextJson", "Volo.Abp.Json.SystemTextJson.AbpSystemTextJsonSerializer");
            feature.AddKnownType("Volo.Abp.Json.SystemTextJson.AbpSystemTextJsonSerializerModifiersOptions,Volo.Abp.Json.SystemTextJson", "Volo.Abp.Json.SystemTextJson.AbpSystemTextJsonSerializerModifiersOptions");
            feature.AddKnownType("Volo.Abp.Json.SystemTextJson.AbpSystemTextJsonSerializerOptions,Volo.Abp.Json.SystemTextJson", "Volo.Abp.Json.SystemTextJson.AbpSystemTextJsonSerializerOptions");
            feature.AddKnownType("Volo.Abp.Json.SystemTextJson.JsonConverters.AbpDateTimeConverter,Volo.Abp.Json.SystemTextJson", "Volo.Abp.Json.SystemTextJson.JsonConverters.AbpDateTimeConverter");
            feature.AddKnownType("Volo.Abp.Json.SystemTextJson.JsonConverters.AbpNullableDateTimeConverter,Volo.Abp.Json.SystemTextJson", "Volo.Abp.Json.SystemTextJson.JsonConverters.AbpNullableDateTimeConverter");
            feature.AddKnownType("Volo.Abp.Json.SystemTextJson.JsonConverters.AbpStringToBooleanConverter,Volo.Abp.Json.SystemTextJson", "Volo.Abp.Json.SystemTextJson.JsonConverters.AbpStringToBooleanConverter");
            feature.AddKnownType("Volo.Abp.Json.SystemTextJson.JsonConverters.AbpStringToEnumConverter`1,Volo.Abp.Json.SystemTextJson", "Volo.Abp.Json.SystemTextJson.JsonConverters.AbpStringToEnumConverter`1'1");
            feature.AddKnownType("Volo.Abp.Json.SystemTextJson.JsonConverters.AbpStringToEnumFactory,Volo.Abp.Json.SystemTextJson", "Volo.Abp.Json.SystemTextJson.JsonConverters.AbpStringToEnumFactory");
            feature.AddKnownType("Volo.Abp.Json.SystemTextJson.JsonConverters.ObjectToInferredTypesConverter,Volo.Abp.Json.SystemTextJson", "Volo.Abp.Json.SystemTextJson.JsonConverters.ObjectToInferredTypesConverter");
            feature.AddKnownType("Volo.Abp.Json.SystemTextJson.Modifiers.AbpDateTimeConverterModifier,Volo.Abp.Json.SystemTextJson", "Volo.Abp.Json.SystemTextJson.Modifiers.AbpDateTimeConverterModifier");
            feature.AddKnownType("Volo.Abp.Json.SystemTextJson.Modifiers.AbpIgnorePropertiesModifiers`2,Volo.Abp.Json.SystemTextJson", "Volo.Abp.Json.SystemTextJson.Modifiers.AbpIgnorePropertiesModifiers`2'2");
            feature.AddKnownType("Volo.Abp.Json.SystemTextJson.Modifiers.AbpIncludeNonPublicPropertiesModifiers`2,Volo.Abp.Json.SystemTextJson", "Volo.Abp.Json.SystemTextJson.Modifiers.AbpIncludeNonPublicPropertiesModifiers`2'2");
            feature.AddKnownType("VoloAbpLocalizationAbstractions_ProcessedByFody,Volo.Abp.Localization.Abstractions", "<global namespace>.VoloAbpLocalizationAbstractions_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Localization.Abstractions", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Microsoft.Extensions.Localization.IAbpStringLocalizerFactory,Volo.Abp.Localization.Abstractions", "Microsoft.Extensions.Localization.IAbpStringLocalizerFactory");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Localization.AbpLocalizationAbstractionsModule,Volo.Abp.Localization.Abstractions", "Volo.Abp.Localization.AbpLocalizationAbstractionsModule");
            feature.AddKnownType("Volo.Abp.Localization.FixedLocalizableString,Volo.Abp.Localization.Abstractions", "Volo.Abp.Localization.FixedLocalizableString");
            feature.AddKnownType("Volo.Abp.Localization.IAsyncLocalizableString,Volo.Abp.Localization.Abstractions", "Volo.Abp.Localization.IAsyncLocalizableString");
            feature.AddKnownType("Volo.Abp.Localization.IHasNameWithLocalizableDisplayName,Volo.Abp.Localization.Abstractions", "Volo.Abp.Localization.IHasNameWithLocalizableDisplayName");
            feature.AddKnownType("Volo.Abp.Localization.ILocalizableString,Volo.Abp.Localization.Abstractions", "Volo.Abp.Localization.ILocalizableString");
            feature.AddKnownType("Volo.Abp.Localization.LocalizableString,Volo.Abp.Localization.Abstractions", "Volo.Abp.Localization.LocalizableString");
            feature.AddKnownType("Volo.Abp.Localization.LocalizationResourceNameAttribute,Volo.Abp.Localization.Abstractions", "Volo.Abp.Localization.LocalizationResourceNameAttribute");
            feature.AddKnownType("VoloAbpLocalization_ProcessedByFody,Volo.Abp.Localization", "<global namespace>.VoloAbpLocalization_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Localization", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Localization.AbpDictionaryBasedStringLocalizer,Volo.Abp.Localization", "Volo.Abp.Localization.AbpDictionaryBasedStringLocalizer");
            feature.AddKnownType("Volo.Abp.Localization.AbpDictionaryBasedStringLocalizer+CultureWrapperStringLocalizer,Volo.Abp.Localization", "Volo.Abp.Localization.Volo.Abp.Localization.AbpDictionaryBasedStringLocalizer.CultureWrapperStringLocalizer");
            feature.AddKnownType("Volo.Abp.Localization.AbpEnumLocalizer,Volo.Abp.Localization", "Volo.Abp.Localization.AbpEnumLocalizer");
            feature.AddKnownType("Volo.Abp.Localization.AbpLocalizationModule,Volo.Abp.Localization", "Volo.Abp.Localization.AbpLocalizationModule");
            feature.AddKnownType("Volo.Abp.Localization.AbpLocalizationOptions,Volo.Abp.Localization", "Volo.Abp.Localization.AbpLocalizationOptions");
            feature.AddKnownType("Volo.Abp.Localization.AbpStringLocalizerFactory,Volo.Abp.Localization", "Volo.Abp.Localization.AbpStringLocalizerFactory");
            feature.AddKnownType("Volo.Abp.Localization.AbpStringLocalizerFactory+StringLocalizerCacheItem,Volo.Abp.Localization", "Volo.Abp.Localization.StringLocalizerCacheItem");
            feature.AddKnownType("Volo.Abp.Localization.DefaultLanguageProvider,Volo.Abp.Localization", "Volo.Abp.Localization.DefaultLanguageProvider");
            feature.AddKnownType("Volo.Abp.Localization.DefaultResource,Volo.Abp.Localization", "Volo.Abp.Localization.DefaultResource");
            feature.AddKnownType("Volo.Abp.Localization.IAbpEnumLocalizer,Volo.Abp.Localization", "Volo.Abp.Localization.IAbpEnumLocalizer");
            feature.AddKnownType("Volo.Abp.Localization.IAbpStringLocalizer,Volo.Abp.Localization", "Volo.Abp.Localization.IAbpStringLocalizer");
            feature.AddKnownType("Volo.Abp.Localization.IInheritedResourceTypesProvider,Volo.Abp.Localization", "Volo.Abp.Localization.IInheritedResourceTypesProvider");
            feature.AddKnownType("Volo.Abp.Localization.ILanguageInfo,Volo.Abp.Localization", "Volo.Abp.Localization.ILanguageInfo");
            feature.AddKnownType("Volo.Abp.Localization.ILanguageProvider,Volo.Abp.Localization", "Volo.Abp.Localization.ILanguageProvider");
            feature.AddKnownType("Volo.Abp.Localization.ILocalizableStringSerializer,Volo.Abp.Localization", "Volo.Abp.Localization.ILocalizableStringSerializer");
            feature.AddKnownType("Volo.Abp.Localization.ILocalizationDictionary,Volo.Abp.Localization", "Volo.Abp.Localization.ILocalizationDictionary");
            feature.AddKnownType("Volo.Abp.Localization.ILocalizationResourceContributor,Volo.Abp.Localization", "Volo.Abp.Localization.ILocalizationResourceContributor");
            feature.AddKnownType("Volo.Abp.Localization.InheritResourceAttribute,Volo.Abp.Localization", "Volo.Abp.Localization.InheritResourceAttribute");
            feature.AddKnownType("Volo.Abp.Localization.ITemplateLocalizer,Volo.Abp.Localization", "Volo.Abp.Localization.ITemplateLocalizer");
            feature.AddKnownType("Volo.Abp.Localization.LanguageInfo,Volo.Abp.Localization", "Volo.Abp.Localization.LanguageInfo");
            feature.AddKnownType("Volo.Abp.Localization.LocalizableStringSerializer,Volo.Abp.Localization", "Volo.Abp.Localization.LocalizableStringSerializer");
            feature.AddKnownType("Volo.Abp.Localization.LocalizationResource,Volo.Abp.Localization", "Volo.Abp.Localization.LocalizationResource");
            feature.AddKnownType("Volo.Abp.Localization.LocalizationResourceBase,Volo.Abp.Localization", "Volo.Abp.Localization.LocalizationResourceBase");
            feature.AddKnownType("Volo.Abp.Localization.LocalizationResourceContributorList,Volo.Abp.Localization", "Volo.Abp.Localization.LocalizationResourceContributorList");
            feature.AddKnownType("Volo.Abp.Localization.LocalizationResourceDictionary,Volo.Abp.Localization", "Volo.Abp.Localization.LocalizationResourceDictionary");
            feature.AddKnownType("Volo.Abp.Localization.LocalizationResourceInitializationContext,Volo.Abp.Localization", "Volo.Abp.Localization.LocalizationResourceInitializationContext");
            feature.AddKnownType("Volo.Abp.Localization.LocalizationSettingProvider,Volo.Abp.Localization", "Volo.Abp.Localization.LocalizationSettingProvider");
            feature.AddKnownType("Volo.Abp.Localization.NonTypedLocalizationResource,Volo.Abp.Localization", "Volo.Abp.Localization.NonTypedLocalizationResource");
            feature.AddKnownType("Volo.Abp.Localization.StaticLocalizationDictionary,Volo.Abp.Localization", "Volo.Abp.Localization.StaticLocalizationDictionary");
            feature.AddKnownType("Volo.Abp.Localization.ExceptionHandling.AbpExceptionLocalizationOptions,Volo.Abp.Localization", "Volo.Abp.Localization.ExceptionHandling.AbpExceptionLocalizationOptions");
            feature.AddKnownType("Volo.Abp.Localization.External.IExternalLocalizationStore,Volo.Abp.Localization", "Volo.Abp.Localization.External.IExternalLocalizationStore");
            feature.AddKnownType("Volo.Abp.Localization.External.NullExternalLocalizationStore,Volo.Abp.Localization", "Volo.Abp.Localization.External.NullExternalLocalizationStore");
            feature.AddKnownType("Volo.Abp.Localization.Json.JsonLocalizationFile,Volo.Abp.Localization", "Volo.Abp.Localization.Json.JsonLocalizationFile");
            feature.AddKnownType("Volo.Abp.Localization.Resources.AbpLocalization.AbpLocalizationResource,Volo.Abp.Localization", "Volo.Abp.Localization.Resources.AbpLocalization.AbpLocalizationResource");
            feature.AddKnownType("Volo.Abp.Localization.VirtualFiles.VirtualFileLocalizationResourceContributorBase,Volo.Abp.Localization", "Volo.Abp.Localization.VirtualFiles.VirtualFileLocalizationResourceContributorBase");
            feature.AddKnownType("Volo.Abp.Localization.VirtualFiles.Json.JsonVirtualFileLocalizationResourceContributor,Volo.Abp.Localization", "Volo.Abp.Localization.VirtualFiles.Json.JsonVirtualFileLocalizationResourceContributor");
            feature.AddKnownType("VoloAbpMultiTenancy_ProcessedByFody,Volo.Abp.MultiTenancy", "<global namespace>.VoloAbpMultiTenancy_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.MultiTenancy", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.MultiTenancy.AbpMultiTenancyModule,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.AbpMultiTenancyModule");
            feature.AddKnownType("Volo.Abp.MultiTenancy.AbpMultiTenancyOptions,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.AbpMultiTenancyOptions");
            feature.AddKnownType("Volo.Abp.MultiTenancy.AbpTenantResolveOptions,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.AbpTenantResolveOptions");
            feature.AddKnownType("Volo.Abp.MultiTenancy.ActionTenantResolveContributor,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.ActionTenantResolveContributor");
            feature.AddKnownType("Volo.Abp.MultiTenancy.AsyncLocalCurrentTenantAccessor,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.AsyncLocalCurrentTenantAccessor");
            feature.AddKnownType("Volo.Abp.MultiTenancy.BasicTenantInfo,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.BasicTenantInfo");
            feature.AddKnownType("Volo.Abp.MultiTenancy.CurrentTenant,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.CurrentTenant");
            feature.AddKnownType("Volo.Abp.MultiTenancy.CurrentUserTenantResolveContributor,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.CurrentUserTenantResolveContributor");
            feature.AddKnownType("Volo.Abp.MultiTenancy.ICurrentTenant,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.ICurrentTenant");
            feature.AddKnownType("Volo.Abp.MultiTenancy.ICurrentTenantAccessor,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.ICurrentTenantAccessor");
            feature.AddKnownType("Volo.Abp.MultiTenancy.IgnoreMultiTenancyAttribute,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.IgnoreMultiTenancyAttribute");
            feature.AddKnownType("Volo.Abp.MultiTenancy.IMultiTenant,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.IMultiTenant");
            feature.AddKnownType("Volo.Abp.MultiTenancy.ITenantConfigurationProvider,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.ITenantConfigurationProvider");
            feature.AddKnownType("Volo.Abp.MultiTenancy.ITenantResolveContext,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.ITenantResolveContext");
            feature.AddKnownType("Volo.Abp.MultiTenancy.ITenantResolveContributor,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.ITenantResolveContributor");
            feature.AddKnownType("Volo.Abp.MultiTenancy.ITenantResolver,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.ITenantResolver");
            feature.AddKnownType("Volo.Abp.MultiTenancy.ITenantResolveResultAccessor,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.ITenantResolveResultAccessor");
            feature.AddKnownType("Volo.Abp.MultiTenancy.ITenantStore,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.ITenantStore");
            feature.AddKnownType("Volo.Abp.MultiTenancy.MultiTenancyDatabaseStyle,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.MultiTenancyDatabaseStyle");
            feature.AddKnownType("Volo.Abp.MultiTenancy.MultiTenancySides,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.MultiTenancySides");
            feature.AddKnownType("Volo.Abp.MultiTenancy.MultiTenantConnectionStringResolver,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.MultiTenantConnectionStringResolver");
            feature.AddKnownType("Volo.Abp.MultiTenancy.NullTenantResolveResultAccessor,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.NullTenantResolveResultAccessor");
            feature.AddKnownType("Volo.Abp.MultiTenancy.TenantConfiguration,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.TenantConfiguration");
            feature.AddKnownType("Volo.Abp.MultiTenancy.TenantConfigurationProvider,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.TenantConfigurationProvider");
            feature.AddKnownType("Volo.Abp.MultiTenancy.TenantConnectionStringUpdatedEto,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.TenantConnectionStringUpdatedEto");
            feature.AddKnownType("Volo.Abp.MultiTenancy.TenantCreatedEto,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.TenantCreatedEto");
            feature.AddKnownType("Volo.Abp.MultiTenancy.TenantResolveContext,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.TenantResolveContext");
            feature.AddKnownType("Volo.Abp.MultiTenancy.TenantResolveContributorBase,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.TenantResolveContributorBase");
            feature.AddKnownType("Volo.Abp.MultiTenancy.TenantResolver,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.TenantResolver");
            feature.AddKnownType("Volo.Abp.MultiTenancy.TenantResolverConsts,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.TenantResolverConsts");
            feature.AddKnownType("Volo.Abp.MultiTenancy.TenantResolveResult,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.TenantResolveResult");
            feature.AddKnownType("Volo.Abp.MultiTenancy.ConfigurationStore.AbpDefaultTenantStoreOptions,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.ConfigurationStore.AbpDefaultTenantStoreOptions");
            feature.AddKnownType("Volo.Abp.MultiTenancy.ConfigurationStore.DefaultTenantStore,Volo.Abp.MultiTenancy", "Volo.Abp.MultiTenancy.ConfigurationStore.DefaultTenantStore");
            feature.AddKnownType("VoloAbpObjectExtending_ProcessedByFody,Volo.Abp.ObjectExtending", "<global namespace>.VoloAbpObjectExtending_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.ObjectExtending", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Data.ExtraPropertyDictionary,Volo.Abp.ObjectExtending", "Volo.Abp.Data.ExtraPropertyDictionary");
            feature.AddKnownType("Volo.Abp.Data.IHasExtraProperties,Volo.Abp.ObjectExtending", "Volo.Abp.Data.IHasExtraProperties");
            feature.AddKnownType("Volo.Abp.ObjectExtending.AbpObjectExtendingModule,Volo.Abp.ObjectExtending", "Volo.Abp.ObjectExtending.AbpObjectExtendingModule");
            feature.AddKnownType("Volo.Abp.ObjectExtending.ExtensibleObject,Volo.Abp.ObjectExtending", "Volo.Abp.ObjectExtending.ExtensibleObject");
            feature.AddKnownType("Volo.Abp.ObjectExtending.IBasicObjectExtensionPropertyInfo,Volo.Abp.ObjectExtending", "Volo.Abp.ObjectExtending.IBasicObjectExtensionPropertyInfo");
            feature.AddKnownType("Volo.Abp.ObjectExtending.MappingPropertyDefinitionChecks,Volo.Abp.ObjectExtending", "Volo.Abp.ObjectExtending.MappingPropertyDefinitionChecks");
            feature.AddKnownType("Volo.Abp.ObjectExtending.ObjectExtensionInfo,Volo.Abp.ObjectExtending", "Volo.Abp.ObjectExtending.ObjectExtensionInfo");
            feature.AddKnownType("Volo.Abp.ObjectExtending.ObjectExtensionManager,Volo.Abp.ObjectExtending", "Volo.Abp.ObjectExtending.ObjectExtensionManager");
            feature.AddKnownType("Volo.Abp.ObjectExtending.ObjectExtensionPropertyInfo,Volo.Abp.ObjectExtending", "Volo.Abp.ObjectExtending.ObjectExtensionPropertyInfo");
            feature.AddKnownType("Volo.Abp.ObjectExtending.ObjectExtensionPropertyValidationContext,Volo.Abp.ObjectExtending", "Volo.Abp.ObjectExtending.ObjectExtensionPropertyValidationContext");
            feature.AddKnownType("Volo.Abp.ObjectExtending.ObjectExtensionValidationContext,Volo.Abp.ObjectExtending", "Volo.Abp.ObjectExtending.ObjectExtensionValidationContext");
            feature.AddKnownType("Volo.Abp.ObjectExtending.Modularity.EntityExtensionConfiguration,Volo.Abp.ObjectExtending", "Volo.Abp.ObjectExtending.Modularity.EntityExtensionConfiguration");
            feature.AddKnownType("Volo.Abp.ObjectExtending.Modularity.EntityExtensionConfigurationDictionary,Volo.Abp.ObjectExtending", "Volo.Abp.ObjectExtending.Modularity.EntityExtensionConfigurationDictionary");
            feature.AddKnownType("Volo.Abp.ObjectExtending.Modularity.ExtensionPropertyApiConfiguration,Volo.Abp.ObjectExtending", "Volo.Abp.ObjectExtending.Modularity.ExtensionPropertyApiConfiguration");
            feature.AddKnownType("Volo.Abp.ObjectExtending.Modularity.ExtensionPropertyApiCreateConfiguration,Volo.Abp.ObjectExtending", "Volo.Abp.ObjectExtending.Modularity.ExtensionPropertyApiCreateConfiguration");
            feature.AddKnownType("Volo.Abp.ObjectExtending.Modularity.ExtensionPropertyApiGetConfiguration,Volo.Abp.ObjectExtending", "Volo.Abp.ObjectExtending.Modularity.ExtensionPropertyApiGetConfiguration");
            feature.AddKnownType("Volo.Abp.ObjectExtending.Modularity.ExtensionPropertyApiUpdateConfiguration,Volo.Abp.ObjectExtending", "Volo.Abp.ObjectExtending.Modularity.ExtensionPropertyApiUpdateConfiguration");
            feature.AddKnownType("Volo.Abp.ObjectExtending.Modularity.ExtensionPropertyConfiguration,Volo.Abp.ObjectExtending", "Volo.Abp.ObjectExtending.Modularity.ExtensionPropertyConfiguration");
            feature.AddKnownType("Volo.Abp.ObjectExtending.Modularity.ExtensionPropertyConfigurationDictionary,Volo.Abp.ObjectExtending", "Volo.Abp.ObjectExtending.Modularity.ExtensionPropertyConfigurationDictionary");
            feature.AddKnownType("Volo.Abp.ObjectExtending.Modularity.ExtensionPropertyEntityConfiguration,Volo.Abp.ObjectExtending", "Volo.Abp.ObjectExtending.Modularity.ExtensionPropertyEntityConfiguration");
            feature.AddKnownType("Volo.Abp.ObjectExtending.Modularity.ExtensionPropertyLookupConfiguration,Volo.Abp.ObjectExtending", "Volo.Abp.ObjectExtending.Modularity.ExtensionPropertyLookupConfiguration");
            feature.AddKnownType("Volo.Abp.ObjectExtending.Modularity.ExtensionPropertyUiConfiguration,Volo.Abp.ObjectExtending", "Volo.Abp.ObjectExtending.Modularity.ExtensionPropertyUiConfiguration");
            feature.AddKnownType("Volo.Abp.ObjectExtending.Modularity.ExtensionPropertyUiFormConfiguration,Volo.Abp.ObjectExtending", "Volo.Abp.ObjectExtending.Modularity.ExtensionPropertyUiFormConfiguration");
            feature.AddKnownType("Volo.Abp.ObjectExtending.Modularity.ExtensionPropertyUiTableConfiguration,Volo.Abp.ObjectExtending", "Volo.Abp.ObjectExtending.Modularity.ExtensionPropertyUiTableConfiguration");
            feature.AddKnownType("Volo.Abp.ObjectExtending.Modularity.ModuleExtensionConfiguration,Volo.Abp.ObjectExtending", "Volo.Abp.ObjectExtending.Modularity.ModuleExtensionConfiguration");
            feature.AddKnownType("Volo.Abp.ObjectExtending.Modularity.ModuleExtensionConfigurationDictionary,Volo.Abp.ObjectExtending", "Volo.Abp.ObjectExtending.Modularity.ModuleExtensionConfigurationDictionary");
            feature.AddKnownType("VoloAbpObjectMapping_ProcessedByFody,Volo.Abp.ObjectMapping", "<global namespace>.VoloAbpObjectMapping_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.ObjectMapping", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.ObjectMapping.AbpObjectMappingModule,Volo.Abp.ObjectMapping", "Volo.Abp.ObjectMapping.AbpObjectMappingModule");
            feature.AddKnownType("Volo.Abp.ObjectMapping.DefaultObjectMapper`1,Volo.Abp.ObjectMapping", "Volo.Abp.ObjectMapping.DefaultObjectMapper`1'1");
            feature.AddKnownType("Volo.Abp.ObjectMapping.DefaultObjectMapper,Volo.Abp.ObjectMapping", "Volo.Abp.ObjectMapping.DefaultObjectMapper");
            feature.AddKnownType("Volo.Abp.ObjectMapping.IAutoObjectMappingProvider,Volo.Abp.ObjectMapping", "Volo.Abp.ObjectMapping.IAutoObjectMappingProvider");
            feature.AddKnownType("Volo.Abp.ObjectMapping.IAutoObjectMappingProvider`1,Volo.Abp.ObjectMapping", "Volo.Abp.ObjectMapping.IAutoObjectMappingProvider`1'1");
            feature.AddKnownType("Volo.Abp.ObjectMapping.IMapFrom`1,Volo.Abp.ObjectMapping", "Volo.Abp.ObjectMapping.IMapFrom`1'1");
            feature.AddKnownType("Volo.Abp.ObjectMapping.IMapTo`1,Volo.Abp.ObjectMapping", "Volo.Abp.ObjectMapping.IMapTo`1'1");
            feature.AddKnownType("Volo.Abp.ObjectMapping.IObjectMapper,Volo.Abp.ObjectMapping", "Volo.Abp.ObjectMapping.IObjectMapper");
            feature.AddKnownType("Volo.Abp.ObjectMapping.IObjectMapper`1,Volo.Abp.ObjectMapping", "Volo.Abp.ObjectMapping.IObjectMapper`1'1");
            feature.AddKnownType("Volo.Abp.ObjectMapping.IObjectMapper`2,Volo.Abp.ObjectMapping", "Volo.Abp.ObjectMapping.IObjectMapper`2'2");
            feature.AddKnownType("Volo.Abp.ObjectMapping.NotImplementedAutoObjectMappingProvider,Volo.Abp.ObjectMapping", "Volo.Abp.ObjectMapping.NotImplementedAutoObjectMappingProvider");
            feature.AddKnownType("VoloAbpOpenIddictDomainShared_ProcessedByFody,Volo.Abp.OpenIddict.Domain.Shared", "<global namespace>.VoloAbpOpenIddictDomainShared_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.OpenIddict.Domain.Shared", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.ObjectExtending.OpenIddictModuleExtensionConfiguration,Volo.Abp.OpenIddict.Domain.Shared", "Volo.Abp.ObjectExtending.OpenIddictModuleExtensionConfiguration");
            feature.AddKnownType("Volo.Abp.ObjectExtending.OpenIddictModuleExtensionConsts,Volo.Abp.OpenIddict.Domain.Shared", "Volo.Abp.ObjectExtending.OpenIddictModuleExtensionConsts");
            feature.AddKnownType("Volo.Abp.OpenIddict.AbpOpenIddictDomainSharedModule,Volo.Abp.OpenIddict.Domain.Shared", "Volo.Abp.OpenIddict.AbpOpenIddictDomainSharedModule");
            feature.AddKnownType("Volo.Abp.OpenIddict.OpenIddictSecurityLogActionConsts,Volo.Abp.OpenIddict.Domain.Shared", "Volo.Abp.OpenIddict.OpenIddictSecurityLogActionConsts");
            feature.AddKnownType("Volo.Abp.OpenIddict.OpenIddictSecurityLogIdentityConsts,Volo.Abp.OpenIddict.Domain.Shared", "Volo.Abp.OpenIddict.OpenIddictSecurityLogIdentityConsts");
            feature.AddKnownType("Volo.Abp.OpenIddict.Applications.OpenIddictApplicationConsts,Volo.Abp.OpenIddict.Domain.Shared", "Volo.Abp.OpenIddict.Applications.OpenIddictApplicationConsts");
            feature.AddKnownType("Volo.Abp.OpenIddict.Authorizations.OpenIddictAuthorizationConsts,Volo.Abp.OpenIddict.Domain.Shared", "Volo.Abp.OpenIddict.Authorizations.OpenIddictAuthorizationConsts");
            feature.AddKnownType("Volo.Abp.OpenIddict.Localization.AbpOpenIddictResource,Volo.Abp.OpenIddict.Domain.Shared", "Volo.Abp.OpenIddict.Localization.AbpOpenIddictResource");
            feature.AddKnownType("Volo.Abp.OpenIddict.Scopes.OpenIddictScopeConsts,Volo.Abp.OpenIddict.Domain.Shared", "Volo.Abp.OpenIddict.Scopes.OpenIddictScopeConsts");
            feature.AddKnownType("Volo.Abp.OpenIddict.Tokens.OpenIddictTokenConsts,Volo.Abp.OpenIddict.Domain.Shared", "Volo.Abp.OpenIddict.Tokens.OpenIddictTokenConsts");
            feature.AddKnownType("VoloAbpPermissionManagementApplicationContracts_ProcessedByFody,Volo.Abp.PermissionManagement.Application.Contracts", "<global namespace>.VoloAbpPermissionManagementApplicationContracts_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.PermissionManagement.Application.Contracts", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.PermissionManagement.AbpPermissionManagementApplicationContractsModule,Volo.Abp.PermissionManagement.Application.Contracts", "Volo.Abp.PermissionManagement.AbpPermissionManagementApplicationContractsModule");
            feature.AddKnownType("Volo.Abp.PermissionManagement.GetPermissionListResultDto,Volo.Abp.PermissionManagement.Application.Contracts", "Volo.Abp.PermissionManagement.GetPermissionListResultDto");
            feature.AddKnownType("Volo.Abp.PermissionManagement.IPermissionAppService,Volo.Abp.PermissionManagement.Application.Contracts", "Volo.Abp.PermissionManagement.IPermissionAppService");
            feature.AddKnownType("Volo.Abp.PermissionManagement.PermissionGrantInfoDto,Volo.Abp.PermissionManagement.Application.Contracts", "Volo.Abp.PermissionManagement.PermissionGrantInfoDto");
            feature.AddKnownType("Volo.Abp.PermissionManagement.PermissionGroupDto,Volo.Abp.PermissionManagement.Application.Contracts", "Volo.Abp.PermissionManagement.PermissionGroupDto");
            feature.AddKnownType("Volo.Abp.PermissionManagement.PermissionManagementRemoteServiceConsts,Volo.Abp.PermissionManagement.Application.Contracts", "Volo.Abp.PermissionManagement.PermissionManagementRemoteServiceConsts");
            feature.AddKnownType("Volo.Abp.PermissionManagement.ProviderInfoDto,Volo.Abp.PermissionManagement.Application.Contracts", "Volo.Abp.PermissionManagement.ProviderInfoDto");
            feature.AddKnownType("Volo.Abp.PermissionManagement.UpdatePermissionDto,Volo.Abp.PermissionManagement.Application.Contracts", "Volo.Abp.PermissionManagement.UpdatePermissionDto");
            feature.AddKnownType("Volo.Abp.PermissionManagement.UpdatePermissionsDto,Volo.Abp.PermissionManagement.Application.Contracts", "Volo.Abp.PermissionManagement.UpdatePermissionsDto");
            feature.AddKnownType("VoloAbpPermissionManagementDomainShared_ProcessedByFody,Volo.Abp.PermissionManagement.Domain.Shared", "<global namespace>.VoloAbpPermissionManagementDomainShared_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.PermissionManagement.Domain.Shared", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.PermissionManagement.AbpPermissionManagementDomainSharedModule,Volo.Abp.PermissionManagement.Domain.Shared", "Volo.Abp.PermissionManagement.AbpPermissionManagementDomainSharedModule");
            feature.AddKnownType("Volo.Abp.PermissionManagement.PermissionDefinitionRecordConsts,Volo.Abp.PermissionManagement.Domain.Shared", "Volo.Abp.PermissionManagement.PermissionDefinitionRecordConsts");
            feature.AddKnownType("Volo.Abp.PermissionManagement.PermissionGroupDefinitionRecordConsts,Volo.Abp.PermissionManagement.Domain.Shared", "Volo.Abp.PermissionManagement.PermissionGroupDefinitionRecordConsts");
            feature.AddKnownType("Volo.Abp.PermissionManagement.Localization.AbpPermissionManagementResource,Volo.Abp.PermissionManagement.Domain.Shared", "Volo.Abp.PermissionManagement.Localization.AbpPermissionManagementResource");
            feature.AddKnownType("VoloAbpSecurity_ProcessedByFody,Volo.Abp.Security", "<global namespace>.VoloAbpSecurity_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Security", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Authorization.AbpAuthorizationException,Volo.Abp.Security", "Volo.Abp.Authorization.AbpAuthorizationException");
            feature.AddKnownType("Volo.Abp.Clients.CurrentClient,Volo.Abp.Security", "Volo.Abp.Clients.CurrentClient");
            feature.AddKnownType("Volo.Abp.Clients.ICurrentClient,Volo.Abp.Security", "Volo.Abp.Clients.ICurrentClient");
            feature.AddKnownType("Volo.Abp.Security.AbpSecurityModule,Volo.Abp.Security", "Volo.Abp.Security.AbpSecurityModule");
            feature.AddKnownType("Volo.Abp.Security.Claims.AbpClaimsPrincipalContributorContext,Volo.Abp.Security", "Volo.Abp.Security.Claims.AbpClaimsPrincipalContributorContext");
            feature.AddKnownType("Volo.Abp.Security.Claims.AbpClaimsPrincipalFactory,Volo.Abp.Security", "Volo.Abp.Security.Claims.AbpClaimsPrincipalFactory");
            feature.AddKnownType("Volo.Abp.Security.Claims.AbpClaimsPrincipalFactoryOptions,Volo.Abp.Security", "Volo.Abp.Security.Claims.AbpClaimsPrincipalFactoryOptions");
            feature.AddKnownType("Volo.Abp.Security.Claims.CurrentPrincipalAccessorBase,Volo.Abp.Security", "Volo.Abp.Security.Claims.CurrentPrincipalAccessorBase");
            feature.AddKnownType("Volo.Abp.Security.Claims.IAbpClaimsPrincipalContributor,Volo.Abp.Security", "Volo.Abp.Security.Claims.IAbpClaimsPrincipalContributor");
            feature.AddKnownType("Volo.Abp.Security.Claims.IAbpClaimsPrincipalFactory,Volo.Abp.Security", "Volo.Abp.Security.Claims.IAbpClaimsPrincipalFactory");
            feature.AddKnownType("Volo.Abp.Security.Claims.ICurrentPrincipalAccessor,Volo.Abp.Security", "Volo.Abp.Security.Claims.ICurrentPrincipalAccessor");
            feature.AddKnownType("Volo.Abp.Security.Claims.ThreadCurrentPrincipalAccessor,Volo.Abp.Security", "Volo.Abp.Security.Claims.ThreadCurrentPrincipalAccessor");
            feature.AddKnownType("Volo.Abp.Security.Encryption.AbpStringEncryptionOptions,Volo.Abp.Security", "Volo.Abp.Security.Encryption.AbpStringEncryptionOptions");
            feature.AddKnownType("Volo.Abp.Security.Encryption.IStringEncryptionService,Volo.Abp.Security", "Volo.Abp.Security.Encryption.IStringEncryptionService");
            feature.AddKnownType("Volo.Abp.Security.Encryption.StringEncryptionService,Volo.Abp.Security", "Volo.Abp.Security.Encryption.StringEncryptionService");
            feature.AddKnownType("Volo.Abp.SecurityLog.AbpSecurityLogOptions,Volo.Abp.Security", "Volo.Abp.SecurityLog.AbpSecurityLogOptions");
            feature.AddKnownType("Volo.Abp.SecurityLog.DefaultSecurityLogManager,Volo.Abp.Security", "Volo.Abp.SecurityLog.DefaultSecurityLogManager");
            feature.AddKnownType("Volo.Abp.SecurityLog.ISecurityLogManager,Volo.Abp.Security", "Volo.Abp.SecurityLog.ISecurityLogManager");
            feature.AddKnownType("Volo.Abp.SecurityLog.ISecurityLogStore,Volo.Abp.Security", "Volo.Abp.SecurityLog.ISecurityLogStore");
            feature.AddKnownType("Volo.Abp.SecurityLog.SecurityLogInfo,Volo.Abp.Security", "Volo.Abp.SecurityLog.SecurityLogInfo");
            feature.AddKnownType("Volo.Abp.SecurityLog.SimpleSecurityLogStore,Volo.Abp.Security", "Volo.Abp.SecurityLog.SimpleSecurityLogStore");
            feature.AddKnownType("Volo.Abp.Users.CurrentUser,Volo.Abp.Security", "Volo.Abp.Users.CurrentUser");
            feature.AddKnownType("Volo.Abp.Users.ICurrentUser,Volo.Abp.Security", "Volo.Abp.Users.ICurrentUser");
            feature.AddKnownType("VoloAbpSerialization_ProcessedByFody,Volo.Abp.Serialization", "<global namespace>.VoloAbpSerialization_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Serialization", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Serialization.AbpSerializationModule,Volo.Abp.Serialization", "Volo.Abp.Serialization.AbpSerializationModule");
            feature.AddKnownType("Volo.Abp.Serialization.DefaultObjectSerializer,Volo.Abp.Serialization", "Volo.Abp.Serialization.DefaultObjectSerializer");
            feature.AddKnownType("Volo.Abp.Serialization.IObjectSerializer,Volo.Abp.Serialization", "Volo.Abp.Serialization.IObjectSerializer");
            feature.AddKnownType("Volo.Abp.Serialization.IObjectSerializer`1,Volo.Abp.Serialization", "Volo.Abp.Serialization.IObjectSerializer`1'1");
            feature.AddKnownType("VoloAbpSettingManagementApplicationContracts_ProcessedByFody,Volo.Abp.SettingManagement.Application.Contracts", "<global namespace>.VoloAbpSettingManagementApplicationContracts_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.SettingManagement.Application.Contracts", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.SettingManagement.AbpSettingManagementApplicationContractsModule,Volo.Abp.SettingManagement.Application.Contracts", "Volo.Abp.SettingManagement.AbpSettingManagementApplicationContractsModule");
            feature.AddKnownType("Volo.Abp.SettingManagement.AllowChangingEmailSettingsFeatureSimpleStateChecker,Volo.Abp.SettingManagement.Application.Contracts", "Volo.Abp.SettingManagement.AllowChangingEmailSettingsFeatureSimpleStateChecker");
            feature.AddKnownType("Volo.Abp.SettingManagement.EmailSettingsDto,Volo.Abp.SettingManagement.Application.Contracts", "Volo.Abp.SettingManagement.EmailSettingsDto");
            feature.AddKnownType("Volo.Abp.SettingManagement.IEmailSettingsAppService,Volo.Abp.SettingManagement.Application.Contracts", "Volo.Abp.SettingManagement.IEmailSettingsAppService");
            feature.AddKnownType("Volo.Abp.SettingManagement.SendTestEmailInput,Volo.Abp.SettingManagement.Application.Contracts", "Volo.Abp.SettingManagement.SendTestEmailInput");
            feature.AddKnownType("Volo.Abp.SettingManagement.SettingManagementPermissionDefinitionProvider,Volo.Abp.SettingManagement.Application.Contracts", "Volo.Abp.SettingManagement.SettingManagementPermissionDefinitionProvider");
            feature.AddKnownType("Volo.Abp.SettingManagement.SettingManagementPermissions,Volo.Abp.SettingManagement.Application.Contracts", "Volo.Abp.SettingManagement.SettingManagementPermissions");
            feature.AddKnownType("Volo.Abp.SettingManagement.SettingManagementRemoteServiceConsts,Volo.Abp.SettingManagement.Application.Contracts", "Volo.Abp.SettingManagement.SettingManagementRemoteServiceConsts");
            feature.AddKnownType("Volo.Abp.SettingManagement.UpdateEmailSettingsDto,Volo.Abp.SettingManagement.Application.Contracts", "Volo.Abp.SettingManagement.UpdateEmailSettingsDto");
            feature.AddKnownType("VoloAbpSettingManagementDomainShared_ProcessedByFody,Volo.Abp.SettingManagement.Domain.Shared", "<global namespace>.VoloAbpSettingManagementDomainShared_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.SettingManagement.Domain.Shared", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.SettingManagement.AbpSettingManagementDomainSharedModule,Volo.Abp.SettingManagement.Domain.Shared", "Volo.Abp.SettingManagement.AbpSettingManagementDomainSharedModule");
            feature.AddKnownType("Volo.Abp.SettingManagement.SettingManagementFeatureDefinitionProvider,Volo.Abp.SettingManagement.Domain.Shared", "Volo.Abp.SettingManagement.SettingManagementFeatureDefinitionProvider");
            feature.AddKnownType("Volo.Abp.SettingManagement.SettingManagementFeatures,Volo.Abp.SettingManagement.Domain.Shared", "Volo.Abp.SettingManagement.SettingManagementFeatures");
            feature.AddKnownType("Volo.Abp.SettingManagement.Localization.AbpSettingManagementResource,Volo.Abp.SettingManagement.Domain.Shared", "Volo.Abp.SettingManagement.Localization.AbpSettingManagementResource");
            feature.AddKnownType("VoloAbpSettings_ProcessedByFody,Volo.Abp.Settings", "<global namespace>.VoloAbpSettings_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Settings", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Settings.AbpSettingOptions,Volo.Abp.Settings", "Volo.Abp.Settings.AbpSettingOptions");
            feature.AddKnownType("Volo.Abp.Settings.AbpSettingsModule,Volo.Abp.Settings", "Volo.Abp.Settings.AbpSettingsModule");
            feature.AddKnownType("Volo.Abp.Settings.ConfigurationSettingValueProvider,Volo.Abp.Settings", "Volo.Abp.Settings.ConfigurationSettingValueProvider");
            feature.AddKnownType("Volo.Abp.Settings.DefaultValueSettingValueProvider,Volo.Abp.Settings", "Volo.Abp.Settings.DefaultValueSettingValueProvider");
            feature.AddKnownType("Volo.Abp.Settings.GlobalSettingValueProvider,Volo.Abp.Settings", "Volo.Abp.Settings.GlobalSettingValueProvider");
            feature.AddKnownType("Volo.Abp.Settings.ISettingDefinitionContext,Volo.Abp.Settings", "Volo.Abp.Settings.ISettingDefinitionContext");
            feature.AddKnownType("Volo.Abp.Settings.ISettingDefinitionManager,Volo.Abp.Settings", "Volo.Abp.Settings.ISettingDefinitionManager");
            feature.AddKnownType("Volo.Abp.Settings.ISettingDefinitionProvider,Volo.Abp.Settings", "Volo.Abp.Settings.ISettingDefinitionProvider");
            feature.AddKnownType("Volo.Abp.Settings.ISettingEncryptionService,Volo.Abp.Settings", "Volo.Abp.Settings.ISettingEncryptionService");
            feature.AddKnownType("Volo.Abp.Settings.ISettingProvider,Volo.Abp.Settings", "Volo.Abp.Settings.ISettingProvider");
            feature.AddKnownType("Volo.Abp.Settings.ISettingStore,Volo.Abp.Settings", "Volo.Abp.Settings.ISettingStore");
            feature.AddKnownType("Volo.Abp.Settings.ISettingValueProvider,Volo.Abp.Settings", "Volo.Abp.Settings.ISettingValueProvider");
            feature.AddKnownType("Volo.Abp.Settings.ISettingValueProviderManager,Volo.Abp.Settings", "Volo.Abp.Settings.ISettingValueProviderManager");
            feature.AddKnownType("Volo.Abp.Settings.NullSettingStore,Volo.Abp.Settings", "Volo.Abp.Settings.NullSettingStore");
            feature.AddKnownType("Volo.Abp.Settings.SettingDefinition,Volo.Abp.Settings", "Volo.Abp.Settings.SettingDefinition");
            feature.AddKnownType("Volo.Abp.Settings.SettingDefinitionContext,Volo.Abp.Settings", "Volo.Abp.Settings.SettingDefinitionContext");
            feature.AddKnownType("Volo.Abp.Settings.SettingDefinitionManager,Volo.Abp.Settings", "Volo.Abp.Settings.SettingDefinitionManager");
            feature.AddKnownType("Volo.Abp.Settings.SettingDefinitionProvider,Volo.Abp.Settings", "Volo.Abp.Settings.SettingDefinitionProvider");
            feature.AddKnownType("Volo.Abp.Settings.SettingEncryptionService,Volo.Abp.Settings", "Volo.Abp.Settings.SettingEncryptionService");
            feature.AddKnownType("Volo.Abp.Settings.SettingProvider,Volo.Abp.Settings", "Volo.Abp.Settings.SettingProvider");
            feature.AddKnownType("Volo.Abp.Settings.SettingValue,Volo.Abp.Settings", "Volo.Abp.Settings.SettingValue");
            feature.AddKnownType("Volo.Abp.Settings.SettingValueProvider,Volo.Abp.Settings", "Volo.Abp.Settings.SettingValueProvider");
            feature.AddKnownType("Volo.Abp.Settings.SettingValueProviderManager,Volo.Abp.Settings", "Volo.Abp.Settings.SettingValueProviderManager");
            feature.AddKnownType("Volo.Abp.Settings.TenantSettingValueProvider,Volo.Abp.Settings", "Volo.Abp.Settings.TenantSettingValueProvider");
            feature.AddKnownType("Volo.Abp.Settings.UserSettingValueProvider,Volo.Abp.Settings", "Volo.Abp.Settings.UserSettingValueProvider");
            feature.AddKnownType("VoloAbpSpecifications_ProcessedByFody,Volo.Abp.Specifications", "<global namespace>.VoloAbpSpecifications_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Specifications", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Specifications.AbpSpecificationsModule,Volo.Abp.Specifications", "Volo.Abp.Specifications.AbpSpecificationsModule");
            feature.AddKnownType("Volo.Abp.Specifications.AndNotSpecification`1,Volo.Abp.Specifications", "Volo.Abp.Specifications.AndNotSpecification`1'1");
            feature.AddKnownType("Volo.Abp.Specifications.AndSpecification`1,Volo.Abp.Specifications", "Volo.Abp.Specifications.AndSpecification`1'1");
            feature.AddKnownType("Volo.Abp.Specifications.AnySpecification`1,Volo.Abp.Specifications", "Volo.Abp.Specifications.AnySpecification`1'1");
            feature.AddKnownType("Volo.Abp.Specifications.CompositeSpecification`1,Volo.Abp.Specifications", "Volo.Abp.Specifications.CompositeSpecification`1'1");
            feature.AddKnownType("Volo.Abp.Specifications.ExpressionSpecification`1,Volo.Abp.Specifications", "Volo.Abp.Specifications.ExpressionSpecification`1'1");
            feature.AddKnownType("Volo.Abp.Specifications.ICompositeSpecification`1,Volo.Abp.Specifications", "Volo.Abp.Specifications.ICompositeSpecification`1'1");
            feature.AddKnownType("Volo.Abp.Specifications.ISpecification`1,Volo.Abp.Specifications", "Volo.Abp.Specifications.ISpecification`1'1");
            feature.AddKnownType("Volo.Abp.Specifications.ISpecificationParser`1,Volo.Abp.Specifications", "Volo.Abp.Specifications.ISpecificationParser`1'1");
            feature.AddKnownType("Volo.Abp.Specifications.NoneSpecification`1,Volo.Abp.Specifications", "Volo.Abp.Specifications.NoneSpecification`1'1");
            feature.AddKnownType("Volo.Abp.Specifications.NotSpecification`1,Volo.Abp.Specifications", "Volo.Abp.Specifications.NotSpecification`1'1");
            feature.AddKnownType("Volo.Abp.Specifications.OrSpecification`1,Volo.Abp.Specifications", "Volo.Abp.Specifications.OrSpecification`1'1");
            feature.AddKnownType("Volo.Abp.Specifications.ParameterRebinder,Volo.Abp.Specifications", "Volo.Abp.Specifications.ParameterRebinder");
            feature.AddKnownType("Volo.Abp.Specifications.Specification`1,Volo.Abp.Specifications", "Volo.Abp.Specifications.Specification`1'1");
            feature.AddKnownType("VoloAbpTenantManagementApplicationContracts_ProcessedByFody,Volo.Abp.TenantManagement.Application.Contracts", "<global namespace>.VoloAbpTenantManagementApplicationContracts_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.TenantManagement.Application.Contracts", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.TenantManagement.AbpTenantManagementApplicationContractsModule,Volo.Abp.TenantManagement.Application.Contracts", "Volo.Abp.TenantManagement.AbpTenantManagementApplicationContractsModule");
            feature.AddKnownType("Volo.Abp.TenantManagement.AbpTenantManagementPermissionDefinitionProvider,Volo.Abp.TenantManagement.Application.Contracts", "Volo.Abp.TenantManagement.AbpTenantManagementPermissionDefinitionProvider");
            feature.AddKnownType("Volo.Abp.TenantManagement.GetTenantsInput,Volo.Abp.TenantManagement.Application.Contracts", "Volo.Abp.TenantManagement.GetTenantsInput");
            feature.AddKnownType("Volo.Abp.TenantManagement.ITenantAppService,Volo.Abp.TenantManagement.Application.Contracts", "Volo.Abp.TenantManagement.ITenantAppService");
            feature.AddKnownType("Volo.Abp.TenantManagement.TenantCreateDto,Volo.Abp.TenantManagement.Application.Contracts", "Volo.Abp.TenantManagement.TenantCreateDto");
            feature.AddKnownType("Volo.Abp.TenantManagement.TenantCreateOrUpdateDtoBase,Volo.Abp.TenantManagement.Application.Contracts", "Volo.Abp.TenantManagement.TenantCreateOrUpdateDtoBase");
            feature.AddKnownType("Volo.Abp.TenantManagement.TenantDto,Volo.Abp.TenantManagement.Application.Contracts", "Volo.Abp.TenantManagement.TenantDto");
            feature.AddKnownType("Volo.Abp.TenantManagement.TenantManagementRemoteServiceConsts,Volo.Abp.TenantManagement.Application.Contracts", "Volo.Abp.TenantManagement.TenantManagementRemoteServiceConsts");
            feature.AddKnownType("Volo.Abp.TenantManagement.TenantUpdateDto,Volo.Abp.TenantManagement.Application.Contracts", "Volo.Abp.TenantManagement.TenantUpdateDto");
            feature.AddKnownType("VoloAbpTenantManagementDomainShared_ProcessedByFody,Volo.Abp.TenantManagement.Domain.Shared", "<global namespace>.VoloAbpTenantManagementDomainShared_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.TenantManagement.Domain.Shared", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.ObjectExtending.TenantManagementModuleExtensionConfiguration,Volo.Abp.TenantManagement.Domain.Shared", "Volo.Abp.ObjectExtending.TenantManagementModuleExtensionConfiguration");
            feature.AddKnownType("Volo.Abp.ObjectExtending.TenantManagementModuleExtensionConsts,Volo.Abp.TenantManagement.Domain.Shared", "Volo.Abp.ObjectExtending.TenantManagementModuleExtensionConsts");
            feature.AddKnownType("Volo.Abp.TenantManagement.AbpTenantManagementDomainSharedModule,Volo.Abp.TenantManagement.Domain.Shared", "Volo.Abp.TenantManagement.AbpTenantManagementDomainSharedModule");
            feature.AddKnownType("Volo.Abp.TenantManagement.TenantEto,Volo.Abp.TenantManagement.Domain.Shared", "Volo.Abp.TenantManagement.TenantEto");
            feature.AddKnownType("Volo.Abp.TenantManagement.Localization.AbpTenantManagementResource,Volo.Abp.TenantManagement.Domain.Shared", "Volo.Abp.TenantManagement.Localization.AbpTenantManagementResource");
            feature.AddKnownType("VoloAbpThreading_ProcessedByFody,Volo.Abp.Threading", "<global namespace>.VoloAbpThreading_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Threading", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Linq.AsyncQueryableExecuter,Volo.Abp.Threading", "Volo.Abp.Linq.AsyncQueryableExecuter");
            feature.AddKnownType("Volo.Abp.Linq.IAsyncQueryableExecuter,Volo.Abp.Threading", "Volo.Abp.Linq.IAsyncQueryableExecuter");
            feature.AddKnownType("Volo.Abp.Linq.IAsyncQueryableProvider,Volo.Abp.Threading", "Volo.Abp.Linq.IAsyncQueryableProvider");
            feature.AddKnownType("Volo.Abp.Threading.AbpAsyncTimer,Volo.Abp.Threading", "Volo.Abp.Threading.AbpAsyncTimer");
            feature.AddKnownType("Volo.Abp.Threading.AbpThreadingModule,Volo.Abp.Threading", "Volo.Abp.Threading.AbpThreadingModule");
            feature.AddKnownType("Volo.Abp.Threading.AbpTimer,Volo.Abp.Threading", "Volo.Abp.Threading.AbpTimer");
            feature.AddKnownType("Volo.Abp.Threading.AmbientDataContextAmbientScopeProvider`1,Volo.Abp.Threading", "Volo.Abp.Threading.AmbientDataContextAmbientScopeProvider`1'1");
            feature.AddKnownType("Volo.Abp.Threading.AmbientDataContextAmbientScopeProvider`1+ScopeItem,Volo.Abp.Threading", "Volo.Abp.Threading.ScopeItem'1");
            feature.AddKnownType("Volo.Abp.Threading.AsyncLocalAmbientDataContext,Volo.Abp.Threading", "Volo.Abp.Threading.AsyncLocalAmbientDataContext");
            feature.AddKnownType("Volo.Abp.Threading.CancellationTokenOverride,Volo.Abp.Threading", "Volo.Abp.Threading.CancellationTokenOverride");
            feature.AddKnownType("Volo.Abp.Threading.CancellationTokenProviderBase,Volo.Abp.Threading", "Volo.Abp.Threading.CancellationTokenProviderBase");
            feature.AddKnownType("Volo.Abp.Threading.IAmbientDataContext,Volo.Abp.Threading", "Volo.Abp.Threading.IAmbientDataContext");
            feature.AddKnownType("Volo.Abp.Threading.IAmbientScopeProvider`1,Volo.Abp.Threading", "Volo.Abp.Threading.IAmbientScopeProvider`1'1");
            feature.AddKnownType("Volo.Abp.Threading.ICancellationTokenProvider,Volo.Abp.Threading", "Volo.Abp.Threading.ICancellationTokenProvider");
            feature.AddKnownType("Volo.Abp.Threading.IRunnable,Volo.Abp.Threading", "Volo.Abp.Threading.IRunnable");
            feature.AddKnownType("Volo.Abp.Threading.NullCancellationTokenProvider,Volo.Abp.Threading", "Volo.Abp.Threading.NullCancellationTokenProvider");
            feature.AddKnownType("VoloAbpTiming_ProcessedByFody,Volo.Abp.Timing", "<global namespace>.VoloAbpTiming_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Timing", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Timing.AbpClockOptions,Volo.Abp.Timing", "Volo.Abp.Timing.AbpClockOptions");
            feature.AddKnownType("Volo.Abp.Timing.AbpTimingModule,Volo.Abp.Timing", "Volo.Abp.Timing.AbpTimingModule");
            feature.AddKnownType("Volo.Abp.Timing.Clock,Volo.Abp.Timing", "Volo.Abp.Timing.Clock");
            feature.AddKnownType("Volo.Abp.Timing.DisableDateTimeNormalizationAttribute,Volo.Abp.Timing", "Volo.Abp.Timing.DisableDateTimeNormalizationAttribute");
            feature.AddKnownType("Volo.Abp.Timing.IClock,Volo.Abp.Timing", "Volo.Abp.Timing.IClock");
            feature.AddKnownType("Volo.Abp.Timing.ITimezoneProvider,Volo.Abp.Timing", "Volo.Abp.Timing.ITimezoneProvider");
            feature.AddKnownType("Volo.Abp.Timing.TimingSettingProvider,Volo.Abp.Timing", "Volo.Abp.Timing.TimingSettingProvider");
            feature.AddKnownType("Volo.Abp.Timing.TZConvertTimezoneProvider,Volo.Abp.Timing", "Volo.Abp.Timing.TZConvertTimezoneProvider");
            feature.AddKnownType("Volo.Abp.Timing.Localization.Resources.AbpTiming.AbpTimingResource,Volo.Abp.Timing", "Volo.Abp.Timing.Localization.Resources.AbpTiming.AbpTimingResource");
            feature.AddKnownType("VoloAbpUow_ProcessedByFody,Volo.Abp.Uow", "<global namespace>.VoloAbpUow_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Uow", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Uow.AbpUnitOfWorkDefaultOptions,Volo.Abp.Uow", "Volo.Abp.Uow.AbpUnitOfWorkDefaultOptions");
            feature.AddKnownType("Volo.Abp.Uow.AbpUnitOfWorkModule,Volo.Abp.Uow", "Volo.Abp.Uow.AbpUnitOfWorkModule");
            feature.AddKnownType("Volo.Abp.Uow.AbpUnitOfWorkOptions,Volo.Abp.Uow", "Volo.Abp.Uow.AbpUnitOfWorkOptions");
            feature.AddKnownType("Volo.Abp.Uow.AmbientUnitOfWork,Volo.Abp.Uow", "Volo.Abp.Uow.AmbientUnitOfWork");
            feature.AddKnownType("Volo.Abp.Uow.ChildUnitOfWork,Volo.Abp.Uow", "Volo.Abp.Uow.ChildUnitOfWork");
            feature.AddKnownType("Volo.Abp.Uow.IAbpUnitOfWorkOptions,Volo.Abp.Uow", "Volo.Abp.Uow.IAbpUnitOfWorkOptions");
            feature.AddKnownType("Volo.Abp.Uow.IAmbientUnitOfWork,Volo.Abp.Uow", "Volo.Abp.Uow.IAmbientUnitOfWork");
            feature.AddKnownType("Volo.Abp.Uow.IDatabaseApi,Volo.Abp.Uow", "Volo.Abp.Uow.IDatabaseApi");
            feature.AddKnownType("Volo.Abp.Uow.IDatabaseApiContainer,Volo.Abp.Uow", "Volo.Abp.Uow.IDatabaseApiContainer");
            feature.AddKnownType("Volo.Abp.Uow.ISupportsRollback,Volo.Abp.Uow", "Volo.Abp.Uow.ISupportsRollback");
            feature.AddKnownType("Volo.Abp.Uow.ISupportsSavingChanges,Volo.Abp.Uow", "Volo.Abp.Uow.ISupportsSavingChanges");
            feature.AddKnownType("Volo.Abp.Uow.ITransactionApi,Volo.Abp.Uow", "Volo.Abp.Uow.ITransactionApi");
            feature.AddKnownType("Volo.Abp.Uow.ITransactionApiContainer,Volo.Abp.Uow", "Volo.Abp.Uow.ITransactionApiContainer");
            feature.AddKnownType("Volo.Abp.Uow.IUnitOfWork,Volo.Abp.Uow", "Volo.Abp.Uow.IUnitOfWork");
            feature.AddKnownType("Volo.Abp.Uow.IUnitOfWorkAccessor,Volo.Abp.Uow", "Volo.Abp.Uow.IUnitOfWorkAccessor");
            feature.AddKnownType("Volo.Abp.Uow.IUnitOfWorkEnabled,Volo.Abp.Uow", "Volo.Abp.Uow.IUnitOfWorkEnabled");
            feature.AddKnownType("Volo.Abp.Uow.IUnitOfWorkEventPublisher,Volo.Abp.Uow", "Volo.Abp.Uow.IUnitOfWorkEventPublisher");
            feature.AddKnownType("Volo.Abp.Uow.IUnitOfWorkManager,Volo.Abp.Uow", "Volo.Abp.Uow.IUnitOfWorkManager");
            feature.AddKnownType("Volo.Abp.Uow.IUnitOfWorkManagerAccessor,Volo.Abp.Uow", "Volo.Abp.Uow.IUnitOfWorkManagerAccessor");
            feature.AddKnownType("Volo.Abp.Uow.IUnitOfWorkTransactionBehaviourProvider,Volo.Abp.Uow", "Volo.Abp.Uow.IUnitOfWorkTransactionBehaviourProvider");
            feature.AddKnownType("Volo.Abp.Uow.NullUnitOfWorkEventPublisher,Volo.Abp.Uow", "Volo.Abp.Uow.NullUnitOfWorkEventPublisher");
            feature.AddKnownType("Volo.Abp.Uow.NullUnitOfWorkTransactionBehaviourProvider,Volo.Abp.Uow", "Volo.Abp.Uow.NullUnitOfWorkTransactionBehaviourProvider");
            feature.AddKnownType("Volo.Abp.Uow.UnitOfWork,Volo.Abp.Uow", "Volo.Abp.Uow.UnitOfWork");
            feature.AddKnownType("Volo.Abp.Uow.UnitOfWorkAttribute,Volo.Abp.Uow", "Volo.Abp.Uow.UnitOfWorkAttribute");
            feature.AddKnownType("Volo.Abp.Uow.UnitOfWorkEventArgs,Volo.Abp.Uow", "Volo.Abp.Uow.UnitOfWorkEventArgs");
            feature.AddKnownType("Volo.Abp.Uow.UnitOfWorkEventRecord,Volo.Abp.Uow", "Volo.Abp.Uow.UnitOfWorkEventRecord");
            feature.AddKnownType("Volo.Abp.Uow.UnitOfWorkFailedEventArgs,Volo.Abp.Uow", "Volo.Abp.Uow.UnitOfWorkFailedEventArgs");
            feature.AddKnownType("Volo.Abp.Uow.UnitOfWorkInterceptor,Volo.Abp.Uow", "Volo.Abp.Uow.UnitOfWorkInterceptor");
            feature.AddKnownType("Volo.Abp.Uow.UnitOfWorkManager,Volo.Abp.Uow", "Volo.Abp.Uow.UnitOfWorkManager");
            feature.AddKnownType("Volo.Abp.Uow.UnitOfWorkTransactionBehavior,Volo.Abp.Uow", "Volo.Abp.Uow.UnitOfWorkTransactionBehavior");
            feature.AddKnownType("VoloAbpUsersAbstractions_ProcessedByFody,Volo.Abp.Users.Abstractions", "<global namespace>.VoloAbpUsersAbstractions_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Users.Abstractions", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Users.AbpUsersAbstractionModule,Volo.Abp.Users.Abstractions", "Volo.Abp.Users.AbpUsersAbstractionModule");
            feature.AddKnownType("Volo.Abp.Users.IExternalUserLookupServiceProvider,Volo.Abp.Users.Abstractions", "Volo.Abp.Users.IExternalUserLookupServiceProvider");
            feature.AddKnownType("Volo.Abp.Users.IUserData,Volo.Abp.Users.Abstractions", "Volo.Abp.Users.IUserData");
            feature.AddKnownType("Volo.Abp.Users.UserData,Volo.Abp.Users.Abstractions", "Volo.Abp.Users.UserData");
            feature.AddKnownType("Volo.Abp.Users.UserEto,Volo.Abp.Users.Abstractions", "Volo.Abp.Users.UserEto");
            feature.AddKnownType("Volo.Abp.Users.UserPasswordChangeRequestedEto,Volo.Abp.Users.Abstractions", "Volo.Abp.Users.UserPasswordChangeRequestedEto");
            feature.AddKnownType("VoloAbpUsersDomainShared_ProcessedByFody,Volo.Abp.Users.Domain.Shared", "<global namespace>.VoloAbpUsersDomainShared_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Users.Domain.Shared", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Users.AbpUserConsts,Volo.Abp.Users.Domain.Shared", "Volo.Abp.Users.AbpUserConsts");
            feature.AddKnownType("Volo.Abp.Users.AbpUsersDomainSharedModule,Volo.Abp.Users.Domain.Shared", "Volo.Abp.Users.AbpUsersDomainSharedModule");
            feature.AddKnownType("VoloAbpValidationAbstractions_ProcessedByFody,Volo.Abp.Validation.Abstractions", "<global namespace>.VoloAbpValidationAbstractions_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Validation.Abstractions", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Validation.AbpValidationAbstractionsModule,Volo.Abp.Validation.Abstractions", "Volo.Abp.Validation.AbpValidationAbstractionsModule");
            feature.AddKnownType("Volo.Abp.Validation.AbpValidationException,Volo.Abp.Validation.Abstractions", "Volo.Abp.Validation.AbpValidationException");
            feature.AddKnownType("Volo.Abp.Validation.IHasValidationErrors,Volo.Abp.Validation.Abstractions", "Volo.Abp.Validation.IHasValidationErrors");
            feature.AddKnownType("VoloAbpValidation_ProcessedByFody,Volo.Abp.Validation", "<global namespace>.VoloAbpValidation_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.Validation", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableContextAttribute", "NullableContextAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.Validation.AbpValidationModule,Volo.Abp.Validation", "Volo.Abp.Validation.AbpValidationModule");
            feature.AddKnownType("Volo.Abp.Validation.AbpValidationOptions,Volo.Abp.Validation", "Volo.Abp.Validation.AbpValidationOptions");
            feature.AddKnownType("Volo.Abp.Validation.AbpValidationResult,Volo.Abp.Validation", "Volo.Abp.Validation.AbpValidationResult");
            feature.AddKnownType("Volo.Abp.Validation.DataAnnotationObjectValidationContributor,Volo.Abp.Validation", "Volo.Abp.Validation.DataAnnotationObjectValidationContributor");
            feature.AddKnownType("Volo.Abp.Validation.DefaultAttributeValidationResultProvider,Volo.Abp.Validation", "Volo.Abp.Validation.DefaultAttributeValidationResultProvider");
            feature.AddKnownType("Volo.Abp.Validation.DisableValidationAttribute,Volo.Abp.Validation", "Volo.Abp.Validation.DisableValidationAttribute");
            feature.AddKnownType("Volo.Abp.Validation.EnableValidationAttribute,Volo.Abp.Validation", "Volo.Abp.Validation.EnableValidationAttribute");
            feature.AddKnownType("Volo.Abp.Validation.IAbpValidationResult,Volo.Abp.Validation", "Volo.Abp.Validation.IAbpValidationResult");
            feature.AddKnownType("Volo.Abp.Validation.IAttributeValidationResultProvider,Volo.Abp.Validation", "Volo.Abp.Validation.IAttributeValidationResultProvider");
            feature.AddKnownType("Volo.Abp.Validation.IMethodInvocationValidator,Volo.Abp.Validation", "Volo.Abp.Validation.IMethodInvocationValidator");
            feature.AddKnownType("Volo.Abp.Validation.IObjectValidationContributor,Volo.Abp.Validation", "Volo.Abp.Validation.IObjectValidationContributor");
            feature.AddKnownType("Volo.Abp.Validation.IObjectValidator,Volo.Abp.Validation", "Volo.Abp.Validation.IObjectValidator");
            feature.AddKnownType("Volo.Abp.Validation.IValidationEnabled,Volo.Abp.Validation", "Volo.Abp.Validation.IValidationEnabled");
            feature.AddKnownType("Volo.Abp.Validation.MethodInvocationValidationContext,Volo.Abp.Validation", "Volo.Abp.Validation.MethodInvocationValidationContext");
            feature.AddKnownType("Volo.Abp.Validation.MethodInvocationValidator,Volo.Abp.Validation", "Volo.Abp.Validation.MethodInvocationValidator");
            feature.AddKnownType("Volo.Abp.Validation.ObjectValidationContext,Volo.Abp.Validation", "Volo.Abp.Validation.ObjectValidationContext");
            feature.AddKnownType("Volo.Abp.Validation.ObjectValidator,Volo.Abp.Validation", "Volo.Abp.Validation.ObjectValidator");
            feature.AddKnownType("Volo.Abp.Validation.ValidationHelper,Volo.Abp.Validation", "Volo.Abp.Validation.ValidationHelper");
            feature.AddKnownType("Volo.Abp.Validation.ValidationInterceptor,Volo.Abp.Validation", "Volo.Abp.Validation.ValidationInterceptor");
            feature.AddKnownType("Volo.Abp.Validation.Localization.AbpValidationResource,Volo.Abp.Validation", "Volo.Abp.Validation.Localization.AbpValidationResource");
            feature.AddKnownType("Volo.Abp.Validation.StringValues.AlwaysValidValueValidator,Volo.Abp.Validation", "Volo.Abp.Validation.StringValues.AlwaysValidValueValidator");
            feature.AddKnownType("Volo.Abp.Validation.StringValues.BooleanValueValidator,Volo.Abp.Validation", "Volo.Abp.Validation.StringValues.BooleanValueValidator");
            feature.AddKnownType("Volo.Abp.Validation.StringValues.FreeTextStringValueType,Volo.Abp.Validation", "Volo.Abp.Validation.StringValues.FreeTextStringValueType");
            feature.AddKnownType("Volo.Abp.Validation.StringValues.ISelectionStringValueItem,Volo.Abp.Validation", "Volo.Abp.Validation.StringValues.ISelectionStringValueItem");
            feature.AddKnownType("Volo.Abp.Validation.StringValues.ISelectionStringValueItemSource,Volo.Abp.Validation", "Volo.Abp.Validation.StringValues.ISelectionStringValueItemSource");
            feature.AddKnownType("Volo.Abp.Validation.StringValues.IStringValueType,Volo.Abp.Validation", "Volo.Abp.Validation.StringValues.IStringValueType");
            feature.AddKnownType("Volo.Abp.Validation.StringValues.IValueValidator,Volo.Abp.Validation", "Volo.Abp.Validation.StringValues.IValueValidator");
            feature.AddKnownType("Volo.Abp.Validation.StringValues.LocalizableSelectionStringValueItem,Volo.Abp.Validation", "Volo.Abp.Validation.StringValues.LocalizableSelectionStringValueItem");
            feature.AddKnownType("Volo.Abp.Validation.StringValues.LocalizableStringInfo,Volo.Abp.Validation", "Volo.Abp.Validation.StringValues.LocalizableStringInfo");
            feature.AddKnownType("Volo.Abp.Validation.StringValues.NumericValueValidator,Volo.Abp.Validation", "Volo.Abp.Validation.StringValues.NumericValueValidator");
            feature.AddKnownType("Volo.Abp.Validation.StringValues.SelectionStringValueType,Volo.Abp.Validation", "Volo.Abp.Validation.StringValues.SelectionStringValueType");
            feature.AddKnownType("Volo.Abp.Validation.StringValues.StaticSelectionStringValueItemSource,Volo.Abp.Validation", "Volo.Abp.Validation.StringValues.StaticSelectionStringValueItemSource");
            feature.AddKnownType("Volo.Abp.Validation.StringValues.StringValueTypeAttribute,Volo.Abp.Validation", "Volo.Abp.Validation.StringValues.StringValueTypeAttribute");
            feature.AddKnownType("Volo.Abp.Validation.StringValues.StringValueTypeBase,Volo.Abp.Validation", "Volo.Abp.Validation.StringValues.StringValueTypeBase");
            feature.AddKnownType("Volo.Abp.Validation.StringValues.StringValueValidator,Volo.Abp.Validation", "Volo.Abp.Validation.StringValues.StringValueValidator");
            feature.AddKnownType("Volo.Abp.Validation.StringValues.ToggleStringValueType,Volo.Abp.Validation", "Volo.Abp.Validation.StringValues.ToggleStringValueType");
            feature.AddKnownType("Volo.Abp.Validation.StringValues.ValueValidatorAttribute,Volo.Abp.Validation", "Volo.Abp.Validation.StringValues.ValueValidatorAttribute");
            feature.AddKnownType("Volo.Abp.Validation.StringValues.ValueValidatorBase,Volo.Abp.Validation", "Volo.Abp.Validation.StringValues.ValueValidatorBase");
            feature.AddKnownType("VoloAbpVirtualFileSystem_ProcessedByFody,Volo.Abp.VirtualFileSystem", "<global namespace>.VoloAbpVirtualFileSystem_ProcessedByFody");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Volo.Abp.VirtualFileSystem", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.IsReadOnlyAttribute", "IsReadOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NullableAttribute", "NullableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RefSafetyRulesAttribute", "RefSafetyRulesAttribute");
            feature.AddKnownType("Volo.Abp.VirtualFileSystem.AbpVirtualFileSystemModule,Volo.Abp.VirtualFileSystem", "Volo.Abp.VirtualFileSystem.AbpVirtualFileSystemModule");
            feature.AddKnownType("Volo.Abp.VirtualFileSystem.AbpVirtualFileSystemOptions,Volo.Abp.VirtualFileSystem", "Volo.Abp.VirtualFileSystem.AbpVirtualFileSystemOptions");
            feature.AddKnownType("Volo.Abp.VirtualFileSystem.DictionaryBasedFileProvider,Volo.Abp.VirtualFileSystem", "Volo.Abp.VirtualFileSystem.DictionaryBasedFileProvider");
            feature.AddKnownType("Volo.Abp.VirtualFileSystem.DynamicFileProvider,Volo.Abp.VirtualFileSystem", "Volo.Abp.VirtualFileSystem.DynamicFileProvider");
            feature.AddKnownType("Volo.Abp.VirtualFileSystem.DynamicFileProvider+ChangeTokenInfo,Volo.Abp.VirtualFileSystem", "Volo.Abp.VirtualFileSystem.ChangeTokenInfo");
            feature.AddKnownType("Volo.Abp.VirtualFileSystem.EnumerableDirectoryContents,Volo.Abp.VirtualFileSystem", "Volo.Abp.VirtualFileSystem.EnumerableDirectoryContents");
            feature.AddKnownType("Volo.Abp.VirtualFileSystem.IDynamicFileProvider,Volo.Abp.VirtualFileSystem", "Volo.Abp.VirtualFileSystem.IDynamicFileProvider");
            feature.AddKnownType("Volo.Abp.VirtualFileSystem.InMemoryFileInfo,Volo.Abp.VirtualFileSystem", "Volo.Abp.VirtualFileSystem.InMemoryFileInfo");
            feature.AddKnownType("Volo.Abp.VirtualFileSystem.IVirtualFileProvider,Volo.Abp.VirtualFileSystem", "Volo.Abp.VirtualFileSystem.IVirtualFileProvider");
            feature.AddKnownType("Volo.Abp.VirtualFileSystem.VirtualDirectoryFileInfo,Volo.Abp.VirtualFileSystem", "Volo.Abp.VirtualFileSystem.VirtualDirectoryFileInfo");
            feature.AddKnownType("Volo.Abp.VirtualFileSystem.VirtualFileProvider,Volo.Abp.VirtualFileSystem", "Volo.Abp.VirtualFileSystem.VirtualFileProvider");
            feature.AddKnownType("Volo.Abp.VirtualFileSystem.VirtualFileSetInfo,Volo.Abp.VirtualFileSystem", "Volo.Abp.VirtualFileSystem.VirtualFileSetInfo");
            feature.AddKnownType("Volo.Abp.VirtualFileSystem.VirtualFileSetList,Volo.Abp.VirtualFileSystem", "Volo.Abp.VirtualFileSystem.VirtualFileSetList");
            feature.AddKnownType("Volo.Abp.VirtualFileSystem.Embedded.AbpEmbeddedFileProvider,Volo.Abp.VirtualFileSystem", "Volo.Abp.VirtualFileSystem.Embedded.AbpEmbeddedFileProvider");
            feature.AddKnownType("Volo.Abp.VirtualFileSystem.Embedded.EmbeddedResourceFileInfo,Volo.Abp.VirtualFileSystem", "Volo.Abp.VirtualFileSystem.Embedded.EmbeddedResourceFileInfo");
            feature.AddKnownType("Volo.Abp.VirtualFileSystem.Embedded.EmbeddedVirtualFileSetInfo,Volo.Abp.VirtualFileSystem", "Volo.Abp.VirtualFileSystem.Embedded.EmbeddedVirtualFileSetInfo");
            feature.AddKnownType("Volo.Abp.VirtualFileSystem.Physical.PhysicalVirtualFileSetInfo,Volo.Abp.VirtualFileSystem", "Volo.Abp.VirtualFileSystem.Physical.PhysicalVirtualFileSetInfo");
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 649
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
